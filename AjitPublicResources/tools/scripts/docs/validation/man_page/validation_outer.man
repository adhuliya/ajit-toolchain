.TH VALIDATION_OUTER_SCRIPT 1
.SH NAME
validation_outer.py \- search and store .vprj files, build corresponding .c/.s files, load on processor model and log.
.SH SYNOPSIS
.B validation_outer.py
[\fR\fIoption\fR]
.IR path ...
.SH DESCRIPTION
.B validation_outer.py
accepts arguments from the user as the directory paths (absolute/relative). Inside each directory, it searches in all sub-directories for .vprj (validation project) files and stores the absolute path of .vprj files in a text file, these sub-directories must also have .c/.s test files.

From the text file, the absolute path of a .vprj file is passed as an argument to validation_inner.py using gnu parallel, this is called job. The number of parallel jobs generated by gnu parallel and timeout of each job is specified by the user.

The .vprj files have two parts, one is info part which has names of the test file to be build, its defines and includes, and other is expected results part. validation_inner.py parses the info part to get the includes and defines required to build the specified test files and it extracts the expected results part into another .results file, which is stored along with the build.

validation_inner.py creates single compiled and log directories in every sub-directory which have atleast one .vprj file, it then creates a seperate directory for each .vprj file inside the directory compiled, builds the test files in this directory using compileToSparc.py and loads the build on the processor model along with .results file and .log file name, log files are stored in the directory log. 

After execution,
.B validation_outer.py
prints the total number of failed cases and total time of execution, generates log files for all correct .vprj files and also generates terminal log and job log (generated by parallel) files. The script also returns value of each build, 0 as success, 1 as failure. 
.SH OPTIONS
.TP
.BR \-h
Display help on arguments available to the script.
.TP
.BR \-j
Give the number of jobs to be run in parallel else default value taken.
.TP
.BR \-t
Give timeout of job in secs else default value taken.
.TP
.BR \-c
Deletes compiled folder which has compiled test files and .results files, also deletes log folder. 
.TP
.BR \-C
Use C model executable to run programs.
.TP
.BR \-A
Use Aa model executable to run programs.

.SH FILES
The files which are build : 
*.c/*.s - test files

The files which have build info and expected values : 
*.vprj

The script called by this script for validation :
validation_inner.py

The script called by validation_inner.py to build the test files :
compileToSparc.py

.SH EXAMPLE
.B validation_outer.py
-h

Give root directory paths (abolute/relative) as arguments.

.B validation_outer.py
-A -t 1 -j 3 ~/root1 ~/root2 ./root3 ...

Clean :

.B validation_outer.py
-c ~/root1 ~/root2 ./root3 ...

.SH SEE ALSO
.BR python (1)

.BR parallel (1)
.SH AUTHOR
Piyush P. Soni: mailtopiyushsoni9@gmail.com
