The timer is a memory mapped device with a
CPU-side interface that consists of  
request/addr/write-data input-pipes  and
a read-data ouptut pipe.

It generates a single output (signal) which
is an 8-bit Interrupt level (only the bottom 4
bits are actually used).

Internally, it has a single 32 bit control register
with the following fields
   31:1    max-timer-count.
   0  	   enable bit
		when set, the timer does a count-down from the 
                max-timer-count and when the count reaches 0,
 		asserts the interrupt.
	
Its behaviour is as follows:
   Starts in disabled state.  When control-reg-bit 0 is set, it moves
   to the enabled state, and starts the count-down-timer.  

   Stays in the enabled state until the count reaches 0, 
   after which the timer moves to the interrupting state
   in which the timer interrupt is asserted (held) to the system constant
   TIMER_IRL which has value 0xa.  The TIMER_IRL parameter is defined
   in AJIT_PROJECT_HOME/processor/Aa_v3/sys/parameters/parameters.aa
   
   The timer stays in the interrupting state until the CPU either explicitly
   enables the timer (moves to enabled state) or disables the timer
   (moves to disabled state).

   If at any point, the CPU enables/disables the timer (by doing a register
   write), the timer will immediately move to either the enabled/disabled
   state and perform the appropriate actions.

NOTES:
  The timer should never block the CPU.  That is, the response to a CPU request
  should be immediately generated.

  
