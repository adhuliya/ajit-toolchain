
	Writing a Generic ISR is a pain in the...

		Madhav Desai


1.  Pre-condition
------------------

	The program is running in window W.  Window
	W has a stack pointer SP(W) and a frame pointer FP(W).


2. There is an event
----------------------

	An interrupt occurs.  The window is changed
	to 
		T = W-1

	The frame pointer of T is 
		FP(T) = SP(W)

	SP(T) is not set.

	T may be valid or invalid.

3. The action
----------------
	If T is invalid, make T-1 invalid
		by saving its registers to stack

	Give T a new stack.. (***)
		SP(T) = FP(T) - 320

	Save T's psr, globals, input-regs, %l1,%l2, %sp
	registers into this stack.

	Make the of T bigger to allow window overflow
	saves
		SP(T) = SP(T) - 96

	Enable traps (interrupt ilvl = 15).

	call the C interrupt handler
	
	On return:
	Recover T's psr, globals, input_regs, %l1, %l2, %sp
	registers from the stack (***) marked above.

	jmpl/rett. home.
		
