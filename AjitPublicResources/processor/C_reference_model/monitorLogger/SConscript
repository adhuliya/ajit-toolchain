import os
import sys
env = Environment(ENV = {'PATH' : os.environ['PATH']})


#AHIR related
AHIR_RELEASE=os.environ['AHIR_RELEASE']
AHIR_INCLUDE=AHIR_RELEASE+"/include"
AHIR_LIBPATH=AHIR_RELEASE + "/lib"
FUNCTIONLIB_INCLUDE = AHIR_RELEASE + "/functionLibrary/include"
FUNCTIONLIB_PATH = AHIR_RELEASE + "/functionLibrary/lib"
AJIT_HOME=os.environ['AJIT_PROJECT_HOME']
AJIT_C_REF_MODEL=os.environ['AJIT_C_REF_MODEL']

AA_HOME=AJIT_HOME + "/processor/Scratch/Aa_v2"
DOVAL_HOME=AJIT_C_REF_MODEL+"/debugger/doval/lib"
ANTLR_PATH = AJIT_C_REF_MODEL +  "/debugger/doval/antlr3Cruntime/build/lib"
is_64bits = sys.maxsize > 2**32
if (is_64bits) :
	ANTLR_PATH= ANTLR_PATH+"64 "
else :
	ANTLR_PATH= ANTLR_PATH+"32 "
env.Append(CPPPATH = AHIR_INCLUDE + ":" +  "./include:")


# create a library for monitorLogger
env.Library("./lib/monitorLogger", Glob ('./src/monitorLogger.c'), CCFLAGS=" -pthread -g")

