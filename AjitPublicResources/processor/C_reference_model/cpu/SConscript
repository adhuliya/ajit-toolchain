import os

env = Environment(ENV = {'PATH' : os.environ['PATH']})
Import('COMPILATION_FLAGS')

AHIR_RELEASE=os.environ['AHIR_RELEASE']
AHIR_INCLUDE=AHIR_RELEASE+"/include"
env.Append(CPPPATH = './src/:./include:../common/include:')
env.Append(CPPPATH = AHIR_INCLUDE + ":" +  "./include:")

AHIR_RELEASE=os.environ['AHIR_RELEASE']
AJIT_HOME=os.environ['AJIT_PROJECT_HOME']
AJIT_C_REF_MODEL=os.environ['AJIT_C_REF_MODEL']

MONITOR_LOGGER_INCLUDE=AJIT_C_REF_MODEL + "/monitorLogger/include"
env.Append(CPPPATH = AJIT_C_REF_MODEL + "/common/include:" + AJIT_C_REF_MODEL + "/cpu/include:"+ AJIT_C_REF_MODEL + "/cpu_interface/include:")

#monitorLogger
env.Append(CPPPATH = MONITOR_LOGGER_INCLUDE + ":")


#AHIR-related
PIPE_HANDLER_INCLUDE=AHIR_RELEASE + "/include"
PIPE_HANDLER_LIBPATH = AHIR_RELEASE + "/lib"
PTHREAD_UTILS = AHIR_RELEASE + "/include"
GNU_PTH_UTILS = AHIR_RELEASE + "/include"
FUNCTIONLIB_PATH = AHIR_RELEASE + "/functionLibrary/lib"
FUNCTIONLIB_INCLUDE=AHIR_RELEASE + "/functionLibrary/include"
env.Append(CPPPATH = FUNCTIONLIB_INCLUDE + ":" + PIPE_HANDLER_INCLUDE + ":" + PTHREAD_UTILS + ":" + GNU_PTH_UTILS + ":" + "./include:")
print("COMPILATION FLAGS = ", COMPILATION_FLAGS)

# create a library for the cpu :
#env.SharedLibrary('./lib/libCpu', Glob('src/*.c'), CCFLAGS=COMPILATION_FLAGS+' -DDO_VAL  -DGDB' )
env.Library('./lib/libCpu', Glob('src/*.c'), CCFLAGS=COMPILATION_FLAGS)
