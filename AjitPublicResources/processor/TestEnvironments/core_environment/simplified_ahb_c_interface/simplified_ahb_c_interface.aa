// lock rwbar transfer-size byte-addr write-data
//  1     1        3           36        32
$pipe AFB_TO_AHB_COMMAND  : $uint<73> $depth 2 $p2p

// error read-data
//  1     32
$pipe AHB_TO_AFB_RESPONSE : $uint<33> $depth 2 $p2p

$module [get_simplified_ahb_command] $in () 
	$out (rw: $uint<8> transfer_size: $uint<8> byte_address: $uint<64> write_data: $uint<32>) $is
{

	command := AFB_TO_AHB_COMMAND
	$split (command 1 1 3 36 32)
			(lock_bus_1 rw_1 transfer_size_1 addr_36 write_data)
	rw := ($bitcast ($uint<8>) rw_1)
	transfer_size := ($bitcast ($uint<8>) transfer_size_1)
	byte_address := ($bitcast ($uint<64>) addr_36)
}

$module [send_simplified_ahb_response] $in (err: $uint<8> read_data: $uint<32>) $out () $is
{
	to_pipe := ($concat ($mux (err != 0) ($bitcast ($uint<1>) 1) 0) read_data)
	AHB_TO_AFB_RESPONSE := to_pipe
}

