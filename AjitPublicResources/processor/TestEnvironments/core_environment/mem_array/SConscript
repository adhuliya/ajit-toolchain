import os

env = Environment(ENV = {'PATH' : os.environ['PATH']})
COMPILATION_FLAGS=' -g '


AHIR_RELEASE=os.environ['AHIR_RELEASE']
env.Append(CPPPATH = './src/:./include:')

AJIT_PROJECT_HOME=os.environ['AJIT_PROJECT_HOME']
#AHIR-related
PIPE_HANDLER_INCLUDE=AHIR_RELEASE + "/include"
PIPE_HANDLER_LIBPATH = AHIR_RELEASE + "/lib"
PTHREAD_UTILS = AHIR_RELEASE + "/include"
GNU_PTH_UTILS = AHIR_RELEASE + "/include"
FUNCTIONLIB_PATH = AHIR_RELEASE + "/functionLibrary/lib"
AJIT_DEBUG_UTILS_INCLUDE = AJIT_PROJECT_HOME+"/processor/TestEnvironments/debug_utils/include/"
env.Append(CPPPATH = PIPE_HANDLER_INCLUDE + ":" + PTHREAD_UTILS + ":" + GNU_PTH_UTILS + ":" + AJIT_DEBUG_UTILS_INCLUDE + ":")

# create a library for memory :
# env.SharedLibrary('./lib/libMemArray', Glob('src/*.c'), CCFLAGS=COMPILATION_FLAGS)
env.Library('./lib/libMemArray', Glob('src/*.c'), CCFLAGS=COMPILATION_FLAGS)


