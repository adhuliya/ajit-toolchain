$pipe CPU_to_ICACHE_asi: $uint<8> $depth 2
$pipe CPU_to_ICACHE_addr: $uint<32> $depth 2

$pipe CPU_to_DCACHE_asi: $uint<8> $depth 2
$pipe CPU_to_DCACHE_request_type: $uint<8> $depth 2
$pipe CPU_to_DCACHE_byte_mask: $uint<8> $depth 2
$pipe CPU_to_DCACHE_addr: $uint<32> $depth 2
$pipe CPU_to_DCACHE_data: $uint<64> $depth 2

$pipe ICACHE_to_CPU_mae: $uint<8> $depth 2
$pipe ICACHE_to_CPU_instr_pair: $uint<64> $depth 2
$pipe ICACHE_to_CPU_fsr: $uint<32> $depth 2

$pipe DCACHE_to_CPU_mae: $uint<8> $depth 2
$pipe DCACHE_to_CPU_data: $uint<64> $depth 2

// valid asi addr 
//  1     8  32  
$noblock $pipe NOBLOCK_CPU_to_ICACHE_command  : $uint<41> $depth 2

//
// mae i-pair fsr
//  8   64    18
$pipe ICACHE_to_CPU_response 	 : $uint<90> $depth 2

// valid req-type asi byte-mask addr write-data 
//  1       8       8       8      32     64
$noblock $pipe NOBLOCK_CPU_to_DCACHE_command         : $uint<121>  $depth 2 

// mae data
//  8   64
$pipe DCACHE_to_CPU_response  	 : $uint<72> $depth 2


$module [icache_interface_daemon] $in () $out () $is
{

	$branchblock[loop] {
		$merge $entry loopback $endmerge

			asi := CPU_to_ICACHE_asi
			addr := CPU_to_ICACHE_addr

			NOBLOCK_CPU_to_ICACHE_command := ($concat ONE_1 asi addr)
			rsp := ICACHE_to_CPU_response

			$split (rsp 18 8 64) (mmu_fsr mae ipair)

			ICACHE_to_CPU_mae := mae
			ICACHE_to_CPU_instr_pair := ipair
			ICACHE_to_CPU_fsr := ($bitcast ($uint<32>) mmu_fsr)

		$place [loopback]
	}
}

$module [dcache_interface_daemon] $in () $out () $is
{

	$branchblock[loop] {
		$merge $entry loopback $endmerge
			req_type := CPU_to_DCACHE_request_type
			asi := CPU_to_DCACHE_asi
			byte_mask := CPU_to_DCACHE_byte_mask
			addr := CPU_to_DCACHE_addr
			wdata := CPU_to_DCACHE_data
			

			NOBLOCK_CPU_to_DCACHE_command := ($concat ONE_1 req_type asi byte_mask addr wdata)
			rsp := DCACHE_to_CPU_response

			$split (rsp 8 64) (mae rdata)
			DCACHE_to_CPU_mae  := mae
			DCACHE_to_CPU_data := rdata

		$place [loopback]
	}
}
