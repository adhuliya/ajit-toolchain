import os

env = Environment(ENV = {'PATH' : os.environ['PATH']})
#Import('COMPILATION_FLAGS')
COMPILATION_FLAGS=' -g '

AHIR_RELEASE=os.environ['AHIR_RELEASE']
AJIT_HOME=os.environ['AJIT_PROJECT_HOME']
AJIT_C_REF_MODEL=os.environ['AJIT_C_REF_MODEL']

env.Append(CPPPATH = "./:" + AJIT_C_REF_MODEL + "/common/include:" +  AJIT_C_REF_MODEL + "/cache/include:"  +  AJIT_C_REF_MODEL + "/cpu/include:")


#AHIR-related
PIPE_HANDLER_INCLUDE=AHIR_RELEASE + "/include"
COMMON_INCLUDE=AJIT_C_REF_MODEL + "common/include"
PIPE_HANDLER_LIBPATH = AHIR_RELEASE + "/lib"
PTHREAD_UTILS = AHIR_RELEASE + "/include"
GNU_PTH_UTILS = AHIR_RELEASE + "/include"
FUNCTIONLIB_PATH = AHIR_RELEASE + "/functionLibrary/lib"
env.Append(CPPPATH = PIPE_HANDLER_INCLUDE + ":" + PTHREAD_UTILS + ":" + GNU_PTH_UTILS + ":" + "./include:")


# create a library for the cache :
#env.SharedLibrary('./lib/libRlut', Glob('src/*.c'), CCFLAGS=COMPILATION_FLAGS)
env.Library('./lib/libTlbs', Glob('src/*.c'), CCFLAGS=COMPILATION_FLAGS)
LIBS=[ 'Tlbs', 'pthread']
LIBPATH=[ './lib' ]
env.Program('./bin/test_tlbs', './util/test.c', CCFLAGS=COMPILATION_FLAGS, LIBS=LIBS, LIBPATH=LIBPATH);

