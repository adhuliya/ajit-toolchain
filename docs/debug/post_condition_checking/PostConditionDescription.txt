	Writing a post-condition results file for  checking the state of a CPU thread
			Madhav P. Desai.


OVERVIEW
---------
	To check a post condition, you prepare a result file
	with each line in the file specifying an expected result.

	The line in the file can specify a register value or memory
	value.


REGISTER VALUE SPECIFICATION
-----------------------------
	If it is a register value: it can specify a general purpose
	register, a state register or an ancillary register.	
		
	The general format is
	
		<reg-id>=hex-value hex-mask core x thread y

	For a general purpose integer register:

		g0=0x0 0xffffffff  core 0 thread 0
		l5=0x3f 0xff       core 0 thread 1

		etc.

	For PSR
		psr=0x10c7 0xffff   core 0 thread 1
	For TBR
		tbr=0x10c7 0xffff   core 0 thread 1
	Similarly for WIM (wim), Y (y), 
		
	For ASR's
		asr29=0x50520000  core 0 thread 0


	For a general purpose floating point register:

		f12=0x0 0xffffffff  core 0 thread 0

	For the FSR, FAR
		fsr=0x01   0xff
		far=0x101  0xffffffff
	

MEMORY CONTENT SPECIFICATION
-----------------------------

	For a memory location, specify address, value, mask 
	and ASI value

	m[0x0]=0x4000  0xffff asi=0x20   core 0 thread 0
			to fetch from physical without translation.

	This means, the word stored at memory address 0x0, asi=0x20, must
	be 0x4000.  The 0xffff specifies a check mask, so that only
	the bottom 16 bits will be checked in this case.  If we want to
	check all bits, then the check-mask would have been 0xffffffff

	m[0x4]=0x01020304  asi=0xa	core 1 thread 1
			translated (may hit in cache) before fetching
			from physical.

	This means, the word stored at memory address 0x4, asi=0xa, must
	be 0x01020304.  The check mask is not specified, in which case
	it is taken to be 0xffffffff.



