		An example to illustrate writing a VMAP.
			Madhav P. Desai


	Let us say we want to write a VMAP file to 
	set up the following virtual->physical translation.

	4KB text area cacheable for context 0
		we will map a 4KB virtual page to a
		4KB physical page and mark this page
		as cacheable.

	The VMAP entry is then (we map 0x40000000 to 0x40000)
           ! context vpage-base  ppage-base page-level cacheable-flag acc-perms
	   0x0       0x40000000  0x40000        0x3       0x1           0x3


	4KB data area non-cacheable for context 0
		we will map a 4KB virtual page to a
		4KB physical page and mark this page
		as non-cacheable.

	The VMAP entry is then (we map 0x40001000 to 0x41000)
	   0x0 0x40001000  0x41000  0x3  0x0  0x3

	8KB data area cacheable for context 0
		we will map TWO 4KB virtual pages to TWO
		4KB physical pages and mark these pages
		as cacheable.

	The VMAP entries are then (we map 0x40002000,0x40003000 to 0x42000, 0x43000)
	   0x0 0x40002000  0x42000  0x3 0x1  0x3
	   0x0 0x40003000  0x43000  0x3 0x1  0x3

	16KB data area cacheable	 for context 0
		we will map FOUR 4KB virtual pages to FOUR
		4KB physical pages and mark these pages
		as cacheable.

	The VMAP entries are then (we map 0x40004000 to 0x40007000 to 0x44000, 0x47000)
	   0x0 0x40004000  0x44000  0x3 0x1  0x3
	   0x0 0x40005000  0x45000  0x3 0x1  0x3
	   0x0 0x40006000  0x46000  0x3 0x1  0x3
	   0x0 0x40007000  0x47000  0x3 0x1  0x3


	256KB data area cacheable for context 0
		we will map a 256KB virtual page to a
		256KB physical page and mark this page
		as cacheable.

	The VMAP entry is then (we map 0x40080000 to 0x80000, the
	base addresses must be multiples of 256K). Note that the
	page level is 0x2.
	   0x0 0x40080000  0x80000  0x2 0x1  0x3
			
	16MB data area cacheable for context 0
		we will map a 16MB virtual page to a
		16MB physical page and mark this page
		as cacheable.

	The VMAP entry is then (we map 0x10000000 to 0x20000000, the
	base addresses must be multiples of 16M).  Note that the
	page-level is 0x1.
	   0x0 0x10000000  0x20000000  0x1 0x1  0x3
		
NOTE:

	In principle it is possible to map the entire 4GB virtual
	memory as a single page (note that the physical address is
	36 bits, and the page-level is 0x0).   For example
	    0x0 0x0 0x100000000 0x0 0x1 0x3

	This maps the whole virtual address space of context 0 to
	physical 4GB page starting at 0x100000000 and the entire
	virtual address page is mapped as cacheable.
