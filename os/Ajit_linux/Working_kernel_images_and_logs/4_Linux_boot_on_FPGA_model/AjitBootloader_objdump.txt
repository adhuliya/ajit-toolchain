
./output/AjitBootloader.elf:     file format elf32-sparc


Disassembly of section .text:

00000000 <main>:
   0:	9d e3 bf 90 	save  %sp, -112, %sp
   4:	82 10 00 00 	mov  %g0, %g1
   8:	84 10 00 00 	mov  %g0, %g2
   c:	86 10 00 00 	mov  %g0, %g3
  10:	88 10 00 00 	mov  %g0, %g4
  14:	8a 10 00 00 	mov  %g0, %g5
  18:	8c 10 00 00 	mov  %g0, %g6
  1c:	8e 10 00 00 	mov  %g0, %g7
  20:	b0 10 00 00 	mov  %g0, %i0
  24:	b2 10 00 00 	mov  %g0, %i1
  28:	b4 10 00 00 	mov  %g0, %i2
  2c:	b6 10 00 00 	mov  %g0, %i3
  30:	b8 10 00 00 	mov  %g0, %i4
  34:	ba 10 00 00 	mov  %g0, %i5
  38:	bc 10 00 00 	mov  %g0, %fp
  3c:	be 10 00 00 	mov  %g0, %i7
  40:	a0 10 00 00 	mov  %g0, %l0
  44:	a2 10 00 00 	mov  %g0, %l1
  48:	a4 10 00 00 	mov  %g0, %l2
  4c:	a6 10 00 00 	mov  %g0, %l3
  50:	a8 10 00 00 	mov  %g0, %l4
  54:	aa 10 00 00 	mov  %g0, %l5
  58:	ac 10 00 00 	mov  %g0, %l6
  5c:	ae 10 00 00 	mov  %g0, %l7
  60:	90 10 00 00 	mov  %g0, %o0
  64:	92 10 00 00 	mov  %g0, %o1
  68:	94 10 00 00 	mov  %g0, %o2
  6c:	96 10 00 00 	mov  %g0, %o3
  70:	98 10 00 00 	mov  %g0, %o4
  74:	9a 10 00 00 	mov  %g0, %o5
  78:	9c 10 00 00 	mov  %g0, %sp
  7c:	9e 10 00 00 	mov  %g0, %o7
  80:	c0 27 bf fc 	clr  [ %fp + -4 ]
  84:	c0 27 bf fc 	clr  [ %fp + -4 ]
  88:	10 80 00 16 	b  e0 <main+0xe0>
  8c:	01 00 00 00 	nop 
  90:	81 e0 00 00 	save 
  94:	a0 10 00 00 	mov  %g0, %l0
  98:	a2 10 00 00 	mov  %g0, %l1
  9c:	a4 10 00 00 	mov  %g0, %l2
  a0:	a6 10 00 00 	mov  %g0, %l3
  a4:	a8 10 00 00 	mov  %g0, %l4
  a8:	aa 10 00 00 	mov  %g0, %l5
  ac:	ac 10 00 00 	mov  %g0, %l6
  b0:	ae 10 00 00 	mov  %g0, %l7
  b4:	90 10 00 00 	mov  %g0, %o0
  b8:	92 10 00 00 	mov  %g0, %o1
  bc:	94 10 00 00 	mov  %g0, %o2
  c0:	96 10 00 00 	mov  %g0, %o3
  c4:	98 10 00 00 	mov  %g0, %o4
  c8:	9a 10 00 00 	mov  %g0, %o5
  cc:	9c 10 00 00 	mov  %g0, %sp
  d0:	9e 10 00 00 	mov  %g0, %o7
  d4:	c2 07 bf fc 	ld  [ %fp + -4 ], %g1
  d8:	82 00 60 01 	inc  %g1
  dc:	c2 27 bf fc 	st  %g1, [ %fp + -4 ]
  e0:	c2 07 bf fc 	ld  [ %fp + -4 ], %g1
  e4:	80 a0 60 06 	cmp  %g1, 6
  e8:	04 bf ff ea 	ble  90 <main+0x90>
  ec:	01 00 00 00 	nop 
  f0:	c0 27 bf fc 	clr  [ %fp + -4 ]
  f4:	10 80 00 06 	b  10c <main+0x10c>
  f8:	01 00 00 00 	nop 
  fc:	81 e8 00 00 	restore 
 100:	c2 07 bf fc 	ld  [ %fp + -4 ], %g1
 104:	82 00 60 01 	inc  %g1
 108:	c2 27 bf fc 	st  %g1, [ %fp + -4 ]
 10c:	c2 07 bf fc 	ld  [ %fp + -4 ], %g1
 110:	80 a0 60 06 	cmp  %g1, 6
 114:	04 bf ff fa 	ble  fc <main+0xfc>
 118:	01 00 00 00 	nop 
 11c:	03 1c 00 00 	sethi  %hi(0x70000000), %g1
 120:	c2 27 bf f8 	st  %g1, [ %fp + -8 ]
 124:	c2 07 bf f8 	ld  [ %fp + -8 ], %g1
 128:	05 01 c0 00 	sethi  %hi(0x7000000), %g2
 12c:	84 10 a1 01 	or  %g2, 0x101, %g2	! 7000101 <getString+0x6fff96d>
 130:	c4 20 40 00 	st  %g2, [ %g1 ]
 134:	03 1c 00 04 	sethi  %hi(0x70001000), %g1
 138:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 13c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 140:	84 10 20 9e 	mov  0x9e, %g2
 144:	c4 20 40 00 	st  %g2, [ %g1 ]
 148:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 14c:	82 00 63 c0 	add  %g1, 0x3c0, %g1
 150:	84 10 20 9e 	mov  0x9e, %g2
 154:	c4 20 40 00 	st  %g2, [ %g1 ]
 158:	03 01 c0 00 	sethi  %hi(0x7000000), %g1
 15c:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 160:	82 10 20 00 	clr  %g1
 164:	84 10 22 00 	mov  0x200, %g2
 168:	c2 a0 80 80 	sta  %g1, [ %g2 ] #ASI_N
 16c:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 170:	84 10 21 00 	mov  0x100, %g2
 174:	c2 a0 80 80 	sta  %g1, [ %g2 ] #ASI_N
 178:	82 10 20 01 	mov  1, %g1
 17c:	84 10 20 00 	clr  %g2
 180:	c2 a0 80 80 	sta  %g1, [ %g2 ] #ASI_N
 184:	05 3c 00 10 	sethi  %hi(0xf0004000), %g2
 188:	81 c0 80 00 	jmp  %g2
 18c:	01 00 00 00 	nop 
 190:	01 00 00 00 	nop 
 194:	01 00 00 00 	nop 
 198:	40 00 00 58 	call  2f8 <halt>
 19c:	01 00 00 00 	nop 
 1a0:	82 10 20 00 	clr  %g1	! 0 <main>
 1a4:	b0 10 00 01 	mov  %g1, %i0
 1a8:	81 e8 00 00 	restore 
 1ac:	81 c3 e0 08 	retl 
 1b0:	01 00 00 00 	nop 

000001b4 <load_char>:
 1b4:	9d e3 bf 98 	save  %sp, -104, %sp
 1b8:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 1bc:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 1c0:	fa 88 45 e0 	lduba  [ %g1 ] (47), %i5
 1c4:	fa 2f bf ff 	stb  %i5, [ %fp + -1 ]
 1c8:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 1cc:	83 28 60 18 	sll  %g1, 0x18, %g1
 1d0:	83 38 60 18 	sra  %g1, 0x18, %g1
 1d4:	b0 10 00 01 	mov  %g1, %i0
 1d8:	81 e8 00 00 	restore 
 1dc:	81 c3 e0 08 	retl 
 1e0:	01 00 00 00 	nop 

000001e4 <load_int>:
 1e4:	9d e3 bf 98 	save  %sp, -104, %sp
 1e8:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 1ec:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 1f0:	fa 80 45 e0 	lda  [ %g1 ] (47), %i5
 1f4:	fa 27 bf fc 	st  %i5, [ %fp + -4 ]
 1f8:	c2 07 bf fc 	ld  [ %fp + -4 ], %g1
 1fc:	b0 10 00 01 	mov  %g1, %i0
 200:	81 e8 00 00 	restore 
 204:	81 c3 e0 08 	retl 
 208:	01 00 00 00 	nop 

0000020c <load_float>:
 20c:	9d e3 bf 98 	save  %sp, -104, %sp
 210:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 214:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 218:	fa 80 45 e0 	lda  [ %g1 ] (47), %i5
 21c:	fa 27 bf fc 	st  %i5, [ %fp + -4 ]
 220:	d1 07 bf fc 	ld  [ %fp + -4 ], %f8
 224:	81 a0 00 28 	fmovs  %f8, %f0
 228:	81 e8 00 00 	restore 
 22c:	81 c3 e0 08 	retl 
 230:	01 00 00 00 	nop 

00000234 <load_double>:
 234:	9d e3 bf 98 	save  %sp, -104, %sp
 238:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 23c:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 240:	f8 98 45 e0 	ldda  [ %g1 ] (47), %i4
 244:	f8 3f bf f8 	std  %i4, [ %fp + -8 ]
 248:	d1 1f bf f8 	ldd  [ %fp + -8 ], %f8
 24c:	81 a0 00 28 	fmovs  %f8, %f0
 250:	83 a0 00 29 	fmovs  %f9, %f1
 254:	81 e8 00 00 	restore 
 258:	81 c3 e0 08 	retl 
 25c:	01 00 00 00 	nop 

00000260 <store_char>:
 260:	9d e3 bf a0 	save  %sp, -96, %sp
 264:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 268:	82 10 00 19 	mov  %i1, %g1
 26c:	c2 2f a0 48 	stb  %g1, [ %fp + 0x48 ]
 270:	c2 0f a0 48 	ldub  [ %fp + 0x48 ], %g1
 274:	c4 07 a0 44 	ld  [ %fp + 0x44 ], %g2
 278:	c2 a8 85 e0 	stba  %g1, [ %g2 ] (47)
 27c:	81 e8 00 00 	restore 
 280:	81 c3 e0 08 	retl 
 284:	01 00 00 00 	nop 

00000288 <store_int>:
 288:	9d e3 bf a0 	save  %sp, -96, %sp
 28c:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 290:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 294:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 298:	c4 07 a0 44 	ld  [ %fp + 0x44 ], %g2
 29c:	c2 a0 85 e0 	sta  %g1, [ %g2 ] (47)
 2a0:	81 e8 00 00 	restore 
 2a4:	81 c3 e0 08 	retl 
 2a8:	01 00 00 00 	nop 

000002ac <store_float>:
 2ac:	9d e3 bf a0 	save  %sp, -96, %sp
 2b0:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 2b4:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 2b8:	c4 07 a0 48 	ld  [ %fp + 0x48 ], %g2
 2bc:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 2c0:	c4 a0 45 e0 	sta  %g2, [ %g1 ] (47)
 2c4:	81 e8 00 00 	restore 
 2c8:	81 c3 e0 08 	retl 
 2cc:	01 00 00 00 	nop 

000002d0 <store_double>:
 2d0:	9d e3 bf 98 	save  %sp, -104, %sp
 2d4:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 2d8:	f2 27 bf f8 	st  %i1, [ %fp + -8 ]
 2dc:	f4 27 bf fc 	st  %i2, [ %fp + -4 ]
 2e0:	c4 1f bf f8 	ldd  [ %fp + -8 ], %g2
 2e4:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 2e8:	c4 b8 45 e0 	stda  %g2, [ %g1 ] (47)
 2ec:	81 e8 00 00 	restore 
 2f0:	81 c3 e0 08 	retl 
 2f4:	01 00 00 00 	nop 

000002f8 <halt>:
 2f8:	9d e3 bf a0 	save  %sp, -96, %sp
 2fc:	81 88 00 00 	mov  %g0, %psr
 300:	01 00 00 00 	nop 
 304:	01 00 00 00 	nop 
 308:	01 00 00 00 	nop 
 30c:	91 d0 20 00 	ta  0
 310:	81 e8 00 00 	restore 
 314:	81 c3 e0 08 	retl 
 318:	01 00 00 00 	nop 

0000031c <putChar>:
 31c:	9d e3 bf 98 	save  %sp, -104, %sp
 320:	82 10 00 18 	mov  %i0, %g1
 324:	c2 2f a0 44 	stb  %g1, [ %fp + 0x44 ]
 328:	82 10 20 01 	mov  1, %g1
 32c:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 330:	10 80 00 07 	b  34c <putChar+0x30>
 334:	01 00 00 00 	nop 
 338:	11 00 00 04 	sethi  %hi(0x1000), %o0
 33c:	7f ff ff 9e 	call  1b4 <load_char>
 340:	01 00 00 00 	nop 
 344:	82 10 00 08 	mov  %o0, %g1
 348:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 34c:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 350:	83 28 60 18 	sll  %g1, 0x18, %g1
 354:	83 38 60 18 	sra  %g1, 0x18, %g1
 358:	80 a0 60 00 	cmp  %g1, 0
 35c:	14 bf ff f7 	bg  338 <putChar+0x1c>
 360:	01 00 00 00 	nop 
 364:	c2 0f a0 44 	ldub  [ %fp + 0x44 ], %g1
 368:	83 28 60 18 	sll  %g1, 0x18, %g1
 36c:	83 38 60 18 	sra  %g1, 0x18, %g1
 370:	05 00 00 04 	sethi  %hi(0x1000), %g2
 374:	90 10 a1 00 	or  %g2, 0x100, %o0	! 1100 <getString+0x96c>
 378:	92 10 00 01 	mov  %g1, %o1
 37c:	7f ff ff b9 	call  260 <store_char>
 380:	01 00 00 00 	nop 
 384:	11 00 00 04 	sethi  %hi(0x1000), %o0
 388:	92 10 20 01 	mov  1, %o1
 38c:	7f ff ff b5 	call  260 <store_char>
 390:	01 00 00 00 	nop 
 394:	81 e8 00 00 	restore 
 398:	81 c3 e0 08 	retl 
 39c:	01 00 00 00 	nop 

000003a0 <putString>:
 3a0:	9d e3 bf 98 	save  %sp, -104, %sp
 3a4:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 3a8:	c0 27 bf fc 	clr  [ %fp + -4 ]
 3ac:	10 80 00 0e 	b  3e4 <putString+0x44>
 3b0:	01 00 00 00 	nop 
 3b4:	c2 07 bf fc 	ld  [ %fp + -4 ], %g1
 3b8:	c4 07 a0 44 	ld  [ %fp + 0x44 ], %g2
 3bc:	82 00 80 01 	add  %g2, %g1, %g1
 3c0:	c2 08 40 00 	ldub  [ %g1 ], %g1
 3c4:	83 28 60 18 	sll  %g1, 0x18, %g1
 3c8:	83 38 60 18 	sra  %g1, 0x18, %g1
 3cc:	90 10 00 01 	mov  %g1, %o0
 3d0:	7f ff ff d3 	call  31c <putChar>
 3d4:	01 00 00 00 	nop 
 3d8:	c2 07 bf fc 	ld  [ %fp + -4 ], %g1
 3dc:	82 00 60 01 	inc  %g1
 3e0:	c2 27 bf fc 	st  %g1, [ %fp + -4 ]
 3e4:	c2 07 bf fc 	ld  [ %fp + -4 ], %g1
 3e8:	c4 07 a0 44 	ld  [ %fp + 0x44 ], %g2
 3ec:	82 00 80 01 	add  %g2, %g1, %g1
 3f0:	c2 08 40 00 	ldub  [ %g1 ], %g1
 3f4:	83 28 60 18 	sll  %g1, 0x18, %g1
 3f8:	83 38 60 18 	sra  %g1, 0x18, %g1
 3fc:	80 a0 60 00 	cmp  %g1, 0
 400:	12 bf ff ed 	bne  3b4 <putString+0x14>
 404:	01 00 00 00 	nop 
 408:	81 e8 00 00 	restore 
 40c:	81 c3 e0 08 	retl 
 410:	01 00 00 00 	nop 

00000414 <putInt>:
 414:	9d e3 bf 98 	save  %sp, -104, %sp
 418:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 41c:	82 10 20 02 	mov  2, %g1
 420:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 424:	10 80 00 07 	b  440 <putInt+0x2c>
 428:	01 00 00 00 	nop 
 42c:	11 00 00 04 	sethi  %hi(0x1000), %o0
 430:	7f ff ff 61 	call  1b4 <load_char>
 434:	01 00 00 00 	nop 
 438:	82 10 00 08 	mov  %o0, %g1
 43c:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 440:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 444:	83 28 60 18 	sll  %g1, 0x18, %g1
 448:	83 38 60 18 	sra  %g1, 0x18, %g1
 44c:	80 a0 60 00 	cmp  %g1, 0
 450:	14 bf ff f7 	bg  42c <putInt+0x18>
 454:	01 00 00 00 	nop 
 458:	03 00 00 04 	sethi  %hi(0x1000), %g1
 45c:	90 10 61 00 	or  %g1, 0x100, %o0	! 1100 <getString+0x96c>
 460:	d2 07 a0 44 	ld  [ %fp + 0x44 ], %o1
 464:	7f ff ff 89 	call  288 <store_int>
 468:	01 00 00 00 	nop 
 46c:	11 00 00 04 	sethi  %hi(0x1000), %o0
 470:	92 10 20 02 	mov  2, %o1
 474:	7f ff ff 7b 	call  260 <store_char>
 478:	01 00 00 00 	nop 
 47c:	81 e8 00 00 	restore 
 480:	81 c3 e0 08 	retl 
 484:	01 00 00 00 	nop 

00000488 <putFloat>:
 488:	9d e3 bf 98 	save  %sp, -104, %sp
 48c:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 490:	82 10 20 03 	mov  3, %g1
 494:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 498:	10 80 00 07 	b  4b4 <putFloat+0x2c>
 49c:	01 00 00 00 	nop 
 4a0:	11 00 00 04 	sethi  %hi(0x1000), %o0
 4a4:	7f ff ff 44 	call  1b4 <load_char>
 4a8:	01 00 00 00 	nop 
 4ac:	82 10 00 08 	mov  %o0, %g1
 4b0:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 4b4:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 4b8:	83 28 60 18 	sll  %g1, 0x18, %g1
 4bc:	83 38 60 18 	sra  %g1, 0x18, %g1
 4c0:	80 a0 60 00 	cmp  %g1, 0
 4c4:	14 bf ff f7 	bg  4a0 <putFloat+0x18>
 4c8:	01 00 00 00 	nop 
 4cc:	03 00 00 04 	sethi  %hi(0x1000), %g1
 4d0:	90 10 61 00 	or  %g1, 0x100, %o0	! 1100 <getString+0x96c>
 4d4:	d2 07 a0 44 	ld  [ %fp + 0x44 ], %o1
 4d8:	7f ff ff 75 	call  2ac <store_float>
 4dc:	01 00 00 00 	nop 
 4e0:	11 00 00 04 	sethi  %hi(0x1000), %o0
 4e4:	92 10 20 03 	mov  3, %o1
 4e8:	7f ff ff 5e 	call  260 <store_char>
 4ec:	01 00 00 00 	nop 
 4f0:	81 e8 00 00 	restore 
 4f4:	81 c3 e0 08 	retl 
 4f8:	01 00 00 00 	nop 

000004fc <putDouble>:
 4fc:	9d e3 bf 90 	save  %sp, -112, %sp
 500:	f0 3f bf f0 	std  %i0, [ %fp + -16 ]
 504:	82 10 20 04 	mov  4, %g1
 508:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 50c:	10 80 00 07 	b  528 <putDouble+0x2c>
 510:	01 00 00 00 	nop 
 514:	11 00 00 04 	sethi  %hi(0x1000), %o0
 518:	7f ff ff 27 	call  1b4 <load_char>
 51c:	01 00 00 00 	nop 
 520:	82 10 00 08 	mov  %o0, %g1
 524:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 528:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 52c:	83 28 60 18 	sll  %g1, 0x18, %g1
 530:	83 38 60 18 	sra  %g1, 0x18, %g1
 534:	80 a0 60 00 	cmp  %g1, 0
 538:	14 bf ff f7 	bg  514 <putDouble+0x18>
 53c:	01 00 00 00 	nop 
 540:	03 00 00 04 	sethi  %hi(0x1000), %g1
 544:	90 10 61 00 	or  %g1, 0x100, %o0	! 1100 <getString+0x96c>
 548:	d2 07 bf f0 	ld  [ %fp + -16 ], %o1
 54c:	d4 07 bf f4 	ld  [ %fp + -12 ], %o2
 550:	7f ff ff 60 	call  2d0 <store_double>
 554:	01 00 00 00 	nop 
 558:	11 00 00 04 	sethi  %hi(0x1000), %o0
 55c:	92 10 20 04 	mov  4, %o1
 560:	7f ff ff 40 	call  260 <store_char>
 564:	01 00 00 00 	nop 
 568:	81 e8 00 00 	restore 
 56c:	81 c3 e0 08 	retl 
 570:	01 00 00 00 	nop 

00000574 <getChar>:
 574:	9d e3 bf 98 	save  %sp, -104, %sp
 578:	82 10 20 01 	mov  1, %g1
 57c:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 580:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 584:	83 28 60 18 	sll  %g1, 0x18, %g1
 588:	83 38 60 18 	sra  %g1, 0x18, %g1
 58c:	11 00 00 08 	sethi  %hi(0x2000), %o0
 590:	92 10 00 01 	mov  %g1, %o1
 594:	7f ff ff 33 	call  260 <store_char>
 598:	01 00 00 00 	nop 
 59c:	10 80 00 07 	b  5b8 <getChar+0x44>
 5a0:	01 00 00 00 	nop 
 5a4:	11 00 00 08 	sethi  %hi(0x2000), %o0
 5a8:	7f ff ff 03 	call  1b4 <load_char>
 5ac:	01 00 00 00 	nop 
 5b0:	82 10 00 08 	mov  %o0, %g1
 5b4:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 5b8:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 5bc:	83 28 60 18 	sll  %g1, 0x18, %g1
 5c0:	83 38 60 18 	sra  %g1, 0x18, %g1
 5c4:	80 a0 60 00 	cmp  %g1, 0
 5c8:	14 bf ff f7 	bg  5a4 <getChar+0x30>
 5cc:	01 00 00 00 	nop 
 5d0:	03 00 00 08 	sethi  %hi(0x2000), %g1
 5d4:	90 10 61 00 	or  %g1, 0x100, %o0	! 2100 <getString+0x196c>
 5d8:	7f ff fe f7 	call  1b4 <load_char>
 5dc:	01 00 00 00 	nop 
 5e0:	82 10 00 08 	mov  %o0, %g1
 5e4:	c2 2f bf fe 	stb  %g1, [ %fp + -2 ]
 5e8:	c2 0f bf fe 	ldub  [ %fp + -2 ], %g1
 5ec:	83 28 60 18 	sll  %g1, 0x18, %g1
 5f0:	83 38 60 18 	sra  %g1, 0x18, %g1
 5f4:	b0 10 00 01 	mov  %g1, %i0
 5f8:	81 e8 00 00 	restore 
 5fc:	81 c3 e0 08 	retl 
 600:	01 00 00 00 	nop 

00000604 <getInt>:
 604:	9d e3 bf 98 	save  %sp, -104, %sp
 608:	82 10 20 02 	mov  2, %g1
 60c:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 610:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 614:	83 28 60 18 	sll  %g1, 0x18, %g1
 618:	83 38 60 18 	sra  %g1, 0x18, %g1
 61c:	11 00 00 08 	sethi  %hi(0x2000), %o0
 620:	92 10 00 01 	mov  %g1, %o1
 624:	7f ff ff 0f 	call  260 <store_char>
 628:	01 00 00 00 	nop 
 62c:	10 80 00 07 	b  648 <getInt+0x44>
 630:	01 00 00 00 	nop 
 634:	11 00 00 08 	sethi  %hi(0x2000), %o0
 638:	7f ff fe df 	call  1b4 <load_char>
 63c:	01 00 00 00 	nop 
 640:	82 10 00 08 	mov  %o0, %g1
 644:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 648:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 64c:	83 28 60 18 	sll  %g1, 0x18, %g1
 650:	83 38 60 18 	sra  %g1, 0x18, %g1
 654:	80 a0 60 00 	cmp  %g1, 0
 658:	14 bf ff f7 	bg  634 <getInt+0x30>
 65c:	01 00 00 00 	nop 
 660:	03 00 00 08 	sethi  %hi(0x2000), %g1
 664:	90 10 61 00 	or  %g1, 0x100, %o0	! 2100 <getString+0x196c>
 668:	7f ff fe df 	call  1e4 <load_int>
 66c:	01 00 00 00 	nop 
 670:	d0 27 bf f8 	st  %o0, [ %fp + -8 ]
 674:	c2 07 bf f8 	ld  [ %fp + -8 ], %g1
 678:	b0 10 00 01 	mov  %g1, %i0
 67c:	81 e8 00 00 	restore 
 680:	81 c3 e0 08 	retl 
 684:	01 00 00 00 	nop 

00000688 <getFloat>:
 688:	9d e3 bf 98 	save  %sp, -104, %sp
 68c:	82 10 20 03 	mov  3, %g1
 690:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 694:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 698:	83 28 60 18 	sll  %g1, 0x18, %g1
 69c:	83 38 60 18 	sra  %g1, 0x18, %g1
 6a0:	11 00 00 08 	sethi  %hi(0x2000), %o0
 6a4:	92 10 00 01 	mov  %g1, %o1
 6a8:	7f ff fe ee 	call  260 <store_char>
 6ac:	01 00 00 00 	nop 
 6b0:	10 80 00 07 	b  6cc <getFloat+0x44>
 6b4:	01 00 00 00 	nop 
 6b8:	11 00 00 08 	sethi  %hi(0x2000), %o0
 6bc:	7f ff fe be 	call  1b4 <load_char>
 6c0:	01 00 00 00 	nop 
 6c4:	82 10 00 08 	mov  %o0, %g1
 6c8:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 6cc:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 6d0:	83 28 60 18 	sll  %g1, 0x18, %g1
 6d4:	83 38 60 18 	sra  %g1, 0x18, %g1
 6d8:	80 a0 60 00 	cmp  %g1, 0
 6dc:	14 bf ff f7 	bg  6b8 <getFloat+0x30>
 6e0:	01 00 00 00 	nop 
 6e4:	03 00 00 08 	sethi  %hi(0x2000), %g1
 6e8:	90 10 61 00 	or  %g1, 0x100, %o0	! 2100 <getString+0x196c>
 6ec:	7f ff fe c8 	call  20c <load_float>
 6f0:	01 00 00 00 	nop 
 6f4:	c1 27 bf f8 	st  %f0, [ %fp + -8 ]
 6f8:	d1 07 bf f8 	ld  [ %fp + -8 ], %f8
 6fc:	81 a0 00 28 	fmovs  %f8, %f0
 700:	81 e8 00 00 	restore 
 704:	81 c3 e0 08 	retl 
 708:	01 00 00 00 	nop 

0000070c <getDouble>:
 70c:	9d e3 bf 90 	save  %sp, -112, %sp
 710:	82 10 20 04 	mov  4, %g1
 714:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 718:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 71c:	83 28 60 18 	sll  %g1, 0x18, %g1
 720:	83 38 60 18 	sra  %g1, 0x18, %g1
 724:	11 00 00 08 	sethi  %hi(0x2000), %o0
 728:	92 10 00 01 	mov  %g1, %o1
 72c:	7f ff fe cd 	call  260 <store_char>
 730:	01 00 00 00 	nop 
 734:	10 80 00 07 	b  750 <getDouble+0x44>
 738:	01 00 00 00 	nop 
 73c:	11 00 00 08 	sethi  %hi(0x2000), %o0
 740:	7f ff fe 9d 	call  1b4 <load_char>
 744:	01 00 00 00 	nop 
 748:	82 10 00 08 	mov  %o0, %g1
 74c:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 750:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 754:	83 28 60 18 	sll  %g1, 0x18, %g1
 758:	83 38 60 18 	sra  %g1, 0x18, %g1
 75c:	80 a0 60 00 	cmp  %g1, 0
 760:	14 bf ff f7 	bg  73c <getDouble+0x30>
 764:	01 00 00 00 	nop 
 768:	03 00 00 08 	sethi  %hi(0x2000), %g1
 76c:	90 10 61 00 	or  %g1, 0x100, %o0	! 2100 <getString+0x196c>
 770:	7f ff fe b1 	call  234 <load_double>
 774:	01 00 00 00 	nop 
 778:	c1 3f bf f0 	std  %f0, [ %fp + -16 ]
 77c:	d1 1f bf f0 	ldd  [ %fp + -16 ], %f8
 780:	81 a0 00 28 	fmovs  %f8, %f0
 784:	83 a0 00 29 	fmovs  %f9, %f1
 788:	81 e8 00 00 	restore 
 78c:	81 c3 e0 08 	retl 
 790:	01 00 00 00 	nop 

00000794 <getString>:
 794:	9d e3 bf 90 	save  %sp, -112, %sp
 798:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 79c:	82 10 20 05 	mov  5, %g1
 7a0:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 7a4:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 7a8:	83 28 60 18 	sll  %g1, 0x18, %g1
 7ac:	83 38 60 18 	sra  %g1, 0x18, %g1
 7b0:	11 00 00 08 	sethi  %hi(0x2000), %o0
 7b4:	92 10 00 01 	mov  %g1, %o1
 7b8:	7f ff fe aa 	call  260 <store_char>
 7bc:	01 00 00 00 	nop 
 7c0:	10 80 00 07 	b  7dc <getString+0x48>
 7c4:	01 00 00 00 	nop 
 7c8:	11 00 00 08 	sethi  %hi(0x2000), %o0
 7cc:	7f ff fe 7a 	call  1b4 <load_char>
 7d0:	01 00 00 00 	nop 
 7d4:	82 10 00 08 	mov  %o0, %g1
 7d8:	c2 2f bf ff 	stb  %g1, [ %fp + -1 ]
 7dc:	c2 0f bf ff 	ldub  [ %fp + -1 ], %g1
 7e0:	83 28 60 18 	sll  %g1, 0x18, %g1
 7e4:	83 38 60 18 	sra  %g1, 0x18, %g1
 7e8:	80 a0 60 00 	cmp  %g1, 0
 7ec:	14 bf ff f7 	bg  7c8 <getString+0x34>
 7f0:	01 00 00 00 	nop 
 7f4:	c0 27 bf f8 	clr  [ %fp + -8 ]
 7f8:	10 80 00 19 	b  85c <getString+0xc8>
 7fc:	01 00 00 00 	nop 
 800:	c4 07 bf f8 	ld  [ %fp + -8 ], %g2
 804:	03 00 00 08 	sethi  %hi(0x2000), %g1
 808:	82 10 61 00 	or  %g1, 0x100, %g1	! 2100 <getString+0x196c>
 80c:	82 00 80 01 	add  %g2, %g1, %g1
 810:	90 10 00 01 	mov  %g1, %o0
 814:	7f ff fe 68 	call  1b4 <load_char>
 818:	01 00 00 00 	nop 
 81c:	82 10 00 08 	mov  %o0, %g1
 820:	c2 2f bf f7 	stb  %g1, [ %fp + -9 ]
 824:	c2 07 bf f8 	ld  [ %fp + -8 ], %g1
 828:	c4 07 a0 44 	ld  [ %fp + 0x44 ], %g2
 82c:	82 00 80 01 	add  %g2, %g1, %g1
 830:	c4 0f bf f7 	ldub  [ %fp + -9 ], %g2
 834:	c4 28 40 00 	stb  %g2, [ %g1 ]
 838:	c2 0f bf f7 	ldub  [ %fp + -9 ], %g1
 83c:	83 28 60 18 	sll  %g1, 0x18, %g1
 840:	83 38 60 18 	sra  %g1, 0x18, %g1
 844:	80 a0 60 00 	cmp  %g1, 0
 848:	02 80 00 0b 	be  874 <getString+0xe0>
 84c:	01 00 00 00 	nop 
 850:	c2 07 bf f8 	ld  [ %fp + -8 ], %g1
 854:	82 00 60 01 	inc  %g1
 858:	c2 27 bf f8 	st  %g1, [ %fp + -8 ]
 85c:	c2 07 bf f8 	ld  [ %fp + -8 ], %g1
 860:	80 a0 63 e7 	cmp  %g1, 0x3e7
 864:	04 bf ff e7 	ble  800 <getString+0x6c>
 868:	01 00 00 00 	nop 
 86c:	10 80 00 03 	b  878 <getString+0xe4>
 870:	01 00 00 00 	nop 
 874:	01 00 00 00 	nop 
 878:	81 e8 00 00 	restore 
 87c:	81 c3 e0 08 	retl 
 880:	01 00 00 00 	nop 
