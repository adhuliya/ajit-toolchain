Overview
========

Ajit Linux is based on Linux 3.16.1. Major additions for the Ajit platform are
        - Ajit_irq: The interrupt handling in lieu with Ajit interrupt handler. 
                        Board-specific routines for handling timer and serial interrupts 
                        and linking them with the kernel.
        - Ajit_serial: Driver for Ajit serial device
        - Ajit_srmmu: Ajit cache and tlb flush/read operations
        - A set of architecture specific code modification in "/arch/sparc" subdirectory

For detailed overview, please refer "Documentation/README".

Building an Ajit Linux Image
============================

Refer README present in this directory for details.

Adding files to Linux image
==============================

Buildroot, the build system we use, has a feature to add files on target filesystem.

Ajit Linux contains uClibc, which is a C library implementation. Following are the 
steps to be followed for creating an Ajit Linux image that contain a custom program binary.
        - write your program and compile it using the crosscompile tools provided along with this project.
        Keep in mind of the libc present in Ajit Linux
        - place your binary in "Ajit_buildroot_cnfigs/board/rootfs/overlay/home"
        - make the binary an executable for convenience
        - Follow the build process as described in "Building an Ajit Linux Image" section

The resulting image will have the custom binary in "/home" directory. Once the image in booted in your 
target, which will be C-model or FPGA, navigate to "/home" and run the binary as usual.

Note: If you choose to build with option <2>, then place the binary at "Ajit_buildroot_cnfigs/board/overlay/rootfs/home"
Note: "ajit_env" must be setup properly
