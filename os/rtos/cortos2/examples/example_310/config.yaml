# yaml configuration file for linker/loader of Co-RTOS
# yaml 10 minutes tutorial:
#   https://www.youtube.com/watch?v=cdLNKUoMc6c

Hardware:
  Processor:
    # Required: Number of cores and threads per core.
    Cores: 1
    ThreadsPerCore: 1
    ISA: 32 # 32/64 bit (Default: 32)

  Memory:
    MaxPhysicalAddrBitWidth: 36
    Flash:
      StartAddr: 0x0  # physical address
      # EndAddr: ...
      # SizeInBytes: ...
      # SizeInKiloBytes: ...
      SizeInMegaBytes: 16
      Permissions: RXC  # (Read,Write,eXecute,Cacheable)
    RAM:
      StartAddr: 0x40000000
      # EndAddr: ...
      # SizeInBytes: ...
      # SizeInKiloBytes: ...
      SizeInMegaBytes: 128
      Permissions: RWXC
    NCRAM:
      StartAddr: 0x80000000
      SizeInMegaBytes: 16
      Permissions: RW
    MMIO: # Memory Mapped IO
      StartAddr: 0xFFFF0000  # physical address
      EndAddr:   0xFFFFFFFF
      # SizeInBytes: ...
      # SizeInKiloBytes: ...
      # SizeInKiloBytes: 4
      Permissions: RW

  # see ./AjitPublicResources/tools/ajit_access_routines_mt/include/device_addresses.h
  Devices:
    - Name: Timer
      MemoryRegion:
        StartAddr: 0xFFFF3100 # physical address (in MMIO)
        SizeInBytes: 256 # 16x16
        Permissions: RW
      NamedRegisters:
        Control: 0xFFFF3100
    - Name: InterruptController
      MemoryRegion:
        StartAddr: 0xFFFF3000
        SizeInBytes: 32
        Permissions: RW
      NamedRegisters:
        Control: 0xFFFF3000
    - Name: Serial
      MemoryRegion:
        StartAddr: 0xFFFF3200
        SizeInBytes: 64
        Permissions: RW
      NamedRegisters:
        Control: 0xFFFF3200
        TX: 0xFFFF3204
        RX: 0xFFFF3208
    - Name: ScratchArea
      MemoryRegion:
        StartAddr: 0xFFFF2C00
        SizeInBytes: 1024
        Permissions: RW

Software:
  BuildAndExecute:
    # Optional: Specify the log level. Default is NONE.
    # ALL < TRACE < DEBUG < INFO < ERROR < CRITICAL < NONE
    LogLevel: DEBUG
    OptimizationLevel: 2 # i.e. O2 (Accepted values: 0, 1, 2)
    EnableSerial: Yes # Yes/No (Default: Yes)
    EnableSerialInterrupt: Yes # (Default: No)
    Debug: No # Yes/No (Default: No)
    FirstDebugPort: 8888

  # Required: Which functions execute on each ajit thread.
  ProgramThreads:
    - CortosInitCalls:
        - main
  # One can also specify an infinite loop on the function:
  #   CortosLoopCalls:
  #     - main1
      StackSize:
        SizeInKiloBytes: 8

  DynamicMemory: # Dynamic Memory Configuration.
    # SizeInBytes: ...
    SizeInKiloBytes: 1000
    # SizeInMegaBytes: ...

  ################################################################
  # Hardware interrupts.
  # Specify a list of hardware interrupt handlers
  #   Index: An index from 1 to 15.
  #   Function: <func_name>  (of type void (*func_name)())
  ################################################################
  Interrupts: # hardware interrupts
    - Index: 12  # serial interrupt index
      Function: my_serial_interrupt_handler

#   Traps: # by software
#     - TrapIndex: 1
#       TrapHandler: my_software_trap

#   Locks: # Locks for synchronization between threads.
#     Cacheable: 32
#     NonCacheable: 32
#
#   MessageQueues: # List of queues in the system.
#     - QueueIdStart: 0    # goes to QueueIdStart+NumOfQueues-1
#       NumOfQueues: 32
#       MessageSizeInBytes: 32
#       TotalMessageCapacity: 32 # num. of messages
#
#     - QueueIdStart: 32    # goes to QueueIdStart+NumOfQueues-1
#       NumOfQueues: 16
#       MessageSizeInBytes: 8
#       TotalMessageCapacity: 256 # num. of messages
#
#   InterruptHandler:
#     - TypeCode: 0x4
#       Function: functionName4
#     - TypeCode: 0x5
#       Function: functionName5
