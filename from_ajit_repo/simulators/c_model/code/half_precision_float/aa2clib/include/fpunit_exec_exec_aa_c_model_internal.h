#include <stdlib.h>
#include <unistd.h>
#include <assert.h>
#include <stdio.h>
#include <BitVectors.h>
#include <pipeHandler.h>
// object initialization 

#define fpunit_exec_exec__DoubleToExtendedFp_inner_inarg_prep_macro__ __declare_static_bit_vector(uf1_d,64);\
bit_vector_cast_to_bit_vector(0, &(uf1_d), &((*__puf1_d)));\
__declare_static_bit_vector(f1_d_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_d_class), &((*__pf1_d_class)));\
__declare_static_bit_vector(result,67);\
__declare_static_bit_vector(sign_d,1);\
__declare_static_bit_vector(exp_d,11);\
__declare_static_bit_vector(mant_d,52);\
__declare_static_bit_vector(f1_pos_normal,1);\
__declare_static_bit_vector(f1_neg_normal,1);\
__declare_static_bit_vector(f1_pos_denormal,1);\
__declare_static_bit_vector(f1_neg_denormal,1);\
__declare_static_bit_vector(f1_qnan,1);\
__declare_static_bit_vector(f1_snan,1);\
__declare_static_bit_vector(f1_pos_inf,1);\
__declare_static_bit_vector(f1_neg_inf,1);\
__declare_static_bit_vector(f1_pos_zero,1);\
__declare_static_bit_vector(f1_neg_zero,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(bias,13);\
__declare_static_bit_vector(exp_a,13);\
__declare_static_bit_vector(man_52,52);\
__declare_static_bit_vector(top_bit,1);\

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1318_c_macro_ __declare_static_bit_vector(konst_1316,64);\
bit_vector_clear(&konst_1316);\
konst_1316.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_1317,1);\
bit_vector_clear(&konst_1316);\
konst_1316.val.byte_array[0] = 63;\
bit_vector_bitsel( &(uf1_d), &(konst_1316), &(BITSEL_u64_u1_1317));\
bit_vector_cast_to_bit_vector(0, &(sign_d), &(BITSEL_u64_u1_1317));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1322_c_macro_ __declare_static_bit_vector(slice_1321,11);\
bit_vector_slice(&(uf1_d), &(slice_1321), 52);\
bit_vector_cast_to_bit_vector(0, &(exp_d), &(slice_1321));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1326_c_macro_ __declare_static_bit_vector(slice_1325,52);\
bit_vector_slice(&(uf1_d), &(slice_1325), 0);\
bit_vector_cast_to_bit_vector(0, &(mant_d), &(slice_1325));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1330_c_macro_ __declare_static_bit_vector(slice_1329,1);\
bit_vector_slice(&(f1_d_class), &(slice_1329), 9);\
bit_vector_cast_to_bit_vector(0, &(f1_pos_normal), &(slice_1329));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1334_c_macro_ __declare_static_bit_vector(slice_1333,1);\
bit_vector_slice(&(f1_d_class), &(slice_1333), 8);\
bit_vector_cast_to_bit_vector(0, &(f1_neg_normal), &(slice_1333));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1338_c_macro_ __declare_static_bit_vector(slice_1337,1);\
bit_vector_slice(&(f1_d_class), &(slice_1337), 7);\
bit_vector_cast_to_bit_vector(0, &(f1_pos_denormal), &(slice_1337));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1342_c_macro_ __declare_static_bit_vector(slice_1341,1);\
bit_vector_slice(&(f1_d_class), &(slice_1341), 6);\
bit_vector_cast_to_bit_vector(0, &(f1_neg_denormal), &(slice_1341));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1346_c_macro_ __declare_static_bit_vector(slice_1345,1);\
bit_vector_slice(&(f1_d_class), &(slice_1345), 5);\
bit_vector_cast_to_bit_vector(0, &(f1_qnan), &(slice_1345));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1350_c_macro_ __declare_static_bit_vector(slice_1349,1);\
bit_vector_slice(&(f1_d_class), &(slice_1349), 4);\
bit_vector_cast_to_bit_vector(0, &(f1_snan), &(slice_1349));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1354_c_macro_ __declare_static_bit_vector(slice_1353,1);\
bit_vector_slice(&(f1_d_class), &(slice_1353), 3);\
bit_vector_cast_to_bit_vector(0, &(f1_pos_inf), &(slice_1353));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1358_c_macro_ __declare_static_bit_vector(slice_1357,1);\
bit_vector_slice(&(f1_d_class), &(slice_1357), 2);\
bit_vector_cast_to_bit_vector(0, &(f1_neg_inf), &(slice_1357));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1362_c_macro_ __declare_static_bit_vector(slice_1361,1);\
bit_vector_slice(&(f1_d_class), &(slice_1361), 1);\
bit_vector_cast_to_bit_vector(0, &(f1_pos_zero), &(slice_1361));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1366_c_macro_ __declare_static_bit_vector(slice_1365,1);\
bit_vector_slice(&(f1_d_class), &(slice_1365), 0);\
bit_vector_cast_to_bit_vector(0, &(f1_neg_zero), &(slice_1365));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1371_c_macro_ __declare_static_bit_vector(OR_u1_u1_1370,1);\
bit_vector_or(&(f1_pos_denormal), &(f1_neg_denormal), &(OR_u1_u1_1370));\
bit_vector_cast_to_bit_vector(0, &(f1_denormal), &(OR_u1_u1_1370));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1376_c_macro_ __declare_static_bit_vector(OR_u1_u1_1375,1);\
bit_vector_or(&(f1_pos_zero), &(f1_neg_zero), &(OR_u1_u1_1375));\
bit_vector_cast_to_bit_vector(0, &(f1_zero), &(OR_u1_u1_1375));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1382_c_macro_ __declare_static_bit_vector(MUX_1381,13);\
if (has_undefined_bit(&f1_denormal)) {fprintf(stderr, "Error: variable f1_denormal has undefined value (%s) at test point.\n", to_string(&f1_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_denormal)){bit_vector_cast_to_bit_vector(1, &(MUX_1381), &(exp_base_1022));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_1381), &(exp_base_1023));\
}bit_vector_cast_to_bit_vector(1, &(bias), &(MUX_1381));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1389_c_macro_ __declare_static_bit_vector(type_cast_1385,13);\
__declare_static_bit_vector(SUB_i13_i13_1387,13);\
__declare_static_bit_vector(type_cast_1388,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_1385), &(exp_d));\
bit_vector_minus( &(type_cast_1385), &(bias), &(SUB_i13_i13_1387));\
bit_vector_bitcast_to_bit_vector( &(type_cast_1388), &(SUB_i13_i13_1387));\
bit_vector_cast_to_bit_vector(0, &(exp_a), &(type_cast_1388));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1392_c_macro_ bit_vector_cast_to_bit_vector(0, &(man_52), &(mant_d));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1399_c_macro_ __declare_static_bit_vector(NOT_u1_u1_1395,1);\
__declare_static_bit_vector(NOT_u1_u1_1397,1);\
__declare_static_bit_vector(AND_u1_u1_1398,1);\
bit_vector_not( &(f1_denormal), &(NOT_u1_u1_1395));\
bit_vector_not( &(f1_zero), &(NOT_u1_u1_1397));\
bit_vector_and(&(NOT_u1_u1_1395), &(NOT_u1_u1_1397), &(AND_u1_u1_1398));\
bit_vector_cast_to_bit_vector(0, &(top_bit), &(AND_u1_u1_1398));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_assign_stmt_1408_c_macro_ __declare_static_bit_vector(CONCAT_u1_u14_1403,14);\
__declare_static_bit_vector(CONCAT_u1_u53_1406,53);\
__declare_static_bit_vector(CONCAT_u14_u67_1407,67);\
bit_vector_concatenate( &(sign_d), &(exp_a), &(CONCAT_u1_u14_1403));\
bit_vector_concatenate( &(top_bit), &(man_52), &(CONCAT_u1_u53_1406));\
bit_vector_concatenate( &(CONCAT_u1_u14_1403), &(CONCAT_u1_u53_1406), &(CONCAT_u14_u67_1407));\
bit_vector_cast_to_bit_vector(0, &(result), &(CONCAT_u14_u67_1407));\
;

#define fpunit_exec_exec__DoubleToExtendedFp_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__DoubleToSingle_inner_inarg_prep_macro__ static double f1_d;\
f1_d = (*__pf1_d);\
__declare_static_bit_vector(needs_norm,1);\
__declare_static_bit_vector(extn_result,81);\
__declare_static_bit_vector(uf1_d,64);\
__declare_static_bit_vector(sign_d,1);\
__declare_static_bit_vector(exp_d,11);\
__declare_static_bit_vector(mant_d,52);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(bias,13);\
__declare_static_bit_vector(exp_without_bias,13);\
__declare_static_bit_vector(mantissa_msb,1);\
__declare_static_bit_vector(mantissa_53_bits,53);\
__declare_static_bit_vector(top_bit_pos,6);\
__declare_static_bit_vector(top_bit_found,1);\
__declare_static_bit_vector(shift_amount,6);\
__declare_static_bit_vector(mantissa_53_aligned,53);\
__declare_static_bit_vector(exp_without_bias_adjusted,13);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(underflow,1);\
__declare_static_bit_vector(mantissa_62,62);\
__declare_static_bit_vector(exponent_to_be_passed,13);\
__declare_static_bit_vector(mantissa_to_be_passed,62);\

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1932_c_macro_ __declare_static_bit_vector(type_cast_1931,64);\
double_bitcast_to_bit_vector( &(type_cast_1931), &(f1_d));\
bit_vector_cast_to_bit_vector(0, &(uf1_d), &(type_cast_1931));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1937_c_macro_ __declare_static_bit_vector(konst_1935,64);\
bit_vector_clear(&konst_1935);\
konst_1935.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_1936,1);\
bit_vector_clear(&konst_1935);\
konst_1935.val.byte_array[0] = 63;\
bit_vector_bitsel( &(uf1_d), &(konst_1935), &(BITSEL_u64_u1_1936));\
bit_vector_cast_to_bit_vector(0, &(sign_d), &(BITSEL_u64_u1_1936));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1941_c_macro_ __declare_static_bit_vector(slice_1940,11);\
bit_vector_slice(&(uf1_d), &(slice_1940), 52);\
bit_vector_cast_to_bit_vector(0, &(exp_d), &(slice_1940));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1945_c_macro_ __declare_static_bit_vector(slice_1944,52);\
bit_vector_slice(&(uf1_d), &(slice_1944), 0);\
bit_vector_cast_to_bit_vector(0, &(mant_d), &(slice_1944));\
;

#define fpunit_exec_exec__DoubleToSingle_call_stmt_1952_c_macro_ _fpunit_exec_exec_classify_64_( &(f1_d), &(f1_zero), &(f1_normal), &(f1_denormal), &(f1_inf), &(f1_nan));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1958_c_macro_ __declare_static_bit_vector(MUX_1957,13);\
if (has_undefined_bit(&f1_denormal)) {fprintf(stderr, "Error: variable f1_denormal has undefined value (%s) at test point.\n", to_string(&f1_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_denormal)){bit_vector_cast_to_bit_vector(1, &(MUX_1957), &(exp_base_1022));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_1957), &(exp_base_1023));\
}bit_vector_cast_to_bit_vector(1, &(bias), &(MUX_1957));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1964_c_macro_ __declare_static_bit_vector(type_cast_1961,13);\
__declare_static_bit_vector(SUB_i13_i13_1963,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_1961), &(exp_d));\
bit_vector_minus( &(type_cast_1961), &(bias), &(SUB_i13_i13_1963));\
bit_vector_cast_to_bit_vector(1, &(exp_without_bias), &(SUB_i13_i13_1963));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1970_c_macro_ __declare_static_bit_vector(MUX_1969,1);\
if (has_undefined_bit(&f1_denormal)) {fprintf(stderr, "Error: variable f1_denormal has undefined value (%s) at test point.\n", to_string(&f1_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_denormal)){bit_vector_cast_to_bit_vector(0, &(MUX_1969), &(ZERO_1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_1969), &(ONE_1));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_msb), &(MUX_1969));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1975_c_macro_ __declare_static_bit_vector(CONCAT_u1_u53_1974,53);\
bit_vector_concatenate( &(mantissa_msb), &(mant_d), &(CONCAT_u1_u53_1974));\
bit_vector_cast_to_bit_vector(0, &(mantissa_53_bits), &(CONCAT_u1_u53_1974));\
;

#define fpunit_exec_exec__DoubleToSingle_call_stmt_1979_c_macro_ _fpunit_exec_exec_find_left_53_( &(mantissa_53_bits), &(top_bit_pos), &(top_bit_found));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1984_c_macro_ __declare_static_bit_vector(konst_1981,6);\
bit_vector_clear(&konst_1981);\
konst_1981.val.byte_array[0] = 52;\
__declare_static_bit_vector(SUB_u6_u6_1983,6);\
bit_vector_clear(&konst_1981);\
konst_1981.val.byte_array[0] = 52;\
bit_vector_minus( &(konst_1981), &(top_bit_pos), &(SUB_u6_u6_1983));\
bit_vector_cast_to_bit_vector(0, &(shift_amount), &(SUB_u6_u6_1983));\
;

#define fpunit_exec_exec__DoubleToSingle_call_stmt_1988_c_macro_ _fpunit_exec_exec_i53_sll_( &(mantissa_53_bits),  &(shift_amount), &(mantissa_53_aligned));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1994_c_macro_ __declare_static_bit_vector(type_cast_1992,13);\
__declare_static_bit_vector(SUB_i13_i13_1993,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_1992), &(shift_amount));\
bit_vector_minus( &(exp_without_bias), &(type_cast_1992), &(SUB_i13_i13_1993));\
bit_vector_cast_to_bit_vector(1, &(exp_without_bias_adjusted), &(SUB_i13_i13_1993));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_1999_c_macro_ __declare_static_bit_vector(konst_1997,13);\
bit_vector_clear(&konst_1997);\
konst_1997.val.byte_array[0] = 127;\
__declare_static_bit_vector(SGT_i13_u1_1998,1);\
bit_vector_clear(&konst_1997);\
konst_1997.val.byte_array[0] = 127;\
bit_vector_greater(1, &(exp_without_bias_adjusted), &(konst_1997), &(SGT_i13_u1_1998));\
bit_vector_cast_to_bit_vector(0, &(overflow), &(SGT_i13_u1_1998));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_2006_c_macro_ __declare_static_bit_vector(konst_2002,13);\
bit_vector_clear(&konst_2002);\
__declare_static_bit_vector(konst_2003,13);\
bit_vector_clear(&konst_2003);\
konst_2003.val.byte_array[0] = 126;\
__declare_static_bit_vector(SUB_i13_i13_2004,13);\
bit_vector_clear(&SUB_i13_i13_2004);\
SUB_i13_i13_2004.val.byte_array[0] = 130;\
SUB_i13_i13_2004.val.byte_array[1] = 255;\
__declare_static_bit_vector(SLT_i13_u1_2005,1);\
bit_vector_clear(&konst_2002);\
bit_vector_clear(&konst_2003);\
konst_2003.val.byte_array[0] = 126;\
bit_vector_minus( &(konst_2002), &(konst_2003), &(SUB_i13_i13_2004));\
bit_vector_less(1, &(exp_without_bias_adjusted), &(SUB_i13_i13_2004), &(SLT_i13_u1_2005));\
bit_vector_cast_to_bit_vector(0, &(underflow), &(SLT_i13_u1_2005));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_2012_c_macro_ __declare_static_bit_vector(slice_2009,52);\
__declare_static_bit_vector(CONCAT_u52_u62_2011,62);\
bit_vector_slice(&(mantissa_53_aligned), &(slice_2009), 0);\
bit_vector_concatenate( &(slice_2009), &(ZERO_10), &(CONCAT_u52_u62_2011));\
bit_vector_cast_to_bit_vector(0, &(mantissa_62), &(CONCAT_u52_u62_2011));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_2041_c_macro_ __declare_static_bit_vector(konst_2016,13);\
bit_vector_clear(&konst_2016);\
__declare_static_bit_vector(MUX_2017,13);\
__declare_static_bit_vector(OR_u1_u1_2020,1);\
__declare_static_bit_vector(konst_2022,13);\
bit_vector_clear(&konst_2022);\
__declare_static_bit_vector(MUX_2023,13);\
__declare_static_bit_vector(OR_i13_i13_2024,13);\
__declare_static_bit_vector(type_cast_2027,13);\
bit_vector_clear(&type_cast_2027);\
__declare_static_bit_vector(konst_2028,13);\
bit_vector_clear(&konst_2028);\
__declare_static_bit_vector(MUX_2029,13);\
__declare_static_bit_vector(NOT_u1_u1_2031,1);\
__declare_static_bit_vector(OR_u1_u1_2034,1);\
__declare_static_bit_vector(AND_u1_u1_2035,1);\
__declare_static_bit_vector(konst_2037,13);\
bit_vector_clear(&konst_2037);\
__declare_static_bit_vector(MUX_2038,13);\
__declare_static_bit_vector(OR_i13_i13_2039,13);\
__declare_static_bit_vector(OR_i13_i13_2040,13);\
if (has_undefined_bit(&f1_nan)) {fprintf(stderr, "Error: variable f1_nan has undefined value (%s) at test point.\n", to_string(&f1_nan));assert(0);} \
if(bit_vector_to_uint64(0, &f1_nan)){bit_vector_cast_to_bit_vector(1, &(MUX_2017), &(ALL_ONE_13));\
}else {bit_vector_clear(&konst_2016);\
bit_vector_cast_to_bit_vector(1, &(MUX_2017), &(konst_2016));\
}bit_vector_or(&(f1_inf), &(overflow), &(OR_u1_u1_2020));\
if (has_undefined_bit(&OR_u1_u1_2020)) {fprintf(stderr, "Error: variable OR_u1_u1_2020 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_2020));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_2020)){bit_vector_cast_to_bit_vector(1, &(MUX_2023), &(ALL_ONE_13));\
}else {bit_vector_clear(&konst_2022);\
bit_vector_cast_to_bit_vector(1, &(MUX_2023), &(konst_2022));\
}bit_vector_or(&(MUX_2017), &(MUX_2023), &(OR_i13_i13_2024));\
if (has_undefined_bit(&f1_zero)) {fprintf(stderr, "Error: variable f1_zero has undefined value (%s) at test point.\n", to_string(&f1_zero));assert(0);} \
if(bit_vector_to_uint64(0, &f1_zero)){bit_vector_bitcast_to_bit_vector( &(type_cast_2027), &(ZERO_13));\
bit_vector_cast_to_bit_vector(1, &(MUX_2029), &(type_cast_2027));\
}else {bit_vector_clear(&konst_2028);\
bit_vector_cast_to_bit_vector(1, &(MUX_2029), &(konst_2028));\
}bit_vector_not( &(overflow), &(NOT_u1_u1_2031));\
bit_vector_or(&(f1_normal), &(f1_denormal), &(OR_u1_u1_2034));\
bit_vector_and(&(NOT_u1_u1_2031), &(OR_u1_u1_2034), &(AND_u1_u1_2035));\
if (has_undefined_bit(&AND_u1_u1_2035)) {fprintf(stderr, "Error: variable AND_u1_u1_2035 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_2035));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_2035)){bit_vector_cast_to_bit_vector(1, &(MUX_2038), &(exp_without_bias_adjusted));\
}else {bit_vector_clear(&konst_2037);\
bit_vector_cast_to_bit_vector(1, &(MUX_2038), &(konst_2037));\
}bit_vector_or(&(MUX_2029), &(MUX_2038), &(OR_i13_i13_2039));\
bit_vector_or(&(OR_i13_i13_2024), &(OR_i13_i13_2039), &(OR_i13_i13_2040));\
bit_vector_cast_to_bit_vector(1, &(exponent_to_be_passed), &(OR_i13_i13_2040));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_2071_c_macro_ __declare_static_bit_vector(CONCAT_u1_u62_2046,62);\
bit_vector_clear(&CONCAT_u1_u62_2046);\
CONCAT_u1_u62_2046.val.byte_array[7] = 32;\
__declare_static_bit_vector(konst_2047,62);\
bit_vector_clear(&konst_2047);\
__declare_static_bit_vector(MUX_2048,62);\
__declare_static_bit_vector(OR_u1_u1_2051,1);\
__declare_static_bit_vector(konst_2053,62);\
bit_vector_clear(&konst_2053);\
__declare_static_bit_vector(MUX_2054,62);\
__declare_static_bit_vector(OR_u62_u62_2055,62);\
__declare_static_bit_vector(konst_2058,62);\
bit_vector_clear(&konst_2058);\
__declare_static_bit_vector(MUX_2059,62);\
__declare_static_bit_vector(NOT_u1_u1_2061,1);\
__declare_static_bit_vector(OR_u1_u1_2064,1);\
__declare_static_bit_vector(AND_u1_u1_2065,1);\
__declare_static_bit_vector(konst_2067,62);\
bit_vector_clear(&konst_2067);\
__declare_static_bit_vector(MUX_2068,62);\
__declare_static_bit_vector(OR_u62_u62_2069,62);\
__declare_static_bit_vector(OR_u62_u62_2070,62);\
if (has_undefined_bit(&f1_nan)) {fprintf(stderr, "Error: variable f1_nan has undefined value (%s) at test point.\n", to_string(&f1_nan));assert(0);} \
if(bit_vector_to_uint64(0, &f1_nan)){bit_vector_concatenate( &(ONE_1), &(ZERO_61), &(CONCAT_u1_u62_2046));\
bit_vector_cast_to_bit_vector(0, &(MUX_2048), &(CONCAT_u1_u62_2046));\
}else {bit_vector_clear(&konst_2047);\
bit_vector_cast_to_bit_vector(0, &(MUX_2048), &(konst_2047));\
}bit_vector_or(&(f1_inf), &(overflow), &(OR_u1_u1_2051));\
if (has_undefined_bit(&OR_u1_u1_2051)) {fprintf(stderr, "Error: variable OR_u1_u1_2051 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_2051));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_2051)){bit_vector_cast_to_bit_vector(0, &(MUX_2054), &(ZERO_62));\
}else {bit_vector_clear(&konst_2053);\
bit_vector_cast_to_bit_vector(0, &(MUX_2054), &(konst_2053));\
}bit_vector_or(&(MUX_2048), &(MUX_2054), &(OR_u62_u62_2055));\
if (has_undefined_bit(&f1_zero)) {fprintf(stderr, "Error: variable f1_zero has undefined value (%s) at test point.\n", to_string(&f1_zero));assert(0);} \
if(bit_vector_to_uint64(0, &f1_zero)){bit_vector_cast_to_bit_vector(0, &(MUX_2059), &(ZERO_62));\
}else {bit_vector_clear(&konst_2058);\
bit_vector_cast_to_bit_vector(0, &(MUX_2059), &(konst_2058));\
}bit_vector_not( &(overflow), &(NOT_u1_u1_2061));\
bit_vector_or(&(f1_normal), &(f1_denormal), &(OR_u1_u1_2064));\
bit_vector_and(&(NOT_u1_u1_2061), &(OR_u1_u1_2064), &(AND_u1_u1_2065));\
if (has_undefined_bit(&AND_u1_u1_2065)) {fprintf(stderr, "Error: variable AND_u1_u1_2065 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_2065));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_2065)){bit_vector_cast_to_bit_vector(0, &(MUX_2068), &(mantissa_62));\
}else {bit_vector_clear(&konst_2067);\
bit_vector_cast_to_bit_vector(0, &(MUX_2068), &(konst_2067));\
}bit_vector_or(&(MUX_2059), &(MUX_2068), &(OR_u62_u62_2069));\
bit_vector_or(&(OR_u62_u62_2055), &(OR_u62_u62_2069), &(OR_u62_u62_2070));\
bit_vector_cast_to_bit_vector(0, &(mantissa_to_be_passed), &(OR_u62_u62_2070));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_2086_c_macro_ __declare_static_bit_vector(NOT_u1_u1_2075,1);\
__declare_static_bit_vector(AND_u1_u1_2076,1);\
__declare_static_bit_vector(NOT_u1_u1_2078,1);\
__declare_static_bit_vector(AND_u1_u1_2079,1);\
__declare_static_bit_vector(NOT_u1_u1_2081,1);\
__declare_static_bit_vector(NOT_u1_u1_2083,1);\
__declare_static_bit_vector(AND_u1_u1_2084,1);\
__declare_static_bit_vector(AND_u1_u1_2085,1);\
bit_vector_not( &(f1_nan), &(NOT_u1_u1_2075));\
bit_vector_and(&(underflow), &(NOT_u1_u1_2075), &(AND_u1_u1_2076));\
bit_vector_not( &(f1_inf), &(NOT_u1_u1_2078));\
bit_vector_and(&(AND_u1_u1_2076), &(NOT_u1_u1_2078), &(AND_u1_u1_2079));\
bit_vector_not( &(f1_zero), &(NOT_u1_u1_2081));\
bit_vector_not( &(overflow), &(NOT_u1_u1_2083));\
bit_vector_and(&(NOT_u1_u1_2081), &(NOT_u1_u1_2083), &(AND_u1_u1_2084));\
bit_vector_and(&(AND_u1_u1_2079), &(AND_u1_u1_2084), &(AND_u1_u1_2085));\
bit_vector_cast_to_bit_vector(0, &(needs_norm), &(AND_u1_u1_2085));\
;

#define fpunit_exec_exec__DoubleToSingle_assign_stmt_2106_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_2090,2);\
bit_vector_clear(&CONCAT_u1_u2_2090);\
__declare_static_bit_vector(CONCAT_u1_u2_2093,2);\
__declare_static_bit_vector(CONCAT_u2_u4_2094,4);\
__declare_static_bit_vector(OR_u1_u1_2097,1);\
__declare_static_bit_vector(CONCAT_u1_u2_2099,2);\
__declare_static_bit_vector(type_cast_2101,13);\
__declare_static_bit_vector(CONCAT_u13_u75_2103,75);\
__declare_static_bit_vector(CONCAT_u2_u77_2104,77);\
__declare_static_bit_vector(CONCAT_u4_u81_2105,81);\
bit_vector_concatenate( &(ZERO_1), &(ZERO_1), &(CONCAT_u1_u2_2090));\
bit_vector_concatenate( &(sign_d), &(f1_nan), &(CONCAT_u1_u2_2093));\
bit_vector_concatenate( &(CONCAT_u1_u2_2090), &(CONCAT_u1_u2_2093), &(CONCAT_u2_u4_2094));\
bit_vector_or(&(f1_inf), &(overflow), &(OR_u1_u1_2097));\
bit_vector_concatenate( &(OR_u1_u1_2097), &(f1_zero), &(CONCAT_u1_u2_2099));\
bit_vector_bitcast_to_bit_vector( &(type_cast_2101), &(exponent_to_be_passed));\
bit_vector_concatenate( &(type_cast_2101), &(mantissa_to_be_passed), &(CONCAT_u13_u75_2103));\
bit_vector_concatenate( &(CONCAT_u1_u2_2099), &(CONCAT_u13_u75_2103), &(CONCAT_u2_u77_2104));\
bit_vector_concatenate( &(CONCAT_u2_u4_2094), &(CONCAT_u2_u77_2104), &(CONCAT_u4_u81_2105));\
bit_vector_cast_to_bit_vector(0, &(extn_result), &(CONCAT_u4_u81_2105));\
;

#define fpunit_exec_exec__DoubleToSingle_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pneeds_norm)), &(needs_norm));\
bit_vector_cast_to_bit_vector(0, &((*__pextn_result)), &(extn_result));\
;

#define fpunit_exec_exec__SingleToDouble_inner_inarg_prep_macro__ static float f1_s;\
f1_s = (*__pf1_s);\
static double f1_d;\
__declare_static_bit_vector(uf1_s,32);\
__declare_static_bit_vector(sign_s,1);\
__declare_static_bit_vector(exp_s,8);\
__declare_static_bit_vector(mant_s,23);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(mantissa_msb,1);\
__declare_static_bit_vector(frac,24);\
__declare_static_bit_vector(bias,13);\
__declare_static_bit_vector(exp_a,13);\
__declare_static_bit_vector(position,5);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(left_shifts_required,5);\
__declare_static_bit_vector(frac_shifted,24);\
__declare_static_bit_vector(expon_normalized,13);\
__declare_static_bit_vector(exp_11,11);\
__declare_static_bit_vector(man_52,52);\
__declare_static_bit_vector(result_norm_denorm,64);\
__declare_static_bit_vector(result_qnan,64);\
bit_vector_clear(&result_qnan);\
result_qnan.val.byte_array[6] = 248;\
result_qnan.val.byte_array[7] = 127;\
__declare_static_bit_vector(result_zero,64);\
__declare_static_bit_vector(result_infinity,64);\
__declare_static_bit_vector(result,64);\

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2298_c_macro_ __declare_static_bit_vector(type_cast_2297,32);\
float_bitcast_to_bit_vector( &(type_cast_2297), &(f1_s));\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &(type_cast_2297));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2303_c_macro_ __declare_static_bit_vector(konst_2301,32);\
bit_vector_clear(&konst_2301);\
konst_2301.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_2302,1);\
bit_vector_clear(&konst_2301);\
konst_2301.val.byte_array[0] = 31;\
bit_vector_bitsel( &(uf1_s), &(konst_2301), &(BITSEL_u32_u1_2302));\
bit_vector_cast_to_bit_vector(0, &(sign_s), &(BITSEL_u32_u1_2302));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2307_c_macro_ __declare_static_bit_vector(slice_2306,8);\
bit_vector_slice(&(uf1_s), &(slice_2306), 23);\
bit_vector_cast_to_bit_vector(0, &(exp_s), &(slice_2306));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2311_c_macro_ __declare_static_bit_vector(slice_2310,23);\
bit_vector_slice(&(uf1_s), &(slice_2310), 0);\
bit_vector_cast_to_bit_vector(0, &(mant_s), &(slice_2310));\
;

#define fpunit_exec_exec__SingleToDouble_call_stmt_2318_c_macro_ _fpunit_exec_exec_classify_32_( &(f1_s), &(f1_zero), &(f1_normal), &(f1_denormal), &(f1_inf), &(f1_nan));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2324_c_macro_ __declare_static_bit_vector(MUX_2323,1);\
if (has_undefined_bit(&f1_denormal)) {fprintf(stderr, "Error: variable f1_denormal has undefined value (%s) at test point.\n", to_string(&f1_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_denormal)){bit_vector_cast_to_bit_vector(0, &(MUX_2323), &(ZERO_1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2323), &(ONE_1));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_msb), &(MUX_2323));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2329_c_macro_ __declare_static_bit_vector(CONCAT_u1_u24_2328,24);\
bit_vector_concatenate( &(mantissa_msb), &(mant_s), &(CONCAT_u1_u24_2328));\
bit_vector_cast_to_bit_vector(0, &(frac), &(CONCAT_u1_u24_2328));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2335_c_macro_ __declare_static_bit_vector(MUX_2334,13);\
if (has_undefined_bit(&f1_denormal)) {fprintf(stderr, "Error: variable f1_denormal has undefined value (%s) at test point.\n", to_string(&f1_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_denormal)){bit_vector_cast_to_bit_vector(1, &(MUX_2334), &(exp_base_126));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_2334), &(exp_base_127));\
}bit_vector_cast_to_bit_vector(1, &(bias), &(MUX_2334));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2341_c_macro_ __declare_static_bit_vector(type_cast_2338,13);\
__declare_static_bit_vector(SUB_i13_i13_2340,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_2338), &(exp_s));\
bit_vector_minus( &(type_cast_2338), &(bias), &(SUB_i13_i13_2340));\
bit_vector_cast_to_bit_vector(1, &(exp_a), &(SUB_i13_i13_2340));\
;

#define fpunit_exec_exec__SingleToDouble_call_stmt_2345_c_macro_ _fpunit_exec_exec_find_left_24_( &(frac), &(position), &(found));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2350_c_macro_ __declare_static_bit_vector(konst_2347,5);\
bit_vector_clear(&konst_2347);\
konst_2347.val.byte_array[0] = 23;\
__declare_static_bit_vector(SUB_u5_u5_2349,5);\
bit_vector_clear(&konst_2347);\
konst_2347.val.byte_array[0] = 23;\
bit_vector_minus( &(konst_2347), &(position), &(SUB_u5_u5_2349));\
bit_vector_cast_to_bit_vector(0, &(left_shifts_required), &(SUB_u5_u5_2349));\
;

#define fpunit_exec_exec__SingleToDouble_call_stmt_2354_c_macro_ _fpunit_exec_exec_i24_sll_( &(frac),  &(left_shifts_required), &(frac_shifted));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2360_c_macro_ __declare_static_bit_vector(type_cast_2358,13);\
__declare_static_bit_vector(SUB_i13_i13_2359,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_2358), &(left_shifts_required));\
bit_vector_minus( &(exp_a), &(type_cast_2358), &(SUB_i13_i13_2359));\
bit_vector_cast_to_bit_vector(1, &(expon_normalized), &(SUB_i13_i13_2359));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2366_c_macro_ __declare_static_bit_vector(ADD_i13_i13_2364,13);\
__declare_static_bit_vector(type_cast_2365,11);\
bit_vector_plus( &(expon_normalized), &(exp_base_1023), &(ADD_i13_i13_2364));\
bit_vector_bitcast_to_bit_vector( &(type_cast_2365), &(ADD_i13_i13_2364));\
bit_vector_cast_to_bit_vector(0, &(exp_11), &(type_cast_2365));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2372_c_macro_ __declare_static_bit_vector(slice_2369,23);\
__declare_static_bit_vector(CONCAT_u23_u52_2371,52);\
bit_vector_slice(&(frac_shifted), &(slice_2369), 0);\
bit_vector_concatenate( &(slice_2369), &(ZERO_29), &(CONCAT_u23_u52_2371));\
bit_vector_cast_to_bit_vector(0, &(man_52), &(CONCAT_u23_u52_2371));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2379_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_2376,12);\
__declare_static_bit_vector(CONCAT_u12_u64_2378,64);\
bit_vector_concatenate( &(sign_s), &(exp_11), &(CONCAT_u1_u12_2376));\
bit_vector_concatenate( &(CONCAT_u1_u12_2376), &(man_52), &(CONCAT_u12_u64_2378));\
bit_vector_cast_to_bit_vector(0, &(result_norm_denorm), &(CONCAT_u12_u64_2378));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2388_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_2383,12);\
bit_vector_clear(&CONCAT_u1_u12_2383);\
CONCAT_u1_u12_2383.val.byte_array[0] = 255;\
CONCAT_u1_u12_2383.val.byte_array[1] = 7;\
__declare_static_bit_vector(CONCAT_u1_u52_2386,52);\
bit_vector_clear(&CONCAT_u1_u52_2386);\
CONCAT_u1_u52_2386.val.byte_array[6] = 8;\
__declare_static_bit_vector(CONCAT_u12_u64_2387,64);\
bit_vector_clear(&CONCAT_u12_u64_2387);\
CONCAT_u12_u64_2387.val.byte_array[6] = 248;\
CONCAT_u12_u64_2387.val.byte_array[7] = 127;\
bit_vector_concatenate( &(ZERO_1), &(ALL_ONE_11), &(CONCAT_u1_u12_2383));\
bit_vector_concatenate( &(ONE_1), &(ZERO_51), &(CONCAT_u1_u52_2386));\
bit_vector_concatenate( &(CONCAT_u1_u12_2383), &(CONCAT_u1_u52_2386), &(CONCAT_u12_u64_2387));\
bit_vector_cast_to_bit_vector(0, &(result_qnan), &(CONCAT_u12_u64_2387));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2393_c_macro_ __declare_static_bit_vector(CONCAT_u1_u64_2392,64);\
bit_vector_concatenate( &(sign_s), &(ZERO_63), &(CONCAT_u1_u64_2392));\
bit_vector_cast_to_bit_vector(0, &(result_zero), &(CONCAT_u1_u64_2392));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2400_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_2397,12);\
__declare_static_bit_vector(CONCAT_u12_u64_2399,64);\
bit_vector_concatenate( &(sign_s), &(ALL_ONE_11), &(CONCAT_u1_u12_2397));\
bit_vector_concatenate( &(CONCAT_u1_u12_2397), &(ZERO_52), &(CONCAT_u12_u64_2399));\
bit_vector_cast_to_bit_vector(0, &(result_infinity), &(CONCAT_u12_u64_2399));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2423_c_macro_ __declare_static_bit_vector(OR_u1_u1_2404,1);\
__declare_static_bit_vector(konst_2406,64);\
bit_vector_clear(&konst_2406);\
__declare_static_bit_vector(MUX_2407,64);\
__declare_static_bit_vector(konst_2410,64);\
bit_vector_clear(&konst_2410);\
__declare_static_bit_vector(MUX_2411,64);\
__declare_static_bit_vector(OR_u64_u64_2412,64);\
__declare_static_bit_vector(konst_2415,64);\
bit_vector_clear(&konst_2415);\
__declare_static_bit_vector(MUX_2416,64);\
__declare_static_bit_vector(konst_2419,64);\
bit_vector_clear(&konst_2419);\
__declare_static_bit_vector(MUX_2420,64);\
__declare_static_bit_vector(OR_u64_u64_2421,64);\
__declare_static_bit_vector(OR_u64_u64_2422,64);\
bit_vector_or(&(f1_normal), &(f1_denormal), &(OR_u1_u1_2404));\
if (has_undefined_bit(&OR_u1_u1_2404)) {fprintf(stderr, "Error: variable OR_u1_u1_2404 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_2404));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_2404)){bit_vector_cast_to_bit_vector(0, &(MUX_2407), &(result_norm_denorm));\
}else {bit_vector_clear(&konst_2406);\
bit_vector_cast_to_bit_vector(0, &(MUX_2407), &(konst_2406));\
}if (has_undefined_bit(&f1_nan)) {fprintf(stderr, "Error: variable f1_nan has undefined value (%s) at test point.\n", to_string(&f1_nan));assert(0);} \
if(bit_vector_to_uint64(0, &f1_nan)){bit_vector_cast_to_bit_vector(0, &(MUX_2411), &(result_qnan));\
}else {bit_vector_clear(&konst_2410);\
bit_vector_cast_to_bit_vector(0, &(MUX_2411), &(konst_2410));\
}bit_vector_or(&(MUX_2407), &(MUX_2411), &(OR_u64_u64_2412));\
if (has_undefined_bit(&f1_zero)) {fprintf(stderr, "Error: variable f1_zero has undefined value (%s) at test point.\n", to_string(&f1_zero));assert(0);} \
if(bit_vector_to_uint64(0, &f1_zero)){bit_vector_cast_to_bit_vector(0, &(MUX_2416), &(result_zero));\
}else {bit_vector_clear(&konst_2415);\
bit_vector_cast_to_bit_vector(0, &(MUX_2416), &(konst_2415));\
}if (has_undefined_bit(&f1_inf)) {fprintf(stderr, "Error: variable f1_inf has undefined value (%s) at test point.\n", to_string(&f1_inf));assert(0);} \
if(bit_vector_to_uint64(0, &f1_inf)){bit_vector_cast_to_bit_vector(0, &(MUX_2420), &(result_infinity));\
}else {bit_vector_clear(&konst_2419);\
bit_vector_cast_to_bit_vector(0, &(MUX_2420), &(konst_2419));\
}bit_vector_or(&(MUX_2416), &(MUX_2420), &(OR_u64_u64_2421));\
bit_vector_or(&(OR_u64_u64_2412), &(OR_u64_u64_2421), &(OR_u64_u64_2422));\
bit_vector_cast_to_bit_vector(0, &(result), &(OR_u64_u64_2422));\
;

#define fpunit_exec_exec__SingleToDouble_assign_stmt_2427_c_macro_ static double type_cast_2426;\
bit_vector_bitcast_to_double( &(type_cast_2426),  &(result));\
f1_d = type_cast_2426;\
;

#define fpunit_exec_exec__SingleToDouble_inner_outarg_prep_macro__ (*__pf1_d) = f1_d;\
;

#define fpunit_exec_exec__SingleToDouble_outer_arg_decl_macro__ float __f1_s = f1_s;\
;

#define fpunit_exec_exec__SingleToDouble_outer_op_xfer_macro__  *f1_d = __f1_d;\
;

#define fpunit_exec_exec__SingleToExtendedFp_inner_inarg_prep_macro__ __declare_static_bit_vector(uf1_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &((*__puf1_s)));\
__declare_static_bit_vector(f1_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_s_class), &((*__pf1_s_class)));\
__declare_static_bit_vector(result,67);\
__declare_static_bit_vector(sign_s,1);\
__declare_static_bit_vector(exp_s,8);\
__declare_static_bit_vector(mant_s,23);\
__declare_static_bit_vector(f1_pos_normal,1);\
__declare_static_bit_vector(f1_neg_normal,1);\
__declare_static_bit_vector(f1_pos_denormal,1);\
__declare_static_bit_vector(f1_neg_denormal,1);\
__declare_static_bit_vector(f1_qnan,1);\
__declare_static_bit_vector(f1_snan,1);\
__declare_static_bit_vector(f1_pos_inf,1);\
__declare_static_bit_vector(f1_neg_inf,1);\
__declare_static_bit_vector(f1_pos_zero,1);\
__declare_static_bit_vector(f1_neg_zero,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(bias,13);\
__declare_static_bit_vector(top_bit,1);\
__declare_static_bit_vector(exp_a,13);\
__declare_static_bit_vector(man_52,52);\

#define fpunit_exec_exec__SingleToExtendedFp_stmt_2435_c_macro_ uint32_t fpunit_exec_exec__SingleToExtendedFp_stmt_2435_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__SingleToExtendedFp_stmt_2435_c_macro___print_counter,"SingleToExtendedFp_in_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2435_c_macro___print_counter,"uf1_s");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(uf1_s)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2435_c_macro___print_counter,"f1_s_class");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_s_class)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2440_c_macro_ __declare_static_bit_vector(konst_2438,32);\
bit_vector_clear(&konst_2438);\
konst_2438.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_2439,1);\
bit_vector_clear(&konst_2438);\
konst_2438.val.byte_array[0] = 31;\
bit_vector_bitsel( &(uf1_s), &(konst_2438), &(BITSEL_u32_u1_2439));\
bit_vector_cast_to_bit_vector(0, &(sign_s), &(BITSEL_u32_u1_2439));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2444_c_macro_ __declare_static_bit_vector(slice_2443,8);\
bit_vector_slice(&(uf1_s), &(slice_2443), 23);\
bit_vector_cast_to_bit_vector(0, &(exp_s), &(slice_2443));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2448_c_macro_ __declare_static_bit_vector(slice_2447,23);\
bit_vector_slice(&(uf1_s), &(slice_2447), 0);\
bit_vector_cast_to_bit_vector(0, &(mant_s), &(slice_2447));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2452_c_macro_ __declare_static_bit_vector(slice_2451,1);\
bit_vector_slice(&(f1_s_class), &(slice_2451), 9);\
bit_vector_cast_to_bit_vector(0, &(f1_pos_normal), &(slice_2451));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2456_c_macro_ __declare_static_bit_vector(slice_2455,1);\
bit_vector_slice(&(f1_s_class), &(slice_2455), 8);\
bit_vector_cast_to_bit_vector(0, &(f1_neg_normal), &(slice_2455));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2460_c_macro_ __declare_static_bit_vector(slice_2459,1);\
bit_vector_slice(&(f1_s_class), &(slice_2459), 7);\
bit_vector_cast_to_bit_vector(0, &(f1_pos_denormal), &(slice_2459));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2464_c_macro_ __declare_static_bit_vector(slice_2463,1);\
bit_vector_slice(&(f1_s_class), &(slice_2463), 6);\
bit_vector_cast_to_bit_vector(0, &(f1_neg_denormal), &(slice_2463));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2468_c_macro_ __declare_static_bit_vector(slice_2467,1);\
bit_vector_slice(&(f1_s_class), &(slice_2467), 5);\
bit_vector_cast_to_bit_vector(0, &(f1_qnan), &(slice_2467));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2472_c_macro_ __declare_static_bit_vector(slice_2471,1);\
bit_vector_slice(&(f1_s_class), &(slice_2471), 4);\
bit_vector_cast_to_bit_vector(0, &(f1_snan), &(slice_2471));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2476_c_macro_ __declare_static_bit_vector(slice_2475,1);\
bit_vector_slice(&(f1_s_class), &(slice_2475), 3);\
bit_vector_cast_to_bit_vector(0, &(f1_pos_inf), &(slice_2475));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2480_c_macro_ __declare_static_bit_vector(slice_2479,1);\
bit_vector_slice(&(f1_s_class), &(slice_2479), 2);\
bit_vector_cast_to_bit_vector(0, &(f1_neg_inf), &(slice_2479));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2484_c_macro_ __declare_static_bit_vector(slice_2483,1);\
bit_vector_slice(&(f1_s_class), &(slice_2483), 1);\
bit_vector_cast_to_bit_vector(0, &(f1_pos_zero), &(slice_2483));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2488_c_macro_ __declare_static_bit_vector(slice_2487,1);\
bit_vector_slice(&(f1_s_class), &(slice_2487), 0);\
bit_vector_cast_to_bit_vector(0, &(f1_neg_zero), &(slice_2487));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2493_c_macro_ __declare_static_bit_vector(OR_u1_u1_2492,1);\
bit_vector_or(&(f1_pos_denormal), &(f1_neg_denormal), &(OR_u1_u1_2492));\
bit_vector_cast_to_bit_vector(0, &(f1_denormal), &(OR_u1_u1_2492));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2498_c_macro_ __declare_static_bit_vector(OR_u1_u1_2497,1);\
bit_vector_or(&(f1_pos_zero), &(f1_neg_zero), &(OR_u1_u1_2497));\
bit_vector_cast_to_bit_vector(0, &(f1_zero), &(OR_u1_u1_2497));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2504_c_macro_ __declare_static_bit_vector(MUX_2503,13);\
if (has_undefined_bit(&f1_denormal)) {fprintf(stderr, "Error: variable f1_denormal has undefined value (%s) at test point.\n", to_string(&f1_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_denormal)){bit_vector_cast_to_bit_vector(1, &(MUX_2503), &(exp_base_126));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_2503), &(exp_base_127));\
}bit_vector_cast_to_bit_vector(1, &(bias), &(MUX_2503));\
;

#define fpunit_exec_exec__SingleToExtendedFp_stmt_2509_c_macro_ uint32_t fpunit_exec_exec__SingleToExtendedFp_stmt_2509_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__SingleToExtendedFp_stmt_2509_c_macro___print_counter,"SingleToExtendedFp_bias");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2509_c_macro___print_counter,"f1_denormal");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_denormal)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2509_c_macro___print_counter,"exp_base_126");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_base_126)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2509_c_macro___print_counter,"exp_base_127");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_base_127)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2509_c_macro___print_counter,"bias");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(bias)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2516_c_macro_ __declare_static_bit_vector(NOT_u1_u1_2512,1);\
__declare_static_bit_vector(NOT_u1_u1_2514,1);\
__declare_static_bit_vector(AND_u1_u1_2515,1);\
bit_vector_not( &(f1_denormal), &(NOT_u1_u1_2512));\
bit_vector_not( &(f1_zero), &(NOT_u1_u1_2514));\
bit_vector_and(&(NOT_u1_u1_2512), &(NOT_u1_u1_2514), &(AND_u1_u1_2515));\
bit_vector_cast_to_bit_vector(0, &(top_bit), &(AND_u1_u1_2515));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2523_c_macro_ __declare_static_bit_vector(type_cast_2519,13);\
__declare_static_bit_vector(SUB_i13_i13_2521,13);\
__declare_static_bit_vector(type_cast_2522,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_2519), &(exp_s));\
bit_vector_minus( &(type_cast_2519), &(bias), &(SUB_i13_i13_2521));\
bit_vector_bitcast_to_bit_vector( &(type_cast_2522), &(SUB_i13_i13_2521));\
bit_vector_cast_to_bit_vector(0, &(exp_a), &(type_cast_2522));\
;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2528_c_macro_ __declare_static_bit_vector(CONCAT_u23_u52_2527,52);\
bit_vector_concatenate( &(mant_s), &(ZERO_29), &(CONCAT_u23_u52_2527));\
bit_vector_cast_to_bit_vector(0, &(man_52), &(CONCAT_u23_u52_2527));\
;

#define fpunit_exec_exec__SingleToExtendedFp_stmt_2533_c_macro_ uint32_t fpunit_exec_exec__SingleToExtendedFp_stmt_2533_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__SingleToExtendedFp_stmt_2533_c_macro___print_counter,"SingleToExtendedFp_extended_result");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2533_c_macro___print_counter,"exp_s");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_s)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2533_c_macro___print_counter,"bias");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(bias)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2533_c_macro___print_counter,"exp_a");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_a)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__SingleToExtendedFp_stmt_2533_c_macro___print_counter,"man_52");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(man_52)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__SingleToExtendedFp_assign_stmt_2542_c_macro_ __declare_static_bit_vector(CONCAT_u1_u14_2537,14);\
__declare_static_bit_vector(CONCAT_u1_u53_2540,53);\
__declare_static_bit_vector(CONCAT_u14_u67_2541,67);\
bit_vector_concatenate( &(sign_s), &(exp_a), &(CONCAT_u1_u14_2537));\
bit_vector_concatenate( &(top_bit), &(man_52), &(CONCAT_u1_u53_2540));\
bit_vector_concatenate( &(CONCAT_u1_u14_2537), &(CONCAT_u1_u53_2540), &(CONCAT_u14_u67_2541));\
bit_vector_cast_to_bit_vector(0, &(result), &(CONCAT_u14_u67_2541));\
;

#define fpunit_exec_exec__SingleToExtendedFp_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__absVal_inner_inarg_prep_macro__ __declare_static_bit_vector(a,16);\
bit_vector_cast_to_bit_vector(0, &(a), &((*__pa)));\
__declare_static_bit_vector(ret_val,16);\

#define fpunit_exec_exec__absVal_assign_stmt_2552_c_macro_ __declare_static_bit_vector(slice_2550,15);\
__declare_static_bit_vector(CONCAT_u1_u16_2551,16);\
bit_vector_slice(&(a), &(slice_2550), 0);\
bit_vector_concatenate( &(ZERO_1), &(slice_2550), &(CONCAT_u1_u16_2551));\
bit_vector_cast_to_bit_vector(0, &(ret_val), &(CONCAT_u1_u16_2551));\
;

#define fpunit_exec_exec__absVal_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pret_val)), &(ret_val));\
;

#define fpunit_exec_exec__absVal_outer_arg_decl_macro__ __declare_static_bit_vector(__a, 16);\
bit_vector_assign_uint64(0, &__a, a);\
__declare_static_bit_vector(__ret_val, 16);\
;

#define fpunit_exec_exec__absVal_outer_op_xfer_macro__  *ret_val =  bit_vector_to_uint64(0, &__ret_val);\
;

#define fpunit_exec_exec__adder_11_inner_inarg_prep_macro__ __declare_static_bit_vector(A,10);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,10);\
bit_vector_cast_to_bit_vector(0, &(B), &((*__pB)));\
__declare_static_bit_vector(CIN,1);\
bit_vector_cast_to_bit_vector(0, &(CIN), &((*__pCIN)));\
__declare_static_bit_vector(SUM,10);\
__declare_static_bit_vector(COUT,1);\
__declare_static_bit_vector(operand_A,12);\
__declare_static_bit_vector(operand_B,12);\
__declare_static_bit_vector(add_result,12);\

#define fpunit_exec_exec__adder_11_assign_stmt_2566_c_macro_ __declare_static_bit_vector(CONCAT_u1_u11_2563,11);\
__declare_static_bit_vector(CONCAT_u11_u12_2565,12);\
bit_vector_concatenate( &(ZERO_1), &(A), &(CONCAT_u1_u11_2563));\
bit_vector_concatenate( &(CONCAT_u1_u11_2563), &(CIN), &(CONCAT_u11_u12_2565));\
bit_vector_cast_to_bit_vector(0, &(operand_A), &(CONCAT_u11_u12_2565));\
;

#define fpunit_exec_exec__adder_11_assign_stmt_2573_c_macro_ __declare_static_bit_vector(CONCAT_u1_u11_2570,11);\
__declare_static_bit_vector(CONCAT_u11_u12_2572,12);\
bit_vector_concatenate( &(ZERO_1), &(B), &(CONCAT_u1_u11_2570));\
bit_vector_concatenate( &(CONCAT_u1_u11_2570), &(CIN), &(CONCAT_u11_u12_2572));\
bit_vector_cast_to_bit_vector(0, &(operand_B), &(CONCAT_u11_u12_2572));\
;

#define fpunit_exec_exec__adder_11_assign_stmt_2578_c_macro_ __declare_static_bit_vector(ADD_u12_u12_2577,12);\
bit_vector_plus( &(operand_A), &(operand_B), &(ADD_u12_u12_2577));\
bit_vector_cast_to_bit_vector(0, &(add_result), &(ADD_u12_u12_2577));\
;

#define fpunit_exec_exec__adder_11_assign_stmt_2582_c_macro_ __declare_static_bit_vector(slice_2581,10);\
bit_vector_slice(&(add_result), &(slice_2581), 1);\
bit_vector_cast_to_bit_vector(0, &(SUM), &(slice_2581));\
;

#define fpunit_exec_exec__adder_11_assign_stmt_2587_c_macro_ __declare_static_bit_vector(konst_2585,12);\
bit_vector_clear(&konst_2585);\
konst_2585.val.byte_array[0] = 11;\
__declare_static_bit_vector(BITSEL_u12_u1_2586,1);\
bit_vector_clear(&konst_2585);\
konst_2585.val.byte_array[0] = 11;\
bit_vector_bitsel( &(add_result), &(konst_2585), &(BITSEL_u12_u1_2586));\
bit_vector_cast_to_bit_vector(0, &(COUT), &(BITSEL_u12_u1_2586));\
;

#define fpunit_exec_exec__adder_11_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pSUM)), &(SUM));\
bit_vector_cast_to_bit_vector(0, &((*__pCOUT)), &(COUT));\
;

#define fpunit_exec_exec__adder_18_inner_inarg_prep_macro__ __declare_static_bit_vector(A,16);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,16);\
bit_vector_cast_to_bit_vector(0, &(B), &((*__pB)));\
__declare_static_bit_vector(CIN,1);\
bit_vector_cast_to_bit_vector(0, &(CIN), &((*__pCIN)));\
__declare_static_bit_vector(SUM,16);\
__declare_static_bit_vector(COUT,1);\
__declare_static_bit_vector(operand_A,18);\
__declare_static_bit_vector(operand_B,18);\
__declare_static_bit_vector(add_result,18);\

#define fpunit_exec_exec__adder_18_assign_stmt_2601_c_macro_ __declare_static_bit_vector(CONCAT_u1_u17_2598,17);\
__declare_static_bit_vector(CONCAT_u17_u18_2600,18);\
bit_vector_concatenate( &(ZERO_1), &(A), &(CONCAT_u1_u17_2598));\
bit_vector_concatenate( &(CONCAT_u1_u17_2598), &(CIN), &(CONCAT_u17_u18_2600));\
bit_vector_cast_to_bit_vector(0, &(operand_A), &(CONCAT_u17_u18_2600));\
;

#define fpunit_exec_exec__adder_18_assign_stmt_2608_c_macro_ __declare_static_bit_vector(CONCAT_u1_u17_2605,17);\
__declare_static_bit_vector(CONCAT_u17_u18_2607,18);\
bit_vector_concatenate( &(ZERO_1), &(B), &(CONCAT_u1_u17_2605));\
bit_vector_concatenate( &(CONCAT_u1_u17_2605), &(CIN), &(CONCAT_u17_u18_2607));\
bit_vector_cast_to_bit_vector(0, &(operand_B), &(CONCAT_u17_u18_2607));\
;

#define fpunit_exec_exec__adder_18_assign_stmt_2613_c_macro_ __declare_static_bit_vector(ADD_u18_u18_2612,18);\
bit_vector_plus( &(operand_A), &(operand_B), &(ADD_u18_u18_2612));\
bit_vector_cast_to_bit_vector(0, &(add_result), &(ADD_u18_u18_2612));\
;

#define fpunit_exec_exec__adder_18_assign_stmt_2617_c_macro_ __declare_static_bit_vector(slice_2616,16);\
bit_vector_slice(&(add_result), &(slice_2616), 1);\
bit_vector_cast_to_bit_vector(0, &(SUM), &(slice_2616));\
;

#define fpunit_exec_exec__adder_18_assign_stmt_2622_c_macro_ __declare_static_bit_vector(konst_2620,18);\
bit_vector_clear(&konst_2620);\
konst_2620.val.byte_array[0] = 17;\
__declare_static_bit_vector(BITSEL_u18_u1_2621,1);\
bit_vector_clear(&konst_2620);\
konst_2620.val.byte_array[0] = 17;\
bit_vector_bitsel( &(add_result), &(konst_2620), &(BITSEL_u18_u1_2621));\
bit_vector_cast_to_bit_vector(0, &(COUT), &(BITSEL_u18_u1_2621));\
;

#define fpunit_exec_exec__adder_18_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pSUM)), &(SUM));\
bit_vector_cast_to_bit_vector(0, &((*__pCOUT)), &(COUT));\
;

#define fpunit_exec_exec__adder_19_inner_inarg_prep_macro__ __declare_static_bit_vector(A,17);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,17);\
bit_vector_cast_to_bit_vector(0, &(B), &((*__pB)));\
__declare_static_bit_vector(CIN,1);\
bit_vector_cast_to_bit_vector(0, &(CIN), &((*__pCIN)));\
__declare_static_bit_vector(SUM,17);\
__declare_static_bit_vector(COUT,1);\
__declare_static_bit_vector(operand_A,19);\
__declare_static_bit_vector(operand_B,19);\
__declare_static_bit_vector(add_result,19);\

#define fpunit_exec_exec__adder_19_assign_stmt_2636_c_macro_ __declare_static_bit_vector(CONCAT_u1_u18_2633,18);\
__declare_static_bit_vector(CONCAT_u18_u19_2635,19);\
bit_vector_concatenate( &(ZERO_1), &(A), &(CONCAT_u1_u18_2633));\
bit_vector_concatenate( &(CONCAT_u1_u18_2633), &(CIN), &(CONCAT_u18_u19_2635));\
bit_vector_cast_to_bit_vector(0, &(operand_A), &(CONCAT_u18_u19_2635));\
;

#define fpunit_exec_exec__adder_19_assign_stmt_2643_c_macro_ __declare_static_bit_vector(CONCAT_u1_u18_2640,18);\
__declare_static_bit_vector(CONCAT_u18_u19_2642,19);\
bit_vector_concatenate( &(ZERO_1), &(B), &(CONCAT_u1_u18_2640));\
bit_vector_concatenate( &(CONCAT_u1_u18_2640), &(CIN), &(CONCAT_u18_u19_2642));\
bit_vector_cast_to_bit_vector(0, &(operand_B), &(CONCAT_u18_u19_2642));\
;

#define fpunit_exec_exec__adder_19_assign_stmt_2648_c_macro_ __declare_static_bit_vector(ADD_u19_u19_2647,19);\
bit_vector_plus( &(operand_A), &(operand_B), &(ADD_u19_u19_2647));\
bit_vector_cast_to_bit_vector(0, &(add_result), &(ADD_u19_u19_2647));\
;

#define fpunit_exec_exec__adder_19_assign_stmt_2652_c_macro_ __declare_static_bit_vector(slice_2651,17);\
bit_vector_slice(&(add_result), &(slice_2651), 1);\
bit_vector_cast_to_bit_vector(0, &(SUM), &(slice_2651));\
;

#define fpunit_exec_exec__adder_19_assign_stmt_2657_c_macro_ __declare_static_bit_vector(konst_2655,19);\
bit_vector_clear(&konst_2655);\
konst_2655.val.byte_array[0] = 18;\
__declare_static_bit_vector(BITSEL_u19_u1_2656,1);\
bit_vector_clear(&konst_2655);\
konst_2655.val.byte_array[0] = 18;\
bit_vector_bitsel( &(add_result), &(konst_2655), &(BITSEL_u19_u1_2656));\
bit_vector_cast_to_bit_vector(0, &(COUT), &(BITSEL_u19_u1_2656));\
;

#define fpunit_exec_exec__adder_19_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pSUM)), &(SUM));\
bit_vector_cast_to_bit_vector(0, &((*__pCOUT)), &(COUT));\
;

#define fpunit_exec_exec__adder_35_with_carry_inner_inarg_prep_macro__ __declare_static_bit_vector(A,35);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,35);\
bit_vector_cast_to_bit_vector(0, &(B), &((*__pB)));\
__declare_static_bit_vector(CIN,1);\
bit_vector_cast_to_bit_vector(0, &(CIN), &((*__pCIN)));\
__declare_static_bit_vector(SUM,35);\
__declare_static_bit_vector(COUT,1);\
__declare_static_bit_vector(S37,37);\

#define fpunit_exec_exec__adder_35_with_carry_assign_stmt_2678_c_macro_ __declare_static_bit_vector(CONCAT_u1_u36_2669,36);\
__declare_static_bit_vector(CONCAT_u36_u37_2671,37);\
__declare_static_bit_vector(CONCAT_u1_u36_2674,36);\
__declare_static_bit_vector(CONCAT_u36_u37_2676,37);\
__declare_static_bit_vector(ADD_u37_u37_2677,37);\
bit_vector_concatenate( &(ZERO_1), &(A), &(CONCAT_u1_u36_2669));\
bit_vector_concatenate( &(CONCAT_u1_u36_2669), &(CIN), &(CONCAT_u36_u37_2671));\
bit_vector_concatenate( &(ZERO_1), &(B), &(CONCAT_u1_u36_2674));\
bit_vector_concatenate( &(CONCAT_u1_u36_2674), &(CIN), &(CONCAT_u36_u37_2676));\
bit_vector_plus( &(CONCAT_u36_u37_2671), &(CONCAT_u36_u37_2676), &(ADD_u37_u37_2677));\
bit_vector_cast_to_bit_vector(0, &(S37), &(ADD_u37_u37_2677));\
;

#define fpunit_exec_exec__adder_35_with_carry_assign_stmt_2682_c_macro_ __declare_static_bit_vector(slice_2681,35);\
bit_vector_slice(&(S37), &(slice_2681), 1);\
bit_vector_cast_to_bit_vector(0, &(SUM), &(slice_2681));\
;

#define fpunit_exec_exec__adder_35_with_carry_assign_stmt_2687_c_macro_ __declare_static_bit_vector(konst_2685,37);\
bit_vector_clear(&konst_2685);\
konst_2685.val.byte_array[0] = 36;\
__declare_static_bit_vector(BITSEL_u37_u1_2686,1);\
bit_vector_clear(&konst_2685);\
konst_2685.val.byte_array[0] = 36;\
bit_vector_bitsel( &(S37), &(konst_2685), &(BITSEL_u37_u1_2686));\
bit_vector_cast_to_bit_vector(0, &(COUT), &(BITSEL_u37_u1_2686));\
;

#define fpunit_exec_exec__adder_35_with_carry_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pSUM)), &(SUM));\
bit_vector_cast_to_bit_vector(0, &((*__pCOUT)), &(COUT));\
;

#define fpunit_exec_exec__adder_58_with_carry_inner_inarg_prep_macro__ __declare_static_bit_vector(A,58);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,58);\
bit_vector_cast_to_bit_vector(0, &(B), &((*__pB)));\
__declare_static_bit_vector(CIN,1);\
bit_vector_cast_to_bit_vector(0, &(CIN), &((*__pCIN)));\
__declare_static_bit_vector(SUM,58);\
__declare_static_bit_vector(COUT,1);\
__declare_static_bit_vector(A0,16);\
__declare_static_bit_vector(A1,16);\
__declare_static_bit_vector(A2,16);\
__declare_static_bit_vector(A3,10);\
__declare_static_bit_vector(B0,16);\
__declare_static_bit_vector(B1,16);\
__declare_static_bit_vector(B2,16);\
__declare_static_bit_vector(B3,10);\
__declare_static_bit_vector(CIN0_S0,16);\
__declare_static_bit_vector(CIN0_C0,1);\
__declare_static_bit_vector(CIN0_S1,16);\
__declare_static_bit_vector(CIN0_C1,1);\
__declare_static_bit_vector(CIN1_S1,16);\
__declare_static_bit_vector(CIN1_C1,1);\
__declare_static_bit_vector(CIN0_S2,16);\
__declare_static_bit_vector(CIN0_C2,1);\
__declare_static_bit_vector(CIN1_S2,16);\
__declare_static_bit_vector(CIN1_C2,1);\
__declare_static_bit_vector(CIN0_S3,10);\
__declare_static_bit_vector(CIN0_C3,1);\
__declare_static_bit_vector(CIN1_S3,10);\
__declare_static_bit_vector(CIN1_C3,1);\
__declare_static_bit_vector(sum_0,16);\
__declare_static_bit_vector(carry_0,1);\
__declare_static_bit_vector(sum_1,16);\
__declare_static_bit_vector(carry_1,1);\
__declare_static_bit_vector(sum_2,16);\
__declare_static_bit_vector(carry_2,1);\
__declare_static_bit_vector(sum_3,10);\
__declare_static_bit_vector(carry_3,1);\

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2698_c_macro_ __declare_static_bit_vector(slice_2697,16);\
bit_vector_slice(&(A), &(slice_2697), 0);\
bit_vector_cast_to_bit_vector(0, &(A0), &(slice_2697));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2702_c_macro_ __declare_static_bit_vector(slice_2701,16);\
bit_vector_slice(&(A), &(slice_2701), 16);\
bit_vector_cast_to_bit_vector(0, &(A1), &(slice_2701));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2706_c_macro_ __declare_static_bit_vector(slice_2705,16);\
bit_vector_slice(&(A), &(slice_2705), 32);\
bit_vector_cast_to_bit_vector(0, &(A2), &(slice_2705));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2710_c_macro_ __declare_static_bit_vector(slice_2709,10);\
bit_vector_slice(&(A), &(slice_2709), 48);\
bit_vector_cast_to_bit_vector(0, &(A3), &(slice_2709));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2714_c_macro_ __declare_static_bit_vector(slice_2713,16);\
bit_vector_slice(&(B), &(slice_2713), 0);\
bit_vector_cast_to_bit_vector(0, &(B0), &(slice_2713));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2718_c_macro_ __declare_static_bit_vector(slice_2717,16);\
bit_vector_slice(&(B), &(slice_2717), 16);\
bit_vector_cast_to_bit_vector(0, &(B1), &(slice_2717));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2722_c_macro_ __declare_static_bit_vector(slice_2721,16);\
bit_vector_slice(&(B), &(slice_2721), 32);\
bit_vector_cast_to_bit_vector(0, &(B2), &(slice_2721));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2726_c_macro_ __declare_static_bit_vector(slice_2725,10);\
bit_vector_slice(&(B), &(slice_2725), 48);\
bit_vector_cast_to_bit_vector(0, &(B3), &(slice_2725));\
;

#define fpunit_exec_exec__adder_58_with_carry_call_stmt_2732_c_macro_ _fpunit_exec_exec_adder_18_( &(A0),  &(B0),  &(CIN), &(CIN0_S0), &(CIN0_C0));\
;

#define fpunit_exec_exec__adder_58_with_carry_call_stmt_2738_c_macro_ _fpunit_exec_exec_adder_18_( &(A1),  &(B1),  &(ZERO_1), &(CIN0_S1), &(CIN0_C1));\
;

#define fpunit_exec_exec__adder_58_with_carry_call_stmt_2744_c_macro_ _fpunit_exec_exec_adder_18_( &(A1),  &(B1),  &(ONE_1), &(CIN1_S1), &(CIN1_C1));\
;

#define fpunit_exec_exec__adder_58_with_carry_call_stmt_2750_c_macro_ _fpunit_exec_exec_adder_18_( &(A2),  &(B2),  &(ZERO_1), &(CIN0_S2), &(CIN0_C2));\
;

#define fpunit_exec_exec__adder_58_with_carry_call_stmt_2756_c_macro_ _fpunit_exec_exec_adder_18_( &(A2),  &(B2),  &(ONE_1), &(CIN1_S2), &(CIN1_C2));\
;

#define fpunit_exec_exec__adder_58_with_carry_call_stmt_2762_c_macro_ _fpunit_exec_exec_adder_11_( &(A3),  &(B3),  &(ZERO_1), &(CIN0_S3), &(CIN0_C3));\
;

#define fpunit_exec_exec__adder_58_with_carry_call_stmt_2768_c_macro_ _fpunit_exec_exec_adder_11_( &(A3),  &(B3),  &(ONE_1), &(CIN1_S3), &(CIN1_C3));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2771_c_macro_ bit_vector_cast_to_bit_vector(0, &(sum_0), &(CIN0_S0));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2774_c_macro_ bit_vector_cast_to_bit_vector(0, &(carry_0), &(CIN0_C0));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2780_c_macro_ __declare_static_bit_vector(MUX_2779,16);\
if (has_undefined_bit(&carry_0)) {fprintf(stderr, "Error: variable carry_0 has undefined value (%s) at test point.\n", to_string(&carry_0));assert(0);} \
if(bit_vector_to_uint64(0, &carry_0)){bit_vector_cast_to_bit_vector(0, &(MUX_2779), &(CIN1_S1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2779), &(CIN0_S1));\
}bit_vector_cast_to_bit_vector(0, &(sum_1), &(MUX_2779));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2786_c_macro_ __declare_static_bit_vector(MUX_2785,1);\
if (has_undefined_bit(&carry_0)) {fprintf(stderr, "Error: variable carry_0 has undefined value (%s) at test point.\n", to_string(&carry_0));assert(0);} \
if(bit_vector_to_uint64(0, &carry_0)){bit_vector_cast_to_bit_vector(0, &(MUX_2785), &(CIN1_C1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2785), &(CIN0_C1));\
}bit_vector_cast_to_bit_vector(0, &(carry_1), &(MUX_2785));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2792_c_macro_ __declare_static_bit_vector(MUX_2791,16);\
if (has_undefined_bit(&carry_1)) {fprintf(stderr, "Error: variable carry_1 has undefined value (%s) at test point.\n", to_string(&carry_1));assert(0);} \
if(bit_vector_to_uint64(0, &carry_1)){bit_vector_cast_to_bit_vector(0, &(MUX_2791), &(CIN1_S2));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2791), &(CIN0_S2));\
}bit_vector_cast_to_bit_vector(0, &(sum_2), &(MUX_2791));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2798_c_macro_ __declare_static_bit_vector(MUX_2797,1);\
if (has_undefined_bit(&carry_1)) {fprintf(stderr, "Error: variable carry_1 has undefined value (%s) at test point.\n", to_string(&carry_1));assert(0);} \
if(bit_vector_to_uint64(0, &carry_1)){bit_vector_cast_to_bit_vector(0, &(MUX_2797), &(CIN1_C2));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2797), &(CIN0_C2));\
}bit_vector_cast_to_bit_vector(0, &(carry_2), &(MUX_2797));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2804_c_macro_ __declare_static_bit_vector(MUX_2803,10);\
if (has_undefined_bit(&carry_2)) {fprintf(stderr, "Error: variable carry_2 has undefined value (%s) at test point.\n", to_string(&carry_2));assert(0);} \
if(bit_vector_to_uint64(0, &carry_2)){bit_vector_cast_to_bit_vector(0, &(MUX_2803), &(CIN1_S3));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2803), &(CIN0_S3));\
}bit_vector_cast_to_bit_vector(0, &(sum_3), &(MUX_2803));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2810_c_macro_ __declare_static_bit_vector(MUX_2809,1);\
if (has_undefined_bit(&carry_2)) {fprintf(stderr, "Error: variable carry_2 has undefined value (%s) at test point.\n", to_string(&carry_2));assert(0);} \
if(bit_vector_to_uint64(0, &carry_2)){bit_vector_cast_to_bit_vector(0, &(MUX_2809), &(CIN1_C3));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2809), &(CIN0_C3));\
}bit_vector_cast_to_bit_vector(0, &(carry_3), &(MUX_2809));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2819_c_macro_ __declare_static_bit_vector(CONCAT_u10_u26_2814,26);\
__declare_static_bit_vector(CONCAT_u16_u32_2817,32);\
__declare_static_bit_vector(CONCAT_u26_u58_2818,58);\
bit_vector_concatenate( &(sum_3), &(sum_2), &(CONCAT_u10_u26_2814));\
bit_vector_concatenate( &(sum_1), &(sum_0), &(CONCAT_u16_u32_2817));\
bit_vector_concatenate( &(CONCAT_u10_u26_2814), &(CONCAT_u16_u32_2817), &(CONCAT_u26_u58_2818));\
bit_vector_cast_to_bit_vector(0, &(SUM), &(CONCAT_u26_u58_2818));\
;

#define fpunit_exec_exec__adder_58_with_carry_assign_stmt_2822_c_macro_ bit_vector_cast_to_bit_vector(0, &(COUT), &(carry_3));\
;

#define fpunit_exec_exec__adder_58_with_carry_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pSUM)), &(SUM));\
bit_vector_cast_to_bit_vector(0, &((*__pCOUT)), &(COUT));\
;

#define fpunit_exec_exec__adder_64_with_carry_inner_inarg_prep_macro__ __declare_static_bit_vector(A,64);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,64);\
bit_vector_cast_to_bit_vector(0, &(B), &((*__pB)));\
__declare_static_bit_vector(CIN,1);\
bit_vector_cast_to_bit_vector(0, &(CIN), &((*__pCIN)));\
__declare_static_bit_vector(SUM,64);\
__declare_static_bit_vector(COUT,1);\
__declare_static_bit_vector(A0,16);\
__declare_static_bit_vector(A1,16);\
__declare_static_bit_vector(A2,16);\
__declare_static_bit_vector(A3,16);\
__declare_static_bit_vector(B0,16);\
__declare_static_bit_vector(B1,16);\
__declare_static_bit_vector(B2,16);\
__declare_static_bit_vector(B3,16);\
__declare_static_bit_vector(CIN0_S0,16);\
__declare_static_bit_vector(CIN0_C0,1);\
__declare_static_bit_vector(CIN0_S1,16);\
__declare_static_bit_vector(CIN0_C1,1);\
__declare_static_bit_vector(CIN1_S1,16);\
__declare_static_bit_vector(CIN1_C1,1);\
__declare_static_bit_vector(CIN0_S2,16);\
__declare_static_bit_vector(CIN0_C2,1);\
__declare_static_bit_vector(CIN1_S2,16);\
__declare_static_bit_vector(CIN1_C2,1);\
__declare_static_bit_vector(CIN0_S3,16);\
__declare_static_bit_vector(CIN0_C3,1);\
__declare_static_bit_vector(CIN1_S3,16);\
__declare_static_bit_vector(CIN1_C3,1);\
__declare_static_bit_vector(sum_0,16);\
__declare_static_bit_vector(carry_0,1);\
__declare_static_bit_vector(sum_1,16);\
__declare_static_bit_vector(carry_1,1);\
__declare_static_bit_vector(sum_2,16);\
__declare_static_bit_vector(carry_2,1);\
__declare_static_bit_vector(sum_3,16);\
__declare_static_bit_vector(carry_3,1);\

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2833_c_macro_ __declare_static_bit_vector(slice_2832,16);\
bit_vector_slice(&(A), &(slice_2832), 0);\
bit_vector_cast_to_bit_vector(0, &(A0), &(slice_2832));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2837_c_macro_ __declare_static_bit_vector(slice_2836,16);\
bit_vector_slice(&(A), &(slice_2836), 16);\
bit_vector_cast_to_bit_vector(0, &(A1), &(slice_2836));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2841_c_macro_ __declare_static_bit_vector(slice_2840,16);\
bit_vector_slice(&(A), &(slice_2840), 32);\
bit_vector_cast_to_bit_vector(0, &(A2), &(slice_2840));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2845_c_macro_ __declare_static_bit_vector(slice_2844,16);\
bit_vector_slice(&(A), &(slice_2844), 48);\
bit_vector_cast_to_bit_vector(0, &(A3), &(slice_2844));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2849_c_macro_ __declare_static_bit_vector(slice_2848,16);\
bit_vector_slice(&(B), &(slice_2848), 0);\
bit_vector_cast_to_bit_vector(0, &(B0), &(slice_2848));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2853_c_macro_ __declare_static_bit_vector(slice_2852,16);\
bit_vector_slice(&(B), &(slice_2852), 16);\
bit_vector_cast_to_bit_vector(0, &(B1), &(slice_2852));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2857_c_macro_ __declare_static_bit_vector(slice_2856,16);\
bit_vector_slice(&(B), &(slice_2856), 32);\
bit_vector_cast_to_bit_vector(0, &(B2), &(slice_2856));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2861_c_macro_ __declare_static_bit_vector(slice_2860,16);\
bit_vector_slice(&(B), &(slice_2860), 48);\
bit_vector_cast_to_bit_vector(0, &(B3), &(slice_2860));\
;

#define fpunit_exec_exec__adder_64_with_carry_call_stmt_2867_c_macro_ _fpunit_exec_exec_adder_18_( &(A0),  &(B0),  &(CIN), &(CIN0_S0), &(CIN0_C0));\
;

#define fpunit_exec_exec__adder_64_with_carry_call_stmt_2873_c_macro_ _fpunit_exec_exec_adder_18_( &(A1),  &(B1),  &(ZERO_1), &(CIN0_S1), &(CIN0_C1));\
;

#define fpunit_exec_exec__adder_64_with_carry_call_stmt_2879_c_macro_ _fpunit_exec_exec_adder_18_( &(A1),  &(B1),  &(ONE_1), &(CIN1_S1), &(CIN1_C1));\
;

#define fpunit_exec_exec__adder_64_with_carry_call_stmt_2885_c_macro_ _fpunit_exec_exec_adder_18_( &(A2),  &(B2),  &(ZERO_1), &(CIN0_S2), &(CIN0_C2));\
;

#define fpunit_exec_exec__adder_64_with_carry_call_stmt_2891_c_macro_ _fpunit_exec_exec_adder_18_( &(A2),  &(B2),  &(ONE_1), &(CIN1_S2), &(CIN1_C2));\
;

#define fpunit_exec_exec__adder_64_with_carry_call_stmt_2897_c_macro_ _fpunit_exec_exec_adder_18_( &(A3),  &(B3),  &(ZERO_1), &(CIN0_S3), &(CIN0_C3));\
;

#define fpunit_exec_exec__adder_64_with_carry_call_stmt_2903_c_macro_ _fpunit_exec_exec_adder_18_( &(A3),  &(B3),  &(ONE_1), &(CIN1_S3), &(CIN1_C3));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2906_c_macro_ bit_vector_cast_to_bit_vector(0, &(sum_0), &(CIN0_S0));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2909_c_macro_ bit_vector_cast_to_bit_vector(0, &(carry_0), &(CIN0_C0));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2915_c_macro_ __declare_static_bit_vector(MUX_2914,16);\
if (has_undefined_bit(&carry_0)) {fprintf(stderr, "Error: variable carry_0 has undefined value (%s) at test point.\n", to_string(&carry_0));assert(0);} \
if(bit_vector_to_uint64(0, &carry_0)){bit_vector_cast_to_bit_vector(0, &(MUX_2914), &(CIN1_S1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2914), &(CIN0_S1));\
}bit_vector_cast_to_bit_vector(0, &(sum_1), &(MUX_2914));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2921_c_macro_ __declare_static_bit_vector(MUX_2920,1);\
if (has_undefined_bit(&carry_0)) {fprintf(stderr, "Error: variable carry_0 has undefined value (%s) at test point.\n", to_string(&carry_0));assert(0);} \
if(bit_vector_to_uint64(0, &carry_0)){bit_vector_cast_to_bit_vector(0, &(MUX_2920), &(CIN1_C1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2920), &(CIN0_C1));\
}bit_vector_cast_to_bit_vector(0, &(carry_1), &(MUX_2920));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2927_c_macro_ __declare_static_bit_vector(MUX_2926,16);\
if (has_undefined_bit(&carry_1)) {fprintf(stderr, "Error: variable carry_1 has undefined value (%s) at test point.\n", to_string(&carry_1));assert(0);} \
if(bit_vector_to_uint64(0, &carry_1)){bit_vector_cast_to_bit_vector(0, &(MUX_2926), &(CIN1_S2));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2926), &(CIN0_S2));\
}bit_vector_cast_to_bit_vector(0, &(sum_2), &(MUX_2926));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2933_c_macro_ __declare_static_bit_vector(MUX_2932,1);\
if (has_undefined_bit(&carry_1)) {fprintf(stderr, "Error: variable carry_1 has undefined value (%s) at test point.\n", to_string(&carry_1));assert(0);} \
if(bit_vector_to_uint64(0, &carry_1)){bit_vector_cast_to_bit_vector(0, &(MUX_2932), &(CIN1_C2));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2932), &(CIN0_C2));\
}bit_vector_cast_to_bit_vector(0, &(carry_2), &(MUX_2932));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2939_c_macro_ __declare_static_bit_vector(MUX_2938,16);\
if (has_undefined_bit(&carry_2)) {fprintf(stderr, "Error: variable carry_2 has undefined value (%s) at test point.\n", to_string(&carry_2));assert(0);} \
if(bit_vector_to_uint64(0, &carry_2)){bit_vector_cast_to_bit_vector(0, &(MUX_2938), &(CIN1_S3));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2938), &(CIN0_S3));\
}bit_vector_cast_to_bit_vector(0, &(sum_3), &(MUX_2938));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2945_c_macro_ __declare_static_bit_vector(MUX_2944,1);\
if (has_undefined_bit(&carry_2)) {fprintf(stderr, "Error: variable carry_2 has undefined value (%s) at test point.\n", to_string(&carry_2));assert(0);} \
if(bit_vector_to_uint64(0, &carry_2)){bit_vector_cast_to_bit_vector(0, &(MUX_2944), &(CIN1_C3));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2944), &(CIN0_C3));\
}bit_vector_cast_to_bit_vector(0, &(carry_3), &(MUX_2944));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2954_c_macro_ __declare_static_bit_vector(CONCAT_u16_u32_2949,32);\
__declare_static_bit_vector(CONCAT_u16_u32_2952,32);\
__declare_static_bit_vector(CONCAT_u32_u64_2953,64);\
bit_vector_concatenate( &(sum_3), &(sum_2), &(CONCAT_u16_u32_2949));\
bit_vector_concatenate( &(sum_1), &(sum_0), &(CONCAT_u16_u32_2952));\
bit_vector_concatenate( &(CONCAT_u16_u32_2949), &(CONCAT_u16_u32_2952), &(CONCAT_u32_u64_2953));\
bit_vector_cast_to_bit_vector(0, &(SUM), &(CONCAT_u32_u64_2953));\
;

#define fpunit_exec_exec__adder_64_with_carry_assign_stmt_2957_c_macro_ bit_vector_cast_to_bit_vector(0, &(COUT), &(carry_3));\
;

#define fpunit_exec_exec__adder_64_with_carry_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pSUM)), &(SUM));\
bit_vector_cast_to_bit_vector(0, &((*__pCOUT)), &(COUT));\
;

#define fpunit_exec_exec__adder_65_inner_inarg_prep_macro__ __declare_static_bit_vector(A,65);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,65);\
bit_vector_cast_to_bit_vector(0, &(B), &((*__pB)));\
__declare_static_bit_vector(SUM,65);\
__declare_static_bit_vector(A0,16);\
__declare_static_bit_vector(A1,16);\
__declare_static_bit_vector(A2,16);\
__declare_static_bit_vector(A3,17);\
__declare_static_bit_vector(B0,16);\
__declare_static_bit_vector(B1,16);\
__declare_static_bit_vector(B2,16);\
__declare_static_bit_vector(B3,17);\
__declare_static_bit_vector(CIN0_S0,16);\
__declare_static_bit_vector(CIN0_C0,1);\
__declare_static_bit_vector(CIN0_S1,16);\
__declare_static_bit_vector(CIN0_C1,1);\
__declare_static_bit_vector(CIN1_S1,16);\
__declare_static_bit_vector(CIN1_C1,1);\
__declare_static_bit_vector(CIN0_S2,16);\
__declare_static_bit_vector(CIN0_C2,1);\
__declare_static_bit_vector(CIN1_S2,16);\
__declare_static_bit_vector(CIN1_C2,1);\
__declare_static_bit_vector(CIN0_S3,17);\
__declare_static_bit_vector(CIN0_C3,1);\
__declare_static_bit_vector(CIN1_S3,17);\
__declare_static_bit_vector(CIN1_C3,1);\
__declare_static_bit_vector(sum_0,16);\
__declare_static_bit_vector(carry_0,1);\
__declare_static_bit_vector(sum_1,16);\
__declare_static_bit_vector(carry_1,1);\
__declare_static_bit_vector(sum_2,16);\
__declare_static_bit_vector(carry_2,1);\
__declare_static_bit_vector(sum_3,17);\

#define fpunit_exec_exec__adder_65_assign_stmt_2966_c_macro_ __declare_static_bit_vector(slice_2965,16);\
bit_vector_slice(&(A), &(slice_2965), 0);\
bit_vector_cast_to_bit_vector(0, &(A0), &(slice_2965));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_2970_c_macro_ __declare_static_bit_vector(slice_2969,16);\
bit_vector_slice(&(A), &(slice_2969), 16);\
bit_vector_cast_to_bit_vector(0, &(A1), &(slice_2969));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_2974_c_macro_ __declare_static_bit_vector(slice_2973,16);\
bit_vector_slice(&(A), &(slice_2973), 32);\
bit_vector_cast_to_bit_vector(0, &(A2), &(slice_2973));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_2978_c_macro_ __declare_static_bit_vector(slice_2977,17);\
bit_vector_slice(&(A), &(slice_2977), 48);\
bit_vector_cast_to_bit_vector(0, &(A3), &(slice_2977));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_2982_c_macro_ __declare_static_bit_vector(slice_2981,16);\
bit_vector_slice(&(B), &(slice_2981), 0);\
bit_vector_cast_to_bit_vector(0, &(B0), &(slice_2981));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_2986_c_macro_ __declare_static_bit_vector(slice_2985,16);\
bit_vector_slice(&(B), &(slice_2985), 16);\
bit_vector_cast_to_bit_vector(0, &(B1), &(slice_2985));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_2990_c_macro_ __declare_static_bit_vector(slice_2989,16);\
bit_vector_slice(&(B), &(slice_2989), 32);\
bit_vector_cast_to_bit_vector(0, &(B2), &(slice_2989));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_2994_c_macro_ __declare_static_bit_vector(slice_2993,17);\
bit_vector_slice(&(B), &(slice_2993), 48);\
bit_vector_cast_to_bit_vector(0, &(B3), &(slice_2993));\
;

#define fpunit_exec_exec__adder_65_call_stmt_3000_c_macro_ _fpunit_exec_exec_adder_18_( &(A0),  &(B0),  &(ZERO_1), &(CIN0_S0), &(CIN0_C0));\
;

#define fpunit_exec_exec__adder_65_call_stmt_3006_c_macro_ _fpunit_exec_exec_adder_18_( &(A1),  &(B1),  &(ZERO_1), &(CIN0_S1), &(CIN0_C1));\
;

#define fpunit_exec_exec__adder_65_call_stmt_3012_c_macro_ _fpunit_exec_exec_adder_18_( &(A1),  &(B1),  &(ONE_1), &(CIN1_S1), &(CIN1_C1));\
;

#define fpunit_exec_exec__adder_65_call_stmt_3018_c_macro_ _fpunit_exec_exec_adder_18_( &(A2),  &(B2),  &(ZERO_1), &(CIN0_S2), &(CIN0_C2));\
;

#define fpunit_exec_exec__adder_65_call_stmt_3024_c_macro_ _fpunit_exec_exec_adder_18_( &(A2),  &(B2),  &(ONE_1), &(CIN1_S2), &(CIN1_C2));\
;

#define fpunit_exec_exec__adder_65_call_stmt_3030_c_macro_ _fpunit_exec_exec_adder_19_( &(A3),  &(B3),  &(ZERO_1), &(CIN0_S3), &(CIN0_C3));\
;

#define fpunit_exec_exec__adder_65_call_stmt_3036_c_macro_ _fpunit_exec_exec_adder_19_( &(A3),  &(B3),  &(ONE_1), &(CIN1_S3), &(CIN1_C3));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_3039_c_macro_ bit_vector_cast_to_bit_vector(0, &(sum_0), &(CIN0_S0));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_3042_c_macro_ bit_vector_cast_to_bit_vector(0, &(carry_0), &(CIN0_C0));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_3048_c_macro_ __declare_static_bit_vector(MUX_3047,16);\
if (has_undefined_bit(&carry_0)) {fprintf(stderr, "Error: variable carry_0 has undefined value (%s) at test point.\n", to_string(&carry_0));assert(0);} \
if(bit_vector_to_uint64(0, &carry_0)){bit_vector_cast_to_bit_vector(0, &(MUX_3047), &(CIN1_S1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3047), &(CIN0_S1));\
}bit_vector_cast_to_bit_vector(0, &(sum_1), &(MUX_3047));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_3054_c_macro_ __declare_static_bit_vector(MUX_3053,1);\
if (has_undefined_bit(&carry_0)) {fprintf(stderr, "Error: variable carry_0 has undefined value (%s) at test point.\n", to_string(&carry_0));assert(0);} \
if(bit_vector_to_uint64(0, &carry_0)){bit_vector_cast_to_bit_vector(0, &(MUX_3053), &(CIN1_C1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3053), &(CIN0_C1));\
}bit_vector_cast_to_bit_vector(0, &(carry_1), &(MUX_3053));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_3060_c_macro_ __declare_static_bit_vector(MUX_3059,16);\
if (has_undefined_bit(&carry_1)) {fprintf(stderr, "Error: variable carry_1 has undefined value (%s) at test point.\n", to_string(&carry_1));assert(0);} \
if(bit_vector_to_uint64(0, &carry_1)){bit_vector_cast_to_bit_vector(0, &(MUX_3059), &(CIN1_S2));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3059), &(CIN0_S2));\
}bit_vector_cast_to_bit_vector(0, &(sum_2), &(MUX_3059));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_3066_c_macro_ __declare_static_bit_vector(MUX_3065,1);\
if (has_undefined_bit(&carry_1)) {fprintf(stderr, "Error: variable carry_1 has undefined value (%s) at test point.\n", to_string(&carry_1));assert(0);} \
if(bit_vector_to_uint64(0, &carry_1)){bit_vector_cast_to_bit_vector(0, &(MUX_3065), &(CIN1_C2));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3065), &(CIN0_C2));\
}bit_vector_cast_to_bit_vector(0, &(carry_2), &(MUX_3065));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_3072_c_macro_ __declare_static_bit_vector(MUX_3071,17);\
if (has_undefined_bit(&carry_2)) {fprintf(stderr, "Error: variable carry_2 has undefined value (%s) at test point.\n", to_string(&carry_2));assert(0);} \
if(bit_vector_to_uint64(0, &carry_2)){bit_vector_cast_to_bit_vector(0, &(MUX_3071), &(CIN1_S3));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3071), &(CIN0_S3));\
}bit_vector_cast_to_bit_vector(0, &(sum_3), &(MUX_3071));\
;

#define fpunit_exec_exec__adder_65_assign_stmt_3081_c_macro_ __declare_static_bit_vector(CONCAT_u17_u33_3076,33);\
__declare_static_bit_vector(CONCAT_u16_u32_3079,32);\
__declare_static_bit_vector(CONCAT_u33_u65_3080,65);\
bit_vector_concatenate( &(sum_3), &(sum_2), &(CONCAT_u17_u33_3076));\
bit_vector_concatenate( &(sum_1), &(sum_0), &(CONCAT_u16_u32_3079));\
bit_vector_concatenate( &(CONCAT_u17_u33_3076), &(CONCAT_u16_u32_3079), &(CONCAT_u33_u65_3080));\
bit_vector_cast_to_bit_vector(0, &(SUM), &(CONCAT_u33_u65_3080));\
;

#define fpunit_exec_exec__adder_65_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pSUM)), &(SUM));\
;

#define fpunit_exec_exec__alignDivisorToDividend_inner_inarg_prep_macro__ __declare_static_bit_vector(DIVIDEND,64);\
bit_vector_cast_to_bit_vector(0, &(DIVIDEND), &((*__pDIVIDEND)));\
__declare_static_bit_vector(udivisor,64);\
bit_vector_cast_to_bit_vector(0, &(udivisor), &((*__pudivisor)));\
__declare_static_bit_vector(SSD,64);\
__declare_static_bit_vector(CCQ,64);\
__declare_static_bit_vector(l_DIVIDEND,6);\
__declare_static_bit_vector(z_DIVIDEND,1);\
__declare_static_bit_vector(l_udivisor,6);\
__declare_static_bit_vector(z_udivisor,1);\
__declare_static_bit_vector(shift_amount,6);\
__declare_static_bit_vector(shifted_udivisor,64);\
__declare_static_bit_vector(DIVIDEND_3479_delayed_1_0,64);\
__declare_static_bit_vector(l,1);\
__declare_static_bit_vector(g,1);\
__declare_static_bit_vector(e,1);\
__declare_static_bit_vector(shift_ok,1);\
__declare_static_bit_vector(type_cast_3492_3492_delayed_1_0,6);\
__declare_static_bit_vector(type_cast_3496_3496_delayed_1_0,6);\
__declare_static_bit_vector(ccq_shift_amount,6);\
__declare_static_bit_vector(ccq_v,64);\

#define fpunit_exec_exec__alignDivisorToDividend_call_stmt_3396_c_macro_ _fpunit_exec_exec_find_leftmost_64_( &(DIVIDEND), &(l_DIVIDEND), &(z_DIVIDEND));\
;

#define fpunit_exec_exec__alignDivisorToDividend_call_stmt_3400_c_macro_ _fpunit_exec_exec_find_leftmost_64_( &(udivisor), &(l_udivisor), &(z_udivisor));\
;

#define fpunit_exec_exec__alignDivisorToDividend_stmt_3404_c_macro_ __declare_static_bit_vector(konst_3402,64);\
bit_vector_clear(&konst_3402);\
__declare_static_bit_vector(UGT_u64_u1_3403,1);\
bit_vector_clear(&konst_3402);\
bit_vector_greater(0, &(udivisor), &(konst_3402), &(UGT_u64_u1_3403));\
if (!bit_vector_to_uint64(0, &UGT_u64_u1_3403)) {\
uint32_t fpunit_exec_exec__alignDivisorToDividend_stmt_3404_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]ASSERTION! iu_exec>\t%s\n",fpunit_exec_exec__alignDivisorToDividend_stmt_3404_c_macro___print_counter,"alignDivisorToDividend__udivisor_Is_Zero");release_file_print_lock(fpunit_exec_exec___report_log_file__);assert(0);};

#define fpunit_exec_exec__alignDivisorToDividend_assign_stmt_3409_c_macro_ __declare_static_bit_vector(SUB_u6_u6_3408,6);\
bit_vector_minus( &(l_DIVIDEND), &(l_udivisor), &(SUB_u6_u6_3408));\
bit_vector_cast_to_bit_vector(0, &(shift_amount), &(SUB_u6_u6_3408));\
;

#define fpunit_exec_exec__alignDivisorToDividend_assign_stmt_3415_c_macro_ __declare_static_bit_vector(type_cast_3413,64);\
__declare_static_bit_vector(SHL_u64_u64_3414,64);\
bit_vector_bitcast_to_bit_vector( &(type_cast_3413), &(shift_amount));\
bit_vector_shift_left(&(udivisor), &(type_cast_3413), &(SHL_u64_u64_3414));\
bit_vector_cast_to_bit_vector(0, &(shifted_udivisor), &(SHL_u64_u64_3414));\
;

#define fpunit_exec_exec__alignDivisorToDividend_assign_stmt_3418_c_macro_ bit_vector_cast_to_bit_vector(0, &(DIVIDEND_3479_delayed_1_0), &(DIVIDEND));\
;

#define fpunit_exec_exec__alignDivisorToDividend_call_stmt_3424_c_macro_ _fpunit_exec_exec_u_cmp_64_( &(shifted_udivisor),  &(DIVIDEND_3479_delayed_1_0), &(l), &(g), &(e));\
;

#define fpunit_exec_exec__alignDivisorToDividend_assign_stmt_3429_c_macro_ __declare_static_bit_vector(OR_u1_u1_3428,1);\
bit_vector_or(&(l), &(e), &(OR_u1_u1_3428));\
bit_vector_cast_to_bit_vector(0, &(shift_ok), &(OR_u1_u1_3428));\
;

#define fpunit_exec_exec__alignDivisorToDividend_assign_stmt_3433_c_macro_ __declare_static_bit_vector(type_cast_3432,6);\
bit_vector_bitcast_to_bit_vector( &(type_cast_3432), &(shift_amount));\
bit_vector_cast_to_bit_vector(0, &(type_cast_3492_3492_delayed_1_0), &(type_cast_3432));\
;

#define fpunit_exec_exec__alignDivisorToDividend_assign_stmt_3439_c_macro_ __declare_static_bit_vector(konst_3436,6);\
bit_vector_clear(&konst_3436);\
konst_3436.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_u6_u6_3437,6);\
__declare_static_bit_vector(type_cast_3438,6);\
bit_vector_clear(&konst_3436);\
konst_3436.val.byte_array[0] = 1;\
bit_vector_minus( &(shift_amount), &(konst_3436), &(SUB_u6_u6_3437));\
bit_vector_bitcast_to_bit_vector( &(type_cast_3438), &(SUB_u6_u6_3437));\
bit_vector_cast_to_bit_vector(0, &(type_cast_3496_3496_delayed_1_0), &(type_cast_3438));\
;

#define fpunit_exec_exec__alignDivisorToDividend_assign_stmt_3445_c_macro_ __declare_static_bit_vector(MUX_3444,6);\
if (has_undefined_bit(&shift_ok)) {fprintf(stderr, "Error: variable shift_ok has undefined value (%s) at test point.\n", to_string(&shift_ok));assert(0);} \
if(bit_vector_to_uint64(0, &shift_ok)){bit_vector_cast_to_bit_vector(0, &(MUX_3444), &(type_cast_3492_3492_delayed_1_0));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3444), &(type_cast_3496_3496_delayed_1_0));\
}bit_vector_cast_to_bit_vector(0, &(ccq_shift_amount), &(MUX_3444));\
;

#define fpunit_exec_exec__alignDivisorToDividend_call_stmt_3448_c_macro_ _fpunit_exec_exec_u_set_index_64_( &(ccq_shift_amount), &(ccq_v));\
;

#define fpunit_exec_exec__alignDivisorToDividend_assign_stmt_3451_c_macro_ bit_vector_cast_to_bit_vector(0, &(CCQ), &(ccq_v));\
;

#define fpunit_exec_exec__alignDivisorToDividend_assign_stmt_3460_c_macro_ __declare_static_bit_vector(slice_3457,63);\
__declare_static_bit_vector(CONCAT_u1_u64_3458,64);\
__declare_static_bit_vector(MUX_3459,64);\
if (has_undefined_bit(&shift_ok)) {fprintf(stderr, "Error: variable shift_ok has undefined value (%s) at test point.\n", to_string(&shift_ok));assert(0);} \
if(bit_vector_to_uint64(0, &shift_ok)){bit_vector_cast_to_bit_vector(0, &(MUX_3459), &(shifted_udivisor));\
}else {bit_vector_slice(&(shifted_udivisor), &(slice_3457), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_3457), &(CONCAT_u1_u64_3458));\
bit_vector_cast_to_bit_vector(0, &(MUX_3459), &(CONCAT_u1_u64_3458));\
}bit_vector_cast_to_bit_vector(0, &(SSD), &(MUX_3459));\
;

#define fpunit_exec_exec__alignDivisorToDividend_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pSSD)), &(SSD));\
bit_vector_cast_to_bit_vector(0, &((*__pCCQ)), &(CCQ));\
;

#define fpunit_exec_exec__alignDivisorToDividend_outer_arg_decl_macro__ __declare_static_bit_vector(__DIVIDEND, 64);\
bit_vector_assign_uint64(0, &__DIVIDEND, DIVIDEND);\
__declare_static_bit_vector(__udivisor, 64);\
bit_vector_assign_uint64(0, &__udivisor, udivisor);\
__declare_static_bit_vector(__SSD, 64);\
__declare_static_bit_vector(__CCQ, 64);\
;

#define fpunit_exec_exec__alignDivisorToDividend_outer_op_xfer_macro__  *SSD =  bit_vector_to_uint64(0, &__SSD);\
 *CCQ =  bit_vector_to_uint64(0, &__CCQ);\
;

#define fpunit_exec_exec__break_number_32_inner_inarg_prep_macro__ __declare_static_bit_vector(fp,32);\
bit_vector_cast_to_bit_vector(0, &(fp), &((*__pfp)));\
__declare_static_bit_vector(normal,1);\
bit_vector_cast_to_bit_vector(0, &(normal), &((*__pnormal)));\
__declare_static_bit_vector(denormal,1);\
bit_vector_cast_to_bit_vector(0, &(denormal), &((*__pdenormal)));\
__declare_static_bit_vector(qnan,1);\
bit_vector_cast_to_bit_vector(0, &(qnan), &((*__pqnan)));\
__declare_static_bit_vector(snan,1);\
bit_vector_cast_to_bit_vector(0, &(snan), &((*__psnan)));\
__declare_static_bit_vector(inf,1);\
bit_vector_cast_to_bit_vector(0, &(inf), &((*__pinf)));\
__declare_static_bit_vector(zero,1);\
bit_vector_cast_to_bit_vector(0, &(zero), &((*__pzero)));\
__declare_static_bit_vector(denormalize,1);\
bit_vector_cast_to_bit_vector(0, &(denormalize), &((*__pdenormalize)));\
__declare_static_bit_vector(fract,24);\
__declare_static_bit_vector(expon,10);\
__declare_static_bit_vector(fraction,23);\
__declare_static_bit_vector(exponent,8);\
__declare_static_bit_vector(exponent_signed,10);\
__declare_static_bit_vector(fract_temp,24);\
__declare_static_bit_vector(expo_base,10);\

#define fpunit_exec_exec__break_number_32_assign_stmt_3476_c_macro_ __declare_static_bit_vector(slice_3475,23);\
bit_vector_slice(&(fp), &(slice_3475), 0);\
bit_vector_cast_to_bit_vector(0, &(fraction), &(slice_3475));\
;

#define fpunit_exec_exec__break_number_32_assign_stmt_3480_c_macro_ __declare_static_bit_vector(slice_3479,8);\
bit_vector_slice(&(fp), &(slice_3479), 23);\
bit_vector_cast_to_bit_vector(0, &(exponent), &(slice_3479));\
;

#define fpunit_exec_exec__break_number_32_assign_stmt_3484_c_macro_ __declare_static_bit_vector(type_cast_3483,10);\
bit_vector_bitcast_to_bit_vector( &(type_cast_3483), &(exponent));\
bit_vector_cast_to_bit_vector(1, &(exponent_signed), &(type_cast_3483));\
;

#define fpunit_exec_exec__break_number_32_assign_stmt_3514_c_macro_ __declare_static_bit_vector(AND_u1_u1_3489,1);\
__declare_static_bit_vector(OR_u1_u1_3490,1);\
__declare_static_bit_vector(CONCAT_u1_u24_3493,24);\
__declare_static_bit_vector(konst_3494,24);\
bit_vector_clear(&konst_3494);\
__declare_static_bit_vector(MUX_3495,24);\
__declare_static_bit_vector(NOT_u1_u1_3498,1);\
__declare_static_bit_vector(AND_u1_u1_3499,1);\
__declare_static_bit_vector(OR_u1_u1_3501,1);\
__declare_static_bit_vector(OR_u1_u1_3503,1);\
__declare_static_bit_vector(OR_u1_u1_3506,1);\
__declare_static_bit_vector(OR_u1_u1_3507,1);\
__declare_static_bit_vector(CONCAT_u1_u24_3510,24);\
__declare_static_bit_vector(konst_3511,24);\
bit_vector_clear(&konst_3511);\
__declare_static_bit_vector(MUX_3512,24);\
__declare_static_bit_vector(OR_u24_u24_3513,24);\
bit_vector_and(&(denormal), &(denormalize), &(AND_u1_u1_3489));\
bit_vector_or(&(zero), &(AND_u1_u1_3489), &(OR_u1_u1_3490));\
if (has_undefined_bit(&OR_u1_u1_3490)) {fprintf(stderr, "Error: variable OR_u1_u1_3490 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_3490));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_3490)){bit_vector_concatenate( &(ZERO_1), &(fraction), &(CONCAT_u1_u24_3493));\
bit_vector_cast_to_bit_vector(0, &(MUX_3495), &(CONCAT_u1_u24_3493));\
}else {bit_vector_clear(&konst_3494);\
bit_vector_cast_to_bit_vector(0, &(MUX_3495), &(konst_3494));\
}bit_vector_not( &(denormalize), &(NOT_u1_u1_3498));\
bit_vector_and(&(denormal), &(NOT_u1_u1_3498), &(AND_u1_u1_3499));\
bit_vector_or(&(AND_u1_u1_3499), &(normal), &(OR_u1_u1_3501));\
bit_vector_or(&(OR_u1_u1_3501), &(inf), &(OR_u1_u1_3503));\
bit_vector_or(&(qnan), &(snan), &(OR_u1_u1_3506));\
bit_vector_or(&(OR_u1_u1_3503), &(OR_u1_u1_3506), &(OR_u1_u1_3507));\
if (has_undefined_bit(&OR_u1_u1_3507)) {fprintf(stderr, "Error: variable OR_u1_u1_3507 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_3507));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_3507)){bit_vector_concatenate( &(ONE_1), &(fraction), &(CONCAT_u1_u24_3510));\
bit_vector_cast_to_bit_vector(0, &(MUX_3512), &(CONCAT_u1_u24_3510));\
}else {bit_vector_clear(&konst_3511);\
bit_vector_cast_to_bit_vector(0, &(MUX_3512), &(konst_3511));\
}bit_vector_or(&(MUX_3495), &(MUX_3512), &(OR_u24_u24_3513));\
bit_vector_cast_to_bit_vector(0, &(fract_temp), &(OR_u24_u24_3513));\
;

#define fpunit_exec_exec__break_number_32_assign_stmt_3543_c_macro_ __declare_static_bit_vector(AND_u1_u1_3518,1);\
__declare_static_bit_vector(konst_3520,10);\
bit_vector_clear(&konst_3520);\
__declare_static_bit_vector(MUX_3521,10);\
__declare_static_bit_vector(NOT_u1_u1_3524,1);\
__declare_static_bit_vector(AND_u1_u1_3525,1);\
__declare_static_bit_vector(OR_u1_u1_3527,1);\
__declare_static_bit_vector(OR_u1_u1_3529,1);\
__declare_static_bit_vector(OR_u1_u1_3532,1);\
__declare_static_bit_vector(OR_u1_u1_3533,1);\
__declare_static_bit_vector(konst_3535,10);\
bit_vector_clear(&konst_3535);\
__declare_static_bit_vector(MUX_3536,10);\
__declare_static_bit_vector(OR_i10_i10_3537,10);\
__declare_static_bit_vector(konst_3540,10);\
bit_vector_clear(&konst_3540);\
__declare_static_bit_vector(MUX_3541,10);\
__declare_static_bit_vector(OR_i10_i10_3542,10);\
bit_vector_and(&(denormal), &(denormalize), &(AND_u1_u1_3518));\
if (has_undefined_bit(&AND_u1_u1_3518)) {fprintf(stderr, "Error: variable AND_u1_u1_3518 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_3518));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_3518)){bit_vector_cast_to_bit_vector(1, &(MUX_3521), &(expbase_126));\
}else {bit_vector_clear(&konst_3520);\
bit_vector_cast_to_bit_vector(1, &(MUX_3521), &(konst_3520));\
}bit_vector_not( &(denormalize), &(NOT_u1_u1_3524));\
bit_vector_and(&(denormal), &(NOT_u1_u1_3524), &(AND_u1_u1_3525));\
bit_vector_or(&(AND_u1_u1_3525), &(normal), &(OR_u1_u1_3527));\
bit_vector_or(&(OR_u1_u1_3527), &(inf), &(OR_u1_u1_3529));\
bit_vector_or(&(qnan), &(snan), &(OR_u1_u1_3532));\
bit_vector_or(&(OR_u1_u1_3529), &(OR_u1_u1_3532), &(OR_u1_u1_3533));\
if (has_undefined_bit(&OR_u1_u1_3533)) {fprintf(stderr, "Error: variable OR_u1_u1_3533 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_3533));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_3533)){bit_vector_cast_to_bit_vector(1, &(MUX_3536), &(expbase_127));\
}else {bit_vector_clear(&konst_3535);\
bit_vector_cast_to_bit_vector(1, &(MUX_3536), &(konst_3535));\
}bit_vector_or(&(MUX_3521), &(MUX_3536), &(OR_i10_i10_3537));\
if (has_undefined_bit(&zero)) {fprintf(stderr, "Error: variable zero has undefined value (%s) at test point.\n", to_string(&zero));assert(0);} \
if(bit_vector_to_uint64(0, &zero)){bit_vector_cast_to_bit_vector(1, &(MUX_3541), &(exponent_signed));\
}else {bit_vector_clear(&konst_3540);\
bit_vector_cast_to_bit_vector(1, &(MUX_3541), &(konst_3540));\
}bit_vector_or(&(OR_i10_i10_3537), &(MUX_3541), &(OR_i10_i10_3542));\
bit_vector_cast_to_bit_vector(1, &(expo_base), &(OR_i10_i10_3542));\
;

#define fpunit_exec_exec__break_number_32_assign_stmt_3548_c_macro_ __declare_static_bit_vector(SUB_i10_i10_3547,10);\
bit_vector_minus( &(exponent_signed), &(expo_base), &(SUB_i10_i10_3547));\
bit_vector_cast_to_bit_vector(1, &(expon), &(SUB_i10_i10_3547));\
;

#define fpunit_exec_exec__break_number_32_assign_stmt_3551_c_macro_ bit_vector_cast_to_bit_vector(0, &(fract), &(fract_temp));\
;

#define fpunit_exec_exec__break_number_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pfract)), &(fract));\
bit_vector_cast_to_bit_vector(1, &((*__pexpon)), &(expon));\
;

#define fpunit_exec_exec__break_number_64_inner_inarg_prep_macro__ __declare_static_bit_vector(fp,64);\
bit_vector_cast_to_bit_vector(0, &(fp), &((*__pfp)));\
__declare_static_bit_vector(normal,1);\
bit_vector_cast_to_bit_vector(0, &(normal), &((*__pnormal)));\
__declare_static_bit_vector(denormal,1);\
bit_vector_cast_to_bit_vector(0, &(denormal), &((*__pdenormal)));\
__declare_static_bit_vector(qnan,1);\
bit_vector_cast_to_bit_vector(0, &(qnan), &((*__pqnan)));\
__declare_static_bit_vector(snan,1);\
bit_vector_cast_to_bit_vector(0, &(snan), &((*__psnan)));\
__declare_static_bit_vector(inf,1);\
bit_vector_cast_to_bit_vector(0, &(inf), &((*__pinf)));\
__declare_static_bit_vector(zero,1);\
bit_vector_cast_to_bit_vector(0, &(zero), &((*__pzero)));\
__declare_static_bit_vector(denormalize,1);\
bit_vector_cast_to_bit_vector(0, &(denormalize), &((*__pdenormalize)));\
__declare_static_bit_vector(fract,53);\
__declare_static_bit_vector(expon,13);\
__declare_static_bit_vector(fraction,52);\
__declare_static_bit_vector(exponent,11);\
__declare_static_bit_vector(exponent_signed,13);\
__declare_static_bit_vector(fract_temp,53);\
__declare_static_bit_vector(expo_base,13);\

#define fpunit_exec_exec__break_number_64_assign_stmt_3567_c_macro_ __declare_static_bit_vector(slice_3566,52);\
bit_vector_slice(&(fp), &(slice_3566), 0);\
bit_vector_cast_to_bit_vector(0, &(fraction), &(slice_3566));\
;

#define fpunit_exec_exec__break_number_64_assign_stmt_3571_c_macro_ __declare_static_bit_vector(slice_3570,11);\
bit_vector_slice(&(fp), &(slice_3570), 52);\
bit_vector_cast_to_bit_vector(0, &(exponent), &(slice_3570));\
;

#define fpunit_exec_exec__break_number_64_assign_stmt_3575_c_macro_ __declare_static_bit_vector(type_cast_3574,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_3574), &(exponent));\
bit_vector_cast_to_bit_vector(1, &(exponent_signed), &(type_cast_3574));\
;

#define fpunit_exec_exec__break_number_64_assign_stmt_3605_c_macro_ __declare_static_bit_vector(AND_u1_u1_3580,1);\
__declare_static_bit_vector(OR_u1_u1_3581,1);\
__declare_static_bit_vector(CONCAT_u1_u53_3584,53);\
__declare_static_bit_vector(konst_3585,53);\
bit_vector_clear(&konst_3585);\
__declare_static_bit_vector(MUX_3586,53);\
__declare_static_bit_vector(NOT_u1_u1_3589,1);\
__declare_static_bit_vector(AND_u1_u1_3590,1);\
__declare_static_bit_vector(OR_u1_u1_3592,1);\
__declare_static_bit_vector(OR_u1_u1_3594,1);\
__declare_static_bit_vector(OR_u1_u1_3597,1);\
__declare_static_bit_vector(OR_u1_u1_3598,1);\
__declare_static_bit_vector(CONCAT_u1_u53_3601,53);\
__declare_static_bit_vector(konst_3602,53);\
bit_vector_clear(&konst_3602);\
__declare_static_bit_vector(MUX_3603,53);\
__declare_static_bit_vector(OR_u53_u53_3604,53);\
bit_vector_and(&(denormal), &(denormalize), &(AND_u1_u1_3580));\
bit_vector_or(&(zero), &(AND_u1_u1_3580), &(OR_u1_u1_3581));\
if (has_undefined_bit(&OR_u1_u1_3581)) {fprintf(stderr, "Error: variable OR_u1_u1_3581 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_3581));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_3581)){bit_vector_concatenate( &(ZERO_1), &(fraction), &(CONCAT_u1_u53_3584));\
bit_vector_cast_to_bit_vector(0, &(MUX_3586), &(CONCAT_u1_u53_3584));\
}else {bit_vector_clear(&konst_3585);\
bit_vector_cast_to_bit_vector(0, &(MUX_3586), &(konst_3585));\
}bit_vector_not( &(denormalize), &(NOT_u1_u1_3589));\
bit_vector_and(&(denormal), &(NOT_u1_u1_3589), &(AND_u1_u1_3590));\
bit_vector_or(&(AND_u1_u1_3590), &(normal), &(OR_u1_u1_3592));\
bit_vector_or(&(OR_u1_u1_3592), &(inf), &(OR_u1_u1_3594));\
bit_vector_or(&(qnan), &(snan), &(OR_u1_u1_3597));\
bit_vector_or(&(OR_u1_u1_3594), &(OR_u1_u1_3597), &(OR_u1_u1_3598));\
if (has_undefined_bit(&OR_u1_u1_3598)) {fprintf(stderr, "Error: variable OR_u1_u1_3598 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_3598));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_3598)){bit_vector_concatenate( &(ONE_1), &(fraction), &(CONCAT_u1_u53_3601));\
bit_vector_cast_to_bit_vector(0, &(MUX_3603), &(CONCAT_u1_u53_3601));\
}else {bit_vector_clear(&konst_3602);\
bit_vector_cast_to_bit_vector(0, &(MUX_3603), &(konst_3602));\
}bit_vector_or(&(MUX_3586), &(MUX_3603), &(OR_u53_u53_3604));\
bit_vector_cast_to_bit_vector(0, &(fract_temp), &(OR_u53_u53_3604));\
;

#define fpunit_exec_exec__break_number_64_assign_stmt_3634_c_macro_ __declare_static_bit_vector(AND_u1_u1_3609,1);\
__declare_static_bit_vector(konst_3611,13);\
bit_vector_clear(&konst_3611);\
__declare_static_bit_vector(MUX_3612,13);\
__declare_static_bit_vector(NOT_u1_u1_3615,1);\
__declare_static_bit_vector(AND_u1_u1_3616,1);\
__declare_static_bit_vector(OR_u1_u1_3618,1);\
__declare_static_bit_vector(OR_u1_u1_3620,1);\
__declare_static_bit_vector(OR_u1_u1_3623,1);\
__declare_static_bit_vector(OR_u1_u1_3624,1);\
__declare_static_bit_vector(konst_3626,13);\
bit_vector_clear(&konst_3626);\
__declare_static_bit_vector(MUX_3627,13);\
__declare_static_bit_vector(OR_i13_i13_3628,13);\
__declare_static_bit_vector(konst_3631,13);\
bit_vector_clear(&konst_3631);\
__declare_static_bit_vector(MUX_3632,13);\
__declare_static_bit_vector(OR_i13_i13_3633,13);\
bit_vector_and(&(denormal), &(denormalize), &(AND_u1_u1_3609));\
if (has_undefined_bit(&AND_u1_u1_3609)) {fprintf(stderr, "Error: variable AND_u1_u1_3609 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_3609));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_3609)){bit_vector_cast_to_bit_vector(1, &(MUX_3612), &(expbase_1022));\
}else {bit_vector_clear(&konst_3611);\
bit_vector_cast_to_bit_vector(1, &(MUX_3612), &(konst_3611));\
}bit_vector_not( &(denormalize), &(NOT_u1_u1_3615));\
bit_vector_and(&(denormal), &(NOT_u1_u1_3615), &(AND_u1_u1_3616));\
bit_vector_or(&(AND_u1_u1_3616), &(normal), &(OR_u1_u1_3618));\
bit_vector_or(&(OR_u1_u1_3618), &(inf), &(OR_u1_u1_3620));\
bit_vector_or(&(qnan), &(snan), &(OR_u1_u1_3623));\
bit_vector_or(&(OR_u1_u1_3620), &(OR_u1_u1_3623), &(OR_u1_u1_3624));\
if (has_undefined_bit(&OR_u1_u1_3624)) {fprintf(stderr, "Error: variable OR_u1_u1_3624 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_3624));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_3624)){bit_vector_cast_to_bit_vector(1, &(MUX_3627), &(expbase_1023));\
}else {bit_vector_clear(&konst_3626);\
bit_vector_cast_to_bit_vector(1, &(MUX_3627), &(konst_3626));\
}bit_vector_or(&(MUX_3612), &(MUX_3627), &(OR_i13_i13_3628));\
if (has_undefined_bit(&zero)) {fprintf(stderr, "Error: variable zero has undefined value (%s) at test point.\n", to_string(&zero));assert(0);} \
if(bit_vector_to_uint64(0, &zero)){bit_vector_cast_to_bit_vector(1, &(MUX_3632), &(exponent_signed));\
}else {bit_vector_clear(&konst_3631);\
bit_vector_cast_to_bit_vector(1, &(MUX_3632), &(konst_3631));\
}bit_vector_or(&(OR_i13_i13_3628), &(MUX_3632), &(OR_i13_i13_3633));\
bit_vector_cast_to_bit_vector(1, &(expo_base), &(OR_i13_i13_3633));\
;

#define fpunit_exec_exec__break_number_64_assign_stmt_3639_c_macro_ __declare_static_bit_vector(SUB_i13_i13_3638,13);\
bit_vector_minus( &(exponent_signed), &(expo_base), &(SUB_i13_i13_3638));\
bit_vector_cast_to_bit_vector(1, &(expon), &(SUB_i13_i13_3638));\
;

#define fpunit_exec_exec__break_number_64_assign_stmt_3642_c_macro_ bit_vector_cast_to_bit_vector(0, &(fract), &(fract_temp));\
;

#define fpunit_exec_exec__break_number_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pfract)), &(fract));\
bit_vector_cast_to_bit_vector(1, &((*__pexpon)), &(expon));\
;

#define fpunit_exec_exec__calculate_imm_offset_for_dti_inner_inarg_prep_macro__ __declare_static_bit_vector(instr,32);\
bit_vector_cast_to_bit_vector(0, &(instr), &((*__pinstr)));\
__declare_static_bit_vector(imm_offset,32);\

#define fpunit_exec_exec__calculate_imm_offset_for_dti_assign_stmt_3654_c_macro_ __declare_static_bit_vector(slice_3650,13);\
__declare_static_bit_vector(type_cast_3651,13);\
__declare_static_bit_vector(type_cast_3652,32);\
__declare_static_bit_vector(type_cast_3653,32);\
bit_vector_slice(&(instr), &(slice_3650), 0);\
bit_vector_bitcast_to_bit_vector( &(type_cast_3651), &(slice_3650));\
bit_vector_cast_to_bit_vector(1, &(type_cast_3652), &(type_cast_3651));\
bit_vector_bitcast_to_bit_vector( &(type_cast_3653), &(type_cast_3652));\
bit_vector_cast_to_bit_vector(0, &(imm_offset), &(type_cast_3653));\
;

#define fpunit_exec_exec__calculate_imm_offset_for_dti_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pimm_offset)), &(imm_offset));\
;

#define fpunit_exec_exec__calculate_imm_offset_for_dti_outer_arg_decl_macro__ __declare_static_bit_vector(__instr, 32);\
bit_vector_assign_uint64(0, &__instr, instr);\
__declare_static_bit_vector(__imm_offset, 32);\
;

#define fpunit_exec_exec__calculate_imm_offset_for_dti_outer_op_xfer_macro__  *imm_offset =  bit_vector_to_uint64(0, &__imm_offset);\
;

#define fpunit_exec_exec__check_fh_exponent_overflow_inner_inarg_prep_macro__ __declare_static_bit_vector(exp_ab,7);\
bit_vector_cast_to_bit_vector(1, &(exp_ab), &((*__pexp_ab)));\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(underflow,1);\

#define fpunit_exec_exec__check_fh_exponent_overflow_assign_stmt_3665_c_macro_ __declare_static_bit_vector(konst_3663,7);\
bit_vector_clear(&konst_3663);\
konst_3663.val.byte_array[0] = 16;\
__declare_static_bit_vector(SGT_i7_u1_3664,1);\
bit_vector_clear(&konst_3663);\
konst_3663.val.byte_array[0] = 16;\
bit_vector_greater(1, &(exp_ab), &(konst_3663), &(SGT_i7_u1_3664));\
bit_vector_cast_to_bit_vector(0, &(overflow), &(SGT_i7_u1_3664));\
;

#define fpunit_exec_exec__check_fh_exponent_overflow_assign_stmt_3670_c_macro_ __declare_static_bit_vector(konst_3668,7);\
bit_vector_clear(&konst_3668);\
konst_3668.val.byte_array[0] = 241;\
__declare_static_bit_vector(SLT_i7_u1_3669,1);\
bit_vector_clear(&konst_3668);\
konst_3668.val.byte_array[0] = 241;\
bit_vector_less(1, &(exp_ab), &(konst_3668), &(SLT_i7_u1_3669));\
bit_vector_cast_to_bit_vector(0, &(underflow), &(SLT_i7_u1_3669));\
;

#define fpunit_exec_exec__check_fh_exponent_overflow_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__poverflow)), &(overflow));\
bit_vector_cast_to_bit_vector(0, &((*__punderflow)), &(underflow));\
;

#define fpunit_exec_exec__classFp32_inner_inarg_prep_macro__ static float a;\
a = (*__pa);\
__declare_static_bit_vector(pos_normal,1);\
__declare_static_bit_vector(neg_normal,1);\
__declare_static_bit_vector(pos_denormal,1);\
__declare_static_bit_vector(neg_denormal,1);\
__declare_static_bit_vector(qnan,1);\
__declare_static_bit_vector(snan,1);\
__declare_static_bit_vector(pos_inf,1);\
__declare_static_bit_vector(neg_inf,1);\
__declare_static_bit_vector(pos_zero,1);\
__declare_static_bit_vector(neg_zero,1);\
__declare_static_bit_vector(ua,32);\
__declare_static_bit_vector(sign,1);\
__declare_static_bit_vector(exp_a,8);\
__declare_static_bit_vector(mant_a,23);\
__declare_static_bit_vector(exp_all_ones,1);\
__declare_static_bit_vector(exp_all_zeros,1);\
__declare_static_bit_vector(mant_a_zero,1);\
__declare_static_bit_vector(mant_top_bit,1);\

#define fpunit_exec_exec__classFp32_assign_stmt_2124_c_macro_ __declare_static_bit_vector(type_cast_2123,32);\
float_bitcast_to_bit_vector( &(type_cast_2123), &(a));\
bit_vector_cast_to_bit_vector(0, &(ua), &(type_cast_2123));\
;

#define fpunit_exec_exec__classFp32_assign_stmt_2129_c_macro_ __declare_static_bit_vector(konst_2127,32);\
bit_vector_clear(&konst_2127);\
konst_2127.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_2128,1);\
bit_vector_clear(&konst_2127);\
konst_2127.val.byte_array[0] = 31;\
bit_vector_bitsel( &(ua), &(konst_2127), &(BITSEL_u32_u1_2128));\
bit_vector_cast_to_bit_vector(0, &(sign), &(BITSEL_u32_u1_2128));\
;

#define fpunit_exec_exec__classFp32_assign_stmt_2133_c_macro_ __declare_static_bit_vector(slice_2132,8);\
bit_vector_slice(&(ua), &(slice_2132), 23);\
bit_vector_cast_to_bit_vector(0, &(exp_a), &(slice_2132));\
;

#define fpunit_exec_exec__classFp32_assign_stmt_2137_c_macro_ __declare_static_bit_vector(slice_2136,23);\
bit_vector_slice(&(ua), &(slice_2136), 0);\
bit_vector_cast_to_bit_vector(0, &(mant_a), &(slice_2136));\
;

#define fpunit_exec_exec__classFp32_assign_stmt_2143_c_macro_ __declare_static_bit_vector(konst_2140,8);\
bit_vector_clear(&konst_2140);\
__declare_static_bit_vector(NOT_u8_u8_2141,8);\
bit_vector_clear(&NOT_u8_u8_2141);\
NOT_u8_u8_2141.val.byte_array[0] = 255;\
__declare_static_bit_vector(EQ_u8_u1_2142,1);\
bit_vector_clear(&konst_2140);\
bit_vector_not( &(konst_2140), &(NOT_u8_u8_2141));\
bit_vector_equal(0, &(exp_a), &(NOT_u8_u8_2141), &(EQ_u8_u1_2142));\
bit_vector_cast_to_bit_vector(0, &(exp_all_ones), &(EQ_u8_u1_2142));\
;

#define fpunit_exec_exec__classFp32_assign_stmt_2148_c_macro_ __declare_static_bit_vector(konst_2146,8);\
bit_vector_clear(&konst_2146);\
__declare_static_bit_vector(EQ_u8_u1_2147,1);\
bit_vector_clear(&konst_2146);\
bit_vector_equal(0, &(exp_a), &(konst_2146), &(EQ_u8_u1_2147));\
bit_vector_cast_to_bit_vector(0, &(exp_all_zeros), &(EQ_u8_u1_2147));\
;

#define fpunit_exec_exec__classFp32_assign_stmt_2153_c_macro_ __declare_static_bit_vector(konst_2151,23);\
bit_vector_clear(&konst_2151);\
__declare_static_bit_vector(EQ_u23_u1_2152,1);\
bit_vector_clear(&konst_2151);\
bit_vector_equal(0, &(mant_a), &(konst_2151), &(EQ_u23_u1_2152));\
bit_vector_cast_to_bit_vector(0, &(mant_a_zero), &(EQ_u23_u1_2152));\
;

#define fpunit_exec_exec__classFp32_assign_stmt_2158_c_macro_ __declare_static_bit_vector(konst_2156,23);\
bit_vector_clear(&konst_2156);\
konst_2156.val.byte_array[0] = 22;\
__declare_static_bit_vector(BITSEL_u23_u1_2157,1);\
bit_vector_clear(&konst_2156);\
konst_2156.val.byte_array[0] = 22;\
bit_vector_bitsel( &(mant_a), &(konst_2156), &(BITSEL_u23_u1_2157));\
bit_vector_cast_to_bit_vector(0, &(mant_top_bit), &(BITSEL_u23_u1_2157));\
;

#define fpunit_exec_exec__classFp32_call_stmt_2174_c_macro_ _fpunit_exec_exec_classFpBase_( &(sign),  &(exp_all_ones),  &(exp_all_zeros),  &(mant_a_zero),  &(mant_top_bit), &(pos_normal), &(neg_normal), &(pos_denormal), &(neg_denormal), &(qnan), &(snan), &(pos_inf), &(neg_inf), &(pos_zero), &(neg_zero));\
;

#define fpunit_exec_exec__classFp32_stmt_2185_c_macro_ uint32_t fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"classFp32_trace__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"ua");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ua)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"sign");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sign)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"exp_a");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_a)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"mant_a");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_a)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"exp_all_ones");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_all_ones)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"exp_all_zeros");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_all_zeros)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"mant_a_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_a_zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"mant_top_bit");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_top_bit)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"qnan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(qnan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp32_stmt_2185_c_macro___print_counter,"snan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(snan)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classFp32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__ppos_normal)), &(pos_normal));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_normal)), &(neg_normal));\
bit_vector_cast_to_bit_vector(0, &((*__ppos_denormal)), &(pos_denormal));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_denormal)), &(neg_denormal));\
bit_vector_cast_to_bit_vector(0, &((*__pqnan)), &(qnan));\
bit_vector_cast_to_bit_vector(0, &((*__psnan)), &(snan));\
bit_vector_cast_to_bit_vector(0, &((*__ppos_inf)), &(pos_inf));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_inf)), &(neg_inf));\
bit_vector_cast_to_bit_vector(0, &((*__ppos_zero)), &(pos_zero));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_zero)), &(neg_zero));\
;

#define fpunit_exec_exec__classFp32IntoClassWord_inner_inarg_prep_macro__ static float f1_s;\
f1_s = (*__pf1_s);\
__declare_static_bit_vector(f1_s_classification,10);\
__declare_static_bit_vector(f1_s_pos_normal,1);\
__declare_static_bit_vector(f1_s_neg_normal,1);\
__declare_static_bit_vector(f1_s_pos_denormal,1);\
__declare_static_bit_vector(f1_s_neg_denormal,1);\
__declare_static_bit_vector(f1_s_qnan,1);\
__declare_static_bit_vector(f1_s_snan,1);\
__declare_static_bit_vector(f1_s_pos_inf,1);\
__declare_static_bit_vector(f1_s_neg_inf,1);\
__declare_static_bit_vector(f1_s_pos_zero,1);\
__declare_static_bit_vector(f1_s_neg_zero,1);\

#define fpunit_exec_exec__classFp32IntoClassWord_call_stmt_3686_c_macro_ _fpunit_exec_exec_classFp32_( &(f1_s), &(f1_s_pos_normal), &(f1_s_neg_normal), &(f1_s_pos_denormal), &(f1_s_neg_denormal), &(f1_s_qnan), &(f1_s_snan), &(f1_s_pos_inf), &(f1_s_neg_inf), &(f1_s_pos_zero), &(f1_s_neg_zero));\
;

#define fpunit_exec_exec__classFp32IntoClassWord_assign_stmt_3707_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_3690,2);\
__declare_static_bit_vector(CONCAT_u2_u3_3692,3);\
__declare_static_bit_vector(CONCAT_u1_u2_3695,2);\
__declare_static_bit_vector(CONCAT_u3_u5_3696,5);\
__declare_static_bit_vector(CONCAT_u1_u2_3699,2);\
__declare_static_bit_vector(CONCAT_u2_u3_3701,3);\
__declare_static_bit_vector(CONCAT_u1_u2_3704,2);\
__declare_static_bit_vector(CONCAT_u3_u5_3705,5);\
__declare_static_bit_vector(CONCAT_u5_u10_3706,10);\
bit_vector_concatenate( &(f1_s_pos_normal), &(f1_s_neg_normal), &(CONCAT_u1_u2_3690));\
bit_vector_concatenate( &(CONCAT_u1_u2_3690), &(f1_s_pos_denormal), &(CONCAT_u2_u3_3692));\
bit_vector_concatenate( &(f1_s_neg_denormal), &(f1_s_qnan), &(CONCAT_u1_u2_3695));\
bit_vector_concatenate( &(CONCAT_u2_u3_3692), &(CONCAT_u1_u2_3695), &(CONCAT_u3_u5_3696));\
bit_vector_concatenate( &(f1_s_snan), &(f1_s_pos_inf), &(CONCAT_u1_u2_3699));\
bit_vector_concatenate( &(CONCAT_u1_u2_3699), &(f1_s_neg_inf), &(CONCAT_u2_u3_3701));\
bit_vector_concatenate( &(f1_s_pos_zero), &(f1_s_neg_zero), &(CONCAT_u1_u2_3704));\
bit_vector_concatenate( &(CONCAT_u2_u3_3701), &(CONCAT_u1_u2_3704), &(CONCAT_u3_u5_3705));\
bit_vector_concatenate( &(CONCAT_u3_u5_3696), &(CONCAT_u3_u5_3705), &(CONCAT_u5_u10_3706));\
bit_vector_cast_to_bit_vector(0, &(f1_s_classification), &(CONCAT_u5_u10_3706));\
;

#define fpunit_exec_exec__classFp32IntoClassWord_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pf1_s_classification)), &(f1_s_classification));\
;

#define fpunit_exec_exec__classFp64_inner_inarg_prep_macro__ static double a;\
a = (*__pa);\
__declare_static_bit_vector(pos_normal,1);\
__declare_static_bit_vector(neg_normal,1);\
__declare_static_bit_vector(pos_denormal,1);\
__declare_static_bit_vector(neg_denormal,1);\
__declare_static_bit_vector(qnan,1);\
__declare_static_bit_vector(snan,1);\
__declare_static_bit_vector(pos_inf,1);\
__declare_static_bit_vector(neg_inf,1);\
__declare_static_bit_vector(pos_zero,1);\
__declare_static_bit_vector(neg_zero,1);\
__declare_static_bit_vector(ua,64);\
__declare_static_bit_vector(sign,1);\
__declare_static_bit_vector(exp_a,11);\
__declare_static_bit_vector(mant_a,52);\
__declare_static_bit_vector(exp_all_ones,1);\
__declare_static_bit_vector(exp_all_zeros,1);\
__declare_static_bit_vector(mant_a_zero,1);\
__declare_static_bit_vector(mant_top_bit,1);\

#define fpunit_exec_exec__classFp64_stmt_1524_c_macro_ uint32_t fpunit_exec_exec__classFp64_stmt_1524_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__classFp64_stmt_1524_c_macro___print_counter,"classFp64_input__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp64_stmt_1524_c_macro___print_counter,"a");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",a);fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classFp64_assign_stmt_1528_c_macro_ __declare_static_bit_vector(type_cast_1527,64);\
double_bitcast_to_bit_vector( &(type_cast_1527), &(a));\
bit_vector_cast_to_bit_vector(0, &(ua), &(type_cast_1527));\
;

#define fpunit_exec_exec__classFp64_stmt_1530_c_macro_ uint32_t fpunit_exec_exec__classFp64_stmt_1530_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__classFp64_stmt_1530_c_macro___print_counter,"classFp64_trace__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp64_stmt_1530_c_macro___print_counter,"ua");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ua)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classFp64_assign_stmt_1535_c_macro_ __declare_static_bit_vector(konst_1533,64);\
bit_vector_clear(&konst_1533);\
konst_1533.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_1534,1);\
bit_vector_clear(&konst_1533);\
konst_1533.val.byte_array[0] = 63;\
bit_vector_bitsel( &(ua), &(konst_1533), &(BITSEL_u64_u1_1534));\
bit_vector_cast_to_bit_vector(0, &(sign), &(BITSEL_u64_u1_1534));\
;

#define fpunit_exec_exec__classFp64_stmt_1537_c_macro_ uint32_t fpunit_exec_exec__classFp64_stmt_1537_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__classFp64_stmt_1537_c_macro___print_counter,"classFp64_trace__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp64_stmt_1537_c_macro___print_counter,"sign");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sign)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classFp64_assign_stmt_1541_c_macro_ __declare_static_bit_vector(slice_1540,11);\
bit_vector_slice(&(ua), &(slice_1540), 52);\
bit_vector_cast_to_bit_vector(0, &(exp_a), &(slice_1540));\
;

#define fpunit_exec_exec__classFp64_assign_stmt_1545_c_macro_ __declare_static_bit_vector(slice_1544,52);\
bit_vector_slice(&(ua), &(slice_1544), 0);\
bit_vector_cast_to_bit_vector(0, &(mant_a), &(slice_1544));\
;

#define fpunit_exec_exec__classFp64_stmt_1548_c_macro_ uint32_t fpunit_exec_exec__classFp64_stmt_1548_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__classFp64_stmt_1548_c_macro___print_counter,"classFp64_trace__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp64_stmt_1548_c_macro___print_counter,"exp_a");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_a)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp64_stmt_1548_c_macro___print_counter,"mant_a");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_a)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classFp64_assign_stmt_1554_c_macro_ __declare_static_bit_vector(konst_1551,11);\
bit_vector_clear(&konst_1551);\
__declare_static_bit_vector(NOT_u11_u11_1552,11);\
bit_vector_clear(&NOT_u11_u11_1552);\
NOT_u11_u11_1552.val.byte_array[0] = 255;\
NOT_u11_u11_1552.val.byte_array[1] = 255;\
__declare_static_bit_vector(EQ_u11_u1_1553,1);\
bit_vector_clear(&konst_1551);\
bit_vector_not( &(konst_1551), &(NOT_u11_u11_1552));\
bit_vector_equal(0, &(exp_a), &(NOT_u11_u11_1552), &(EQ_u11_u1_1553));\
bit_vector_cast_to_bit_vector(0, &(exp_all_ones), &(EQ_u11_u1_1553));\
;

#define fpunit_exec_exec__classFp64_assign_stmt_1559_c_macro_ __declare_static_bit_vector(konst_1557,11);\
bit_vector_clear(&konst_1557);\
__declare_static_bit_vector(EQ_u11_u1_1558,1);\
bit_vector_clear(&konst_1557);\
bit_vector_equal(0, &(exp_a), &(konst_1557), &(EQ_u11_u1_1558));\
bit_vector_cast_to_bit_vector(0, &(exp_all_zeros), &(EQ_u11_u1_1558));\
;

#define fpunit_exec_exec__classFp64_stmt_1562_c_macro_ uint32_t fpunit_exec_exec__classFp64_stmt_1562_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__classFp64_stmt_1562_c_macro___print_counter,"classFp64_trace__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp64_stmt_1562_c_macro___print_counter,"exp_all_ones");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_all_ones)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp64_stmt_1562_c_macro___print_counter,"exp_all_zeros");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_all_zeros)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classFp64_assign_stmt_1567_c_macro_ __declare_static_bit_vector(konst_1565,52);\
bit_vector_clear(&konst_1565);\
__declare_static_bit_vector(EQ_u52_u1_1566,1);\
bit_vector_clear(&konst_1565);\
bit_vector_equal(0, &(mant_a), &(konst_1565), &(EQ_u52_u1_1566));\
bit_vector_cast_to_bit_vector(0, &(mant_a_zero), &(EQ_u52_u1_1566));\
;

#define fpunit_exec_exec__classFp64_assign_stmt_1572_c_macro_ __declare_static_bit_vector(konst_1570,52);\
bit_vector_clear(&konst_1570);\
konst_1570.val.byte_array[0] = 51;\
__declare_static_bit_vector(BITSEL_u52_u1_1571,1);\
bit_vector_clear(&konst_1570);\
konst_1570.val.byte_array[0] = 51;\
bit_vector_bitsel( &(mant_a), &(konst_1570), &(BITSEL_u52_u1_1571));\
bit_vector_cast_to_bit_vector(0, &(mant_top_bit), &(BITSEL_u52_u1_1571));\
;

#define fpunit_exec_exec__classFp64_stmt_1575_c_macro_ uint32_t fpunit_exec_exec__classFp64_stmt_1575_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__classFp64_stmt_1575_c_macro___print_counter,"classFp64_trace__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp64_stmt_1575_c_macro___print_counter,"mant_a_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_a_zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classFp64_stmt_1575_c_macro___print_counter,"mant_top_bit");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_top_bit)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classFp64_call_stmt_1591_c_macro_ _fpunit_exec_exec_classFpBase_( &(sign),  &(exp_all_ones),  &(exp_all_zeros),  &(mant_a_zero),  &(mant_top_bit), &(pos_normal), &(neg_normal), &(pos_denormal), &(neg_denormal), &(qnan), &(snan), &(pos_inf), &(neg_inf), &(pos_zero), &(neg_zero));\
;

#define fpunit_exec_exec__classFp64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__ppos_normal)), &(pos_normal));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_normal)), &(neg_normal));\
bit_vector_cast_to_bit_vector(0, &((*__ppos_denormal)), &(pos_denormal));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_denormal)), &(neg_denormal));\
bit_vector_cast_to_bit_vector(0, &((*__pqnan)), &(qnan));\
bit_vector_cast_to_bit_vector(0, &((*__psnan)), &(snan));\
bit_vector_cast_to_bit_vector(0, &((*__ppos_inf)), &(pos_inf));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_inf)), &(neg_inf));\
bit_vector_cast_to_bit_vector(0, &((*__ppos_zero)), &(pos_zero));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_zero)), &(neg_zero));\
;

#define fpunit_exec_exec__classFpBase_inner_inarg_prep_macro__ __declare_static_bit_vector(sign,1);\
bit_vector_cast_to_bit_vector(0, &(sign), &((*__psign)));\
__declare_static_bit_vector(exp_all_ones,1);\
bit_vector_cast_to_bit_vector(0, &(exp_all_ones), &((*__pexp_all_ones)));\
__declare_static_bit_vector(exp_all_zeros,1);\
bit_vector_cast_to_bit_vector(0, &(exp_all_zeros), &((*__pexp_all_zeros)));\
__declare_static_bit_vector(mant_a_zero,1);\
bit_vector_cast_to_bit_vector(0, &(mant_a_zero), &((*__pmant_a_zero)));\
__declare_static_bit_vector(mant_top_bit,1);\
bit_vector_cast_to_bit_vector(0, &(mant_top_bit), &((*__pmant_top_bit)));\
__declare_static_bit_vector(pos_normal,1);\
__declare_static_bit_vector(neg_normal,1);\
__declare_static_bit_vector(pos_denormal,1);\
__declare_static_bit_vector(neg_denormal,1);\
__declare_static_bit_vector(qnan,1);\
__declare_static_bit_vector(snan,1);\
__declare_static_bit_vector(pos_inf,1);\
__declare_static_bit_vector(neg_inf,1);\
__declare_static_bit_vector(pos_zero,1);\
__declare_static_bit_vector(neg_zero,1);\

#define fpunit_exec_exec__classFpBase_assign_stmt_1434_c_macro_ __declare_static_bit_vector(NOT_u1_u1_1429,1);\
__declare_static_bit_vector(AND_u1_u1_1430,1);\
__declare_static_bit_vector(NOT_u1_u1_1432,1);\
__declare_static_bit_vector(AND_u1_u1_1433,1);\
bit_vector_not( &(mant_a_zero), &(NOT_u1_u1_1429));\
bit_vector_and(&(exp_all_ones), &(NOT_u1_u1_1429), &(AND_u1_u1_1430));\
bit_vector_not( &(mant_top_bit), &(NOT_u1_u1_1432));\
bit_vector_and(&(AND_u1_u1_1430), &(NOT_u1_u1_1432), &(AND_u1_u1_1433));\
bit_vector_cast_to_bit_vector(0, &(snan), &(AND_u1_u1_1433));\
;

#define fpunit_exec_exec__classFpBase_assign_stmt_1442_c_macro_ __declare_static_bit_vector(NOT_u1_u1_1438,1);\
__declare_static_bit_vector(AND_u1_u1_1439,1);\
__declare_static_bit_vector(AND_u1_u1_1441,1);\
bit_vector_not( &(mant_a_zero), &(NOT_u1_u1_1438));\
bit_vector_and(&(exp_all_ones), &(NOT_u1_u1_1438), &(AND_u1_u1_1439));\
bit_vector_and(&(AND_u1_u1_1439), &(mant_top_bit), &(AND_u1_u1_1441));\
bit_vector_cast_to_bit_vector(0, &(qnan), &(AND_u1_u1_1441));\
;

#define fpunit_exec_exec__classFpBase_assign_stmt_1450_c_macro_ __declare_static_bit_vector(AND_u1_u1_1446,1);\
__declare_static_bit_vector(NOT_u1_u1_1448,1);\
__declare_static_bit_vector(AND_u1_u1_1449,1);\
bit_vector_and(&(exp_all_ones), &(mant_a_zero), &(AND_u1_u1_1446));\
bit_vector_not( &(sign), &(NOT_u1_u1_1448));\
bit_vector_and(&(AND_u1_u1_1446), &(NOT_u1_u1_1448), &(AND_u1_u1_1449));\
bit_vector_cast_to_bit_vector(0, &(pos_inf), &(AND_u1_u1_1449));\
;

#define fpunit_exec_exec__classFpBase_assign_stmt_1457_c_macro_ __declare_static_bit_vector(AND_u1_u1_1454,1);\
__declare_static_bit_vector(AND_u1_u1_1456,1);\
bit_vector_and(&(exp_all_ones), &(mant_a_zero), &(AND_u1_u1_1454));\
bit_vector_and(&(AND_u1_u1_1454), &(sign), &(AND_u1_u1_1456));\
bit_vector_cast_to_bit_vector(0, &(neg_inf), &(AND_u1_u1_1456));\
;

#define fpunit_exec_exec__classFpBase_assign_stmt_1465_c_macro_ __declare_static_bit_vector(AND_u1_u1_1461,1);\
__declare_static_bit_vector(NOT_u1_u1_1463,1);\
__declare_static_bit_vector(AND_u1_u1_1464,1);\
bit_vector_and(&(exp_all_zeros), &(mant_a_zero), &(AND_u1_u1_1461));\
bit_vector_not( &(sign), &(NOT_u1_u1_1463));\
bit_vector_and(&(AND_u1_u1_1461), &(NOT_u1_u1_1463), &(AND_u1_u1_1464));\
bit_vector_cast_to_bit_vector(0, &(pos_zero), &(AND_u1_u1_1464));\
;

#define fpunit_exec_exec__classFpBase_assign_stmt_1472_c_macro_ __declare_static_bit_vector(AND_u1_u1_1469,1);\
__declare_static_bit_vector(AND_u1_u1_1471,1);\
bit_vector_and(&(exp_all_zeros), &(mant_a_zero), &(AND_u1_u1_1469));\
bit_vector_and(&(AND_u1_u1_1469), &(sign), &(AND_u1_u1_1471));\
bit_vector_cast_to_bit_vector(0, &(neg_zero), &(AND_u1_u1_1471));\
;

#define fpunit_exec_exec__classFpBase_assign_stmt_1481_c_macro_ __declare_static_bit_vector(NOT_u1_u1_1476,1);\
__declare_static_bit_vector(AND_u1_u1_1477,1);\
__declare_static_bit_vector(NOT_u1_u1_1479,1);\
__declare_static_bit_vector(AND_u1_u1_1480,1);\
bit_vector_not( &(mant_a_zero), &(NOT_u1_u1_1476));\
bit_vector_and(&(exp_all_zeros), &(NOT_u1_u1_1476), &(AND_u1_u1_1477));\
bit_vector_not( &(sign), &(NOT_u1_u1_1479));\
bit_vector_and(&(AND_u1_u1_1477), &(NOT_u1_u1_1479), &(AND_u1_u1_1480));\
bit_vector_cast_to_bit_vector(0, &(pos_denormal), &(AND_u1_u1_1480));\
;

#define fpunit_exec_exec__classFpBase_assign_stmt_1489_c_macro_ __declare_static_bit_vector(NOT_u1_u1_1485,1);\
__declare_static_bit_vector(AND_u1_u1_1486,1);\
__declare_static_bit_vector(AND_u1_u1_1488,1);\
bit_vector_not( &(mant_a_zero), &(NOT_u1_u1_1485));\
bit_vector_and(&(exp_all_zeros), &(NOT_u1_u1_1485), &(AND_u1_u1_1486));\
bit_vector_and(&(AND_u1_u1_1486), &(sign), &(AND_u1_u1_1488));\
bit_vector_cast_to_bit_vector(0, &(neg_denormal), &(AND_u1_u1_1488));\
;

#define fpunit_exec_exec__classFpBase_assign_stmt_1499_c_macro_ __declare_static_bit_vector(NOT_u1_u1_1492,1);\
__declare_static_bit_vector(NOT_u1_u1_1494,1);\
__declare_static_bit_vector(AND_u1_u1_1495,1);\
__declare_static_bit_vector(NOT_u1_u1_1497,1);\
__declare_static_bit_vector(AND_u1_u1_1498,1);\
bit_vector_not( &(exp_all_zeros), &(NOT_u1_u1_1492));\
bit_vector_not( &(exp_all_ones), &(NOT_u1_u1_1494));\
bit_vector_and(&(NOT_u1_u1_1492), &(NOT_u1_u1_1494), &(AND_u1_u1_1495));\
bit_vector_not( &(sign), &(NOT_u1_u1_1497));\
bit_vector_and(&(AND_u1_u1_1495), &(NOT_u1_u1_1497), &(AND_u1_u1_1498));\
bit_vector_cast_to_bit_vector(0, &(pos_normal), &(AND_u1_u1_1498));\
;

#define fpunit_exec_exec__classFpBase_assign_stmt_1508_c_macro_ __declare_static_bit_vector(NOT_u1_u1_1502,1);\
__declare_static_bit_vector(NOT_u1_u1_1504,1);\
__declare_static_bit_vector(AND_u1_u1_1505,1);\
__declare_static_bit_vector(AND_u1_u1_1507,1);\
bit_vector_not( &(exp_all_zeros), &(NOT_u1_u1_1502));\
bit_vector_not( &(exp_all_ones), &(NOT_u1_u1_1504));\
bit_vector_and(&(NOT_u1_u1_1502), &(NOT_u1_u1_1504), &(AND_u1_u1_1505));\
bit_vector_and(&(AND_u1_u1_1505), &(sign), &(AND_u1_u1_1507));\
bit_vector_cast_to_bit_vector(0, &(neg_normal), &(AND_u1_u1_1507));\
;

#define fpunit_exec_exec__classFpBase_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__ppos_normal)), &(pos_normal));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_normal)), &(neg_normal));\
bit_vector_cast_to_bit_vector(0, &((*__ppos_denormal)), &(pos_denormal));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_denormal)), &(neg_denormal));\
bit_vector_cast_to_bit_vector(0, &((*__pqnan)), &(qnan));\
bit_vector_cast_to_bit_vector(0, &((*__psnan)), &(snan));\
bit_vector_cast_to_bit_vector(0, &((*__ppos_inf)), &(pos_inf));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_inf)), &(neg_inf));\
bit_vector_cast_to_bit_vector(0, &((*__ppos_zero)), &(pos_zero));\
bit_vector_cast_to_bit_vector(0, &((*__pneg_zero)), &(neg_zero));\
;

#define fpunit_exec_exec__classifyFp16_inner_inarg_prep_macro__ __declare_static_bit_vector(ua,16);\
bit_vector_cast_to_bit_vector(0, &(ua), &((*__pua)));\
__declare_static_bit_vector(zero,1);\
__declare_static_bit_vector(normal,1);\
__declare_static_bit_vector(nan,1);\
__declare_static_bit_vector(inf,1);\
__declare_static_bit_vector(sign,1);\
__declare_static_bit_vector(exponent,5);\
__declare_static_bit_vector(mantissa,10);\
__declare_static_bit_vector(exp_all_ones,1);\
__declare_static_bit_vector(exp_all_zeros,1);\
__declare_static_bit_vector(mant_a_zero,1);\
__declare_static_bit_vector(mant_top_bit,1);\
__declare_static_bit_vector(pos_normal,1);\
__declare_static_bit_vector(neg_normal,1);\
__declare_static_bit_vector(pos_denormal,1);\
__declare_static_bit_vector(neg_denormal,1);\
__declare_static_bit_vector(qnan,1);\
__declare_static_bit_vector(snan,1);\
__declare_static_bit_vector(pos_inf,1);\
__declare_static_bit_vector(neg_inf,1);\
__declare_static_bit_vector(pos_zero,1);\
__declare_static_bit_vector(neg_zero,1);\

#define fpunit_exec_exec__classifyFp16_call_stmt_3738_c_macro_ _fpunit_exec_exec_splitFp16_( &(ua), &(sign), &(exponent), &(mantissa));\
;

#define fpunit_exec_exec__classifyFp16_assign_stmt_3745_c_macro_ __declare_static_bit_vector(konst_3741,5);\
bit_vector_clear(&konst_3741);\
__declare_static_bit_vector(type_cast_3742,5);\
bit_vector_clear(&type_cast_3742);\
__declare_static_bit_vector(NOT_u5_u5_3743,5);\
bit_vector_clear(&NOT_u5_u5_3743);\
NOT_u5_u5_3743.val.byte_array[0] = 255;\
__declare_static_bit_vector(EQ_u5_u1_3744,1);\
bit_vector_clear(&konst_3741);\
bit_vector_bitcast_to_bit_vector( &(type_cast_3742), &(konst_3741));\
bit_vector_not( &(type_cast_3742), &(NOT_u5_u5_3743));\
bit_vector_equal(0, &(exponent), &(NOT_u5_u5_3743), &(EQ_u5_u1_3744));\
bit_vector_cast_to_bit_vector(0, &(exp_all_ones), &(EQ_u5_u1_3744));\
;

#define fpunit_exec_exec__classifyFp16_assign_stmt_3750_c_macro_ __declare_static_bit_vector(konst_3748,5);\
bit_vector_clear(&konst_3748);\
__declare_static_bit_vector(EQ_u5_u1_3749,1);\
bit_vector_clear(&konst_3748);\
bit_vector_equal(0, &(exponent), &(konst_3748), &(EQ_u5_u1_3749));\
bit_vector_cast_to_bit_vector(0, &(exp_all_zeros), &(EQ_u5_u1_3749));\
;

#define fpunit_exec_exec__classifyFp16_assign_stmt_3755_c_macro_ __declare_static_bit_vector(konst_3753,10);\
bit_vector_clear(&konst_3753);\
__declare_static_bit_vector(EQ_u10_u1_3754,1);\
bit_vector_clear(&konst_3753);\
bit_vector_equal(0, &(mantissa), &(konst_3753), &(EQ_u10_u1_3754));\
bit_vector_cast_to_bit_vector(0, &(mant_a_zero), &(EQ_u10_u1_3754));\
;

#define fpunit_exec_exec__classifyFp16_assign_stmt_3760_c_macro_ __declare_static_bit_vector(konst_3758,10);\
bit_vector_clear(&konst_3758);\
konst_3758.val.byte_array[0] = 9;\
__declare_static_bit_vector(BITSEL_u10_u1_3759,1);\
bit_vector_clear(&konst_3758);\
konst_3758.val.byte_array[0] = 9;\
bit_vector_bitsel( &(mantissa), &(konst_3758), &(BITSEL_u10_u1_3759));\
bit_vector_cast_to_bit_vector(0, &(mant_top_bit), &(BITSEL_u10_u1_3759));\
;

#define fpunit_exec_exec__classifyFp16_call_stmt_3776_c_macro_ _fpunit_exec_exec_classFpBase_( &(sign),  &(exp_all_ones),  &(exp_all_zeros),  &(mant_a_zero),  &(mant_top_bit), &(pos_normal), &(neg_normal), &(pos_denormal), &(neg_denormal), &(qnan), &(snan), &(pos_inf), &(neg_inf), &(pos_zero), &(neg_zero));\
;

#define fpunit_exec_exec__classifyFp16_stmt_3793_c_macro_ uint32_t fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"classifyFp16");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"ua");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ua)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"sign");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sign)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"mantissa");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"exponent");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exponent)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"exp_all_ones");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_all_ones)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"exp_all_ones");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_all_ones)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"exp_all_zeros");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_all_zeros)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"exp_all_zeros");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_all_zeros)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"mant_a_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_a_zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"mant_a_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_a_zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"mant_top_bit");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_top_bit)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"mant_top_bit");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mant_top_bit)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"qnan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(qnan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"qnan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(qnan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"snan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(snan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__classifyFp16_stmt_3793_c_macro___print_counter,"snan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(snan)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classifyFp16_assign_stmt_3802_c_macro_ __declare_static_bit_vector(OR_u1_u1_3797,1);\
__declare_static_bit_vector(OR_u1_u1_3800,1);\
__declare_static_bit_vector(OR_u1_u1_3801,1);\
bit_vector_or(&(pos_zero), &(neg_zero), &(OR_u1_u1_3797));\
bit_vector_or(&(pos_denormal), &(neg_denormal), &(OR_u1_u1_3800));\
bit_vector_or(&(OR_u1_u1_3797), &(OR_u1_u1_3800), &(OR_u1_u1_3801));\
bit_vector_cast_to_bit_vector(0, &(zero), &(OR_u1_u1_3801));\
;

#define fpunit_exec_exec__classifyFp16_assign_stmt_3807_c_macro_ __declare_static_bit_vector(OR_u1_u1_3806,1);\
bit_vector_or(&(pos_normal), &(neg_normal), &(OR_u1_u1_3806));\
bit_vector_cast_to_bit_vector(0, &(normal), &(OR_u1_u1_3806));\
;

#define fpunit_exec_exec__classifyFp16_assign_stmt_3812_c_macro_ __declare_static_bit_vector(OR_u1_u1_3811,1);\
bit_vector_or(&(qnan), &(snan), &(OR_u1_u1_3811));\
bit_vector_cast_to_bit_vector(0, &(nan), &(OR_u1_u1_3811));\
;

#define fpunit_exec_exec__classifyFp16_assign_stmt_3817_c_macro_ __declare_static_bit_vector(OR_u1_u1_3816,1);\
bit_vector_or(&(pos_inf), &(neg_inf), &(OR_u1_u1_3816));\
bit_vector_cast_to_bit_vector(0, &(inf), &(OR_u1_u1_3816));\
;

#define fpunit_exec_exec__classifyFp16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pzero)), &(zero));\
bit_vector_cast_to_bit_vector(0, &((*__pnormal)), &(normal));\
bit_vector_cast_to_bit_vector(0, &((*__pnan)), &(nan));\
bit_vector_cast_to_bit_vector(0, &((*__pinf)), &(inf));\
;

#define fpunit_exec_exec__classify_32_inner_inarg_prep_macro__ static float f1_s;\
f1_s = (*__pf1_s);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_s_pos_normal,1);\
__declare_static_bit_vector(f1_s_neg_normal,1);\
__declare_static_bit_vector(f1_s_pos_denormal,1);\
__declare_static_bit_vector(f1_s_neg_denormal,1);\
__declare_static_bit_vector(f1_s_qnan,1);\
__declare_static_bit_vector(f1_s_snan,1);\
__declare_static_bit_vector(f1_s_pos_inf,1);\
__declare_static_bit_vector(f1_s_neg_inf,1);\
__declare_static_bit_vector(f1_s_pos_zero,1);\
__declare_static_bit_vector(f1_s_neg_zero,1);\

#define fpunit_exec_exec__classify_32_call_stmt_2205_c_macro_ _fpunit_exec_exec_classFp32_( &(f1_s), &(f1_s_pos_normal), &(f1_s_neg_normal), &(f1_s_pos_denormal), &(f1_s_neg_denormal), &(f1_s_qnan), &(f1_s_snan), &(f1_s_pos_inf), &(f1_s_neg_inf), &(f1_s_pos_zero), &(f1_s_neg_zero));\
;

#define fpunit_exec_exec__classify_32_assign_stmt_2210_c_macro_ __declare_static_bit_vector(OR_u1_u1_2209,1);\
bit_vector_or(&(f1_s_pos_zero), &(f1_s_neg_zero), &(OR_u1_u1_2209));\
bit_vector_cast_to_bit_vector(0, &(f1_zero), &(OR_u1_u1_2209));\
;

#define fpunit_exec_exec__classify_32_assign_stmt_2215_c_macro_ __declare_static_bit_vector(OR_u1_u1_2214,1);\
bit_vector_or(&(f1_s_pos_normal), &(f1_s_neg_normal), &(OR_u1_u1_2214));\
bit_vector_cast_to_bit_vector(0, &(f1_normal), &(OR_u1_u1_2214));\
;

#define fpunit_exec_exec__classify_32_assign_stmt_2220_c_macro_ __declare_static_bit_vector(OR_u1_u1_2219,1);\
bit_vector_or(&(f1_s_pos_denormal), &(f1_s_neg_denormal), &(OR_u1_u1_2219));\
bit_vector_cast_to_bit_vector(0, &(f1_denormal), &(OR_u1_u1_2219));\
;

#define fpunit_exec_exec__classify_32_assign_stmt_2225_c_macro_ __declare_static_bit_vector(OR_u1_u1_2224,1);\
bit_vector_or(&(f1_s_pos_inf), &(f1_s_neg_inf), &(OR_u1_u1_2224));\
bit_vector_cast_to_bit_vector(0, &(f1_inf), &(OR_u1_u1_2224));\
;

#define fpunit_exec_exec__classify_32_assign_stmt_2230_c_macro_ __declare_static_bit_vector(OR_u1_u1_2229,1);\
bit_vector_or(&(f1_s_snan), &(f1_s_qnan), &(OR_u1_u1_2229));\
bit_vector_cast_to_bit_vector(0, &(f1_nan), &(OR_u1_u1_2229));\
;

#define fpunit_exec_exec__classify_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pf1_zero)), &(f1_zero));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_normal)), &(f1_normal));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_denormal)), &(f1_denormal));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_inf)), &(f1_inf));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_nan)), &(f1_nan));\
;

#define fpunit_exec_exec__classify_64_inner_inarg_prep_macro__ static double f1_d;\
f1_d = (*__pf1_d);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_d_pos_normal,1);\
__declare_static_bit_vector(f1_d_neg_normal,1);\
__declare_static_bit_vector(f1_d_pos_denormal,1);\
__declare_static_bit_vector(f1_d_neg_denormal,1);\
__declare_static_bit_vector(f1_d_qnan,1);\
__declare_static_bit_vector(f1_d_snan,1);\
__declare_static_bit_vector(f1_d_pos_inf,1);\
__declare_static_bit_vector(f1_d_neg_inf,1);\
__declare_static_bit_vector(f1_d_pos_zero,1);\
__declare_static_bit_vector(f1_d_neg_zero,1);\

#define fpunit_exec_exec__classify_64_call_stmt_1611_c_macro_ _fpunit_exec_exec_classFp64_( &(f1_d), &(f1_d_pos_normal), &(f1_d_neg_normal), &(f1_d_pos_denormal), &(f1_d_neg_denormal), &(f1_d_qnan), &(f1_d_snan), &(f1_d_pos_inf), &(f1_d_neg_inf), &(f1_d_pos_zero), &(f1_d_neg_zero));\
;

#define fpunit_exec_exec__classify_64_assign_stmt_1616_c_macro_ __declare_static_bit_vector(OR_u1_u1_1615,1);\
bit_vector_or(&(f1_d_pos_zero), &(f1_d_neg_zero), &(OR_u1_u1_1615));\
bit_vector_cast_to_bit_vector(0, &(f1_zero), &(OR_u1_u1_1615));\
;

#define fpunit_exec_exec__classify_64_assign_stmt_1621_c_macro_ __declare_static_bit_vector(OR_u1_u1_1620,1);\
bit_vector_or(&(f1_d_pos_normal), &(f1_d_neg_normal), &(OR_u1_u1_1620));\
bit_vector_cast_to_bit_vector(0, &(f1_normal), &(OR_u1_u1_1620));\
;

#define fpunit_exec_exec__classify_64_assign_stmt_1626_c_macro_ __declare_static_bit_vector(OR_u1_u1_1625,1);\
bit_vector_or(&(f1_d_pos_denormal), &(f1_d_neg_denormal), &(OR_u1_u1_1625));\
bit_vector_cast_to_bit_vector(0, &(f1_denormal), &(OR_u1_u1_1625));\
;

#define fpunit_exec_exec__classify_64_assign_stmt_1631_c_macro_ __declare_static_bit_vector(OR_u1_u1_1630,1);\
bit_vector_or(&(f1_d_pos_inf), &(f1_d_neg_inf), &(OR_u1_u1_1630));\
bit_vector_cast_to_bit_vector(0, &(f1_inf), &(OR_u1_u1_1630));\
;

#define fpunit_exec_exec__classify_64_assign_stmt_1636_c_macro_ __declare_static_bit_vector(OR_u1_u1_1635,1);\
bit_vector_or(&(f1_d_snan), &(f1_d_qnan), &(OR_u1_u1_1635));\
bit_vector_cast_to_bit_vector(0, &(f1_nan), &(OR_u1_u1_1635));\
;

#define fpunit_exec_exec__classify_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pf1_zero)), &(f1_zero));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_normal)), &(f1_normal));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_denormal)), &(f1_denormal));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_inf)), &(f1_inf));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_nan)), &(f1_nan));\
;

#define fpunit_exec_exec__classify_and_prepare_32_inner_inarg_prep_macro__ static float a;\
a = (*__pa);\
__declare_static_bit_vector(extended_exponent,13);\
__declare_static_bit_vector(extended_mantissa,32);\
__declare_static_bit_vector(special_case,1);\
static float special_case_result;\
__declare_static_bit_vector(ua,32);\
__declare_static_bit_vector(z,1);\
__declare_static_bit_vector(norm,1);\
__declare_static_bit_vector(dnorm,1);\
__declare_static_bit_vector(inf,1);\
__declare_static_bit_vector(nan,1);\
__declare_static_bit_vector(sa,1);\
__declare_static_bit_vector(uspecial_case_result,32);\
__declare_static_bit_vector(m,23);\
__declare_static_bit_vector(frac,24);\
__declare_static_bit_vector(left_1_index,5);\
__declare_static_bit_vector(found_1,1);\
__declare_static_bit_vector(left_shifts_required,5);\
__declare_static_bit_vector(frac_shifted,24);\
__declare_static_bit_vector(exp,8);\
__declare_static_bit_vector(exp_bias,13);\
__declare_static_bit_vector(exp_base,13);\
__declare_static_bit_vector(ie_13,13);\
__declare_static_bit_vector(m_base,23);\

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3828_c_macro_ __declare_static_bit_vector(type_cast_3827,32);\
float_bitcast_to_bit_vector( &(type_cast_3827), &(a));\
bit_vector_cast_to_bit_vector(0, &(ua), &(type_cast_3827));\
;

#define fpunit_exec_exec__classify_and_prepare_32_stmt_3831_c_macro_ uint32_t fpunit_exec_exec__classify_and_prepare_32_stmt_3831_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__classify_and_prepare_32_stmt_3831_c_macro___print_counter,"classify_and_prepare_32_in_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3831_c_macro___print_counter,"a");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",a);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3831_c_macro___print_counter,"ua");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ua)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classify_and_prepare_32_call_stmt_3838_c_macro_ _fpunit_exec_exec_classify_32_( &(a), &(z), &(norm), &(dnorm), &(inf), &(nan));\
;

#define fpunit_exec_exec__classify_and_prepare_32_stmt_3844_c_macro_ uint32_t fpunit_exec_exec__classify_and_prepare_32_stmt_3844_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__classify_and_prepare_32_stmt_3844_c_macro___print_counter,"classify_and_prepare_32_class");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3844_c_macro___print_counter,"z");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(z)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3844_c_macro___print_counter,"norm");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(norm)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3844_c_macro___print_counter,"dnorm");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(dnorm)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3844_c_macro___print_counter,"inf");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(inf)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3844_c_macro___print_counter,"nan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(nan)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3849_c_macro_ __declare_static_bit_vector(konst_3847,32);\
bit_vector_clear(&konst_3847);\
konst_3847.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_3848,1);\
bit_vector_clear(&konst_3847);\
konst_3847.val.byte_array[0] = 31;\
bit_vector_bitsel( &(ua), &(konst_3847), &(BITSEL_u32_u1_3848));\
bit_vector_cast_to_bit_vector(0, &(sa), &(BITSEL_u32_u1_3848));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3856_c_macro_ __declare_static_bit_vector(OR_u1_u1_3853,1);\
__declare_static_bit_vector(OR_u1_u1_3855,1);\
bit_vector_or(&(z), &(inf), &(OR_u1_u1_3853));\
bit_vector_or(&(OR_u1_u1_3853), &(nan), &(OR_u1_u1_3855));\
bit_vector_cast_to_bit_vector(0, &(special_case), &(OR_u1_u1_3855));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3889_c_macro_ __declare_static_bit_vector(konst_3860,32);\
bit_vector_clear(&konst_3860);\
konst_3860.val.byte_array[0] = 1;\
__declare_static_bit_vector(konst_3861,32);\
bit_vector_clear(&konst_3861);\
konst_3861.val.byte_array[0] = 31;\
__declare_static_bit_vector(SHL_u32_u32_3862,32);\
bit_vector_clear(&SHL_u32_u32_3862);\
SHL_u32_u32_3862.val.byte_array[3] = 128;\
__declare_static_bit_vector(MUX_3864,32);\
__declare_static_bit_vector(konst_3865,32);\
bit_vector_clear(&konst_3865);\
__declare_static_bit_vector(MUX_3866,32);\
__declare_static_bit_vector(NOT_u8_u8_3870,8);\
bit_vector_clear(&NOT_u8_u8_3870);\
NOT_u8_u8_3870.val.byte_array[0] = 255;\
__declare_static_bit_vector(CONCAT_u1_u9_3871,9);\
bit_vector_clear(&CONCAT_u1_u9_3871);\
CONCAT_u1_u9_3871.val.byte_array[0] = 255;\
__declare_static_bit_vector(CONCAT_u1_u23_3874,23);\
bit_vector_clear(&CONCAT_u1_u23_3874);\
CONCAT_u1_u23_3874.val.byte_array[2] = 64;\
__declare_static_bit_vector(CONCAT_u9_u32_3875,32);\
bit_vector_clear(&CONCAT_u9_u32_3875);\
CONCAT_u9_u32_3875.val.byte_array[2] = 192;\
CONCAT_u9_u32_3875.val.byte_array[3] = 127;\
__declare_static_bit_vector(konst_3876,32);\
bit_vector_clear(&konst_3876);\
__declare_static_bit_vector(MUX_3877,32);\
__declare_static_bit_vector(OR_u32_u32_3878,32);\
__declare_static_bit_vector(NOT_u8_u8_3882,8);\
bit_vector_clear(&NOT_u8_u8_3882);\
NOT_u8_u8_3882.val.byte_array[0] = 255;\
__declare_static_bit_vector(CONCAT_u1_u9_3883,9);\
bit_vector_clear(&CONCAT_u1_u9_3883);\
CONCAT_u1_u9_3883.val.byte_array[0] = 255;\
__declare_static_bit_vector(CONCAT_u9_u32_3885,32);\
bit_vector_clear(&CONCAT_u9_u32_3885);\
CONCAT_u9_u32_3885.val.byte_array[2] = 128;\
CONCAT_u9_u32_3885.val.byte_array[3] = 127;\
__declare_static_bit_vector(konst_3886,32);\
bit_vector_clear(&konst_3886);\
__declare_static_bit_vector(MUX_3887,32);\
__declare_static_bit_vector(OR_u32_u32_3888,32);\
if (has_undefined_bit(&z)) {fprintf(stderr, "Error: variable z has undefined value (%s) at test point.\n", to_string(&z));assert(0);} \
if(bit_vector_to_uint64(0, &z)){if (has_undefined_bit(&sa)) {fprintf(stderr, "Error: variable sa has undefined value (%s) at test point.\n", to_string(&sa));assert(0);} \
if(bit_vector_to_uint64(0, &sa)){bit_vector_clear(&konst_3860);\
konst_3860.val.byte_array[0] = 1;\
bit_vector_clear(&konst_3861);\
konst_3861.val.byte_array[0] = 31;\
bit_vector_shift_left(&(konst_3860), &(konst_3861), &(SHL_u32_u32_3862));\
bit_vector_cast_to_bit_vector(0, &(MUX_3864), &(SHL_u32_u32_3862));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3864), &(ZERO_32));\
}bit_vector_cast_to_bit_vector(0, &(MUX_3866), &(MUX_3864));\
}else {bit_vector_clear(&konst_3865);\
bit_vector_cast_to_bit_vector(0, &(MUX_3866), &(konst_3865));\
}if (has_undefined_bit(&nan)) {fprintf(stderr, "Error: variable nan has undefined value (%s) at test point.\n", to_string(&nan));assert(0);} \
if(bit_vector_to_uint64(0, &nan)){bit_vector_not( &(ZERO_8), &(NOT_u8_u8_3870));\
bit_vector_concatenate( &(ZERO_1), &(NOT_u8_u8_3870), &(CONCAT_u1_u9_3871));\
bit_vector_concatenate( &(ONE_1), &(ZERO_22), &(CONCAT_u1_u23_3874));\
bit_vector_concatenate( &(CONCAT_u1_u9_3871), &(CONCAT_u1_u23_3874), &(CONCAT_u9_u32_3875));\
bit_vector_cast_to_bit_vector(0, &(MUX_3877), &(CONCAT_u9_u32_3875));\
}else {bit_vector_clear(&konst_3876);\
bit_vector_cast_to_bit_vector(0, &(MUX_3877), &(konst_3876));\
}bit_vector_or(&(MUX_3866), &(MUX_3877), &(OR_u32_u32_3878));\
if (has_undefined_bit(&inf)) {fprintf(stderr, "Error: variable inf has undefined value (%s) at test point.\n", to_string(&inf));assert(0);} \
if(bit_vector_to_uint64(0, &inf)){bit_vector_not( &(ZERO_8), &(NOT_u8_u8_3882));\
bit_vector_concatenate( &(ZERO_1), &(NOT_u8_u8_3882), &(CONCAT_u1_u9_3883));\
bit_vector_concatenate( &(CONCAT_u1_u9_3883), &(ZERO_23), &(CONCAT_u9_u32_3885));\
bit_vector_cast_to_bit_vector(0, &(MUX_3887), &(CONCAT_u9_u32_3885));\
}else {bit_vector_clear(&konst_3886);\
bit_vector_cast_to_bit_vector(0, &(MUX_3887), &(konst_3886));\
}bit_vector_or(&(OR_u32_u32_3878), &(MUX_3887), &(OR_u32_u32_3888));\
bit_vector_cast_to_bit_vector(0, &(uspecial_case_result), &(OR_u32_u32_3888));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3893_c_macro_ static float type_cast_3892;\
bit_vector_bitcast_to_float( &(type_cast_3892),  &(uspecial_case_result));\
special_case_result = type_cast_3892;\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3897_c_macro_ __declare_static_bit_vector(slice_3896,23);\
bit_vector_slice(&(ua), &(slice_3896), 0);\
bit_vector_cast_to_bit_vector(0, &(m), &(slice_3896));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3905_c_macro_ __declare_static_bit_vector(MUX_3902,1);\
__declare_static_bit_vector(CONCAT_u1_u24_3904,24);\
if (has_undefined_bit(&dnorm)) {fprintf(stderr, "Error: variable dnorm has undefined value (%s) at test point.\n", to_string(&dnorm));assert(0);} \
if(bit_vector_to_uint64(0, &dnorm)){bit_vector_cast_to_bit_vector(0, &(MUX_3902), &(ZERO_1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3902), &(ONE_1));\
}bit_vector_concatenate( &(MUX_3902), &(m), &(CONCAT_u1_u24_3904));\
bit_vector_cast_to_bit_vector(0, &(frac), &(CONCAT_u1_u24_3904));\
;

#define fpunit_exec_exec__classify_and_prepare_32_call_stmt_3909_c_macro_ _fpunit_exec_exec_find_left_24_( &(frac), &(left_1_index), &(found_1));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3914_c_macro_ __declare_static_bit_vector(konst_3911,5);\
bit_vector_clear(&konst_3911);\
konst_3911.val.byte_array[0] = 23;\
__declare_static_bit_vector(SUB_u5_u5_3913,5);\
bit_vector_clear(&konst_3911);\
konst_3911.val.byte_array[0] = 23;\
bit_vector_minus( &(konst_3911), &(left_1_index), &(SUB_u5_u5_3913));\
bit_vector_cast_to_bit_vector(0, &(left_shifts_required), &(SUB_u5_u5_3913));\
;

#define fpunit_exec_exec__classify_and_prepare_32_call_stmt_3918_c_macro_ _fpunit_exec_exec_i24_sll_( &(frac),  &(left_shifts_required), &(frac_shifted));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3922_c_macro_ __declare_static_bit_vector(slice_3921,8);\
bit_vector_slice(&(ua), &(slice_3921), 23);\
bit_vector_cast_to_bit_vector(0, &(exp), &(slice_3921));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3928_c_macro_ __declare_static_bit_vector(MUX_3927,13);\
if (has_undefined_bit(&dnorm)) {fprintf(stderr, "Error: variable dnorm has undefined value (%s) at test point.\n", to_string(&dnorm));assert(0);} \
if(bit_vector_to_uint64(0, &dnorm)){bit_vector_cast_to_bit_vector(1, &(MUX_3927), &(exp_base_126));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_3927), &(exp_base_127));\
}bit_vector_cast_to_bit_vector(1, &(exp_bias), &(MUX_3927));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3934_c_macro_ __declare_static_bit_vector(type_cast_3931,13);\
__declare_static_bit_vector(SUB_i13_i13_3933,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_3931), &(exp));\
bit_vector_minus( &(type_cast_3931), &(exp_bias), &(SUB_i13_i13_3933));\
bit_vector_cast_to_bit_vector(1, &(exp_base), &(SUB_i13_i13_3933));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3940_c_macro_ __declare_static_bit_vector(type_cast_3938,13);\
__declare_static_bit_vector(SUB_i13_i13_3939,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_3938), &(left_shifts_required));\
bit_vector_minus( &(exp_base), &(type_cast_3938), &(SUB_i13_i13_3939));\
bit_vector_cast_to_bit_vector(1, &(ie_13), &(SUB_i13_i13_3939));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3950_c_macro_ __declare_static_bit_vector(konst_3943,13);\
bit_vector_clear(&konst_3943);\
__declare_static_bit_vector(BITSEL_i13_u1_3944,1);\
__declare_static_bit_vector(konst_3946,13);\
bit_vector_clear(&konst_3946);\
konst_3946.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_i13_i13_3947,13);\
__declare_static_bit_vector(MUX_3949,13);\
bit_vector_clear(&konst_3943);\
bit_vector_bitsel( &(ie_13), &(konst_3943), &(BITSEL_i13_u1_3944));\
if (has_undefined_bit(&BITSEL_i13_u1_3944)) {fprintf(stderr, "Error: variable BITSEL_i13_u1_3944 has undefined value (%s) at test point.\n", to_string(&BITSEL_i13_u1_3944));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_i13_u1_3944)){bit_vector_clear(&konst_3946);\
konst_3946.val.byte_array[0] = 1;\
bit_vector_minus( &(ie_13), &(konst_3946), &(SUB_i13_i13_3947));\
bit_vector_cast_to_bit_vector(1, &(MUX_3949), &(SUB_i13_i13_3947));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_3949), &(ie_13));\
}bit_vector_cast_to_bit_vector(1, &(extended_exponent), &(MUX_3949));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3954_c_macro_ __declare_static_bit_vector(slice_3953,23);\
bit_vector_slice(&(frac_shifted), &(slice_3953), 0);\
bit_vector_cast_to_bit_vector(0, &(m_base), &(slice_3953));\
;

#define fpunit_exec_exec__classify_and_prepare_32_assign_stmt_3974_c_macro_ __declare_static_bit_vector(konst_3957,13);\
bit_vector_clear(&konst_3957);\
__declare_static_bit_vector(BITSEL_i13_u1_3958,1);\
__declare_static_bit_vector(CONCAT_u1_u24_3961,24);\
__declare_static_bit_vector(CONCAT_u1_u8_3964,8);\
bit_vector_clear(&CONCAT_u1_u8_3964);\
__declare_static_bit_vector(CONCAT_u24_u32_3965,32);\
__declare_static_bit_vector(CONCAT_u1_u2_3968,2);\
bit_vector_clear(&CONCAT_u1_u2_3968);\
CONCAT_u1_u2_3968.val.byte_array[0] = 1;\
__declare_static_bit_vector(CONCAT_u23_u30_3971,30);\
__declare_static_bit_vector(CONCAT_u2_u32_3972,32);\
__declare_static_bit_vector(MUX_3973,32);\
bit_vector_clear(&konst_3957);\
bit_vector_bitsel( &(ie_13), &(konst_3957), &(BITSEL_i13_u1_3958));\
if (has_undefined_bit(&BITSEL_i13_u1_3958)) {fprintf(stderr, "Error: variable BITSEL_i13_u1_3958 has undefined value (%s) at test point.\n", to_string(&BITSEL_i13_u1_3958));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_i13_u1_3958)){bit_vector_concatenate( &(ONE_1), &(m_base), &(CONCAT_u1_u24_3961));\
bit_vector_concatenate( &(ZERO_1), &(ZERO_7), &(CONCAT_u1_u8_3964));\
bit_vector_concatenate( &(CONCAT_u1_u24_3961), &(CONCAT_u1_u8_3964), &(CONCAT_u24_u32_3965));\
bit_vector_cast_to_bit_vector(0, &(MUX_3973), &(CONCAT_u24_u32_3965));\
}else {bit_vector_concatenate( &(ZERO_1), &(ONE_1), &(CONCAT_u1_u2_3968));\
bit_vector_concatenate( &(m_base), &(ZERO_7), &(CONCAT_u23_u30_3971));\
bit_vector_concatenate( &(CONCAT_u1_u2_3968), &(CONCAT_u23_u30_3971), &(CONCAT_u2_u32_3972));\
bit_vector_cast_to_bit_vector(0, &(MUX_3973), &(CONCAT_u2_u32_3972));\
}bit_vector_cast_to_bit_vector(0, &(extended_mantissa), &(MUX_3973));\
;

#define fpunit_exec_exec__classify_and_prepare_32_stmt_3979_c_macro_ uint32_t fpunit_exec_exec__classify_and_prepare_32_stmt_3979_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__classify_and_prepare_32_stmt_3979_c_macro___print_counter,"classify_and_prepare_32_out_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3979_c_macro___print_counter,"special_case");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(special_case)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3979_c_macro___print_counter,"special_case_result");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",special_case_result);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3979_c_macro___print_counter,"extended_exponent");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(extended_exponent)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_32_stmt_3979_c_macro___print_counter,"extended_mantissa");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(extended_mantissa)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classify_and_prepare_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(1, &((*__pextended_exponent)), &(extended_exponent));\
bit_vector_cast_to_bit_vector(0, &((*__pextended_mantissa)), &(extended_mantissa));\
bit_vector_cast_to_bit_vector(0, &((*__pspecial_case)), &(special_case));\
(*__pspecial_case_result) = special_case_result;\
;

#define fpunit_exec_exec__classify_and_prepare_64_inner_inarg_prep_macro__ static double a;\
a = (*__pa);\
__declare_static_bit_vector(extended_exponent,13);\
__declare_static_bit_vector(extended_mantissa,56);\
__declare_static_bit_vector(special_case,1);\
static double special_case_result;\
__declare_static_bit_vector(ua,64);\
__declare_static_bit_vector(sa,1);\
__declare_static_bit_vector(z,1);\
__declare_static_bit_vector(norm,1);\
__declare_static_bit_vector(dnorm,1);\
__declare_static_bit_vector(inf,1);\
__declare_static_bit_vector(nan,1);\
__declare_static_bit_vector(uspecial_case_result,64);\
__declare_static_bit_vector(m,52);\
__declare_static_bit_vector(frac,53);\
__declare_static_bit_vector(left_1_index,6);\
__declare_static_bit_vector(found_1,1);\
__declare_static_bit_vector(left_shifts_required,6);\
__declare_static_bit_vector(frac_shifted,53);\
__declare_static_bit_vector(exp,11);\
__declare_static_bit_vector(exp_bias,13);\
__declare_static_bit_vector(exp_base,13);\
__declare_static_bit_vector(ie_13,13);\
__declare_static_bit_vector(m_base,52);\

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_3991_c_macro_ __declare_static_bit_vector(type_cast_3990,64);\
double_bitcast_to_bit_vector( &(type_cast_3990), &(a));\
bit_vector_cast_to_bit_vector(0, &(ua), &(type_cast_3990));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_3996_c_macro_ __declare_static_bit_vector(konst_3994,64);\
bit_vector_clear(&konst_3994);\
konst_3994.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_3995,1);\
bit_vector_clear(&konst_3994);\
konst_3994.val.byte_array[0] = 63;\
bit_vector_bitsel( &(ua), &(konst_3994), &(BITSEL_u64_u1_3995));\
bit_vector_cast_to_bit_vector(0, &(sa), &(BITSEL_u64_u1_3995));\
;

#define fpunit_exec_exec__classify_and_prepare_64_stmt_3999_c_macro_ uint32_t fpunit_exec_exec__classify_and_prepare_64_stmt_3999_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__classify_and_prepare_64_stmt_3999_c_macro___print_counter,"classify_and_prepare_64_in_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_3999_c_macro___print_counter,"a");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",a);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_3999_c_macro___print_counter,"ua");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ua)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classify_and_prepare_64_call_stmt_4006_c_macro_ _fpunit_exec_exec_classify_64_( &(a), &(z), &(norm), &(dnorm), &(inf), &(nan));\
;

#define fpunit_exec_exec__classify_and_prepare_64_stmt_4012_c_macro_ uint32_t fpunit_exec_exec__classify_and_prepare_64_stmt_4012_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv364itwise>\t%s\n",fpunit_exec_exec__classify_and_prepare_64_stmt_4012_c_macro___print_counter,"classify_and_prepare_64_class");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv364itwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_4012_c_macro___print_counter,"z");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(z)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv364itwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_4012_c_macro___print_counter,"norm");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(norm)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv364itwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_4012_c_macro___print_counter,"dnorm");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(dnorm)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv364itwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_4012_c_macro___print_counter,"inf");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(inf)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv364itwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_4012_c_macro___print_counter,"nan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(nan)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4019_c_macro_ __declare_static_bit_vector(OR_u1_u1_4016,1);\
__declare_static_bit_vector(OR_u1_u1_4018,1);\
bit_vector_or(&(z), &(inf), &(OR_u1_u1_4016));\
bit_vector_or(&(OR_u1_u1_4016), &(nan), &(OR_u1_u1_4018));\
bit_vector_cast_to_bit_vector(0, &(special_case), &(OR_u1_u1_4018));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4052_c_macro_ __declare_static_bit_vector(konst_4023,64);\
bit_vector_clear(&konst_4023);\
konst_4023.val.byte_array[0] = 1;\
__declare_static_bit_vector(konst_4024,64);\
bit_vector_clear(&konst_4024);\
konst_4024.val.byte_array[0] = 63;\
__declare_static_bit_vector(SHL_u64_u64_4025,64);\
bit_vector_clear(&SHL_u64_u64_4025);\
SHL_u64_u64_4025.val.byte_array[7] = 128;\
__declare_static_bit_vector(MUX_4027,64);\
__declare_static_bit_vector(konst_4028,64);\
bit_vector_clear(&konst_4028);\
__declare_static_bit_vector(MUX_4029,64);\
__declare_static_bit_vector(NOT_u11_u11_4033,11);\
bit_vector_clear(&NOT_u11_u11_4033);\
NOT_u11_u11_4033.val.byte_array[0] = 255;\
NOT_u11_u11_4033.val.byte_array[1] = 255;\
__declare_static_bit_vector(CONCAT_u1_u12_4034,12);\
bit_vector_clear(&CONCAT_u1_u12_4034);\
CONCAT_u1_u12_4034.val.byte_array[0] = 255;\
CONCAT_u1_u12_4034.val.byte_array[1] = 7;\
__declare_static_bit_vector(CONCAT_u1_u52_4037,52);\
bit_vector_clear(&CONCAT_u1_u52_4037);\
CONCAT_u1_u52_4037.val.byte_array[6] = 8;\
__declare_static_bit_vector(CONCAT_u12_u64_4038,64);\
bit_vector_clear(&CONCAT_u12_u64_4038);\
CONCAT_u12_u64_4038.val.byte_array[6] = 248;\
CONCAT_u12_u64_4038.val.byte_array[7] = 127;\
__declare_static_bit_vector(konst_4039,64);\
bit_vector_clear(&konst_4039);\
__declare_static_bit_vector(MUX_4040,64);\
__declare_static_bit_vector(OR_u64_u64_4041,64);\
__declare_static_bit_vector(NOT_u11_u11_4045,11);\
bit_vector_clear(&NOT_u11_u11_4045);\
NOT_u11_u11_4045.val.byte_array[0] = 255;\
NOT_u11_u11_4045.val.byte_array[1] = 255;\
__declare_static_bit_vector(CONCAT_u1_u12_4046,12);\
bit_vector_clear(&CONCAT_u1_u12_4046);\
CONCAT_u1_u12_4046.val.byte_array[0] = 255;\
CONCAT_u1_u12_4046.val.byte_array[1] = 7;\
__declare_static_bit_vector(CONCAT_u12_u64_4048,64);\
bit_vector_clear(&CONCAT_u12_u64_4048);\
CONCAT_u12_u64_4048.val.byte_array[6] = 240;\
CONCAT_u12_u64_4048.val.byte_array[7] = 127;\
__declare_static_bit_vector(konst_4049,64);\
bit_vector_clear(&konst_4049);\
__declare_static_bit_vector(MUX_4050,64);\
__declare_static_bit_vector(OR_u64_u64_4051,64);\
if (has_undefined_bit(&z)) {fprintf(stderr, "Error: variable z has undefined value (%s) at test point.\n", to_string(&z));assert(0);} \
if(bit_vector_to_uint64(0, &z)){if (has_undefined_bit(&sa)) {fprintf(stderr, "Error: variable sa has undefined value (%s) at test point.\n", to_string(&sa));assert(0);} \
if(bit_vector_to_uint64(0, &sa)){bit_vector_clear(&konst_4023);\
konst_4023.val.byte_array[0] = 1;\
bit_vector_clear(&konst_4024);\
konst_4024.val.byte_array[0] = 63;\
bit_vector_shift_left(&(konst_4023), &(konst_4024), &(SHL_u64_u64_4025));\
bit_vector_cast_to_bit_vector(0, &(MUX_4027), &(SHL_u64_u64_4025));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_4027), &(ZERO_64));\
}bit_vector_cast_to_bit_vector(0, &(MUX_4029), &(MUX_4027));\
}else {bit_vector_clear(&konst_4028);\
bit_vector_cast_to_bit_vector(0, &(MUX_4029), &(konst_4028));\
}if (has_undefined_bit(&nan)) {fprintf(stderr, "Error: variable nan has undefined value (%s) at test point.\n", to_string(&nan));assert(0);} \
if(bit_vector_to_uint64(0, &nan)){bit_vector_not( &(ZERO_11), &(NOT_u11_u11_4033));\
bit_vector_concatenate( &(ZERO_1), &(NOT_u11_u11_4033), &(CONCAT_u1_u12_4034));\
bit_vector_concatenate( &(ONE_1), &(ZERO_51), &(CONCAT_u1_u52_4037));\
bit_vector_concatenate( &(CONCAT_u1_u12_4034), &(CONCAT_u1_u52_4037), &(CONCAT_u12_u64_4038));\
bit_vector_cast_to_bit_vector(0, &(MUX_4040), &(CONCAT_u12_u64_4038));\
}else {bit_vector_clear(&konst_4039);\
bit_vector_cast_to_bit_vector(0, &(MUX_4040), &(konst_4039));\
}bit_vector_or(&(MUX_4029), &(MUX_4040), &(OR_u64_u64_4041));\
if (has_undefined_bit(&inf)) {fprintf(stderr, "Error: variable inf has undefined value (%s) at test point.\n", to_string(&inf));assert(0);} \
if(bit_vector_to_uint64(0, &inf)){bit_vector_not( &(ZERO_11), &(NOT_u11_u11_4045));\
bit_vector_concatenate( &(ZERO_1), &(NOT_u11_u11_4045), &(CONCAT_u1_u12_4046));\
bit_vector_concatenate( &(CONCAT_u1_u12_4046), &(ZERO_52), &(CONCAT_u12_u64_4048));\
bit_vector_cast_to_bit_vector(0, &(MUX_4050), &(CONCAT_u12_u64_4048));\
}else {bit_vector_clear(&konst_4049);\
bit_vector_cast_to_bit_vector(0, &(MUX_4050), &(konst_4049));\
}bit_vector_or(&(OR_u64_u64_4041), &(MUX_4050), &(OR_u64_u64_4051));\
bit_vector_cast_to_bit_vector(0, &(uspecial_case_result), &(OR_u64_u64_4051));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4056_c_macro_ static double type_cast_4055;\
bit_vector_bitcast_to_double( &(type_cast_4055),  &(uspecial_case_result));\
special_case_result = type_cast_4055;\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4060_c_macro_ __declare_static_bit_vector(slice_4059,52);\
bit_vector_slice(&(ua), &(slice_4059), 0);\
bit_vector_cast_to_bit_vector(0, &(m), &(slice_4059));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4068_c_macro_ __declare_static_bit_vector(MUX_4065,1);\
__declare_static_bit_vector(CONCAT_u1_u53_4067,53);\
if (has_undefined_bit(&dnorm)) {fprintf(stderr, "Error: variable dnorm has undefined value (%s) at test point.\n", to_string(&dnorm));assert(0);} \
if(bit_vector_to_uint64(0, &dnorm)){bit_vector_cast_to_bit_vector(0, &(MUX_4065), &(ZERO_1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_4065), &(ONE_1));\
}bit_vector_concatenate( &(MUX_4065), &(m), &(CONCAT_u1_u53_4067));\
bit_vector_cast_to_bit_vector(0, &(frac), &(CONCAT_u1_u53_4067));\
;

#define fpunit_exec_exec__classify_and_prepare_64_call_stmt_4072_c_macro_ _fpunit_exec_exec_find_left_53_( &(frac), &(left_1_index), &(found_1));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4077_c_macro_ __declare_static_bit_vector(konst_4074,6);\
bit_vector_clear(&konst_4074);\
konst_4074.val.byte_array[0] = 52;\
__declare_static_bit_vector(SUB_u6_u6_4076,6);\
bit_vector_clear(&konst_4074);\
konst_4074.val.byte_array[0] = 52;\
bit_vector_minus( &(konst_4074), &(left_1_index), &(SUB_u6_u6_4076));\
bit_vector_cast_to_bit_vector(0, &(left_shifts_required), &(SUB_u6_u6_4076));\
;

#define fpunit_exec_exec__classify_and_prepare_64_call_stmt_4081_c_macro_ _fpunit_exec_exec_i53_sll_( &(frac),  &(left_shifts_required), &(frac_shifted));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4085_c_macro_ __declare_static_bit_vector(slice_4084,11);\
bit_vector_slice(&(ua), &(slice_4084), 52);\
bit_vector_cast_to_bit_vector(0, &(exp), &(slice_4084));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4091_c_macro_ __declare_static_bit_vector(MUX_4090,13);\
if (has_undefined_bit(&dnorm)) {fprintf(stderr, "Error: variable dnorm has undefined value (%s) at test point.\n", to_string(&dnorm));assert(0);} \
if(bit_vector_to_uint64(0, &dnorm)){bit_vector_cast_to_bit_vector(1, &(MUX_4090), &(exp_base_1022));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_4090), &(exp_base_1023));\
}bit_vector_cast_to_bit_vector(1, &(exp_bias), &(MUX_4090));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4097_c_macro_ __declare_static_bit_vector(type_cast_4094,13);\
__declare_static_bit_vector(SUB_i13_i13_4096,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_4094), &(exp));\
bit_vector_minus( &(type_cast_4094), &(exp_bias), &(SUB_i13_i13_4096));\
bit_vector_cast_to_bit_vector(1, &(exp_base), &(SUB_i13_i13_4096));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4103_c_macro_ __declare_static_bit_vector(type_cast_4101,13);\
__declare_static_bit_vector(SUB_i13_i13_4102,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_4101), &(left_shifts_required));\
bit_vector_minus( &(exp_base), &(type_cast_4101), &(SUB_i13_i13_4102));\
bit_vector_cast_to_bit_vector(1, &(ie_13), &(SUB_i13_i13_4102));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4113_c_macro_ __declare_static_bit_vector(konst_4106,13);\
bit_vector_clear(&konst_4106);\
__declare_static_bit_vector(BITSEL_i13_u1_4107,1);\
__declare_static_bit_vector(konst_4109,13);\
bit_vector_clear(&konst_4109);\
konst_4109.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_i13_i13_4110,13);\
__declare_static_bit_vector(MUX_4112,13);\
bit_vector_clear(&konst_4106);\
bit_vector_bitsel( &(ie_13), &(konst_4106), &(BITSEL_i13_u1_4107));\
if (has_undefined_bit(&BITSEL_i13_u1_4107)) {fprintf(stderr, "Error: variable BITSEL_i13_u1_4107 has undefined value (%s) at test point.\n", to_string(&BITSEL_i13_u1_4107));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_i13_u1_4107)){bit_vector_clear(&konst_4109);\
konst_4109.val.byte_array[0] = 1;\
bit_vector_minus( &(ie_13), &(konst_4109), &(SUB_i13_i13_4110));\
bit_vector_cast_to_bit_vector(1, &(MUX_4112), &(SUB_i13_i13_4110));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_4112), &(ie_13));\
}bit_vector_cast_to_bit_vector(1, &(extended_exponent), &(MUX_4112));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4117_c_macro_ __declare_static_bit_vector(slice_4116,52);\
bit_vector_slice(&(frac_shifted), &(slice_4116), 0);\
bit_vector_cast_to_bit_vector(0, &(m_base), &(slice_4116));\
;

#define fpunit_exec_exec__classify_and_prepare_64_assign_stmt_4135_c_macro_ __declare_static_bit_vector(konst_4120,13);\
bit_vector_clear(&konst_4120);\
__declare_static_bit_vector(BITSEL_i13_u1_4121,1);\
__declare_static_bit_vector(CONCAT_u1_u53_4124,53);\
__declare_static_bit_vector(CONCAT_u53_u56_4126,56);\
__declare_static_bit_vector(CONCAT_u1_u2_4129,2);\
bit_vector_clear(&CONCAT_u1_u2_4129);\
CONCAT_u1_u2_4129.val.byte_array[0] = 1;\
__declare_static_bit_vector(CONCAT_u52_u54_4132,54);\
__declare_static_bit_vector(CONCAT_u2_u56_4133,56);\
__declare_static_bit_vector(MUX_4134,56);\
bit_vector_clear(&konst_4120);\
bit_vector_bitsel( &(ie_13), &(konst_4120), &(BITSEL_i13_u1_4121));\
if (has_undefined_bit(&BITSEL_i13_u1_4121)) {fprintf(stderr, "Error: variable BITSEL_i13_u1_4121 has undefined value (%s) at test point.\n", to_string(&BITSEL_i13_u1_4121));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_i13_u1_4121)){bit_vector_concatenate( &(ONE_1), &(m_base), &(CONCAT_u1_u53_4124));\
bit_vector_concatenate( &(CONCAT_u1_u53_4124), &(ZERO_3), &(CONCAT_u53_u56_4126));\
bit_vector_cast_to_bit_vector(0, &(MUX_4134), &(CONCAT_u53_u56_4126));\
}else {bit_vector_concatenate( &(ZERO_1), &(ONE_1), &(CONCAT_u1_u2_4129));\
bit_vector_concatenate( &(m_base), &(ZERO_2), &(CONCAT_u52_u54_4132));\
bit_vector_concatenate( &(CONCAT_u1_u2_4129), &(CONCAT_u52_u54_4132), &(CONCAT_u2_u56_4133));\
bit_vector_cast_to_bit_vector(0, &(MUX_4134), &(CONCAT_u2_u56_4133));\
}bit_vector_cast_to_bit_vector(0, &(extended_mantissa), &(MUX_4134));\
;

#define fpunit_exec_exec__classify_and_prepare_64_stmt_4140_c_macro_ uint32_t fpunit_exec_exec__classify_and_prepare_64_stmt_4140_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__classify_and_prepare_64_stmt_4140_c_macro___print_counter,"classify_and_prepare_64_out_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_4140_c_macro___print_counter,"special_case");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(special_case)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_4140_c_macro___print_counter,"special_case_result");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",special_case_result);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_4140_c_macro___print_counter,"extended_exponent");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(extended_exponent)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__classify_and_prepare_64_stmt_4140_c_macro___print_counter,"extended_mantissa");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(extended_mantissa)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__classify_and_prepare_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(1, &((*__pextended_exponent)), &(extended_exponent));\
bit_vector_cast_to_bit_vector(0, &((*__pextended_mantissa)), &(extended_mantissa));\
bit_vector_cast_to_bit_vector(0, &((*__pspecial_case)), &(special_case));\
(*__pspecial_case_result) = special_case_result;\
;

#define fpunit_exec_exec__classify_utility_inner_inarg_prep_macro__ __declare_static_bit_vector(use_single_precision_inputs,1);\
bit_vector_cast_to_bit_vector(0, &(use_single_precision_inputs), &((*__puse_single_precision_inputs)));\
__declare_static_bit_vector(f1_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_s_class), &((*__pf1_s_class)));\
__declare_static_bit_vector(f1_d_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_d_class), &((*__pf1_d_class)));\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_pos_inf,1);\
__declare_static_bit_vector(f1_neg_inf,1);\
__declare_static_bit_vector(f1_s_pos_normal,1);\
__declare_static_bit_vector(f1_s_neg_normal,1);\
__declare_static_bit_vector(f1_s_pos_denormal,1);\
__declare_static_bit_vector(f1_s_neg_denormal,1);\
__declare_static_bit_vector(f1_s_qnan,1);\
__declare_static_bit_vector(f1_s_snan,1);\
__declare_static_bit_vector(f1_s_pos_inf,1);\
__declare_static_bit_vector(f1_s_neg_inf,1);\
__declare_static_bit_vector(f1_s_pos_zero,1);\
__declare_static_bit_vector(f1_s_neg_zero,1);\
__declare_static_bit_vector(f1_d_pos_normal,1);\
__declare_static_bit_vector(f1_d_neg_normal,1);\
__declare_static_bit_vector(f1_d_pos_denormal,1);\
__declare_static_bit_vector(f1_d_neg_denormal,1);\
__declare_static_bit_vector(f1_d_qnan,1);\
__declare_static_bit_vector(f1_d_snan,1);\
__declare_static_bit_vector(f1_d_pos_inf,1);\
__declare_static_bit_vector(f1_d_neg_inf,1);\
__declare_static_bit_vector(f1_d_pos_zero,1);\
__declare_static_bit_vector(f1_d_neg_zero,1);\

#define fpunit_exec_exec__classify_utility_assign_stmt_4156_c_macro_ __declare_static_bit_vector(slice_4155,1);\
bit_vector_slice(&(f1_s_class), &(slice_4155), 9);\
bit_vector_cast_to_bit_vector(0, &(f1_s_pos_normal), &(slice_4155));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4160_c_macro_ __declare_static_bit_vector(slice_4159,1);\
bit_vector_slice(&(f1_s_class), &(slice_4159), 8);\
bit_vector_cast_to_bit_vector(0, &(f1_s_neg_normal), &(slice_4159));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4164_c_macro_ __declare_static_bit_vector(slice_4163,1);\
bit_vector_slice(&(f1_s_class), &(slice_4163), 7);\
bit_vector_cast_to_bit_vector(0, &(f1_s_pos_denormal), &(slice_4163));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4168_c_macro_ __declare_static_bit_vector(slice_4167,1);\
bit_vector_slice(&(f1_s_class), &(slice_4167), 6);\
bit_vector_cast_to_bit_vector(0, &(f1_s_neg_denormal), &(slice_4167));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4172_c_macro_ __declare_static_bit_vector(slice_4171,1);\
bit_vector_slice(&(f1_s_class), &(slice_4171), 5);\
bit_vector_cast_to_bit_vector(0, &(f1_s_qnan), &(slice_4171));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4176_c_macro_ __declare_static_bit_vector(slice_4175,1);\
bit_vector_slice(&(f1_s_class), &(slice_4175), 4);\
bit_vector_cast_to_bit_vector(0, &(f1_s_snan), &(slice_4175));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4180_c_macro_ __declare_static_bit_vector(slice_4179,1);\
bit_vector_slice(&(f1_s_class), &(slice_4179), 3);\
bit_vector_cast_to_bit_vector(0, &(f1_s_pos_inf), &(slice_4179));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4184_c_macro_ __declare_static_bit_vector(slice_4183,1);\
bit_vector_slice(&(f1_s_class), &(slice_4183), 2);\
bit_vector_cast_to_bit_vector(0, &(f1_s_neg_inf), &(slice_4183));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4188_c_macro_ __declare_static_bit_vector(slice_4187,1);\
bit_vector_slice(&(f1_s_class), &(slice_4187), 1);\
bit_vector_cast_to_bit_vector(0, &(f1_s_pos_zero), &(slice_4187));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4192_c_macro_ __declare_static_bit_vector(slice_4191,1);\
bit_vector_slice(&(f1_s_class), &(slice_4191), 0);\
bit_vector_cast_to_bit_vector(0, &(f1_s_neg_zero), &(slice_4191));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4196_c_macro_ __declare_static_bit_vector(slice_4195,1);\
bit_vector_slice(&(f1_d_class), &(slice_4195), 9);\
bit_vector_cast_to_bit_vector(0, &(f1_d_pos_normal), &(slice_4195));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4200_c_macro_ __declare_static_bit_vector(slice_4199,1);\
bit_vector_slice(&(f1_d_class), &(slice_4199), 8);\
bit_vector_cast_to_bit_vector(0, &(f1_d_neg_normal), &(slice_4199));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4204_c_macro_ __declare_static_bit_vector(slice_4203,1);\
bit_vector_slice(&(f1_d_class), &(slice_4203), 7);\
bit_vector_cast_to_bit_vector(0, &(f1_d_pos_denormal), &(slice_4203));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4208_c_macro_ __declare_static_bit_vector(slice_4207,1);\
bit_vector_slice(&(f1_d_class), &(slice_4207), 6);\
bit_vector_cast_to_bit_vector(0, &(f1_d_neg_denormal), &(slice_4207));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4212_c_macro_ __declare_static_bit_vector(slice_4211,1);\
bit_vector_slice(&(f1_d_class), &(slice_4211), 5);\
bit_vector_cast_to_bit_vector(0, &(f1_d_qnan), &(slice_4211));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4216_c_macro_ __declare_static_bit_vector(slice_4215,1);\
bit_vector_slice(&(f1_d_class), &(slice_4215), 4);\
bit_vector_cast_to_bit_vector(0, &(f1_d_snan), &(slice_4215));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4220_c_macro_ __declare_static_bit_vector(slice_4219,1);\
bit_vector_slice(&(f1_d_class), &(slice_4219), 3);\
bit_vector_cast_to_bit_vector(0, &(f1_d_pos_inf), &(slice_4219));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4224_c_macro_ __declare_static_bit_vector(slice_4223,1);\
bit_vector_slice(&(f1_d_class), &(slice_4223), 2);\
bit_vector_cast_to_bit_vector(0, &(f1_d_neg_inf), &(slice_4223));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4228_c_macro_ __declare_static_bit_vector(slice_4227,1);\
bit_vector_slice(&(f1_d_class), &(slice_4227), 1);\
bit_vector_cast_to_bit_vector(0, &(f1_d_pos_zero), &(slice_4227));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4232_c_macro_ __declare_static_bit_vector(slice_4231,1);\
bit_vector_slice(&(f1_d_class), &(slice_4231), 0);\
bit_vector_cast_to_bit_vector(0, &(f1_d_neg_zero), &(slice_4231));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4242_c_macro_ __declare_static_bit_vector(OR_u1_u1_4237,1);\
__declare_static_bit_vector(OR_u1_u1_4240,1);\
__declare_static_bit_vector(MUX_4241,1);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_or(&(f1_s_pos_zero), &(f1_s_neg_zero), &(OR_u1_u1_4237));\
bit_vector_cast_to_bit_vector(0, &(MUX_4241), &(OR_u1_u1_4237));\
}else {bit_vector_or(&(f1_d_pos_zero), &(f1_d_neg_zero), &(OR_u1_u1_4240));\
bit_vector_cast_to_bit_vector(0, &(MUX_4241), &(OR_u1_u1_4240));\
}bit_vector_cast_to_bit_vector(0, &(f1_zero), &(MUX_4241));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4256_c_macro_ __declare_static_bit_vector(OR_u1_u1_4247,1);\
__declare_static_bit_vector(OR_u1_u1_4250,1);\
__declare_static_bit_vector(OR_u1_u1_4251,1);\
__declare_static_bit_vector(OR_u1_u1_4254,1);\
__declare_static_bit_vector(MUX_4255,1);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_or(&(f1_s_pos_normal), &(f1_s_pos_denormal), &(OR_u1_u1_4247));\
bit_vector_or(&(f1_s_neg_normal), &(f1_s_neg_denormal), &(OR_u1_u1_4250));\
bit_vector_or(&(OR_u1_u1_4247), &(OR_u1_u1_4250), &(OR_u1_u1_4251));\
bit_vector_cast_to_bit_vector(0, &(MUX_4255), &(OR_u1_u1_4251));\
}else {bit_vector_or(&(f1_d_pos_normal), &(f1_d_neg_normal), &(OR_u1_u1_4254));\
bit_vector_cast_to_bit_vector(0, &(MUX_4255), &(OR_u1_u1_4254));\
}bit_vector_cast_to_bit_vector(0, &(f1_normal), &(MUX_4255));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4264_c_macro_ __declare_static_bit_vector(OR_u1_u1_4262,1);\
__declare_static_bit_vector(MUX_4263,1);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(0, &(MUX_4263), &(ZERO_1));\
}else {bit_vector_or(&(f1_d_pos_denormal), &(f1_d_neg_denormal), &(OR_u1_u1_4262));\
bit_vector_cast_to_bit_vector(0, &(MUX_4263), &(OR_u1_u1_4262));\
}bit_vector_cast_to_bit_vector(0, &(f1_denormal), &(MUX_4263));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4274_c_macro_ __declare_static_bit_vector(OR_u1_u1_4269,1);\
__declare_static_bit_vector(OR_u1_u1_4272,1);\
__declare_static_bit_vector(MUX_4273,1);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_or(&(f1_s_pos_inf), &(f1_s_neg_inf), &(OR_u1_u1_4269));\
bit_vector_cast_to_bit_vector(0, &(MUX_4273), &(OR_u1_u1_4269));\
}else {bit_vector_or(&(f1_d_pos_inf), &(f1_d_neg_inf), &(OR_u1_u1_4272));\
bit_vector_cast_to_bit_vector(0, &(MUX_4273), &(OR_u1_u1_4272));\
}bit_vector_cast_to_bit_vector(0, &(f1_inf), &(MUX_4273));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4284_c_macro_ __declare_static_bit_vector(OR_u1_u1_4279,1);\
__declare_static_bit_vector(OR_u1_u1_4282,1);\
__declare_static_bit_vector(MUX_4283,1);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_or(&(f1_s_qnan), &(f1_s_snan), &(OR_u1_u1_4279));\
bit_vector_cast_to_bit_vector(0, &(MUX_4283), &(OR_u1_u1_4279));\
}else {bit_vector_or(&(f1_d_snan), &(f1_d_qnan), &(OR_u1_u1_4282));\
bit_vector_cast_to_bit_vector(0, &(MUX_4283), &(OR_u1_u1_4282));\
}bit_vector_cast_to_bit_vector(0, &(f1_nan), &(MUX_4283));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4290_c_macro_ __declare_static_bit_vector(MUX_4289,1);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(0, &(MUX_4289), &(f1_s_pos_inf));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_4289), &(f1_d_pos_inf));\
}bit_vector_cast_to_bit_vector(0, &(f1_pos_inf), &(MUX_4289));\
;

#define fpunit_exec_exec__classify_utility_assign_stmt_4296_c_macro_ __declare_static_bit_vector(MUX_4295,1);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(0, &(MUX_4295), &(f1_s_neg_inf));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_4295), &(f1_d_neg_inf));\
}bit_vector_cast_to_bit_vector(0, &(f1_neg_inf), &(MUX_4295));\
;

#define fpunit_exec_exec__classify_utility_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pf1_zero)), &(f1_zero));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_normal)), &(f1_normal));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_denormal)), &(f1_denormal));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_nan)), &(f1_nan));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_inf)), &(f1_inf));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_pos_inf)), &(f1_pos_inf));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_neg_inf)), &(f1_neg_inf));\
;

#define fpunit_exec_exec__compare11_inner_inarg_prep_macro__ __declare_static_bit_vector(X,11);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,11);\
bit_vector_cast_to_bit_vector(0, &(Y), &((*__pY)));\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(XH,3);\
__declare_static_bit_vector(XL,8);\
__declare_static_bit_vector(YH,3);\
__declare_static_bit_vector(YL,8);\
__declare_static_bit_vector(GH,1);\
__declare_static_bit_vector(EH,1);\
__declare_static_bit_vector(GL,1);\
__declare_static_bit_vector(EL,1);\

#define fpunit_exec_exec__compare11_assign_stmt_4462_c_macro_ __declare_static_bit_vector(slice_4461,3);\
bit_vector_slice(&(X), &(slice_4461), 8);\
bit_vector_cast_to_bit_vector(0, &(XH), &(slice_4461));\
;

#define fpunit_exec_exec__compare11_assign_stmt_4466_c_macro_ __declare_static_bit_vector(slice_4465,8);\
bit_vector_slice(&(X), &(slice_4465), 0);\
bit_vector_cast_to_bit_vector(0, &(XL), &(slice_4465));\
;

#define fpunit_exec_exec__compare11_assign_stmt_4470_c_macro_ __declare_static_bit_vector(slice_4469,3);\
bit_vector_slice(&(Y), &(slice_4469), 8);\
bit_vector_cast_to_bit_vector(0, &(YH), &(slice_4469));\
;

#define fpunit_exec_exec__compare11_assign_stmt_4474_c_macro_ __declare_static_bit_vector(slice_4473,8);\
bit_vector_slice(&(Y), &(slice_4473), 0);\
bit_vector_cast_to_bit_vector(0, &(YL), &(slice_4473));\
;

#define fpunit_exec_exec__compare11_assign_stmt_4479_c_macro_ __declare_static_bit_vector(UGT_u3_u1_4478,1);\
bit_vector_greater(0, &(XH), &(YH), &(UGT_u3_u1_4478));\
bit_vector_cast_to_bit_vector(0, &(GH), &(UGT_u3_u1_4478));\
;

#define fpunit_exec_exec__compare11_assign_stmt_4484_c_macro_ __declare_static_bit_vector(EQ_u3_u1_4483,1);\
bit_vector_equal(0, &(XH), &(YH), &(EQ_u3_u1_4483));\
bit_vector_cast_to_bit_vector(0, &(EH), &(EQ_u3_u1_4483));\
;

#define fpunit_exec_exec__compare11_call_stmt_4489_c_macro_ _fpunit_exec_exec_compare8_( &(XL),  &(YL), &(GL), &(EL));\
;

#define fpunit_exec_exec__compare11_assign_stmt_4496_c_macro_ __declare_static_bit_vector(AND_u1_u1_4494,1);\
__declare_static_bit_vector(OR_u1_u1_4495,1);\
bit_vector_and(&(EH), &(GL), &(AND_u1_u1_4494));\
bit_vector_or(&(GH), &(AND_u1_u1_4494), &(OR_u1_u1_4495));\
bit_vector_cast_to_bit_vector(0, &(G), &(OR_u1_u1_4495));\
;

#define fpunit_exec_exec__compare11_assign_stmt_4501_c_macro_ __declare_static_bit_vector(AND_u1_u1_4500,1);\
bit_vector_and(&(EH), &(EL), &(AND_u1_u1_4500));\
bit_vector_cast_to_bit_vector(0, &(E), &(AND_u1_u1_4500));\
;

#define fpunit_exec_exec__compare11_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pG)), &(G));\
bit_vector_cast_to_bit_vector(0, &((*__pE)), &(E));\
;

#define fpunit_exec_exec__compare16_inner_inarg_prep_macro__ __declare_static_bit_vector(X,16);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,16);\
bit_vector_cast_to_bit_vector(0, &(Y), &((*__pY)));\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(XH,8);\
__declare_static_bit_vector(XL,8);\
__declare_static_bit_vector(YH,8);\
__declare_static_bit_vector(YL,8);\
__declare_static_bit_vector(GH,1);\
__declare_static_bit_vector(EH,1);\
__declare_static_bit_vector(GL,1);\
__declare_static_bit_vector(EL,1);\

#define fpunit_exec_exec__compare16_assign_stmt_4511_c_macro_ __declare_static_bit_vector(slice_4510,8);\
bit_vector_slice(&(X), &(slice_4510), 8);\
bit_vector_cast_to_bit_vector(0, &(XH), &(slice_4510));\
;

#define fpunit_exec_exec__compare16_assign_stmt_4515_c_macro_ __declare_static_bit_vector(slice_4514,8);\
bit_vector_slice(&(X), &(slice_4514), 0);\
bit_vector_cast_to_bit_vector(0, &(XL), &(slice_4514));\
;

#define fpunit_exec_exec__compare16_assign_stmt_4519_c_macro_ __declare_static_bit_vector(slice_4518,8);\
bit_vector_slice(&(Y), &(slice_4518), 8);\
bit_vector_cast_to_bit_vector(0, &(YH), &(slice_4518));\
;

#define fpunit_exec_exec__compare16_assign_stmt_4523_c_macro_ __declare_static_bit_vector(slice_4522,8);\
bit_vector_slice(&(Y), &(slice_4522), 0);\
bit_vector_cast_to_bit_vector(0, &(YL), &(slice_4522));\
;

#define fpunit_exec_exec__compare16_call_stmt_4528_c_macro_ _fpunit_exec_exec_compare8_( &(XH),  &(YH), &(GH), &(EH));\
;

#define fpunit_exec_exec__compare16_call_stmt_4533_c_macro_ _fpunit_exec_exec_compare8_( &(XL),  &(YL), &(GL), &(EL));\
;

#define fpunit_exec_exec__compare16_assign_stmt_4540_c_macro_ __declare_static_bit_vector(AND_u1_u1_4538,1);\
__declare_static_bit_vector(OR_u1_u1_4539,1);\
bit_vector_and(&(EH), &(GL), &(AND_u1_u1_4538));\
bit_vector_or(&(GH), &(AND_u1_u1_4538), &(OR_u1_u1_4539));\
bit_vector_cast_to_bit_vector(0, &(G), &(OR_u1_u1_4539));\
;

#define fpunit_exec_exec__compare16_assign_stmt_4545_c_macro_ __declare_static_bit_vector(AND_u1_u1_4544,1);\
bit_vector_and(&(EH), &(EL), &(AND_u1_u1_4544));\
bit_vector_cast_to_bit_vector(0, &(E), &(AND_u1_u1_4544));\
;

#define fpunit_exec_exec__compare16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pG)), &(G));\
bit_vector_cast_to_bit_vector(0, &((*__pE)), &(E));\
;

#define fpunit_exec_exec__compare24_inner_inarg_prep_macro__ __declare_static_bit_vector(X,24);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,24);\
bit_vector_cast_to_bit_vector(0, &(Y), &((*__pY)));\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(XH,8);\
__declare_static_bit_vector(XL,16);\
__declare_static_bit_vector(YH,8);\
__declare_static_bit_vector(YL,16);\
__declare_static_bit_vector(GH,1);\
__declare_static_bit_vector(EH,1);\
__declare_static_bit_vector(GL,1);\
__declare_static_bit_vector(EL,1);\

#define fpunit_exec_exec__compare24_assign_stmt_4555_c_macro_ __declare_static_bit_vector(slice_4554,8);\
bit_vector_slice(&(X), &(slice_4554), 16);\
bit_vector_cast_to_bit_vector(0, &(XH), &(slice_4554));\
;

#define fpunit_exec_exec__compare24_assign_stmt_4559_c_macro_ __declare_static_bit_vector(slice_4558,16);\
bit_vector_slice(&(X), &(slice_4558), 0);\
bit_vector_cast_to_bit_vector(0, &(XL), &(slice_4558));\
;

#define fpunit_exec_exec__compare24_assign_stmt_4563_c_macro_ __declare_static_bit_vector(slice_4562,8);\
bit_vector_slice(&(Y), &(slice_4562), 16);\
bit_vector_cast_to_bit_vector(0, &(YH), &(slice_4562));\
;

#define fpunit_exec_exec__compare24_assign_stmt_4567_c_macro_ __declare_static_bit_vector(slice_4566,16);\
bit_vector_slice(&(Y), &(slice_4566), 0);\
bit_vector_cast_to_bit_vector(0, &(YL), &(slice_4566));\
;

#define fpunit_exec_exec__compare24_call_stmt_4572_c_macro_ _fpunit_exec_exec_compare8_( &(XH),  &(YH), &(GH), &(EH));\
;

#define fpunit_exec_exec__compare24_call_stmt_4577_c_macro_ _fpunit_exec_exec_compare16_( &(XL),  &(YL), &(GL), &(EL));\
;

#define fpunit_exec_exec__compare24_assign_stmt_4584_c_macro_ __declare_static_bit_vector(AND_u1_u1_4582,1);\
__declare_static_bit_vector(OR_u1_u1_4583,1);\
bit_vector_and(&(EH), &(GL), &(AND_u1_u1_4582));\
bit_vector_or(&(GH), &(AND_u1_u1_4582), &(OR_u1_u1_4583));\
bit_vector_cast_to_bit_vector(0, &(G), &(OR_u1_u1_4583));\
;

#define fpunit_exec_exec__compare24_assign_stmt_4589_c_macro_ __declare_static_bit_vector(AND_u1_u1_4588,1);\
bit_vector_and(&(EH), &(EL), &(AND_u1_u1_4588));\
bit_vector_cast_to_bit_vector(0, &(E), &(AND_u1_u1_4588));\
;

#define fpunit_exec_exec__compare24_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pG)), &(G));\
bit_vector_cast_to_bit_vector(0, &((*__pE)), &(E));\
;

#define fpunit_exec_exec__compare32_inner_inarg_prep_macro__ __declare_static_bit_vector(X,32);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,32);\
bit_vector_cast_to_bit_vector(0, &(Y), &((*__pY)));\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(XH,16);\
__declare_static_bit_vector(XL,16);\
__declare_static_bit_vector(YH,16);\
__declare_static_bit_vector(YL,16);\
__declare_static_bit_vector(GH,1);\
__declare_static_bit_vector(EH,1);\
__declare_static_bit_vector(GL,1);\
__declare_static_bit_vector(EL,1);\

#define fpunit_exec_exec__compare32_assign_stmt_4599_c_macro_ __declare_static_bit_vector(slice_4598,16);\
bit_vector_slice(&(X), &(slice_4598), 16);\
bit_vector_cast_to_bit_vector(0, &(XH), &(slice_4598));\
;

#define fpunit_exec_exec__compare32_assign_stmt_4603_c_macro_ __declare_static_bit_vector(slice_4602,16);\
bit_vector_slice(&(X), &(slice_4602), 0);\
bit_vector_cast_to_bit_vector(0, &(XL), &(slice_4602));\
;

#define fpunit_exec_exec__compare32_assign_stmt_4607_c_macro_ __declare_static_bit_vector(slice_4606,16);\
bit_vector_slice(&(Y), &(slice_4606), 16);\
bit_vector_cast_to_bit_vector(0, &(YH), &(slice_4606));\
;

#define fpunit_exec_exec__compare32_assign_stmt_4611_c_macro_ __declare_static_bit_vector(slice_4610,16);\
bit_vector_slice(&(Y), &(slice_4610), 0);\
bit_vector_cast_to_bit_vector(0, &(YL), &(slice_4610));\
;

#define fpunit_exec_exec__compare32_call_stmt_4616_c_macro_ _fpunit_exec_exec_compare16_( &(XH),  &(YH), &(GH), &(EH));\
;

#define fpunit_exec_exec__compare32_call_stmt_4621_c_macro_ _fpunit_exec_exec_compare16_( &(XL),  &(YL), &(GL), &(EL));\
;

#define fpunit_exec_exec__compare32_assign_stmt_4628_c_macro_ __declare_static_bit_vector(AND_u1_u1_4626,1);\
__declare_static_bit_vector(OR_u1_u1_4627,1);\
bit_vector_and(&(EH), &(GL), &(AND_u1_u1_4626));\
bit_vector_or(&(GH), &(AND_u1_u1_4626), &(OR_u1_u1_4627));\
bit_vector_cast_to_bit_vector(0, &(G), &(OR_u1_u1_4627));\
;

#define fpunit_exec_exec__compare32_assign_stmt_4633_c_macro_ __declare_static_bit_vector(AND_u1_u1_4632,1);\
bit_vector_and(&(EH), &(EL), &(AND_u1_u1_4632));\
bit_vector_cast_to_bit_vector(0, &(E), &(AND_u1_u1_4632));\
;

#define fpunit_exec_exec__compare32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pG)), &(G));\
bit_vector_cast_to_bit_vector(0, &((*__pE)), &(E));\
;

#define fpunit_exec_exec__compare35_inner_inarg_prep_macro__ __declare_static_bit_vector(X,35);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,35);\
bit_vector_cast_to_bit_vector(0, &(Y), &((*__pY)));\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(XH,3);\
__declare_static_bit_vector(XL,32);\
__declare_static_bit_vector(YH,3);\
__declare_static_bit_vector(YL,32);\
__declare_static_bit_vector(GH,1);\
__declare_static_bit_vector(EH,1);\
__declare_static_bit_vector(GL,1);\
__declare_static_bit_vector(EL,1);\

#define fpunit_exec_exec__compare35_assign_stmt_4643_c_macro_ __declare_static_bit_vector(slice_4642,3);\
bit_vector_slice(&(X), &(slice_4642), 32);\
bit_vector_cast_to_bit_vector(0, &(XH), &(slice_4642));\
;

#define fpunit_exec_exec__compare35_assign_stmt_4647_c_macro_ __declare_static_bit_vector(slice_4646,32);\
bit_vector_slice(&(X), &(slice_4646), 0);\
bit_vector_cast_to_bit_vector(0, &(XL), &(slice_4646));\
;

#define fpunit_exec_exec__compare35_assign_stmt_4651_c_macro_ __declare_static_bit_vector(slice_4650,3);\
bit_vector_slice(&(Y), &(slice_4650), 32);\
bit_vector_cast_to_bit_vector(0, &(YH), &(slice_4650));\
;

#define fpunit_exec_exec__compare35_assign_stmt_4655_c_macro_ __declare_static_bit_vector(slice_4654,32);\
bit_vector_slice(&(Y), &(slice_4654), 0);\
bit_vector_cast_to_bit_vector(0, &(YL), &(slice_4654));\
;

#define fpunit_exec_exec__compare35_assign_stmt_4660_c_macro_ __declare_static_bit_vector(UGT_u3_u1_4659,1);\
bit_vector_greater(0, &(XH), &(YH), &(UGT_u3_u1_4659));\
bit_vector_cast_to_bit_vector(0, &(GH), &(UGT_u3_u1_4659));\
;

#define fpunit_exec_exec__compare35_assign_stmt_4665_c_macro_ __declare_static_bit_vector(EQ_u3_u1_4664,1);\
bit_vector_equal(0, &(XH), &(YH), &(EQ_u3_u1_4664));\
bit_vector_cast_to_bit_vector(0, &(EH), &(EQ_u3_u1_4664));\
;

#define fpunit_exec_exec__compare35_call_stmt_4670_c_macro_ _fpunit_exec_exec_compare32_( &(XL),  &(YL), &(GL), &(EL));\
;

#define fpunit_exec_exec__compare35_assign_stmt_4677_c_macro_ __declare_static_bit_vector(AND_u1_u1_4675,1);\
__declare_static_bit_vector(OR_u1_u1_4676,1);\
bit_vector_and(&(EH), &(GL), &(AND_u1_u1_4675));\
bit_vector_or(&(GH), &(AND_u1_u1_4675), &(OR_u1_u1_4676));\
bit_vector_cast_to_bit_vector(0, &(G), &(OR_u1_u1_4676));\
;

#define fpunit_exec_exec__compare35_assign_stmt_4682_c_macro_ __declare_static_bit_vector(AND_u1_u1_4681,1);\
bit_vector_and(&(EH), &(EL), &(AND_u1_u1_4681));\
bit_vector_cast_to_bit_vector(0, &(E), &(AND_u1_u1_4681));\
;

#define fpunit_exec_exec__compare35_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pG)), &(G));\
bit_vector_cast_to_bit_vector(0, &((*__pE)), &(E));\
;

#define fpunit_exec_exec__compare4_inner_inarg_prep_macro__ __declare_static_bit_vector(X,4);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,4);\
bit_vector_cast_to_bit_vector(0, &(Y), &((*__pY)));\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(X3,1);\
__declare_static_bit_vector(X2,1);\
__declare_static_bit_vector(X1,1);\
__declare_static_bit_vector(X0,1);\
__declare_static_bit_vector(Y3,1);\
__declare_static_bit_vector(Y2,1);\
__declare_static_bit_vector(Y1,1);\
__declare_static_bit_vector(Y0,1);\
__declare_static_bit_vector(G3,1);\
__declare_static_bit_vector(E3,1);\
__declare_static_bit_vector(G2,1);\
__declare_static_bit_vector(E2,1);\
__declare_static_bit_vector(G1,1);\
__declare_static_bit_vector(E1,1);\
__declare_static_bit_vector(G0,1);\
__declare_static_bit_vector(E0,1);\

#define fpunit_exec_exec__compare4_assign_stmt_4306_c_macro_ __declare_static_bit_vector(slice_4305,1);\
bit_vector_slice(&(X), &(slice_4305), 3);\
bit_vector_cast_to_bit_vector(0, &(X3), &(slice_4305));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4310_c_macro_ __declare_static_bit_vector(slice_4309,1);\
bit_vector_slice(&(X), &(slice_4309), 2);\
bit_vector_cast_to_bit_vector(0, &(X2), &(slice_4309));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4314_c_macro_ __declare_static_bit_vector(slice_4313,1);\
bit_vector_slice(&(X), &(slice_4313), 1);\
bit_vector_cast_to_bit_vector(0, &(X1), &(slice_4313));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4318_c_macro_ __declare_static_bit_vector(slice_4317,1);\
bit_vector_slice(&(X), &(slice_4317), 0);\
bit_vector_cast_to_bit_vector(0, &(X0), &(slice_4317));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4322_c_macro_ __declare_static_bit_vector(slice_4321,1);\
bit_vector_slice(&(Y), &(slice_4321), 3);\
bit_vector_cast_to_bit_vector(0, &(Y3), &(slice_4321));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4326_c_macro_ __declare_static_bit_vector(slice_4325,1);\
bit_vector_slice(&(Y), &(slice_4325), 2);\
bit_vector_cast_to_bit_vector(0, &(Y2), &(slice_4325));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4330_c_macro_ __declare_static_bit_vector(slice_4329,1);\
bit_vector_slice(&(Y), &(slice_4329), 1);\
bit_vector_cast_to_bit_vector(0, &(Y1), &(slice_4329));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4334_c_macro_ __declare_static_bit_vector(slice_4333,1);\
bit_vector_slice(&(Y), &(slice_4333), 0);\
bit_vector_cast_to_bit_vector(0, &(Y0), &(slice_4333));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4340_c_macro_ __declare_static_bit_vector(NOT_u1_u1_4338,1);\
__declare_static_bit_vector(AND_u1_u1_4339,1);\
bit_vector_not( &(Y3), &(NOT_u1_u1_4338));\
bit_vector_and(&(X3), &(NOT_u1_u1_4338), &(AND_u1_u1_4339));\
bit_vector_cast_to_bit_vector(0, &(G3), &(AND_u1_u1_4339));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4345_c_macro_ __declare_static_bit_vector(EQ_u1_u1_4344,1);\
bit_vector_equal(0, &(X3), &(Y3), &(EQ_u1_u1_4344));\
bit_vector_cast_to_bit_vector(0, &(E3), &(EQ_u1_u1_4344));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4351_c_macro_ __declare_static_bit_vector(NOT_u1_u1_4349,1);\
__declare_static_bit_vector(AND_u1_u1_4350,1);\
bit_vector_not( &(Y2), &(NOT_u1_u1_4349));\
bit_vector_and(&(X2), &(NOT_u1_u1_4349), &(AND_u1_u1_4350));\
bit_vector_cast_to_bit_vector(0, &(G2), &(AND_u1_u1_4350));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4356_c_macro_ __declare_static_bit_vector(EQ_u1_u1_4355,1);\
bit_vector_equal(0, &(X2), &(Y2), &(EQ_u1_u1_4355));\
bit_vector_cast_to_bit_vector(0, &(E2), &(EQ_u1_u1_4355));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4362_c_macro_ __declare_static_bit_vector(NOT_u1_u1_4360,1);\
__declare_static_bit_vector(AND_u1_u1_4361,1);\
bit_vector_not( &(Y1), &(NOT_u1_u1_4360));\
bit_vector_and(&(X1), &(NOT_u1_u1_4360), &(AND_u1_u1_4361));\
bit_vector_cast_to_bit_vector(0, &(G1), &(AND_u1_u1_4361));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4367_c_macro_ __declare_static_bit_vector(EQ_u1_u1_4366,1);\
bit_vector_equal(0, &(X1), &(Y1), &(EQ_u1_u1_4366));\
bit_vector_cast_to_bit_vector(0, &(E1), &(EQ_u1_u1_4366));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4373_c_macro_ __declare_static_bit_vector(NOT_u1_u1_4371,1);\
__declare_static_bit_vector(AND_u1_u1_4372,1);\
bit_vector_not( &(Y0), &(NOT_u1_u1_4371));\
bit_vector_and(&(X0), &(NOT_u1_u1_4371), &(AND_u1_u1_4372));\
bit_vector_cast_to_bit_vector(0, &(G0), &(AND_u1_u1_4372));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4378_c_macro_ __declare_static_bit_vector(EQ_u1_u1_4377,1);\
bit_vector_equal(0, &(X0), &(Y0), &(EQ_u1_u1_4377));\
bit_vector_cast_to_bit_vector(0, &(E0), &(EQ_u1_u1_4377));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4399_c_macro_ __declare_static_bit_vector(AND_u1_u1_4383,1);\
__declare_static_bit_vector(OR_u1_u1_4384,1);\
__declare_static_bit_vector(AND_u1_u1_4387,1);\
__declare_static_bit_vector(AND_u1_u1_4389,1);\
__declare_static_bit_vector(AND_u1_u1_4392,1);\
__declare_static_bit_vector(AND_u1_u1_4395,1);\
__declare_static_bit_vector(AND_u1_u1_4396,1);\
__declare_static_bit_vector(OR_u1_u1_4397,1);\
__declare_static_bit_vector(OR_u1_u1_4398,1);\
bit_vector_and(&(E3), &(G2), &(AND_u1_u1_4383));\
bit_vector_or(&(G3), &(AND_u1_u1_4383), &(OR_u1_u1_4384));\
bit_vector_and(&(E3), &(E2), &(AND_u1_u1_4387));\
bit_vector_and(&(AND_u1_u1_4387), &(G1), &(AND_u1_u1_4389));\
bit_vector_and(&(E3), &(E2), &(AND_u1_u1_4392));\
bit_vector_and(&(E1), &(G0), &(AND_u1_u1_4395));\
bit_vector_and(&(AND_u1_u1_4392), &(AND_u1_u1_4395), &(AND_u1_u1_4396));\
bit_vector_or(&(AND_u1_u1_4389), &(AND_u1_u1_4396), &(OR_u1_u1_4397));\
bit_vector_or(&(OR_u1_u1_4384), &(OR_u1_u1_4397), &(OR_u1_u1_4398));\
bit_vector_cast_to_bit_vector(0, &(G), &(OR_u1_u1_4398));\
;

#define fpunit_exec_exec__compare4_assign_stmt_4408_c_macro_ __declare_static_bit_vector(AND_u1_u1_4403,1);\
__declare_static_bit_vector(AND_u1_u1_4406,1);\
__declare_static_bit_vector(AND_u1_u1_4407,1);\
bit_vector_and(&(E3), &(E2), &(AND_u1_u1_4403));\
bit_vector_and(&(E1), &(E0), &(AND_u1_u1_4406));\
bit_vector_and(&(AND_u1_u1_4403), &(AND_u1_u1_4406), &(AND_u1_u1_4407));\
bit_vector_cast_to_bit_vector(0, &(E), &(AND_u1_u1_4407));\
;

#define fpunit_exec_exec__compare4_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pG)), &(G));\
bit_vector_cast_to_bit_vector(0, &((*__pE)), &(E));\
;

#define fpunit_exec_exec__compare53_inner_inarg_prep_macro__ __declare_static_bit_vector(X,53);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,53);\
bit_vector_cast_to_bit_vector(0, &(Y), &((*__pY)));\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(XHH,5);\
__declare_static_bit_vector(XH,16);\
__declare_static_bit_vector(XL,32);\
__declare_static_bit_vector(YHH,5);\
__declare_static_bit_vector(YH,16);\
__declare_static_bit_vector(YL,32);\
__declare_static_bit_vector(GHH,1);\
__declare_static_bit_vector(EHH,1);\
__declare_static_bit_vector(GH,1);\
__declare_static_bit_vector(EH,1);\
__declare_static_bit_vector(GL,1);\
__declare_static_bit_vector(EL,1);\

#define fpunit_exec_exec__compare53_assign_stmt_4692_c_macro_ __declare_static_bit_vector(slice_4691,5);\
bit_vector_slice(&(X), &(slice_4691), 48);\
bit_vector_cast_to_bit_vector(0, &(XHH), &(slice_4691));\
;

#define fpunit_exec_exec__compare53_assign_stmt_4696_c_macro_ __declare_static_bit_vector(slice_4695,16);\
bit_vector_slice(&(X), &(slice_4695), 32);\
bit_vector_cast_to_bit_vector(0, &(XH), &(slice_4695));\
;

#define fpunit_exec_exec__compare53_assign_stmt_4700_c_macro_ __declare_static_bit_vector(slice_4699,32);\
bit_vector_slice(&(X), &(slice_4699), 0);\
bit_vector_cast_to_bit_vector(0, &(XL), &(slice_4699));\
;

#define fpunit_exec_exec__compare53_assign_stmt_4704_c_macro_ __declare_static_bit_vector(slice_4703,5);\
bit_vector_slice(&(Y), &(slice_4703), 48);\
bit_vector_cast_to_bit_vector(0, &(YHH), &(slice_4703));\
;

#define fpunit_exec_exec__compare53_assign_stmt_4708_c_macro_ __declare_static_bit_vector(slice_4707,16);\
bit_vector_slice(&(Y), &(slice_4707), 32);\
bit_vector_cast_to_bit_vector(0, &(YH), &(slice_4707));\
;

#define fpunit_exec_exec__compare53_assign_stmt_4712_c_macro_ __declare_static_bit_vector(slice_4711,32);\
bit_vector_slice(&(Y), &(slice_4711), 0);\
bit_vector_cast_to_bit_vector(0, &(YL), &(slice_4711));\
;

#define fpunit_exec_exec__compare53_assign_stmt_4717_c_macro_ __declare_static_bit_vector(UGT_u5_u1_4716,1);\
bit_vector_greater(0, &(XHH), &(YHH), &(UGT_u5_u1_4716));\
bit_vector_cast_to_bit_vector(0, &(GHH), &(UGT_u5_u1_4716));\
;

#define fpunit_exec_exec__compare53_assign_stmt_4722_c_macro_ __declare_static_bit_vector(EQ_u5_u1_4721,1);\
bit_vector_equal(0, &(XHH), &(YHH), &(EQ_u5_u1_4721));\
bit_vector_cast_to_bit_vector(0, &(EHH), &(EQ_u5_u1_4721));\
;

#define fpunit_exec_exec__compare53_call_stmt_4727_c_macro_ _fpunit_exec_exec_compare16_( &(XH),  &(YH), &(GH), &(EH));\
;

#define fpunit_exec_exec__compare53_call_stmt_4732_c_macro_ _fpunit_exec_exec_compare32_( &(XL),  &(YL), &(GL), &(EL));\
;

#define fpunit_exec_exec__compare53_assign_stmt_4743_c_macro_ __declare_static_bit_vector(AND_u1_u1_4739,1);\
__declare_static_bit_vector(OR_u1_u1_4740,1);\
__declare_static_bit_vector(AND_u1_u1_4741,1);\
__declare_static_bit_vector(OR_u1_u1_4742,1);\
bit_vector_and(&(EH), &(GL), &(AND_u1_u1_4739));\
bit_vector_or(&(GH), &(AND_u1_u1_4739), &(OR_u1_u1_4740));\
bit_vector_and(&(EHH), &(OR_u1_u1_4740), &(AND_u1_u1_4741));\
bit_vector_or(&(GHH), &(AND_u1_u1_4741), &(OR_u1_u1_4742));\
bit_vector_cast_to_bit_vector(0, &(G), &(OR_u1_u1_4742));\
;

#define fpunit_exec_exec__compare53_assign_stmt_4750_c_macro_ __declare_static_bit_vector(AND_u1_u1_4747,1);\
__declare_static_bit_vector(AND_u1_u1_4749,1);\
bit_vector_and(&(EHH), &(EH), &(AND_u1_u1_4747));\
bit_vector_and(&(AND_u1_u1_4747), &(EL), &(AND_u1_u1_4749));\
bit_vector_cast_to_bit_vector(0, &(E), &(AND_u1_u1_4749));\
;

#define fpunit_exec_exec__compare53_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pG)), &(G));\
bit_vector_cast_to_bit_vector(0, &((*__pE)), &(E));\
;

#define fpunit_exec_exec__compare64_inner_inarg_prep_macro__ __declare_static_bit_vector(X,64);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,64);\
bit_vector_cast_to_bit_vector(0, &(Y), &((*__pY)));\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(XH,32);\
__declare_static_bit_vector(XL,32);\
__declare_static_bit_vector(YH,32);\
__declare_static_bit_vector(YL,32);\
__declare_static_bit_vector(GH,1);\
__declare_static_bit_vector(EH,1);\
__declare_static_bit_vector(GL,1);\
__declare_static_bit_vector(EL,1);\

#define fpunit_exec_exec__compare64_assign_stmt_4760_c_macro_ __declare_static_bit_vector(slice_4759,32);\
bit_vector_slice(&(X), &(slice_4759), 32);\
bit_vector_cast_to_bit_vector(0, &(XH), &(slice_4759));\
;

#define fpunit_exec_exec__compare64_assign_stmt_4764_c_macro_ __declare_static_bit_vector(slice_4763,32);\
bit_vector_slice(&(X), &(slice_4763), 0);\
bit_vector_cast_to_bit_vector(0, &(XL), &(slice_4763));\
;

#define fpunit_exec_exec__compare64_assign_stmt_4768_c_macro_ __declare_static_bit_vector(slice_4767,32);\
bit_vector_slice(&(Y), &(slice_4767), 32);\
bit_vector_cast_to_bit_vector(0, &(YH), &(slice_4767));\
;

#define fpunit_exec_exec__compare64_assign_stmt_4772_c_macro_ __declare_static_bit_vector(slice_4771,32);\
bit_vector_slice(&(Y), &(slice_4771), 0);\
bit_vector_cast_to_bit_vector(0, &(YL), &(slice_4771));\
;

#define fpunit_exec_exec__compare64_call_stmt_4777_c_macro_ _fpunit_exec_exec_compare32_( &(XH),  &(YH), &(GH), &(EH));\
;

#define fpunit_exec_exec__compare64_call_stmt_4782_c_macro_ _fpunit_exec_exec_compare32_( &(XL),  &(YL), &(GL), &(EL));\
;

#define fpunit_exec_exec__compare64_assign_stmt_4789_c_macro_ __declare_static_bit_vector(AND_u1_u1_4787,1);\
__declare_static_bit_vector(OR_u1_u1_4788,1);\
bit_vector_and(&(EH), &(GL), &(AND_u1_u1_4787));\
bit_vector_or(&(GH), &(AND_u1_u1_4787), &(OR_u1_u1_4788));\
bit_vector_cast_to_bit_vector(0, &(G), &(OR_u1_u1_4788));\
;

#define fpunit_exec_exec__compare64_assign_stmt_4794_c_macro_ __declare_static_bit_vector(AND_u1_u1_4793,1);\
bit_vector_and(&(EH), &(EL), &(AND_u1_u1_4793));\
bit_vector_cast_to_bit_vector(0, &(E), &(AND_u1_u1_4793));\
;

#define fpunit_exec_exec__compare64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pG)), &(G));\
bit_vector_cast_to_bit_vector(0, &((*__pE)), &(E));\
;

#define fpunit_exec_exec__compare8_inner_inarg_prep_macro__ __declare_static_bit_vector(X,8);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,8);\
bit_vector_cast_to_bit_vector(0, &(Y), &((*__pY)));\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(XH,4);\
__declare_static_bit_vector(XL,4);\
__declare_static_bit_vector(YH,4);\
__declare_static_bit_vector(YL,4);\
__declare_static_bit_vector(GH,1);\
__declare_static_bit_vector(EH,1);\
__declare_static_bit_vector(GL,1);\
__declare_static_bit_vector(EL,1);\

#define fpunit_exec_exec__compare8_assign_stmt_4418_c_macro_ __declare_static_bit_vector(slice_4417,4);\
bit_vector_slice(&(X), &(slice_4417), 4);\
bit_vector_cast_to_bit_vector(0, &(XH), &(slice_4417));\
;

#define fpunit_exec_exec__compare8_assign_stmt_4422_c_macro_ __declare_static_bit_vector(slice_4421,4);\
bit_vector_slice(&(X), &(slice_4421), 0);\
bit_vector_cast_to_bit_vector(0, &(XL), &(slice_4421));\
;

#define fpunit_exec_exec__compare8_assign_stmt_4426_c_macro_ __declare_static_bit_vector(slice_4425,4);\
bit_vector_slice(&(Y), &(slice_4425), 4);\
bit_vector_cast_to_bit_vector(0, &(YH), &(slice_4425));\
;

#define fpunit_exec_exec__compare8_assign_stmt_4430_c_macro_ __declare_static_bit_vector(slice_4429,4);\
bit_vector_slice(&(Y), &(slice_4429), 0);\
bit_vector_cast_to_bit_vector(0, &(YL), &(slice_4429));\
;

#define fpunit_exec_exec__compare8_call_stmt_4435_c_macro_ _fpunit_exec_exec_compare4_( &(XH),  &(YH), &(GH), &(EH));\
;

#define fpunit_exec_exec__compare8_call_stmt_4440_c_macro_ _fpunit_exec_exec_compare4_( &(XL),  &(YL), &(GL), &(EL));\
;

#define fpunit_exec_exec__compare8_assign_stmt_4447_c_macro_ __declare_static_bit_vector(AND_u1_u1_4445,1);\
__declare_static_bit_vector(OR_u1_u1_4446,1);\
bit_vector_and(&(EH), &(GL), &(AND_u1_u1_4445));\
bit_vector_or(&(GH), &(AND_u1_u1_4445), &(OR_u1_u1_4446));\
bit_vector_cast_to_bit_vector(0, &(G), &(OR_u1_u1_4446));\
;

#define fpunit_exec_exec__compare8_assign_stmt_4452_c_macro_ __declare_static_bit_vector(AND_u1_u1_4451,1);\
bit_vector_and(&(EH), &(EL), &(AND_u1_u1_4451));\
bit_vector_cast_to_bit_vector(0, &(E), &(AND_u1_u1_4451));\
;

#define fpunit_exec_exec__compare8_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pG)), &(G));\
bit_vector_cast_to_bit_vector(0, &((*__pE)), &(E));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_26_inner_inarg_prep_macro__ __declare_static_bit_vector(operand1,26);\
bit_vector_cast_to_bit_vector(0, &(operand1), &((*__poperand1)));\
__declare_static_bit_vector(operand2,26);\
bit_vector_cast_to_bit_vector(0, &(operand2), &((*__poperand2)));\
__declare_static_bit_vector(greater_or_equal,1);\
__declare_static_bit_vector(lesser,1);\

#define fpunit_exec_exec__comparison_greater_equal_less_26_assign_stmt_4805_c_macro_ __declare_static_bit_vector(ULT_u26_u1_4804,1);\
bit_vector_less(0, &(operand1), &(operand2), &(ULT_u26_u1_4804));\
bit_vector_cast_to_bit_vector(0, &(lesser), &(ULT_u26_u1_4804));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_26_assign_stmt_4809_c_macro_ __declare_static_bit_vector(NOT_u1_u1_4808,1);\
bit_vector_not( &(lesser), &(NOT_u1_u1_4808));\
bit_vector_cast_to_bit_vector(0, &(greater_or_equal), &(NOT_u1_u1_4808));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_26_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pgreater_or_equal)), &(greater_or_equal));\
bit_vector_cast_to_bit_vector(0, &((*__plesser)), &(lesser));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_inner_inarg_prep_macro__ __declare_static_bit_vector(operand1,55);\
bit_vector_cast_to_bit_vector(0, &(operand1), &((*__poperand1)));\
__declare_static_bit_vector(operand2,55);\
bit_vector_cast_to_bit_vector(0, &(operand2), &((*__poperand2)));\
__declare_static_bit_vector(greater_or_equal,1);\
__declare_static_bit_vector(lesser,1);\
__declare_static_bit_vector(operand1_lower,28);\
__declare_static_bit_vector(operand1_higher,27);\
__declare_static_bit_vector(operand2_lower,28);\
__declare_static_bit_vector(operand2_higher,27);\
__declare_static_bit_vector(higher_equal,1);\
__declare_static_bit_vector(higher_lesser,1);\
__declare_static_bit_vector(lower_lesser,1);\

#define fpunit_exec_exec__comparison_greater_equal_less_55_assign_stmt_4819_c_macro_ __declare_static_bit_vector(slice_4818,28);\
bit_vector_slice(&(operand1), &(slice_4818), 0);\
bit_vector_cast_to_bit_vector(0, &(operand1_lower), &(slice_4818));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_assign_stmt_4824_c_macro_ __declare_static_bit_vector(slice_4823,27);\
bit_vector_slice(&(operand1), &(slice_4823), 28);\
bit_vector_cast_to_bit_vector(0, &(operand1_higher), &(slice_4823));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_assign_stmt_4828_c_macro_ __declare_static_bit_vector(slice_4827,28);\
bit_vector_slice(&(operand2), &(slice_4827), 0);\
bit_vector_cast_to_bit_vector(0, &(operand2_lower), &(slice_4827));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_assign_stmt_4832_c_macro_ __declare_static_bit_vector(slice_4831,27);\
bit_vector_slice(&(operand2), &(slice_4831), 28);\
bit_vector_cast_to_bit_vector(0, &(operand2_higher), &(slice_4831));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_assign_stmt_4837_c_macro_ __declare_static_bit_vector(EQ_u27_u1_4836,1);\
bit_vector_equal(0, &(operand1_higher), &(operand2_higher), &(EQ_u27_u1_4836));\
bit_vector_cast_to_bit_vector(0, &(higher_equal), &(EQ_u27_u1_4836));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_assign_stmt_4842_c_macro_ __declare_static_bit_vector(ULT_u27_u1_4841,1);\
bit_vector_less(0, &(operand1_higher), &(operand2_higher), &(ULT_u27_u1_4841));\
bit_vector_cast_to_bit_vector(0, &(higher_lesser), &(ULT_u27_u1_4841));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_assign_stmt_4847_c_macro_ __declare_static_bit_vector(ULT_u28_u1_4846,1);\
bit_vector_less(0, &(operand1_lower), &(operand2_lower), &(ULT_u28_u1_4846));\
bit_vector_cast_to_bit_vector(0, &(lower_lesser), &(ULT_u28_u1_4846));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_assign_stmt_4854_c_macro_ __declare_static_bit_vector(AND_u1_u1_4852,1);\
__declare_static_bit_vector(OR_u1_u1_4853,1);\
bit_vector_and(&(higher_equal), &(lower_lesser), &(AND_u1_u1_4852));\
bit_vector_or(&(higher_lesser), &(AND_u1_u1_4852), &(OR_u1_u1_4853));\
bit_vector_cast_to_bit_vector(0, &(lesser), &(OR_u1_u1_4853));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_assign_stmt_4858_c_macro_ __declare_static_bit_vector(NOT_u1_u1_4857,1);\
bit_vector_not( &(lesser), &(NOT_u1_u1_4857));\
bit_vector_cast_to_bit_vector(0, &(greater_or_equal), &(NOT_u1_u1_4857));\
;

#define fpunit_exec_exec__comparison_greater_equal_less_55_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pgreater_or_equal)), &(greater_or_equal));\
bit_vector_cast_to_bit_vector(0, &((*__plesser)), &(lesser));\
;

#define fpunit_exec_exec__decode_alu_ispec_inner_inarg_prep_macro__ __declare_static_bit_vector(ispec,24);\
bit_vector_cast_to_bit_vector(0, &(ispec), &((*__pispec)));\
__declare_static_bit_vector(is_add,1);\
__declare_static_bit_vector(is_sub,1);\
__declare_static_bit_vector(is_mul,1);\
__declare_static_bit_vector(is_div,1);\
__declare_static_bit_vector(signed_mul_div,1);\
__declare_static_bit_vector(is_and,1);\
__declare_static_bit_vector(is_or,1);\
__declare_static_bit_vector(is_xor,1);\
__declare_static_bit_vector(is_xnor,1);\
__declare_static_bit_vector(is_sll,1);\
__declare_static_bit_vector(is_srl,1);\
__declare_static_bit_vector(is_sra,1);\
__declare_static_bit_vector(negate_second_operand,1);\
__declare_static_bit_vector(with_carry,1);\
__declare_static_bit_vector(set_cc,1);\
__declare_static_bit_vector(tagged_alu_op,1);\
__declare_static_bit_vector(trap_on_overflow,1);\

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4882_c_macro_ __declare_static_bit_vector(slice_4881,1);\
bit_vector_slice(&(ispec), &(slice_4881), 16);\
bit_vector_cast_to_bit_vector(0, &(is_add), &(slice_4881));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4886_c_macro_ __declare_static_bit_vector(slice_4885,1);\
bit_vector_slice(&(ispec), &(slice_4885), 15);\
bit_vector_cast_to_bit_vector(0, &(is_sub), &(slice_4885));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4890_c_macro_ __declare_static_bit_vector(slice_4889,1);\
bit_vector_slice(&(ispec), &(slice_4889), 14);\
bit_vector_cast_to_bit_vector(0, &(is_mul), &(slice_4889));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4894_c_macro_ __declare_static_bit_vector(slice_4893,1);\
bit_vector_slice(&(ispec), &(slice_4893), 13);\
bit_vector_cast_to_bit_vector(0, &(is_div), &(slice_4893));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4898_c_macro_ __declare_static_bit_vector(slice_4897,1);\
bit_vector_slice(&(ispec), &(slice_4897), 12);\
bit_vector_cast_to_bit_vector(0, &(signed_mul_div), &(slice_4897));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4902_c_macro_ __declare_static_bit_vector(slice_4901,1);\
bit_vector_slice(&(ispec), &(slice_4901), 11);\
bit_vector_cast_to_bit_vector(0, &(is_and), &(slice_4901));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4906_c_macro_ __declare_static_bit_vector(slice_4905,1);\
bit_vector_slice(&(ispec), &(slice_4905), 10);\
bit_vector_cast_to_bit_vector(0, &(is_or), &(slice_4905));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4910_c_macro_ __declare_static_bit_vector(slice_4909,1);\
bit_vector_slice(&(ispec), &(slice_4909), 9);\
bit_vector_cast_to_bit_vector(0, &(is_xor), &(slice_4909));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4914_c_macro_ __declare_static_bit_vector(slice_4913,1);\
bit_vector_slice(&(ispec), &(slice_4913), 8);\
bit_vector_cast_to_bit_vector(0, &(is_xnor), &(slice_4913));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4918_c_macro_ __declare_static_bit_vector(slice_4917,1);\
bit_vector_slice(&(ispec), &(slice_4917), 7);\
bit_vector_cast_to_bit_vector(0, &(is_sll), &(slice_4917));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4922_c_macro_ __declare_static_bit_vector(slice_4921,1);\
bit_vector_slice(&(ispec), &(slice_4921), 6);\
bit_vector_cast_to_bit_vector(0, &(is_srl), &(slice_4921));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4926_c_macro_ __declare_static_bit_vector(slice_4925,1);\
bit_vector_slice(&(ispec), &(slice_4925), 5);\
bit_vector_cast_to_bit_vector(0, &(is_sra), &(slice_4925));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4930_c_macro_ __declare_static_bit_vector(slice_4929,1);\
bit_vector_slice(&(ispec), &(slice_4929), 4);\
bit_vector_cast_to_bit_vector(0, &(negate_second_operand), &(slice_4929));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4934_c_macro_ __declare_static_bit_vector(slice_4933,1);\
bit_vector_slice(&(ispec), &(slice_4933), 3);\
bit_vector_cast_to_bit_vector(0, &(with_carry), &(slice_4933));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4938_c_macro_ __declare_static_bit_vector(slice_4937,1);\
bit_vector_slice(&(ispec), &(slice_4937), 2);\
bit_vector_cast_to_bit_vector(0, &(set_cc), &(slice_4937));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4942_c_macro_ __declare_static_bit_vector(slice_4941,1);\
bit_vector_slice(&(ispec), &(slice_4941), 1);\
bit_vector_cast_to_bit_vector(0, &(tagged_alu_op), &(slice_4941));\
;

#define fpunit_exec_exec__decode_alu_ispec_assign_stmt_4946_c_macro_ __declare_static_bit_vector(slice_4945,1);\
bit_vector_slice(&(ispec), &(slice_4945), 0);\
bit_vector_cast_to_bit_vector(0, &(trap_on_overflow), &(slice_4945));\
;

#define fpunit_exec_exec__decode_alu_ispec_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pis_add)), &(is_add));\
bit_vector_cast_to_bit_vector(0, &((*__pis_sub)), &(is_sub));\
bit_vector_cast_to_bit_vector(0, &((*__pis_mul)), &(is_mul));\
bit_vector_cast_to_bit_vector(0, &((*__pis_div)), &(is_div));\
bit_vector_cast_to_bit_vector(0, &((*__psigned_mul_div)), &(signed_mul_div));\
bit_vector_cast_to_bit_vector(0, &((*__pis_and)), &(is_and));\
bit_vector_cast_to_bit_vector(0, &((*__pis_or)), &(is_or));\
bit_vector_cast_to_bit_vector(0, &((*__pis_xor)), &(is_xor));\
bit_vector_cast_to_bit_vector(0, &((*__pis_xnor)), &(is_xnor));\
bit_vector_cast_to_bit_vector(0, &((*__pis_sll)), &(is_sll));\
bit_vector_cast_to_bit_vector(0, &((*__pis_srl)), &(is_srl));\
bit_vector_cast_to_bit_vector(0, &((*__pis_sra)), &(is_sra));\
bit_vector_cast_to_bit_vector(0, &((*__pnegate_second_operand)), &(negate_second_operand));\
bit_vector_cast_to_bit_vector(0, &((*__pwith_carry)), &(with_carry));\
bit_vector_cast_to_bit_vector(0, &((*__pset_cc)), &(set_cc));\
bit_vector_cast_to_bit_vector(0, &((*__ptagged_alu_op)), &(tagged_alu_op));\
bit_vector_cast_to_bit_vector(0, &((*__ptrap_on_overflow)), &(trap_on_overflow));\
;

#define fpunit_exec_exec__decode_cp_ispec_inner_inarg_prep_macro__ __declare_static_bit_vector(ispec,24);\
bit_vector_cast_to_bit_vector(0, &(ispec), &((*__pispec)));\
__declare_static_bit_vector(cp_op2,1);\
__declare_static_bit_vector(cp_op1,1);\

#define fpunit_exec_exec__decode_cp_ispec_assign_stmt_4955_c_macro_ __declare_static_bit_vector(slice_4954,1);\
bit_vector_slice(&(ispec), &(slice_4954), 1);\
bit_vector_cast_to_bit_vector(0, &(cp_op2), &(slice_4954));\
;

#define fpunit_exec_exec__decode_cp_ispec_assign_stmt_4959_c_macro_ __declare_static_bit_vector(slice_4958,1);\
bit_vector_slice(&(ispec), &(slice_4958), 0);\
bit_vector_cast_to_bit_vector(0, &(cp_op1), &(slice_4958));\
;

#define fpunit_exec_exec__decode_cp_ispec_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pcp_op2)), &(cp_op2));\
bit_vector_cast_to_bit_vector(0, &((*__pcp_op1)), &(cp_op1));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_inner_inarg_prep_macro__ __declare_static_bit_vector(instr,32);\
bit_vector_cast_to_bit_vector(0, &(instr), &((*__pinstr)));\
__declare_static_bit_vector(cti_annul_flag,1);\
__declare_static_bit_vector(is_call,1);\
__declare_static_bit_vector(is_ba,1);\
__declare_static_bit_vector(is_bn,1);\
__declare_static_bit_vector(is_bicc,1);\
__declare_static_bit_vector(is_fbfcc,1);\
__declare_static_bit_vector(is_cbccc,1);\
__declare_static_bit_vector(cond,4);\
__declare_static_bit_vector(imm_offset,32);\
__declare_static_bit_vector(op,2);\
__declare_static_bit_vector(op2,3);\
__declare_static_bit_vector(op3,6);\
__declare_static_bit_vector(simm30to32,32);\
__declare_static_bit_vector(simm22to32,32);\

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_4975_c_macro_ __declare_static_bit_vector(slice_4974,2);\
bit_vector_slice(&(instr), &(slice_4974), 30);\
bit_vector_cast_to_bit_vector(0, &(op), &(slice_4974));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_4979_c_macro_ __declare_static_bit_vector(slice_4978,3);\
bit_vector_slice(&(instr), &(slice_4978), 22);\
bit_vector_cast_to_bit_vector(0, &(op2), &(slice_4978));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_4983_c_macro_ __declare_static_bit_vector(slice_4982,6);\
bit_vector_slice(&(instr), &(slice_4982), 19);\
bit_vector_cast_to_bit_vector(0, &(op3), &(slice_4982));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_4988_c_macro_ __declare_static_bit_vector(konst_4986,2);\
bit_vector_clear(&konst_4986);\
konst_4986.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u2_u1_4987,1);\
bit_vector_clear(&konst_4986);\
konst_4986.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op), &(konst_4986), &(EQ_u2_u1_4987));\
bit_vector_cast_to_bit_vector(0, &(is_call), &(EQ_u2_u1_4987));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_4997_c_macro_ __declare_static_bit_vector(konst_4991,2);\
bit_vector_clear(&konst_4991);\
__declare_static_bit_vector(EQ_u2_u1_4992,1);\
__declare_static_bit_vector(konst_4994,3);\
bit_vector_clear(&konst_4994);\
konst_4994.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u3_u1_4995,1);\
__declare_static_bit_vector(AND_u1_u1_4996,1);\
bit_vector_clear(&konst_4991);\
bit_vector_equal(0, &(op), &(konst_4991), &(EQ_u2_u1_4992));\
bit_vector_clear(&konst_4994);\
konst_4994.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op2), &(konst_4994), &(EQ_u3_u1_4995));\
bit_vector_and(&(EQ_u2_u1_4992), &(EQ_u3_u1_4995), &(AND_u1_u1_4996));\
bit_vector_cast_to_bit_vector(0, &(is_bicc), &(AND_u1_u1_4996));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_5006_c_macro_ __declare_static_bit_vector(konst_5000,2);\
bit_vector_clear(&konst_5000);\
__declare_static_bit_vector(EQ_u2_u1_5001,1);\
__declare_static_bit_vector(konst_5003,3);\
bit_vector_clear(&konst_5003);\
konst_5003.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u3_u1_5004,1);\
__declare_static_bit_vector(AND_u1_u1_5005,1);\
bit_vector_clear(&konst_5000);\
bit_vector_equal(0, &(op), &(konst_5000), &(EQ_u2_u1_5001));\
bit_vector_clear(&konst_5003);\
konst_5003.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op2), &(konst_5003), &(EQ_u3_u1_5004));\
bit_vector_and(&(EQ_u2_u1_5001), &(EQ_u3_u1_5004), &(AND_u1_u1_5005));\
bit_vector_cast_to_bit_vector(0, &(is_fbfcc), &(AND_u1_u1_5005));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_5015_c_macro_ __declare_static_bit_vector(konst_5009,2);\
bit_vector_clear(&konst_5009);\
__declare_static_bit_vector(EQ_u2_u1_5010,1);\
__declare_static_bit_vector(konst_5012,3);\
bit_vector_clear(&konst_5012);\
konst_5012.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u3_u1_5013,1);\
__declare_static_bit_vector(AND_u1_u1_5014,1);\
bit_vector_clear(&konst_5009);\
bit_vector_equal(0, &(op), &(konst_5009), &(EQ_u2_u1_5010));\
bit_vector_clear(&konst_5012);\
konst_5012.val.byte_array[0] = 7;\
bit_vector_equal(0, &(op2), &(konst_5012), &(EQ_u3_u1_5013));\
bit_vector_and(&(EQ_u2_u1_5010), &(EQ_u3_u1_5013), &(AND_u1_u1_5014));\
bit_vector_cast_to_bit_vector(0, &(is_cbccc), &(AND_u1_u1_5014));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_5019_c_macro_ __declare_static_bit_vector(slice_5018,4);\
bit_vector_slice(&(instr), &(slice_5018), 25);\
bit_vector_cast_to_bit_vector(0, &(cond), &(slice_5018));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_5028_c_macro_ __declare_static_bit_vector(OR_u1_u1_5023,1);\
__declare_static_bit_vector(konst_5025,4);\
bit_vector_clear(&konst_5025);\
konst_5025.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_5026,1);\
__declare_static_bit_vector(AND_u1_u1_5027,1);\
bit_vector_or(&(is_bicc), &(is_fbfcc), &(OR_u1_u1_5023));\
bit_vector_clear(&konst_5025);\
konst_5025.val.byte_array[0] = 8;\
bit_vector_equal(0, &(cond), &(konst_5025), &(EQ_u4_u1_5026));\
bit_vector_and(&(OR_u1_u1_5023), &(EQ_u4_u1_5026), &(AND_u1_u1_5027));\
bit_vector_cast_to_bit_vector(0, &(is_ba), &(AND_u1_u1_5027));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_5037_c_macro_ __declare_static_bit_vector(OR_u1_u1_5032,1);\
__declare_static_bit_vector(konst_5034,4);\
bit_vector_clear(&konst_5034);\
__declare_static_bit_vector(EQ_u4_u1_5035,1);\
__declare_static_bit_vector(AND_u1_u1_5036,1);\
bit_vector_or(&(is_bicc), &(is_fbfcc), &(OR_u1_u1_5032));\
bit_vector_clear(&konst_5034);\
bit_vector_equal(0, &(cond), &(konst_5034), &(EQ_u4_u1_5035));\
bit_vector_and(&(OR_u1_u1_5032), &(EQ_u4_u1_5035), &(AND_u1_u1_5036));\
bit_vector_cast_to_bit_vector(0, &(is_bn), &(AND_u1_u1_5036));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_5046_c_macro_ __declare_static_bit_vector(slice_5042,30);\
__declare_static_bit_vector(type_cast_5043,30);\
__declare_static_bit_vector(type_cast_5044,32);\
__declare_static_bit_vector(type_cast_5045,32);\
bit_vector_slice(&(instr), &(slice_5042), 0);\
bit_vector_bitcast_to_bit_vector( &(type_cast_5043), &(slice_5042));\
bit_vector_cast_to_bit_vector(1, &(type_cast_5044), &(type_cast_5043));\
bit_vector_bitcast_to_bit_vector( &(type_cast_5045), &(type_cast_5044));\
bit_vector_cast_to_bit_vector(0, &(simm30to32), &(type_cast_5045));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_5054_c_macro_ __declare_static_bit_vector(slice_5050,22);\
__declare_static_bit_vector(type_cast_5051,22);\
__declare_static_bit_vector(type_cast_5052,32);\
__declare_static_bit_vector(type_cast_5053,32);\
bit_vector_slice(&(instr), &(slice_5050), 0);\
bit_vector_bitcast_to_bit_vector( &(type_cast_5051), &(slice_5050));\
bit_vector_cast_to_bit_vector(1, &(type_cast_5052), &(type_cast_5051));\
bit_vector_bitcast_to_bit_vector( &(type_cast_5053), &(type_cast_5052));\
bit_vector_cast_to_bit_vector(0, &(simm22to32), &(type_cast_5053));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_5062_c_macro_ __declare_static_bit_vector(MUX_5059,32);\
__declare_static_bit_vector(konst_5060,32);\
bit_vector_clear(&konst_5060);\
konst_5060.val.byte_array[0] = 2;\
__declare_static_bit_vector(SHL_u32_u32_5061,32);\
if (has_undefined_bit(&is_call)) {fprintf(stderr, "Error: variable is_call has undefined value (%s) at test point.\n", to_string(&is_call));assert(0);} \
if(bit_vector_to_uint64(0, &is_call)){bit_vector_cast_to_bit_vector(0, &(MUX_5059), &(simm30to32));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_5059), &(simm22to32));\
}bit_vector_clear(&konst_5060);\
konst_5060.val.byte_array[0] = 2;\
bit_vector_shift_left(&(MUX_5059), &(konst_5060), &(SHL_u32_u32_5061));\
bit_vector_cast_to_bit_vector(0, &(imm_offset), &(SHL_u32_u32_5061));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_assign_stmt_5067_c_macro_ __declare_static_bit_vector(konst_5065,32);\
bit_vector_clear(&konst_5065);\
konst_5065.val.byte_array[0] = 29;\
__declare_static_bit_vector(BITSEL_u32_u1_5066,1);\
bit_vector_clear(&konst_5065);\
konst_5065.val.byte_array[0] = 29;\
bit_vector_bitsel( &(instr), &(konst_5065), &(BITSEL_u32_u1_5066));\
bit_vector_cast_to_bit_vector(0, &(cti_annul_flag), &(BITSEL_u32_u1_5066));\
;

#define fpunit_exec_exec__decode_cti_for_offset_calculation_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pcti_annul_flag)), &(cti_annul_flag));\
bit_vector_cast_to_bit_vector(0, &((*__pis_call)), &(is_call));\
bit_vector_cast_to_bit_vector(0, &((*__pis_ba)), &(is_ba));\
bit_vector_cast_to_bit_vector(0, &((*__pis_bn)), &(is_bn));\
bit_vector_cast_to_bit_vector(0, &((*__pis_bicc)), &(is_bicc));\
bit_vector_cast_to_bit_vector(0, &((*__pis_fbfcc)), &(is_fbfcc));\
bit_vector_cast_to_bit_vector(0, &((*__pis_cbccc)), &(is_cbccc));\
bit_vector_cast_to_bit_vector(0, &((*__pcond)), &(cond));\
bit_vector_cast_to_bit_vector(0, &((*__pimm_offset)), &(imm_offset));\
;

#define fpunit_exec_exec__decode_cti_ispec_inner_inarg_prep_macro__ __declare_static_bit_vector(ispec,24);\
bit_vector_cast_to_bit_vector(0, &(ispec), &((*__pispec)));\
__declare_static_bit_vector(cond,4);\
__declare_static_bit_vector(is_call,1);\
__declare_static_bit_vector(is_rett,1);\
__declare_static_bit_vector(is_jmpl,1);\
__declare_static_bit_vector(is_ticc,1);\
__declare_static_bit_vector(is_bicc,1);\
__declare_static_bit_vector(is_fbfcc,1);\
__declare_static_bit_vector(is_cbccc,1);\

#define fpunit_exec_exec__decode_cti_ispec_assign_stmt_5082_c_macro_ __declare_static_bit_vector(slice_5081,4);\
bit_vector_slice(&(ispec), &(slice_5081), 7);\
bit_vector_cast_to_bit_vector(0, &(cond), &(slice_5081));\
;

#define fpunit_exec_exec__decode_cti_ispec_assign_stmt_5086_c_macro_ __declare_static_bit_vector(slice_5085,1);\
bit_vector_slice(&(ispec), &(slice_5085), 6);\
bit_vector_cast_to_bit_vector(0, &(is_call), &(slice_5085));\
;

#define fpunit_exec_exec__decode_cti_ispec_assign_stmt_5090_c_macro_ __declare_static_bit_vector(slice_5089,1);\
bit_vector_slice(&(ispec), &(slice_5089), 5);\
bit_vector_cast_to_bit_vector(0, &(is_rett), &(slice_5089));\
;

#define fpunit_exec_exec__decode_cti_ispec_assign_stmt_5094_c_macro_ __declare_static_bit_vector(slice_5093,1);\
bit_vector_slice(&(ispec), &(slice_5093), 4);\
bit_vector_cast_to_bit_vector(0, &(is_jmpl), &(slice_5093));\
;

#define fpunit_exec_exec__decode_cti_ispec_assign_stmt_5098_c_macro_ __declare_static_bit_vector(slice_5097,1);\
bit_vector_slice(&(ispec), &(slice_5097), 3);\
bit_vector_cast_to_bit_vector(0, &(is_ticc), &(slice_5097));\
;

#define fpunit_exec_exec__decode_cti_ispec_assign_stmt_5102_c_macro_ __declare_static_bit_vector(slice_5101,1);\
bit_vector_slice(&(ispec), &(slice_5101), 2);\
bit_vector_cast_to_bit_vector(0, &(is_bicc), &(slice_5101));\
;

#define fpunit_exec_exec__decode_cti_ispec_assign_stmt_5106_c_macro_ __declare_static_bit_vector(slice_5105,1);\
bit_vector_slice(&(ispec), &(slice_5105), 1);\
bit_vector_cast_to_bit_vector(0, &(is_fbfcc), &(slice_5105));\
;

#define fpunit_exec_exec__decode_cti_ispec_assign_stmt_5110_c_macro_ __declare_static_bit_vector(slice_5109,1);\
bit_vector_slice(&(ispec), &(slice_5109), 0);\
bit_vector_cast_to_bit_vector(0, &(is_cbccc), &(slice_5109));\
;

#define fpunit_exec_exec__decode_cti_ispec_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pcond)), &(cond));\
bit_vector_cast_to_bit_vector(0, &((*__pis_call)), &(is_call));\
bit_vector_cast_to_bit_vector(0, &((*__pis_rett)), &(is_rett));\
bit_vector_cast_to_bit_vector(0, &((*__pis_jmpl)), &(is_jmpl));\
bit_vector_cast_to_bit_vector(0, &((*__pis_ticc)), &(is_ticc));\
bit_vector_cast_to_bit_vector(0, &((*__pis_bicc)), &(is_bicc));\
bit_vector_cast_to_bit_vector(0, &((*__pis_fbfcc)), &(is_fbfcc));\
bit_vector_cast_to_bit_vector(0, &((*__pis_cbccc)), &(is_cbccc));\
;

#define fpunit_exec_exec__decode_dti_ispec_inner_inarg_prep_macro__ __declare_static_bit_vector(ispec,24);\
bit_vector_cast_to_bit_vector(0, &(ispec), &((*__pispec)));\
__declare_static_bit_vector(is_load,1);\
__declare_static_bit_vector(is_store,1);\
__declare_static_bit_vector(is_atomic_ldstub,1);\
__declare_static_bit_vector(is_swap,1);\
__declare_static_bit_vector(S,1);\
__declare_static_bit_vector(U,1);\
__declare_static_bit_vector(FP,1);\
__declare_static_bit_vector(byte,1);\
__declare_static_bit_vector(half_word,1);\
__declare_static_bit_vector(word,1);\
__declare_static_bit_vector(double_word,1);\
__declare_static_bit_vector(is_fp_access,1);\
__declare_static_bit_vector(is_cp_access,1);\
__declare_static_bit_vector(is_fp_cp_sr_access,1);\
__declare_static_bit_vector(is_fp_cp_q_access,1);\
__declare_static_bit_vector(asi_bit,1);\
__declare_static_bit_vector(asi_id_8,8);\

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5134_c_macro_ __declare_static_bit_vector(slice_5133,1);\
bit_vector_slice(&(ispec), &(slice_5133), 23);\
bit_vector_cast_to_bit_vector(0, &(is_load), &(slice_5133));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5138_c_macro_ __declare_static_bit_vector(slice_5137,1);\
bit_vector_slice(&(ispec), &(slice_5137), 22);\
bit_vector_cast_to_bit_vector(0, &(is_store), &(slice_5137));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5142_c_macro_ __declare_static_bit_vector(slice_5141,1);\
bit_vector_slice(&(ispec), &(slice_5141), 21);\
bit_vector_cast_to_bit_vector(0, &(is_atomic_ldstub), &(slice_5141));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5146_c_macro_ __declare_static_bit_vector(slice_5145,1);\
bit_vector_slice(&(ispec), &(slice_5145), 20);\
bit_vector_cast_to_bit_vector(0, &(is_swap), &(slice_5145));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5150_c_macro_ __declare_static_bit_vector(slice_5149,1);\
bit_vector_slice(&(ispec), &(slice_5149), 19);\
bit_vector_cast_to_bit_vector(0, &(S), &(slice_5149));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5154_c_macro_ __declare_static_bit_vector(slice_5153,1);\
bit_vector_slice(&(ispec), &(slice_5153), 18);\
bit_vector_cast_to_bit_vector(0, &(U), &(slice_5153));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5158_c_macro_ __declare_static_bit_vector(slice_5157,1);\
bit_vector_slice(&(ispec), &(slice_5157), 17);\
bit_vector_cast_to_bit_vector(0, &(FP), &(slice_5157));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5162_c_macro_ __declare_static_bit_vector(slice_5161,1);\
bit_vector_slice(&(ispec), &(slice_5161), 16);\
bit_vector_cast_to_bit_vector(0, &(double_word), &(slice_5161));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5166_c_macro_ __declare_static_bit_vector(slice_5165,1);\
bit_vector_slice(&(ispec), &(slice_5165), 15);\
bit_vector_cast_to_bit_vector(0, &(word), &(slice_5165));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5170_c_macro_ __declare_static_bit_vector(slice_5169,1);\
bit_vector_slice(&(ispec), &(slice_5169), 14);\
bit_vector_cast_to_bit_vector(0, &(half_word), &(slice_5169));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5174_c_macro_ __declare_static_bit_vector(slice_5173,1);\
bit_vector_slice(&(ispec), &(slice_5173), 13);\
bit_vector_cast_to_bit_vector(0, &(byte), &(slice_5173));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5178_c_macro_ __declare_static_bit_vector(slice_5177,1);\
bit_vector_slice(&(ispec), &(slice_5177), 12);\
bit_vector_cast_to_bit_vector(0, &(is_fp_access), &(slice_5177));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5182_c_macro_ __declare_static_bit_vector(slice_5181,1);\
bit_vector_slice(&(ispec), &(slice_5181), 11);\
bit_vector_cast_to_bit_vector(0, &(is_cp_access), &(slice_5181));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5186_c_macro_ __declare_static_bit_vector(slice_5185,1);\
bit_vector_slice(&(ispec), &(slice_5185), 10);\
bit_vector_cast_to_bit_vector(0, &(is_fp_cp_sr_access), &(slice_5185));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5190_c_macro_ __declare_static_bit_vector(slice_5189,1);\
bit_vector_slice(&(ispec), &(slice_5189), 9);\
bit_vector_cast_to_bit_vector(0, &(is_fp_cp_q_access), &(slice_5189));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5194_c_macro_ __declare_static_bit_vector(slice_5193,1);\
bit_vector_slice(&(ispec), &(slice_5193), 8);\
bit_vector_cast_to_bit_vector(0, &(asi_bit), &(slice_5193));\
;

#define fpunit_exec_exec__decode_dti_ispec_assign_stmt_5198_c_macro_ __declare_static_bit_vector(slice_5197,8);\
bit_vector_slice(&(ispec), &(slice_5197), 0);\
bit_vector_cast_to_bit_vector(0, &(asi_id_8), &(slice_5197));\
;

#define fpunit_exec_exec__decode_dti_ispec_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pis_load)), &(is_load));\
bit_vector_cast_to_bit_vector(0, &((*__pis_store)), &(is_store));\
bit_vector_cast_to_bit_vector(0, &((*__pis_atomic_ldstub)), &(is_atomic_ldstub));\
bit_vector_cast_to_bit_vector(0, &((*__pis_swap)), &(is_swap));\
bit_vector_cast_to_bit_vector(0, &((*__pS)), &(S));\
bit_vector_cast_to_bit_vector(0, &((*__pU)), &(U));\
bit_vector_cast_to_bit_vector(0, &((*__pFP)), &(FP));\
bit_vector_cast_to_bit_vector(0, &((*__pbyte)), &(byte));\
bit_vector_cast_to_bit_vector(0, &((*__phalf_word)), &(half_word));\
bit_vector_cast_to_bit_vector(0, &((*__pword)), &(word));\
bit_vector_cast_to_bit_vector(0, &((*__pdouble_word)), &(double_word));\
bit_vector_cast_to_bit_vector(0, &((*__pis_fp_access)), &(is_fp_access));\
bit_vector_cast_to_bit_vector(0, &((*__pis_cp_access)), &(is_cp_access));\
bit_vector_cast_to_bit_vector(0, &((*__pis_fp_cp_sr_access)), &(is_fp_cp_sr_access));\
bit_vector_cast_to_bit_vector(0, &((*__pis_fp_cp_q_access)), &(is_fp_cp_q_access));\
bit_vector_cast_to_bit_vector(0, &((*__pasi_bit)), &(asi_bit));\
bit_vector_cast_to_bit_vector(0, &((*__pasi_id_8)), &(asi_id_8));\
;

#define fpunit_exec_exec__decode_fp_ispec_inner_inarg_prep_macro__ __declare_static_bit_vector(ispec,24);\
bit_vector_cast_to_bit_vector(0, &(ispec), &((*__pispec)));\
__declare_static_bit_vector(opf,8);\
__declare_static_bit_vector(fp_op1,1);\
__declare_static_bit_vector(fp_op2,1);\

#define fpunit_exec_exec__decode_fp_ispec_assign_stmt_5208_c_macro_ __declare_static_bit_vector(slice_5207,8);\
bit_vector_slice(&(ispec), &(slice_5207), 2);\
bit_vector_cast_to_bit_vector(0, &(opf), &(slice_5207));\
;

#define fpunit_exec_exec__decode_fp_ispec_assign_stmt_5212_c_macro_ __declare_static_bit_vector(slice_5211,1);\
bit_vector_slice(&(ispec), &(slice_5211), 1);\
bit_vector_cast_to_bit_vector(0, &(fp_op1), &(slice_5211));\
;

#define fpunit_exec_exec__decode_fp_ispec_assign_stmt_5216_c_macro_ __declare_static_bit_vector(slice_5215,1);\
bit_vector_slice(&(ispec), &(slice_5215), 0);\
bit_vector_cast_to_bit_vector(0, &(fp_op2), &(slice_5215));\
;

#define fpunit_exec_exec__decode_fp_ispec_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__popf)), &(opf));\
bit_vector_cast_to_bit_vector(0, &((*__pfp_op1)), &(fp_op1));\
bit_vector_cast_to_bit_vector(0, &((*__pfp_op2)), &(fp_op2));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_inner_inarg_prep_macro__ __declare_static_bit_vector(annulled_instr,1);\
bit_vector_cast_to_bit_vector(0, &(annulled_instr), &((*__pannulled_instr)));\
__declare_static_bit_vector(thread_head,1);\
bit_vector_cast_to_bit_vector(0, &(thread_head), &((*__pthread_head)));\
__declare_static_bit_vector(stream_head,1);\
bit_vector_cast_to_bit_vector(0, &(stream_head), &((*__pstream_head)));\
__declare_static_bit_vector(debug_mode_selected,1);\
bit_vector_cast_to_bit_vector(0, &(debug_mode_selected), &((*__pdebug_mode_selected)));\
__declare_static_bit_vector(last_was_cti,1);\
bit_vector_cast_to_bit_vector(0, &(last_was_cti), &((*__plast_was_cti)));\
__declare_static_bit_vector(instr_raw,32);\
bit_vector_cast_to_bit_vector(0, &(instr_raw), &((*__pinstr_raw)));\
__declare_static_bit_vector(instr_class,3);\
__declare_static_bit_vector(instr_spec,24);\
__declare_static_bit_vector(instr_pipeline_usage,38);\
__declare_static_bit_vector(stream_corrector_info,6);\
__declare_static_bit_vector(instr,32);\
__declare_static_bit_vector(op,2);\
__declare_static_bit_vector(op2,3);\
__declare_static_bit_vector(op3,6);\
__declare_static_bit_vector(opf,9);\
__declare_static_bit_vector(op3_col,2);\
__declare_static_bit_vector(op3_row,4);\
__declare_static_bit_vector(op_eq_2,1);\
__declare_static_bit_vector(op_eq_3,1);\
__declare_static_bit_vector(rs1,5);\
__declare_static_bit_vector(rs2,5);\
__declare_static_bit_vector(rd,5);\
__declare_static_bit_vector(imm_flag,1);\
__declare_static_bit_vector(annul_flag,1);\
__declare_static_bit_vector(is_load_instr,1);\
__declare_static_bit_vector(is_store_instr,1);\
__declare_static_bit_vector(is_atomic_ldstub_instr,1);\
__declare_static_bit_vector(is_swap_instr,1);\
__declare_static_bit_vector(data_instr_type,4);\
__declare_static_bit_vector(is_data_transfer_instr,1);\
__declare_static_bit_vector(S,1);\
__declare_static_bit_vector(FP,1);\
__declare_static_bit_vector(U,1);\
__declare_static_bit_vector(data_transfer_data_type,3);\
__declare_static_bit_vector(is_u8_transfer,1);\
__declare_static_bit_vector(is_u16_transfer,1);\
__declare_static_bit_vector(is_u64_transfer,1);\
__declare_static_bit_vector(is_u32_transfer,1);\
__declare_static_bit_vector(data_transfer_width,4);\
__declare_static_bit_vector(is_fp_load,1);\
__declare_static_bit_vector(is_fp_load_to_fsr,1);\
__declare_static_bit_vector(is_fp_store,1);\
__declare_static_bit_vector(is_fp_store_from_fsr,1);\
__declare_static_bit_vector(is_fp_store_from_fq,1);\
__declare_static_bit_vector(is_fp_access,1);\
__declare_static_bit_vector(is_cp_load,1);\
__declare_static_bit_vector(is_cp_load_to_cpsr,1);\
__declare_static_bit_vector(is_cp_store,1);\
__declare_static_bit_vector(is_cp_store_from_cpsr,1);\
__declare_static_bit_vector(is_cp_store_from_cpq,1);\
__declare_static_bit_vector(is_cp_access,1);\
__declare_static_bit_vector(is_fp_cp_sr_access,1);\
__declare_static_bit_vector(is_fp_cp_q_access,1);\
__declare_static_bit_vector(asi_bit,1);\
__declare_static_bit_vector(asi_id_8,8);\
__declare_static_bit_vector(data_transfer_instr_spec,24);\
__declare_static_bit_vector(cond,4);\
__declare_static_bit_vector(is_call,1);\
__declare_static_bit_vector(is_bicc,1);\
__declare_static_bit_vector(is_ba_or_bn_cond,1);\
__declare_static_bit_vector(is_fbfcc,1);\
__declare_static_bit_vector(is_cbccc,1);\
__declare_static_bit_vector(is_ticc,1);\
__declare_static_bit_vector(is_jmpl,1);\
__declare_static_bit_vector(is_rett,1);\
__declare_static_bit_vector(control_transfer_instr_spec,11);\
__declare_static_bit_vector(is_control_transfer_instr,1);\
__declare_static_bit_vector(is_nop,1);\
__declare_static_bit_vector(is_sethi,1);\
__declare_static_bit_vector(is_mulscc,1);\
__declare_static_bit_vector(is_flush,1);\
__declare_static_bit_vector(is_stbar,1);\
__declare_static_bit_vector(is_save,1);\
__declare_static_bit_vector(is_restore,1);\
__declare_static_bit_vector(is_read_asr,1);\
__declare_static_bit_vector(is_read_y,1);\
__declare_static_bit_vector(is_read_psr,1);\
__declare_static_bit_vector(is_read_wim,1);\
__declare_static_bit_vector(is_read_tbr,1);\
__declare_static_bit_vector(is_write_asr,1);\
__declare_static_bit_vector(is_write_y,1);\
__declare_static_bit_vector(is_write_psr,1);\
__declare_static_bit_vector(is_write_wim,1);\
__declare_static_bit_vector(is_write_tbr,1);\
__declare_static_bit_vector(misc_instr_spec,17);\
__declare_static_bit_vector(is_misc_instr,1);\
__declare_static_bit_vector(is_add,1);\
__declare_static_bit_vector(is_sub,1);\
__declare_static_bit_vector(with_carry,1);\
__declare_static_bit_vector(is_mul,1);\
__declare_static_bit_vector(is_div,1);\
__declare_static_bit_vector(signed_mul_div,1);\
__declare_static_bit_vector(is_and,1);\
__declare_static_bit_vector(is_or,1);\
__declare_static_bit_vector(is_xor,1);\
__declare_static_bit_vector(is_xnor,1);\
__declare_static_bit_vector(is_sll,1);\
__declare_static_bit_vector(is_srl,1);\
__declare_static_bit_vector(is_sra,1);\
__declare_static_bit_vector(negate_second_operand,1);\
__declare_static_bit_vector(set_cc,1);\
__declare_static_bit_vector(tagged_alu_op,1);\
__declare_static_bit_vector(trap_on_overflow,1);\
__declare_static_bit_vector(is_alu_instr,1);\
__declare_static_bit_vector(alu_instr_spec,17);\
__declare_static_bit_vector(is_fp_op_1,1);\
__declare_static_bit_vector(is_fp_op_2,1);\
__declare_static_bit_vector(fp_op_instr_spec,11);\
__declare_static_bit_vector(is_fp_op_instr,1);\
__declare_static_bit_vector(is_cp_op_1,1);\
__declare_static_bit_vector(is_cp_op_2,1);\
__declare_static_bit_vector(cp_op_instr_spec,2);\
__declare_static_bit_vector(is_cp_op_instr,1);\
__declare_static_bit_vector(is_illegal_instr,1);\
__declare_static_bit_vector(uses_iu_cc,1);\
__declare_static_bit_vector(uses_fp_cc,1);\
__declare_static_bit_vector(iu_cti,1);\
__declare_static_bit_vector(uses_iu1,1);\
__declare_static_bit_vector(reads_iu_rfile,1);\
__declare_static_bit_vector(fu_cti,1);\
__declare_static_bit_vector(cp_cti,1);\
__declare_static_bit_vector(iu_flush,1);\
__declare_static_bit_vector(iu_write_psr,1);\
__declare_static_bit_vector(iu_mmu_ctrl_write,1);\
__declare_static_bit_vector(uses_iu2,1);\
__declare_static_bit_vector(cpunit_cti,1);\
__declare_static_bit_vector(uses_fu1,1);\
__declare_static_bit_vector(reads_fu_rfile,1);\
__declare_static_bit_vector(fu1_can_trap,1);\
__declare_static_bit_vector(uses_fu2,1);\
__declare_static_bit_vector(uses_cu1,1);\
__declare_static_bit_vector(uses_cu2,1);\
__declare_static_bit_vector(uses_ls,1);\
__declare_static_bit_vector(iu1_to_iu2_fast,1);\
__declare_static_bit_vector(iu1_can_trap,1);\
__declare_static_bit_vector(iu1_to_iu2,1);\
__declare_static_bit_vector(iu1_to_sc,1);\
__declare_static_bit_vector(iu_reg_to_ls,1);\
__declare_static_bit_vector(iu1_to_ls_trap,1);\
__declare_static_bit_vector(iu1_to_fu2,1);\
__declare_static_bit_vector(iu1_to_cu2,1);\
bit_vector_clear(&iu1_to_cu2);\
__declare_static_bit_vector(fu1_to_fu2,1);\
__declare_static_bit_vector(fu1_to_sc,1);\
bit_vector_clear(&fu1_to_sc);\
__declare_static_bit_vector(fu_reg_to_ls,1);\
__declare_static_bit_vector(fu1_to_ls,1);\
__declare_static_bit_vector(fu1_to_iu2,1);\
__declare_static_bit_vector(fu1_to_cu2,1);\
bit_vector_clear(&fu1_to_cu2);\
__declare_static_bit_vector(cu1_to_cu2,1);\
__declare_static_bit_vector(cu1_to_sc,1);\
bit_vector_clear(&cu1_to_sc);\
__declare_static_bit_vector(cu1_to_ls,1);\
bit_vector_clear(&cu1_to_ls);\
__declare_static_bit_vector(cu1_to_iu2,1);\
bit_vector_clear(&cu1_to_iu2);\
__declare_static_bit_vector(cu1_to_fu2,1);\
bit_vector_clear(&cu1_to_fu2);\
__declare_static_bit_vector(send_from_sc_to_rest,1);\
__declare_static_bit_vector(sc_to_iu2,1);\
__declare_static_bit_vector(sc_to_fu2,1);\
__declare_static_bit_vector(sc_to_cu2,1);\
__declare_static_bit_vector(sc_to_ls,1);\
__declare_static_bit_vector(ls_to_iu2,1);\
__declare_static_bit_vector(ls_to_fu2,1);\
__declare_static_bit_vector(ls_to_cu2,1);\

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5235_c_macro_ __declare_static_bit_vector(konst_5232,32);\
bit_vector_clear(&konst_5232);\
konst_5232.val.byte_array[3] = 1;\
__declare_static_bit_vector(MUX_5234,32);\
if (has_undefined_bit(&annulled_instr)) {fprintf(stderr, "Error: variable annulled_instr has undefined value (%s) at test point.\n", to_string(&annulled_instr));assert(0);} \
if(bit_vector_to_uint64(0, &annulled_instr)){bit_vector_clear(&konst_5232);\
konst_5232.val.byte_array[3] = 1;\
bit_vector_cast_to_bit_vector(0, &(MUX_5234), &(konst_5232));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_5234), &(instr_raw));\
}bit_vector_cast_to_bit_vector(0, &(instr), &(MUX_5234));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_5239_c_macro_ if (bit_vector_to_uint64(0, &annulled_instr)) {\
uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_5239_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_5239_c_macro___print_counter,"annulled_marked_as_nop");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5239_c_macro___print_counter,"instr_raw");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(instr_raw)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5239_c_macro___print_counter,"instr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(instr)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5243_c_macro_ __declare_static_bit_vector(slice_5242,2);\
bit_vector_slice(&(instr), &(slice_5242), 30);\
bit_vector_cast_to_bit_vector(0, &(op), &(slice_5242));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5247_c_macro_ __declare_static_bit_vector(slice_5246,3);\
bit_vector_slice(&(instr), &(slice_5246), 22);\
bit_vector_cast_to_bit_vector(0, &(op2), &(slice_5246));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5251_c_macro_ __declare_static_bit_vector(slice_5250,6);\
bit_vector_slice(&(instr), &(slice_5250), 19);\
bit_vector_cast_to_bit_vector(0, &(op3), &(slice_5250));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5255_c_macro_ __declare_static_bit_vector(slice_5254,9);\
bit_vector_slice(&(instr), &(slice_5254), 5);\
bit_vector_cast_to_bit_vector(0, &(opf), &(slice_5254));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5259_c_macro_ __declare_static_bit_vector(slice_5258,2);\
bit_vector_slice(&(op3), &(slice_5258), 4);\
bit_vector_cast_to_bit_vector(0, &(op3_col), &(slice_5258));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5263_c_macro_ __declare_static_bit_vector(slice_5262,4);\
bit_vector_slice(&(op3), &(slice_5262), 0);\
bit_vector_cast_to_bit_vector(0, &(op3_row), &(slice_5262));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5268_c_macro_ __declare_static_bit_vector(konst_5266,2);\
bit_vector_clear(&konst_5266);\
konst_5266.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_5267,1);\
bit_vector_clear(&konst_5266);\
konst_5266.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op), &(konst_5266), &(EQ_u2_u1_5267));\
bit_vector_cast_to_bit_vector(0, &(op_eq_2), &(EQ_u2_u1_5267));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5273_c_macro_ __declare_static_bit_vector(konst_5271,2);\
bit_vector_clear(&konst_5271);\
konst_5271.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5272,1);\
bit_vector_clear(&konst_5271);\
konst_5271.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op), &(konst_5271), &(EQ_u2_u1_5272));\
bit_vector_cast_to_bit_vector(0, &(op_eq_3), &(EQ_u2_u1_5272));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5277_c_macro_ __declare_static_bit_vector(slice_5276,5);\
bit_vector_slice(&(instr), &(slice_5276), 14);\
bit_vector_cast_to_bit_vector(0, &(rs1), &(slice_5276));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5281_c_macro_ __declare_static_bit_vector(slice_5280,5);\
bit_vector_slice(&(instr), &(slice_5280), 0);\
bit_vector_cast_to_bit_vector(0, &(rs2), &(slice_5280));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5285_c_macro_ __declare_static_bit_vector(slice_5284,5);\
bit_vector_slice(&(instr), &(slice_5284), 25);\
bit_vector_cast_to_bit_vector(0, &(rd), &(slice_5284));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5290_c_macro_ __declare_static_bit_vector(konst_5288,32);\
bit_vector_clear(&konst_5288);\
konst_5288.val.byte_array[0] = 13;\
__declare_static_bit_vector(BITSEL_u32_u1_5289,1);\
bit_vector_clear(&konst_5288);\
konst_5288.val.byte_array[0] = 13;\
bit_vector_bitsel( &(instr), &(konst_5288), &(BITSEL_u32_u1_5289));\
bit_vector_cast_to_bit_vector(0, &(imm_flag), &(BITSEL_u32_u1_5289));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5295_c_macro_ __declare_static_bit_vector(konst_5293,32);\
bit_vector_clear(&konst_5293);\
konst_5293.val.byte_array[0] = 29;\
__declare_static_bit_vector(BITSEL_u32_u1_5294,1);\
bit_vector_clear(&konst_5293);\
konst_5293.val.byte_array[0] = 29;\
bit_vector_bitsel( &(instr), &(konst_5293), &(BITSEL_u32_u1_5294));\
bit_vector_cast_to_bit_vector(0, &(annul_flag), &(BITSEL_u32_u1_5294));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro_ uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"decoded_stage1___instr_info____");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"instr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(instr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"op");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(op)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"op2");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(op2)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"op3");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(op3)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"opf");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(opf)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"rs1");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(rs1)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"rs2");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(rs2)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"rd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(rd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"imm_flag");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(imm_flag)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"annul_flag");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(annul_flag)));fflush (fpunit_exec_exec___report_log_file__);}__declare_static_bit_vector(slice_5307,30);\
bit_vector_slice(&(instr), &(slice_5307), 0);\
if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"imm30");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(slice_5307)));fflush (fpunit_exec_exec___report_log_file__);}__declare_static_bit_vector(slice_5309,22);\
bit_vector_slice(&(instr), &(slice_5309), 0);\
if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"imm22");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(slice_5309)));fflush (fpunit_exec_exec___report_log_file__);}__declare_static_bit_vector(slice_5311,13);\
bit_vector_slice(&(instr), &(slice_5311), 0);\
if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5312_c_macro___print_counter,"imm13");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(slice_5311)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5347_c_macro_ __declare_static_bit_vector(konst_5316,4);\
bit_vector_clear(&konst_5316);\
konst_5316.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u4_u1_5317,1);\
__declare_static_bit_vector(konst_5319,4);\
bit_vector_clear(&konst_5319);\
konst_5319.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_5320,1);\
__declare_static_bit_vector(konst_5322,2);\
bit_vector_clear(&konst_5322);\
konst_5322.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5323,1);\
__declare_static_bit_vector(AND_u1_u1_5324,1);\
__declare_static_bit_vector(OR_u1_u1_5325,1);\
__declare_static_bit_vector(konst_5327,4);\
bit_vector_clear(&konst_5327);\
konst_5327.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_5328,1);\
__declare_static_bit_vector(OR_u1_u1_5329,1);\
__declare_static_bit_vector(konst_5331,4);\
bit_vector_clear(&konst_5331);\
konst_5331.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_5332,1);\
__declare_static_bit_vector(konst_5334,2);\
bit_vector_clear(&konst_5334);\
konst_5334.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5335,1);\
__declare_static_bit_vector(AND_u1_u1_5336,1);\
__declare_static_bit_vector(OR_u1_u1_5337,1);\
__declare_static_bit_vector(konst_5339,4);\
bit_vector_clear(&konst_5339);\
konst_5339.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_5340,1);\
__declare_static_bit_vector(konst_5342,2);\
bit_vector_clear(&konst_5342);\
konst_5342.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5343,1);\
__declare_static_bit_vector(AND_u1_u1_5344,1);\
__declare_static_bit_vector(OR_u1_u1_5345,1);\
__declare_static_bit_vector(AND_u1_u1_5346,1);\
bit_vector_clear(&konst_5316);\
konst_5316.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_row), &(konst_5316), &(ULT_u4_u1_5317));\
bit_vector_clear(&konst_5319);\
konst_5319.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_row), &(konst_5319), &(EQ_u4_u1_5320));\
bit_vector_clear(&konst_5322);\
konst_5322.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5322), &(ULT_u2_u1_5323));\
bit_vector_and(&(EQ_u4_u1_5320), &(ULT_u2_u1_5323), &(AND_u1_u1_5324));\
bit_vector_or(&(ULT_u4_u1_5317), &(AND_u1_u1_5324), &(OR_u1_u1_5325));\
bit_vector_clear(&konst_5327);\
konst_5327.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_row), &(konst_5327), &(EQ_u4_u1_5328));\
bit_vector_or(&(OR_u1_u1_5325), &(EQ_u4_u1_5328), &(OR_u1_u1_5329));\
bit_vector_clear(&konst_5331);\
konst_5331.val.byte_array[0] = 9;\
bit_vector_equal(0, &(op3_row), &(konst_5331), &(EQ_u4_u1_5332));\
bit_vector_clear(&konst_5334);\
konst_5334.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5334), &(ULT_u2_u1_5335));\
bit_vector_and(&(EQ_u4_u1_5332), &(ULT_u2_u1_5335), &(AND_u1_u1_5336));\
bit_vector_or(&(OR_u1_u1_5329), &(AND_u1_u1_5336), &(OR_u1_u1_5337));\
bit_vector_clear(&konst_5339);\
konst_5339.val.byte_array[0] = 10;\
bit_vector_equal(0, &(op3_row), &(konst_5339), &(EQ_u4_u1_5340));\
bit_vector_clear(&konst_5342);\
konst_5342.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5342), &(ULT_u2_u1_5343));\
bit_vector_and(&(EQ_u4_u1_5340), &(ULT_u2_u1_5343), &(AND_u1_u1_5344));\
bit_vector_or(&(OR_u1_u1_5337), &(AND_u1_u1_5344), &(OR_u1_u1_5345));\
bit_vector_and(&(op_eq_3), &(OR_u1_u1_5345), &(AND_u1_u1_5346));\
bit_vector_cast_to_bit_vector(0, &(is_load_instr), &(AND_u1_u1_5346));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5358_c_macro_ __declare_static_bit_vector(konst_5351,4);\
bit_vector_clear(&konst_5351);\
konst_5351.val.byte_array[0] = 3;\
__declare_static_bit_vector(UGT_u4_u1_5352,1);\
__declare_static_bit_vector(konst_5354,4);\
bit_vector_clear(&konst_5354);\
konst_5354.val.byte_array[0] = 8;\
__declare_static_bit_vector(ULT_u4_u1_5355,1);\
__declare_static_bit_vector(AND_u1_u1_5356,1);\
__declare_static_bit_vector(AND_u1_u1_5357,1);\
bit_vector_clear(&konst_5351);\
konst_5351.val.byte_array[0] = 3;\
bit_vector_greater(0, &(op3_row), &(konst_5351), &(UGT_u4_u1_5352));\
bit_vector_clear(&konst_5354);\
konst_5354.val.byte_array[0] = 8;\
bit_vector_less(0, &(op3_row), &(konst_5354), &(ULT_u4_u1_5355));\
bit_vector_and(&(UGT_u4_u1_5352), &(ULT_u4_u1_5355), &(AND_u1_u1_5356));\
bit_vector_and(&(op_eq_3), &(AND_u1_u1_5356), &(AND_u1_u1_5357));\
bit_vector_cast_to_bit_vector(0, &(is_store_instr), &(AND_u1_u1_5357));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5369_c_macro_ __declare_static_bit_vector(konst_5362,4);\
bit_vector_clear(&konst_5362);\
konst_5362.val.byte_array[0] = 13;\
__declare_static_bit_vector(EQ_u4_u1_5363,1);\
__declare_static_bit_vector(konst_5365,2);\
bit_vector_clear(&konst_5365);\
konst_5365.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5366,1);\
__declare_static_bit_vector(AND_u1_u1_5367,1);\
__declare_static_bit_vector(AND_u1_u1_5368,1);\
bit_vector_clear(&konst_5362);\
konst_5362.val.byte_array[0] = 13;\
bit_vector_equal(0, &(op3_row), &(konst_5362), &(EQ_u4_u1_5363));\
bit_vector_clear(&konst_5365);\
konst_5365.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5365), &(ULT_u2_u1_5366));\
bit_vector_and(&(EQ_u4_u1_5363), &(ULT_u2_u1_5366), &(AND_u1_u1_5367));\
bit_vector_and(&(op_eq_3), &(AND_u1_u1_5367), &(AND_u1_u1_5368));\
bit_vector_cast_to_bit_vector(0, &(is_atomic_ldstub_instr), &(AND_u1_u1_5368));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5380_c_macro_ __declare_static_bit_vector(konst_5373,4);\
bit_vector_clear(&konst_5373);\
konst_5373.val.byte_array[0] = 15;\
__declare_static_bit_vector(EQ_u4_u1_5374,1);\
__declare_static_bit_vector(konst_5376,2);\
bit_vector_clear(&konst_5376);\
konst_5376.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5377,1);\
__declare_static_bit_vector(AND_u1_u1_5378,1);\
__declare_static_bit_vector(AND_u1_u1_5379,1);\
bit_vector_clear(&konst_5373);\
konst_5373.val.byte_array[0] = 15;\
bit_vector_equal(0, &(op3_row), &(konst_5373), &(EQ_u4_u1_5374));\
bit_vector_clear(&konst_5376);\
konst_5376.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5376), &(ULT_u2_u1_5377));\
bit_vector_and(&(EQ_u4_u1_5374), &(ULT_u2_u1_5377), &(AND_u1_u1_5378));\
bit_vector_and(&(op_eq_3), &(AND_u1_u1_5378), &(AND_u1_u1_5379));\
bit_vector_cast_to_bit_vector(0, &(is_swap_instr), &(AND_u1_u1_5379));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5389_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_5384,2);\
__declare_static_bit_vector(CONCAT_u1_u2_5387,2);\
__declare_static_bit_vector(CONCAT_u2_u4_5388,4);\
bit_vector_concatenate( &(is_load_instr), &(is_store_instr), &(CONCAT_u1_u2_5384));\
bit_vector_concatenate( &(is_atomic_ldstub_instr), &(is_swap_instr), &(CONCAT_u1_u2_5387));\
bit_vector_concatenate( &(CONCAT_u1_u2_5384), &(CONCAT_u1_u2_5387), &(CONCAT_u2_u4_5388));\
bit_vector_cast_to_bit_vector(0, &(data_instr_type), &(CONCAT_u2_u4_5388));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5394_c_macro_ __declare_static_bit_vector(konst_5392,4);\
bit_vector_clear(&konst_5392);\
__declare_static_bit_vector(NEQ_u4_u1_5393,1);\
bit_vector_clear(&konst_5392);\
bit_vector_not_equal(0, &(data_instr_type), &(konst_5392), &NEQ_u4_u1_5393);\
bit_vector_cast_to_bit_vector(0, &(is_data_transfer_instr), &(NEQ_u4_u1_5393));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5407_c_macro_ __declare_static_bit_vector(konst_5397,4);\
bit_vector_clear(&konst_5397);\
konst_5397.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_5398,1);\
__declare_static_bit_vector(konst_5400,4);\
bit_vector_clear(&konst_5400);\
konst_5400.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_5401,1);\
__declare_static_bit_vector(OR_u1_u1_5402,1);\
__declare_static_bit_vector(konst_5404,2);\
bit_vector_clear(&konst_5404);\
konst_5404.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5405,1);\
__declare_static_bit_vector(AND_u1_u1_5406,1);\
bit_vector_clear(&konst_5397);\
konst_5397.val.byte_array[0] = 9;\
bit_vector_equal(0, &(op3_row), &(konst_5397), &(EQ_u4_u1_5398));\
bit_vector_clear(&konst_5400);\
konst_5400.val.byte_array[0] = 10;\
bit_vector_equal(0, &(op3_row), &(konst_5400), &(EQ_u4_u1_5401));\
bit_vector_or(&(EQ_u4_u1_5398), &(EQ_u4_u1_5401), &(OR_u1_u1_5402));\
bit_vector_clear(&konst_5404);\
konst_5404.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5404), &(ULT_u2_u1_5405));\
bit_vector_and(&(OR_u1_u1_5402), &(ULT_u2_u1_5405), &(AND_u1_u1_5406));\
bit_vector_cast_to_bit_vector(0, &(S), &(AND_u1_u1_5406));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5420_c_macro_ __declare_static_bit_vector(konst_5410,2);\
bit_vector_clear(&konst_5410);\
konst_5410.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_5411,1);\
__declare_static_bit_vector(konst_5413,4);\
bit_vector_clear(&konst_5413);\
konst_5413.val.byte_array[0] = 2;\
__declare_static_bit_vector(NEQ_u4_u1_5414,1);\
__declare_static_bit_vector(AND_u1_u1_5415,1);\
__declare_static_bit_vector(konst_5417,4);\
bit_vector_clear(&konst_5417);\
konst_5417.val.byte_array[0] = 8;\
__declare_static_bit_vector(ULT_u4_u1_5418,1);\
__declare_static_bit_vector(AND_u1_u1_5419,1);\
bit_vector_clear(&konst_5410);\
konst_5410.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_5410), &(EQ_u2_u1_5411));\
bit_vector_clear(&konst_5413);\
konst_5413.val.byte_array[0] = 2;\
bit_vector_not_equal(0, &(op3_row), &(konst_5413), &NEQ_u4_u1_5414);\
bit_vector_and(&(EQ_u2_u1_5411), &(NEQ_u4_u1_5414), &(AND_u1_u1_5415));\
bit_vector_clear(&konst_5417);\
konst_5417.val.byte_array[0] = 8;\
bit_vector_less(0, &(op3_row), &(konst_5417), &(ULT_u4_u1_5418));\
bit_vector_and(&(AND_u1_u1_5415), &(ULT_u4_u1_5418), &(AND_u1_u1_5419));\
bit_vector_cast_to_bit_vector(0, &(FP), &(AND_u1_u1_5419));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5426_c_macro_ __declare_static_bit_vector(OR_u1_u1_5424,1);\
__declare_static_bit_vector(NOT_u1_u1_5425,1);\
bit_vector_or(&(S), &(FP), &(OR_u1_u1_5424));\
bit_vector_not( &(OR_u1_u1_5424), &(NOT_u1_u1_5425));\
bit_vector_cast_to_bit_vector(0, &(U), &(NOT_u1_u1_5425));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5433_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_5430,2);\
__declare_static_bit_vector(CONCAT_u2_u3_5432,3);\
bit_vector_concatenate( &(S), &(U), &(CONCAT_u1_u2_5430));\
bit_vector_concatenate( &(CONCAT_u1_u2_5430), &(FP), &(CONCAT_u2_u3_5432));\
bit_vector_cast_to_bit_vector(0, &(data_transfer_data_type), &(CONCAT_u2_u3_5432));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5460_c_macro_ __declare_static_bit_vector(konst_5436,4);\
bit_vector_clear(&konst_5436);\
konst_5436.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_5437,1);\
__declare_static_bit_vector(konst_5439,2);\
bit_vector_clear(&konst_5439);\
konst_5439.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5440,1);\
__declare_static_bit_vector(AND_u1_u1_5441,1);\
__declare_static_bit_vector(konst_5443,4);\
bit_vector_clear(&konst_5443);\
konst_5443.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_5444,1);\
__declare_static_bit_vector(konst_5446,2);\
bit_vector_clear(&konst_5446);\
konst_5446.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5447,1);\
__declare_static_bit_vector(AND_u1_u1_5448,1);\
__declare_static_bit_vector(OR_u1_u1_5449,1);\
__declare_static_bit_vector(konst_5451,4);\
bit_vector_clear(&konst_5451);\
konst_5451.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_5452,1);\
__declare_static_bit_vector(konst_5454,2);\
bit_vector_clear(&konst_5454);\
konst_5454.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5455,1);\
__declare_static_bit_vector(AND_u1_u1_5456,1);\
__declare_static_bit_vector(OR_u1_u1_5458,1);\
__declare_static_bit_vector(OR_u1_u1_5459,1);\
bit_vector_clear(&konst_5436);\
konst_5436.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_row), &(konst_5436), &(EQ_u4_u1_5437));\
bit_vector_clear(&konst_5439);\
konst_5439.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5439), &(ULT_u2_u1_5440));\
bit_vector_and(&(EQ_u4_u1_5437), &(ULT_u2_u1_5440), &(AND_u1_u1_5441));\
bit_vector_clear(&konst_5443);\
konst_5443.val.byte_array[0] = 5;\
bit_vector_equal(0, &(op3_row), &(konst_5443), &(EQ_u4_u1_5444));\
bit_vector_clear(&konst_5446);\
konst_5446.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5446), &(ULT_u2_u1_5447));\
bit_vector_and(&(EQ_u4_u1_5444), &(ULT_u2_u1_5447), &(AND_u1_u1_5448));\
bit_vector_or(&(AND_u1_u1_5441), &(AND_u1_u1_5448), &(OR_u1_u1_5449));\
bit_vector_clear(&konst_5451);\
konst_5451.val.byte_array[0] = 9;\
bit_vector_equal(0, &(op3_row), &(konst_5451), &(EQ_u4_u1_5452));\
bit_vector_clear(&konst_5454);\
konst_5454.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5454), &(ULT_u2_u1_5455));\
bit_vector_and(&(EQ_u4_u1_5452), &(ULT_u2_u1_5455), &(AND_u1_u1_5456));\
bit_vector_or(&(AND_u1_u1_5456), &(is_atomic_ldstub_instr), &(OR_u1_u1_5458));\
bit_vector_or(&(OR_u1_u1_5449), &(OR_u1_u1_5458), &(OR_u1_u1_5459));\
bit_vector_cast_to_bit_vector(0, &(is_u8_transfer), &(OR_u1_u1_5459));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5485_c_macro_ __declare_static_bit_vector(konst_5463,4);\
bit_vector_clear(&konst_5463);\
konst_5463.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_5464,1);\
__declare_static_bit_vector(konst_5466,2);\
bit_vector_clear(&konst_5466);\
konst_5466.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5467,1);\
__declare_static_bit_vector(AND_u1_u1_5468,1);\
__declare_static_bit_vector(konst_5470,4);\
bit_vector_clear(&konst_5470);\
konst_5470.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_5471,1);\
__declare_static_bit_vector(konst_5473,2);\
bit_vector_clear(&konst_5473);\
konst_5473.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5474,1);\
__declare_static_bit_vector(AND_u1_u1_5475,1);\
__declare_static_bit_vector(OR_u1_u1_5476,1);\
__declare_static_bit_vector(konst_5478,4);\
bit_vector_clear(&konst_5478);\
konst_5478.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_5479,1);\
__declare_static_bit_vector(konst_5481,2);\
bit_vector_clear(&konst_5481);\
konst_5481.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_5482,1);\
__declare_static_bit_vector(AND_u1_u1_5483,1);\
__declare_static_bit_vector(OR_u1_u1_5484,1);\
bit_vector_clear(&konst_5463);\
konst_5463.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_row), &(konst_5463), &(EQ_u4_u1_5464));\
bit_vector_clear(&konst_5466);\
konst_5466.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5466), &(ULT_u2_u1_5467));\
bit_vector_and(&(EQ_u4_u1_5464), &(ULT_u2_u1_5467), &(AND_u1_u1_5468));\
bit_vector_clear(&konst_5470);\
konst_5470.val.byte_array[0] = 10;\
bit_vector_equal(0, &(op3_row), &(konst_5470), &(EQ_u4_u1_5471));\
bit_vector_clear(&konst_5473);\
konst_5473.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5473), &(ULT_u2_u1_5474));\
bit_vector_and(&(EQ_u4_u1_5471), &(ULT_u2_u1_5474), &(AND_u1_u1_5475));\
bit_vector_or(&(AND_u1_u1_5468), &(AND_u1_u1_5475), &(OR_u1_u1_5476));\
bit_vector_clear(&konst_5478);\
konst_5478.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op3_row), &(konst_5478), &(EQ_u4_u1_5479));\
bit_vector_clear(&konst_5481);\
konst_5481.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_5481), &(ULT_u2_u1_5482));\
bit_vector_and(&(EQ_u4_u1_5479), &(ULT_u2_u1_5482), &(AND_u1_u1_5483));\
bit_vector_or(&(OR_u1_u1_5476), &(AND_u1_u1_5483), &(OR_u1_u1_5484));\
bit_vector_cast_to_bit_vector(0, &(is_u16_transfer), &(OR_u1_u1_5484));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5502_c_macro_ __declare_static_bit_vector(konst_5488,4);\
bit_vector_clear(&konst_5488);\
konst_5488.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_5489,1);\
__declare_static_bit_vector(konst_5491,4);\
bit_vector_clear(&konst_5491);\
konst_5491.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u4_u1_5492,1);\
__declare_static_bit_vector(OR_u1_u1_5493,1);\
__declare_static_bit_vector(konst_5495,4);\
bit_vector_clear(&konst_5495);\
konst_5495.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_5496,1);\
__declare_static_bit_vector(konst_5498,2);\
bit_vector_clear(&konst_5498);\
konst_5498.val.byte_array[0] = 1;\
__declare_static_bit_vector(UGT_u2_u1_5499,1);\
__declare_static_bit_vector(AND_u1_u1_5500,1);\
__declare_static_bit_vector(OR_u1_u1_5501,1);\
bit_vector_clear(&konst_5488);\
konst_5488.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_row), &(konst_5488), &(EQ_u4_u1_5489));\
bit_vector_clear(&konst_5491);\
konst_5491.val.byte_array[0] = 7;\
bit_vector_equal(0, &(op3_row), &(konst_5491), &(EQ_u4_u1_5492));\
bit_vector_or(&(EQ_u4_u1_5489), &(EQ_u4_u1_5492), &(OR_u1_u1_5493));\
bit_vector_clear(&konst_5495);\
konst_5495.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op3_row), &(konst_5495), &(EQ_u4_u1_5496));\
bit_vector_clear(&konst_5498);\
konst_5498.val.byte_array[0] = 1;\
bit_vector_greater(0, &(op3_col), &(konst_5498), &(UGT_u2_u1_5499));\
bit_vector_and(&(EQ_u4_u1_5496), &(UGT_u2_u1_5499), &(AND_u1_u1_5500));\
bit_vector_or(&(OR_u1_u1_5493), &(AND_u1_u1_5500), &(OR_u1_u1_5501));\
bit_vector_cast_to_bit_vector(0, &(is_u64_transfer), &(OR_u1_u1_5501));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5510_c_macro_ __declare_static_bit_vector(OR_u1_u1_5506,1);\
__declare_static_bit_vector(OR_u1_u1_5508,1);\
__declare_static_bit_vector(NOT_u1_u1_5509,1);\
bit_vector_or(&(is_u8_transfer), &(is_u16_transfer), &(OR_u1_u1_5506));\
bit_vector_or(&(OR_u1_u1_5506), &(is_u64_transfer), &(OR_u1_u1_5508));\
bit_vector_not( &(OR_u1_u1_5508), &(NOT_u1_u1_5509));\
bit_vector_cast_to_bit_vector(0, &(is_u32_transfer), &(NOT_u1_u1_5509));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5519_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_5514,2);\
__declare_static_bit_vector(CONCAT_u1_u2_5517,2);\
__declare_static_bit_vector(CONCAT_u2_u4_5518,4);\
bit_vector_concatenate( &(is_u64_transfer), &(is_u32_transfer), &(CONCAT_u1_u2_5514));\
bit_vector_concatenate( &(is_u16_transfer), &(is_u8_transfer), &(CONCAT_u1_u2_5517));\
bit_vector_concatenate( &(CONCAT_u1_u2_5514), &(CONCAT_u1_u2_5517), &(CONCAT_u2_u4_5518));\
bit_vector_cast_to_bit_vector(0, &(data_transfer_width), &(CONCAT_u2_u4_5518));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5524_c_macro_ __declare_static_bit_vector(AND_u1_u1_5523,1);\
bit_vector_and(&(is_load_instr), &(FP), &(AND_u1_u1_5523));\
bit_vector_cast_to_bit_vector(0, &(is_fp_load), &(AND_u1_u1_5523));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5531_c_macro_ __declare_static_bit_vector(konst_5528,4);\
bit_vector_clear(&konst_5528);\
konst_5528.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_5529,1);\
__declare_static_bit_vector(AND_u1_u1_5530,1);\
bit_vector_clear(&konst_5528);\
konst_5528.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_row), &(konst_5528), &(EQ_u4_u1_5529));\
bit_vector_and(&(is_fp_load), &(EQ_u4_u1_5529), &(AND_u1_u1_5530));\
bit_vector_cast_to_bit_vector(0, &(is_fp_load_to_fsr), &(AND_u1_u1_5530));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5536_c_macro_ __declare_static_bit_vector(AND_u1_u1_5535,1);\
bit_vector_and(&(is_store_instr), &(FP), &(AND_u1_u1_5535));\
bit_vector_cast_to_bit_vector(0, &(is_fp_store), &(AND_u1_u1_5535));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5543_c_macro_ __declare_static_bit_vector(konst_5540,4);\
bit_vector_clear(&konst_5540);\
konst_5540.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_5541,1);\
__declare_static_bit_vector(AND_u1_u1_5542,1);\
bit_vector_clear(&konst_5540);\
konst_5540.val.byte_array[0] = 5;\
bit_vector_equal(0, &(op3_row), &(konst_5540), &(EQ_u4_u1_5541));\
bit_vector_and(&(is_fp_store), &(EQ_u4_u1_5541), &(AND_u1_u1_5542));\
bit_vector_cast_to_bit_vector(0, &(is_fp_store_from_fsr), &(AND_u1_u1_5542));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5550_c_macro_ __declare_static_bit_vector(konst_5547,4);\
bit_vector_clear(&konst_5547);\
konst_5547.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_5548,1);\
__declare_static_bit_vector(AND_u1_u1_5549,1);\
bit_vector_clear(&konst_5547);\
konst_5547.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op3_row), &(konst_5547), &(EQ_u4_u1_5548));\
bit_vector_and(&(is_fp_store), &(EQ_u4_u1_5548), &(AND_u1_u1_5549));\
bit_vector_cast_to_bit_vector(0, &(is_fp_store_from_fq), &(AND_u1_u1_5549));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5555_c_macro_ __declare_static_bit_vector(OR_u1_u1_5554,1);\
bit_vector_or(&(is_fp_load), &(is_fp_store), &(OR_u1_u1_5554));\
bit_vector_cast_to_bit_vector(0, &(is_fp_access), &(OR_u1_u1_5554));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5562_c_macro_ __declare_static_bit_vector(konst_5559,2);\
bit_vector_clear(&konst_5559);\
konst_5559.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5560,1);\
__declare_static_bit_vector(AND_u1_u1_5561,1);\
bit_vector_clear(&konst_5559);\
konst_5559.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5559), &(EQ_u2_u1_5560));\
bit_vector_and(&(is_load_instr), &(EQ_u2_u1_5560), &(AND_u1_u1_5561));\
bit_vector_cast_to_bit_vector(0, &(is_cp_load), &(AND_u1_u1_5561));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5569_c_macro_ __declare_static_bit_vector(konst_5566,4);\
bit_vector_clear(&konst_5566);\
konst_5566.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_5567,1);\
__declare_static_bit_vector(AND_u1_u1_5568,1);\
bit_vector_clear(&konst_5566);\
konst_5566.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_row), &(konst_5566), &(EQ_u4_u1_5567));\
bit_vector_and(&(is_cp_load), &(EQ_u4_u1_5567), &(AND_u1_u1_5568));\
bit_vector_cast_to_bit_vector(0, &(is_cp_load_to_cpsr), &(AND_u1_u1_5568));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5576_c_macro_ __declare_static_bit_vector(konst_5573,2);\
bit_vector_clear(&konst_5573);\
konst_5573.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5574,1);\
__declare_static_bit_vector(AND_u1_u1_5575,1);\
bit_vector_clear(&konst_5573);\
konst_5573.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5573), &(EQ_u2_u1_5574));\
bit_vector_and(&(is_store_instr), &(EQ_u2_u1_5574), &(AND_u1_u1_5575));\
bit_vector_cast_to_bit_vector(0, &(is_cp_store), &(AND_u1_u1_5575));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5583_c_macro_ __declare_static_bit_vector(konst_5580,4);\
bit_vector_clear(&konst_5580);\
konst_5580.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_5581,1);\
__declare_static_bit_vector(AND_u1_u1_5582,1);\
bit_vector_clear(&konst_5580);\
konst_5580.val.byte_array[0] = 5;\
bit_vector_equal(0, &(op3_row), &(konst_5580), &(EQ_u4_u1_5581));\
bit_vector_and(&(is_cp_store), &(EQ_u4_u1_5581), &(AND_u1_u1_5582));\
bit_vector_cast_to_bit_vector(0, &(is_cp_store_from_cpsr), &(AND_u1_u1_5582));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5590_c_macro_ __declare_static_bit_vector(konst_5587,4);\
bit_vector_clear(&konst_5587);\
konst_5587.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_5588,1);\
__declare_static_bit_vector(AND_u1_u1_5589,1);\
bit_vector_clear(&konst_5587);\
konst_5587.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op3_row), &(konst_5587), &(EQ_u4_u1_5588));\
bit_vector_and(&(is_cp_store), &(EQ_u4_u1_5588), &(AND_u1_u1_5589));\
bit_vector_cast_to_bit_vector(0, &(is_cp_store_from_cpq), &(AND_u1_u1_5589));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5595_c_macro_ __declare_static_bit_vector(OR_u1_u1_5594,1);\
bit_vector_or(&(is_cp_load), &(is_cp_store), &(OR_u1_u1_5594));\
bit_vector_cast_to_bit_vector(0, &(is_cp_access), &(OR_u1_u1_5594));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5604_c_macro_ __declare_static_bit_vector(OR_u1_u1_5599,1);\
__declare_static_bit_vector(OR_u1_u1_5602,1);\
__declare_static_bit_vector(OR_u1_u1_5603,1);\
bit_vector_or(&(is_fp_load_to_fsr), &(is_fp_store_from_fsr), &(OR_u1_u1_5599));\
bit_vector_or(&(is_cp_load_to_cpsr), &(is_cp_store_from_cpsr), &(OR_u1_u1_5602));\
bit_vector_or(&(OR_u1_u1_5599), &(OR_u1_u1_5602), &(OR_u1_u1_5603));\
bit_vector_cast_to_bit_vector(0, &(is_fp_cp_sr_access), &(OR_u1_u1_5603));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5609_c_macro_ __declare_static_bit_vector(OR_u1_u1_5608,1);\
bit_vector_or(&(is_fp_store_from_fq), &(is_cp_store_from_cpq), &(OR_u1_u1_5608));\
bit_vector_cast_to_bit_vector(0, &(is_fp_cp_q_access), &(OR_u1_u1_5608));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5616_c_macro_ __declare_static_bit_vector(konst_5613,2);\
bit_vector_clear(&konst_5613);\
konst_5613.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u2_u1_5614,1);\
__declare_static_bit_vector(AND_u1_u1_5615,1);\
bit_vector_clear(&konst_5613);\
konst_5613.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_col), &(konst_5613), &(EQ_u2_u1_5614));\
bit_vector_and(&(op_eq_3), &(EQ_u2_u1_5614), &(AND_u1_u1_5615));\
bit_vector_cast_to_bit_vector(0, &(asi_bit), &(AND_u1_u1_5615));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5620_c_macro_ __declare_static_bit_vector(slice_5619,8);\
bit_vector_slice(&(instr), &(slice_5619), 5);\
bit_vector_cast_to_bit_vector(0, &(asi_id_8), &(slice_5619));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5639_c_macro_ __declare_static_bit_vector(CONCAT_u4_u7_5624,7);\
__declare_static_bit_vector(CONCAT_u7_u11_5626,11);\
__declare_static_bit_vector(CONCAT_u1_u2_5629,2);\
__declare_static_bit_vector(CONCAT_u11_u13_5630,13);\
__declare_static_bit_vector(CONCAT_u1_u2_5633,2);\
__declare_static_bit_vector(CONCAT_u1_u9_5636,9);\
__declare_static_bit_vector(CONCAT_u2_u11_5637,11);\
__declare_static_bit_vector(CONCAT_u13_u24_5638,24);\
bit_vector_concatenate( &(data_instr_type), &(data_transfer_data_type), &(CONCAT_u4_u7_5624));\
bit_vector_concatenate( &(CONCAT_u4_u7_5624), &(data_transfer_width), &(CONCAT_u7_u11_5626));\
bit_vector_concatenate( &(is_fp_access), &(is_cp_access), &(CONCAT_u1_u2_5629));\
bit_vector_concatenate( &(CONCAT_u7_u11_5626), &(CONCAT_u1_u2_5629), &(CONCAT_u11_u13_5630));\
bit_vector_concatenate( &(is_fp_cp_sr_access), &(is_fp_cp_q_access), &(CONCAT_u1_u2_5633));\
bit_vector_concatenate( &(asi_bit), &(asi_id_8), &(CONCAT_u1_u9_5636));\
bit_vector_concatenate( &(CONCAT_u1_u2_5633), &(CONCAT_u1_u9_5636), &(CONCAT_u2_u11_5637));\
bit_vector_concatenate( &(CONCAT_u11_u13_5630), &(CONCAT_u2_u11_5637), &(CONCAT_u13_u24_5638));\
bit_vector_cast_to_bit_vector(0, &(data_transfer_instr_spec), &(CONCAT_u13_u24_5638));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro_ if (bit_vector_to_uint64(0, &is_data_transfer_instr)) {\
uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"decode_stage_1_data_transfer_ispec__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"data_instr_type");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(data_instr_type)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"data_transfer_data_type");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(data_transfer_data_type)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"data_transfer_width");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(data_transfer_width)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"is_fp_access");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_fp_access)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"is_cp_access");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_cp_access)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"is_fp_cp_sr_access");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_fp_cp_sr_access)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"is_fp_cp_q_access");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_fp_cp_q_access)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"asi_bit");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(asi_bit)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5650_c_macro___print_counter,"asi_id_8");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(asi_id_8)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5654_c_macro_ __declare_static_bit_vector(slice_5653,4);\
bit_vector_slice(&(instr), &(slice_5653), 25);\
bit_vector_cast_to_bit_vector(0, &(cond), &(slice_5653));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5659_c_macro_ __declare_static_bit_vector(konst_5657,2);\
bit_vector_clear(&konst_5657);\
konst_5657.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u2_u1_5658,1);\
bit_vector_clear(&konst_5657);\
konst_5657.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op), &(konst_5657), &(EQ_u2_u1_5658));\
bit_vector_cast_to_bit_vector(0, &(is_call), &(EQ_u2_u1_5658));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5668_c_macro_ __declare_static_bit_vector(konst_5662,2);\
bit_vector_clear(&konst_5662);\
__declare_static_bit_vector(EQ_u2_u1_5663,1);\
__declare_static_bit_vector(konst_5665,3);\
bit_vector_clear(&konst_5665);\
konst_5665.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u3_u1_5666,1);\
__declare_static_bit_vector(AND_u1_u1_5667,1);\
bit_vector_clear(&konst_5662);\
bit_vector_equal(0, &(op), &(konst_5662), &(EQ_u2_u1_5663));\
bit_vector_clear(&konst_5665);\
konst_5665.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op2), &(konst_5665), &(EQ_u3_u1_5666));\
bit_vector_and(&(EQ_u2_u1_5663), &(EQ_u3_u1_5666), &(AND_u1_u1_5667));\
bit_vector_cast_to_bit_vector(0, &(is_bicc), &(AND_u1_u1_5667));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5677_c_macro_ __declare_static_bit_vector(konst_5671,4);\
bit_vector_clear(&konst_5671);\
konst_5671.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_5672,1);\
__declare_static_bit_vector(konst_5674,4);\
bit_vector_clear(&konst_5674);\
__declare_static_bit_vector(EQ_u4_u1_5675,1);\
__declare_static_bit_vector(OR_u1_u1_5676,1);\
bit_vector_clear(&konst_5671);\
konst_5671.val.byte_array[0] = 8;\
bit_vector_equal(0, &(cond), &(konst_5671), &(EQ_u4_u1_5672));\
bit_vector_clear(&konst_5674);\
bit_vector_equal(0, &(cond), &(konst_5674), &(EQ_u4_u1_5675));\
bit_vector_or(&(EQ_u4_u1_5672), &(EQ_u4_u1_5675), &(OR_u1_u1_5676));\
bit_vector_cast_to_bit_vector(0, &(is_ba_or_bn_cond), &(OR_u1_u1_5676));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5686_c_macro_ __declare_static_bit_vector(konst_5680,2);\
bit_vector_clear(&konst_5680);\
__declare_static_bit_vector(EQ_u2_u1_5681,1);\
__declare_static_bit_vector(konst_5683,3);\
bit_vector_clear(&konst_5683);\
konst_5683.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u3_u1_5684,1);\
__declare_static_bit_vector(AND_u1_u1_5685,1);\
bit_vector_clear(&konst_5680);\
bit_vector_equal(0, &(op), &(konst_5680), &(EQ_u2_u1_5681));\
bit_vector_clear(&konst_5683);\
konst_5683.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op2), &(konst_5683), &(EQ_u3_u1_5684));\
bit_vector_and(&(EQ_u2_u1_5681), &(EQ_u3_u1_5684), &(AND_u1_u1_5685));\
bit_vector_cast_to_bit_vector(0, &(is_fbfcc), &(AND_u1_u1_5685));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5695_c_macro_ __declare_static_bit_vector(konst_5689,2);\
bit_vector_clear(&konst_5689);\
__declare_static_bit_vector(EQ_u2_u1_5690,1);\
__declare_static_bit_vector(konst_5692,3);\
bit_vector_clear(&konst_5692);\
konst_5692.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u3_u1_5693,1);\
__declare_static_bit_vector(AND_u1_u1_5694,1);\
bit_vector_clear(&konst_5689);\
bit_vector_equal(0, &(op), &(konst_5689), &(EQ_u2_u1_5690));\
bit_vector_clear(&konst_5692);\
konst_5692.val.byte_array[0] = 7;\
bit_vector_equal(0, &(op2), &(konst_5692), &(EQ_u3_u1_5693));\
bit_vector_and(&(EQ_u2_u1_5690), &(EQ_u3_u1_5693), &(AND_u1_u1_5694));\
bit_vector_cast_to_bit_vector(0, &(is_cbccc), &(AND_u1_u1_5694));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5706_c_macro_ __declare_static_bit_vector(konst_5699,4);\
bit_vector_clear(&konst_5699);\
konst_5699.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_5700,1);\
__declare_static_bit_vector(konst_5702,2);\
bit_vector_clear(&konst_5702);\
konst_5702.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5703,1);\
__declare_static_bit_vector(AND_u1_u1_5704,1);\
__declare_static_bit_vector(AND_u1_u1_5705,1);\
bit_vector_clear(&konst_5699);\
konst_5699.val.byte_array[0] = 10;\
bit_vector_equal(0, &(op3_row), &(konst_5699), &(EQ_u4_u1_5700));\
bit_vector_clear(&konst_5702);\
konst_5702.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5702), &(EQ_u2_u1_5703));\
bit_vector_and(&(EQ_u4_u1_5700), &(EQ_u2_u1_5703), &(AND_u1_u1_5704));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5704), &(AND_u1_u1_5705));\
bit_vector_cast_to_bit_vector(0, &(is_ticc), &(AND_u1_u1_5705));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5717_c_macro_ __declare_static_bit_vector(konst_5710,4);\
bit_vector_clear(&konst_5710);\
konst_5710.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_5711,1);\
__declare_static_bit_vector(konst_5713,2);\
bit_vector_clear(&konst_5713);\
konst_5713.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5714,1);\
__declare_static_bit_vector(AND_u1_u1_5715,1);\
__declare_static_bit_vector(AND_u1_u1_5716,1);\
bit_vector_clear(&konst_5710);\
konst_5710.val.byte_array[0] = 8;\
bit_vector_equal(0, &(op3_row), &(konst_5710), &(EQ_u4_u1_5711));\
bit_vector_clear(&konst_5713);\
konst_5713.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5713), &(EQ_u2_u1_5714));\
bit_vector_and(&(EQ_u4_u1_5711), &(EQ_u2_u1_5714), &(AND_u1_u1_5715));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5715), &(AND_u1_u1_5716));\
bit_vector_cast_to_bit_vector(0, &(is_jmpl), &(AND_u1_u1_5716));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5728_c_macro_ __declare_static_bit_vector(konst_5721,4);\
bit_vector_clear(&konst_5721);\
konst_5721.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_5722,1);\
__declare_static_bit_vector(konst_5724,2);\
bit_vector_clear(&konst_5724);\
konst_5724.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5725,1);\
__declare_static_bit_vector(AND_u1_u1_5726,1);\
__declare_static_bit_vector(AND_u1_u1_5727,1);\
bit_vector_clear(&konst_5721);\
konst_5721.val.byte_array[0] = 9;\
bit_vector_equal(0, &(op3_row), &(konst_5721), &(EQ_u4_u1_5722));\
bit_vector_clear(&konst_5724);\
konst_5724.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5724), &(EQ_u2_u1_5725));\
bit_vector_and(&(EQ_u4_u1_5722), &(EQ_u2_u1_5725), &(AND_u1_u1_5726));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5726), &(AND_u1_u1_5727));\
bit_vector_cast_to_bit_vector(0, &(is_rett), &(AND_u1_u1_5727));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5745_c_macro_ __declare_static_bit_vector(CONCAT_u4_u5_5732,5);\
__declare_static_bit_vector(CONCAT_u1_u2_5735,2);\
__declare_static_bit_vector(CONCAT_u5_u7_5736,7);\
__declare_static_bit_vector(CONCAT_u1_u2_5739,2);\
__declare_static_bit_vector(CONCAT_u1_u2_5742,2);\
__declare_static_bit_vector(CONCAT_u2_u4_5743,4);\
__declare_static_bit_vector(CONCAT_u7_u11_5744,11);\
bit_vector_concatenate( &(cond), &(is_call), &(CONCAT_u4_u5_5732));\
bit_vector_concatenate( &(is_rett), &(is_jmpl), &(CONCAT_u1_u2_5735));\
bit_vector_concatenate( &(CONCAT_u4_u5_5732), &(CONCAT_u1_u2_5735), &(CONCAT_u5_u7_5736));\
bit_vector_concatenate( &(is_ticc), &(is_bicc), &(CONCAT_u1_u2_5739));\
bit_vector_concatenate( &(is_fbfcc), &(is_cbccc), &(CONCAT_u1_u2_5742));\
bit_vector_concatenate( &(CONCAT_u1_u2_5739), &(CONCAT_u1_u2_5742), &(CONCAT_u2_u4_5743));\
bit_vector_concatenate( &(CONCAT_u5_u7_5736), &(CONCAT_u2_u4_5743), &(CONCAT_u7_u11_5744));\
bit_vector_cast_to_bit_vector(0, &(control_transfer_instr_spec), &(CONCAT_u7_u11_5744));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5760_c_macro_ __declare_static_bit_vector(OR_u1_u1_5749,1);\
__declare_static_bit_vector(OR_u1_u1_5752,1);\
__declare_static_bit_vector(OR_u1_u1_5753,1);\
__declare_static_bit_vector(OR_u1_u1_5756,1);\
__declare_static_bit_vector(OR_u1_u1_5758,1);\
__declare_static_bit_vector(OR_u1_u1_5759,1);\
bit_vector_or(&(is_call), &(is_rett), &(OR_u1_u1_5749));\
bit_vector_or(&(is_jmpl), &(is_ticc), &(OR_u1_u1_5752));\
bit_vector_or(&(OR_u1_u1_5749), &(OR_u1_u1_5752), &(OR_u1_u1_5753));\
bit_vector_or(&(is_bicc), &(is_fbfcc), &(OR_u1_u1_5756));\
bit_vector_or(&(OR_u1_u1_5756), &(is_cbccc), &(OR_u1_u1_5758));\
bit_vector_or(&(OR_u1_u1_5753), &(OR_u1_u1_5758), &(OR_u1_u1_5759));\
bit_vector_cast_to_bit_vector(0, &(is_control_transfer_instr), &(OR_u1_u1_5759));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro_ if (bit_vector_to_uint64(0, &is_control_transfer_instr)) {\
uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter,"decode_stage1_control_transfer_ispec__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter,"cond");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(cond)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter,"is_call");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_call)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter,"is_rett");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_rett)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter,"is_jmpl");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_jmpl)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter,"is_ticc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_ticc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter,"is_bicc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_bicc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter,"is_fbfcc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_fbfcc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_5770_c_macro___print_counter,"is_cbccc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_cbccc)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5788_c_macro_ __declare_static_bit_vector(konst_5773,2);\
bit_vector_clear(&konst_5773);\
__declare_static_bit_vector(EQ_u2_u1_5774,1);\
__declare_static_bit_vector(konst_5776,3);\
bit_vector_clear(&konst_5776);\
konst_5776.val.byte_array[0] = 4;\
__declare_static_bit_vector(EQ_u3_u1_5777,1);\
__declare_static_bit_vector(AND_u1_u1_5778,1);\
__declare_static_bit_vector(konst_5780,5);\
bit_vector_clear(&konst_5780);\
__declare_static_bit_vector(EQ_u5_u1_5781,1);\
__declare_static_bit_vector(slice_5783,22);\
__declare_static_bit_vector(konst_5784,22);\
bit_vector_clear(&konst_5784);\
__declare_static_bit_vector(EQ_u22_u1_5785,1);\
__declare_static_bit_vector(AND_u1_u1_5786,1);\
__declare_static_bit_vector(AND_u1_u1_5787,1);\
bit_vector_clear(&konst_5773);\
bit_vector_equal(0, &(op), &(konst_5773), &(EQ_u2_u1_5774));\
bit_vector_clear(&konst_5776);\
konst_5776.val.byte_array[0] = 4;\
bit_vector_equal(0, &(op2), &(konst_5776), &(EQ_u3_u1_5777));\
bit_vector_and(&(EQ_u2_u1_5774), &(EQ_u3_u1_5777), &(AND_u1_u1_5778));\
bit_vector_clear(&konst_5780);\
bit_vector_equal(0, &(rd), &(konst_5780), &(EQ_u5_u1_5781));\
bit_vector_slice(&(instr), &(slice_5783), 0);\
bit_vector_clear(&konst_5784);\
bit_vector_equal(0, &(slice_5783), &(konst_5784), &(EQ_u22_u1_5785));\
bit_vector_and(&(EQ_u5_u1_5781), &(EQ_u22_u1_5785), &(AND_u1_u1_5786));\
bit_vector_and(&(AND_u1_u1_5778), &(AND_u1_u1_5786), &(AND_u1_u1_5787));\
bit_vector_cast_to_bit_vector(0, &(is_nop), &(AND_u1_u1_5787));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5806_c_macro_ __declare_static_bit_vector(konst_5791,2);\
bit_vector_clear(&konst_5791);\
__declare_static_bit_vector(EQ_u2_u1_5792,1);\
__declare_static_bit_vector(konst_5794,3);\
bit_vector_clear(&konst_5794);\
konst_5794.val.byte_array[0] = 4;\
__declare_static_bit_vector(EQ_u3_u1_5795,1);\
__declare_static_bit_vector(AND_u1_u1_5796,1);\
__declare_static_bit_vector(konst_5798,5);\
bit_vector_clear(&konst_5798);\
__declare_static_bit_vector(NEQ_u5_u1_5799,1);\
__declare_static_bit_vector(slice_5801,22);\
__declare_static_bit_vector(konst_5802,22);\
bit_vector_clear(&konst_5802);\
__declare_static_bit_vector(NEQ_u22_u1_5803,1);\
__declare_static_bit_vector(OR_u1_u1_5804,1);\
__declare_static_bit_vector(AND_u1_u1_5805,1);\
bit_vector_clear(&konst_5791);\
bit_vector_equal(0, &(op), &(konst_5791), &(EQ_u2_u1_5792));\
bit_vector_clear(&konst_5794);\
konst_5794.val.byte_array[0] = 4;\
bit_vector_equal(0, &(op2), &(konst_5794), &(EQ_u3_u1_5795));\
bit_vector_and(&(EQ_u2_u1_5792), &(EQ_u3_u1_5795), &(AND_u1_u1_5796));\
bit_vector_clear(&konst_5798);\
bit_vector_not_equal(0, &(rd), &(konst_5798), &NEQ_u5_u1_5799);\
bit_vector_slice(&(instr), &(slice_5801), 0);\
bit_vector_clear(&konst_5802);\
bit_vector_not_equal(0, &(slice_5801), &(konst_5802), &NEQ_u22_u1_5803);\
bit_vector_or(&(NEQ_u5_u1_5799), &(NEQ_u22_u1_5803), &(OR_u1_u1_5804));\
bit_vector_and(&(AND_u1_u1_5796), &(OR_u1_u1_5804), &(AND_u1_u1_5805));\
bit_vector_cast_to_bit_vector(0, &(is_sethi), &(AND_u1_u1_5805));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5817_c_macro_ __declare_static_bit_vector(konst_5810,2);\
bit_vector_clear(&konst_5810);\
konst_5810.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_5811,1);\
__declare_static_bit_vector(AND_u1_u1_5812,1);\
__declare_static_bit_vector(konst_5814,4);\
bit_vector_clear(&konst_5814);\
konst_5814.val.byte_array[0] = 4;\
__declare_static_bit_vector(EQ_u4_u1_5815,1);\
__declare_static_bit_vector(AND_u1_u1_5816,1);\
bit_vector_clear(&konst_5810);\
konst_5810.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_5810), &(EQ_u2_u1_5811));\
bit_vector_and(&(op_eq_2), &(EQ_u2_u1_5811), &(AND_u1_u1_5812));\
bit_vector_clear(&konst_5814);\
konst_5814.val.byte_array[0] = 4;\
bit_vector_equal(0, &(op3_row), &(konst_5814), &(EQ_u4_u1_5815));\
bit_vector_and(&(AND_u1_u1_5812), &(EQ_u4_u1_5815), &(AND_u1_u1_5816));\
bit_vector_cast_to_bit_vector(0, &(is_mulscc), &(AND_u1_u1_5816));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5828_c_macro_ __declare_static_bit_vector(konst_5821,2);\
bit_vector_clear(&konst_5821);\
konst_5821.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5822,1);\
__declare_static_bit_vector(AND_u1_u1_5823,1);\
__declare_static_bit_vector(konst_5825,4);\
bit_vector_clear(&konst_5825);\
konst_5825.val.byte_array[0] = 11;\
__declare_static_bit_vector(EQ_u4_u1_5826,1);\
__declare_static_bit_vector(AND_u1_u1_5827,1);\
bit_vector_clear(&konst_5821);\
konst_5821.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5821), &(EQ_u2_u1_5822));\
bit_vector_and(&(op_eq_2), &(EQ_u2_u1_5822), &(AND_u1_u1_5823));\
bit_vector_clear(&konst_5825);\
konst_5825.val.byte_array[0] = 11;\
bit_vector_equal(0, &(op3_row), &(konst_5825), &(EQ_u4_u1_5826));\
bit_vector_and(&(AND_u1_u1_5823), &(EQ_u4_u1_5826), &(AND_u1_u1_5827));\
bit_vector_cast_to_bit_vector(0, &(is_flush), &(AND_u1_u1_5827));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5847_c_macro_ __declare_static_bit_vector(konst_5832,2);\
bit_vector_clear(&konst_5832);\
konst_5832.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_5833,1);\
__declare_static_bit_vector(AND_u1_u1_5834,1);\
__declare_static_bit_vector(konst_5836,4);\
bit_vector_clear(&konst_5836);\
konst_5836.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_5837,1);\
__declare_static_bit_vector(AND_u1_u1_5838,1);\
__declare_static_bit_vector(konst_5840,5);\
bit_vector_clear(&konst_5840);\
__declare_static_bit_vector(EQ_u5_u1_5841,1);\
__declare_static_bit_vector(konst_5843,5);\
bit_vector_clear(&konst_5843);\
konst_5843.val.byte_array[0] = 15;\
__declare_static_bit_vector(EQ_u5_u1_5844,1);\
__declare_static_bit_vector(AND_u1_u1_5845,1);\
__declare_static_bit_vector(AND_u1_u1_5846,1);\
bit_vector_clear(&konst_5832);\
konst_5832.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_5832), &(EQ_u2_u1_5833));\
bit_vector_and(&(op_eq_2), &(EQ_u2_u1_5833), &(AND_u1_u1_5834));\
bit_vector_clear(&konst_5836);\
konst_5836.val.byte_array[0] = 8;\
bit_vector_equal(0, &(op3_row), &(konst_5836), &(EQ_u4_u1_5837));\
bit_vector_and(&(AND_u1_u1_5834), &(EQ_u4_u1_5837), &(AND_u1_u1_5838));\
bit_vector_clear(&konst_5840);\
bit_vector_equal(0, &(rd), &(konst_5840), &(EQ_u5_u1_5841));\
bit_vector_clear(&konst_5843);\
konst_5843.val.byte_array[0] = 15;\
bit_vector_equal(0, &(rs1), &(konst_5843), &(EQ_u5_u1_5844));\
bit_vector_and(&(EQ_u5_u1_5841), &(EQ_u5_u1_5844), &(AND_u1_u1_5845));\
bit_vector_and(&(AND_u1_u1_5838), &(AND_u1_u1_5845), &(AND_u1_u1_5846));\
bit_vector_cast_to_bit_vector(0, &(is_stbar), &(AND_u1_u1_5846));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5858_c_macro_ __declare_static_bit_vector(konst_5851,2);\
bit_vector_clear(&konst_5851);\
konst_5851.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5852,1);\
__declare_static_bit_vector(AND_u1_u1_5853,1);\
__declare_static_bit_vector(konst_5855,4);\
bit_vector_clear(&konst_5855);\
konst_5855.val.byte_array[0] = 12;\
__declare_static_bit_vector(EQ_u4_u1_5856,1);\
__declare_static_bit_vector(AND_u1_u1_5857,1);\
bit_vector_clear(&konst_5851);\
konst_5851.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5851), &(EQ_u2_u1_5852));\
bit_vector_and(&(op_eq_2), &(EQ_u2_u1_5852), &(AND_u1_u1_5853));\
bit_vector_clear(&konst_5855);\
konst_5855.val.byte_array[0] = 12;\
bit_vector_equal(0, &(op3_row), &(konst_5855), &(EQ_u4_u1_5856));\
bit_vector_and(&(AND_u1_u1_5853), &(EQ_u4_u1_5856), &(AND_u1_u1_5857));\
bit_vector_cast_to_bit_vector(0, &(is_save), &(AND_u1_u1_5857));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5869_c_macro_ __declare_static_bit_vector(konst_5862,2);\
bit_vector_clear(&konst_5862);\
konst_5862.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5863,1);\
__declare_static_bit_vector(konst_5865,4);\
bit_vector_clear(&konst_5865);\
konst_5865.val.byte_array[0] = 13;\
__declare_static_bit_vector(EQ_u4_u1_5866,1);\
__declare_static_bit_vector(AND_u1_u1_5867,1);\
__declare_static_bit_vector(AND_u1_u1_5868,1);\
bit_vector_clear(&konst_5862);\
konst_5862.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5862), &(EQ_u2_u1_5863));\
bit_vector_clear(&konst_5865);\
konst_5865.val.byte_array[0] = 13;\
bit_vector_equal(0, &(op3_row), &(konst_5865), &(EQ_u4_u1_5866));\
bit_vector_and(&(EQ_u2_u1_5863), &(EQ_u4_u1_5866), &(AND_u1_u1_5867));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5867), &(AND_u1_u1_5868));\
bit_vector_cast_to_bit_vector(0, &(is_restore), &(AND_u1_u1_5868));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5884_c_macro_ __declare_static_bit_vector(konst_5873,2);\
bit_vector_clear(&konst_5873);\
konst_5873.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_5874,1);\
__declare_static_bit_vector(AND_u1_u1_5875,1);\
__declare_static_bit_vector(konst_5877,4);\
bit_vector_clear(&konst_5877);\
konst_5877.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_5878,1);\
__declare_static_bit_vector(konst_5880,5);\
bit_vector_clear(&konst_5880);\
__declare_static_bit_vector(NEQ_u5_u1_5881,1);\
__declare_static_bit_vector(AND_u1_u1_5882,1);\
__declare_static_bit_vector(AND_u1_u1_5883,1);\
bit_vector_clear(&konst_5873);\
konst_5873.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_5873), &(EQ_u2_u1_5874));\
bit_vector_and(&(op_eq_2), &(EQ_u2_u1_5874), &(AND_u1_u1_5875));\
bit_vector_clear(&konst_5877);\
konst_5877.val.byte_array[0] = 8;\
bit_vector_equal(0, &(op3_row), &(konst_5877), &(EQ_u4_u1_5878));\
bit_vector_clear(&konst_5880);\
bit_vector_not_equal(0, &(rs1), &(konst_5880), &NEQ_u5_u1_5881);\
bit_vector_and(&(EQ_u4_u1_5878), &(NEQ_u5_u1_5881), &(AND_u1_u1_5882));\
bit_vector_and(&(AND_u1_u1_5875), &(AND_u1_u1_5882), &(AND_u1_u1_5883));\
bit_vector_cast_to_bit_vector(0, &(is_read_asr), &(AND_u1_u1_5883));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5899_c_macro_ __declare_static_bit_vector(konst_5888,2);\
bit_vector_clear(&konst_5888);\
konst_5888.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_5889,1);\
__declare_static_bit_vector(AND_u1_u1_5890,1);\
__declare_static_bit_vector(konst_5892,4);\
bit_vector_clear(&konst_5892);\
konst_5892.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_5893,1);\
__declare_static_bit_vector(konst_5895,5);\
bit_vector_clear(&konst_5895);\
__declare_static_bit_vector(EQ_u5_u1_5896,1);\
__declare_static_bit_vector(AND_u1_u1_5897,1);\
__declare_static_bit_vector(AND_u1_u1_5898,1);\
bit_vector_clear(&konst_5888);\
konst_5888.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_5888), &(EQ_u2_u1_5889));\
bit_vector_and(&(op_eq_2), &(EQ_u2_u1_5889), &(AND_u1_u1_5890));\
bit_vector_clear(&konst_5892);\
konst_5892.val.byte_array[0] = 8;\
bit_vector_equal(0, &(op3_row), &(konst_5892), &(EQ_u4_u1_5893));\
bit_vector_clear(&konst_5895);\
bit_vector_equal(0, &(rs1), &(konst_5895), &(EQ_u5_u1_5896));\
bit_vector_and(&(EQ_u4_u1_5893), &(EQ_u5_u1_5896), &(AND_u1_u1_5897));\
bit_vector_and(&(AND_u1_u1_5890), &(AND_u1_u1_5897), &(AND_u1_u1_5898));\
bit_vector_cast_to_bit_vector(0, &(is_read_y), &(AND_u1_u1_5898));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5910_c_macro_ __declare_static_bit_vector(konst_5903,2);\
bit_vector_clear(&konst_5903);\
konst_5903.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_5904,1);\
__declare_static_bit_vector(konst_5906,4);\
bit_vector_clear(&konst_5906);\
konst_5906.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_5907,1);\
__declare_static_bit_vector(AND_u1_u1_5908,1);\
__declare_static_bit_vector(AND_u1_u1_5909,1);\
bit_vector_clear(&konst_5903);\
konst_5903.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_5903), &(EQ_u2_u1_5904));\
bit_vector_clear(&konst_5906);\
konst_5906.val.byte_array[0] = 9;\
bit_vector_equal(0, &(op3_row), &(konst_5906), &(EQ_u4_u1_5907));\
bit_vector_and(&(EQ_u2_u1_5904), &(EQ_u4_u1_5907), &(AND_u1_u1_5908));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5908), &(AND_u1_u1_5909));\
bit_vector_cast_to_bit_vector(0, &(is_read_psr), &(AND_u1_u1_5909));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5921_c_macro_ __declare_static_bit_vector(konst_5914,2);\
bit_vector_clear(&konst_5914);\
konst_5914.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_5915,1);\
__declare_static_bit_vector(konst_5917,4);\
bit_vector_clear(&konst_5917);\
konst_5917.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_5918,1);\
__declare_static_bit_vector(AND_u1_u1_5919,1);\
__declare_static_bit_vector(AND_u1_u1_5920,1);\
bit_vector_clear(&konst_5914);\
konst_5914.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_5914), &(EQ_u2_u1_5915));\
bit_vector_clear(&konst_5917);\
konst_5917.val.byte_array[0] = 10;\
bit_vector_equal(0, &(op3_row), &(konst_5917), &(EQ_u4_u1_5918));\
bit_vector_and(&(EQ_u2_u1_5915), &(EQ_u4_u1_5918), &(AND_u1_u1_5919));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5919), &(AND_u1_u1_5920));\
bit_vector_cast_to_bit_vector(0, &(is_read_wim), &(AND_u1_u1_5920));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5932_c_macro_ __declare_static_bit_vector(konst_5925,2);\
bit_vector_clear(&konst_5925);\
konst_5925.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_5926,1);\
__declare_static_bit_vector(konst_5928,4);\
bit_vector_clear(&konst_5928);\
konst_5928.val.byte_array[0] = 11;\
__declare_static_bit_vector(EQ_u4_u1_5929,1);\
__declare_static_bit_vector(AND_u1_u1_5930,1);\
__declare_static_bit_vector(AND_u1_u1_5931,1);\
bit_vector_clear(&konst_5925);\
konst_5925.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_5925), &(EQ_u2_u1_5926));\
bit_vector_clear(&konst_5928);\
konst_5928.val.byte_array[0] = 11;\
bit_vector_equal(0, &(op3_row), &(konst_5928), &(EQ_u4_u1_5929));\
bit_vector_and(&(EQ_u2_u1_5926), &(EQ_u4_u1_5929), &(AND_u1_u1_5930));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5930), &(AND_u1_u1_5931));\
bit_vector_cast_to_bit_vector(0, &(is_read_tbr), &(AND_u1_u1_5931));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5947_c_macro_ __declare_static_bit_vector(konst_5936,2);\
bit_vector_clear(&konst_5936);\
konst_5936.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5937,1);\
__declare_static_bit_vector(AND_u1_u1_5938,1);\
__declare_static_bit_vector(konst_5940,4);\
bit_vector_clear(&konst_5940);\
__declare_static_bit_vector(EQ_u4_u1_5941,1);\
__declare_static_bit_vector(konst_5943,5);\
bit_vector_clear(&konst_5943);\
__declare_static_bit_vector(NEQ_u5_u1_5944,1);\
__declare_static_bit_vector(AND_u1_u1_5945,1);\
__declare_static_bit_vector(AND_u1_u1_5946,1);\
bit_vector_clear(&konst_5936);\
konst_5936.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5936), &(EQ_u2_u1_5937));\
bit_vector_and(&(op_eq_2), &(EQ_u2_u1_5937), &(AND_u1_u1_5938));\
bit_vector_clear(&konst_5940);\
bit_vector_equal(0, &(op3_row), &(konst_5940), &(EQ_u4_u1_5941));\
bit_vector_clear(&konst_5943);\
bit_vector_not_equal(0, &(rd), &(konst_5943), &NEQ_u5_u1_5944);\
bit_vector_and(&(EQ_u4_u1_5941), &(NEQ_u5_u1_5944), &(AND_u1_u1_5945));\
bit_vector_and(&(AND_u1_u1_5938), &(AND_u1_u1_5945), &(AND_u1_u1_5946));\
bit_vector_cast_to_bit_vector(0, &(is_write_asr), &(AND_u1_u1_5946));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5962_c_macro_ __declare_static_bit_vector(konst_5951,2);\
bit_vector_clear(&konst_5951);\
konst_5951.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5952,1);\
__declare_static_bit_vector(AND_u1_u1_5953,1);\
__declare_static_bit_vector(konst_5955,4);\
bit_vector_clear(&konst_5955);\
__declare_static_bit_vector(EQ_u4_u1_5956,1);\
__declare_static_bit_vector(konst_5958,5);\
bit_vector_clear(&konst_5958);\
__declare_static_bit_vector(EQ_u5_u1_5959,1);\
__declare_static_bit_vector(AND_u1_u1_5960,1);\
__declare_static_bit_vector(AND_u1_u1_5961,1);\
bit_vector_clear(&konst_5951);\
konst_5951.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5951), &(EQ_u2_u1_5952));\
bit_vector_and(&(op_eq_2), &(EQ_u2_u1_5952), &(AND_u1_u1_5953));\
bit_vector_clear(&konst_5955);\
bit_vector_equal(0, &(op3_row), &(konst_5955), &(EQ_u4_u1_5956));\
bit_vector_clear(&konst_5958);\
bit_vector_equal(0, &(rd), &(konst_5958), &(EQ_u5_u1_5959));\
bit_vector_and(&(EQ_u4_u1_5956), &(EQ_u5_u1_5959), &(AND_u1_u1_5960));\
bit_vector_and(&(AND_u1_u1_5953), &(AND_u1_u1_5960), &(AND_u1_u1_5961));\
bit_vector_cast_to_bit_vector(0, &(is_write_y), &(AND_u1_u1_5961));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5973_c_macro_ __declare_static_bit_vector(konst_5966,2);\
bit_vector_clear(&konst_5966);\
konst_5966.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5967,1);\
__declare_static_bit_vector(konst_5969,4);\
bit_vector_clear(&konst_5969);\
konst_5969.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_5970,1);\
__declare_static_bit_vector(AND_u1_u1_5971,1);\
__declare_static_bit_vector(AND_u1_u1_5972,1);\
bit_vector_clear(&konst_5966);\
konst_5966.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5966), &(EQ_u2_u1_5967));\
bit_vector_clear(&konst_5969);\
konst_5969.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_row), &(konst_5969), &(EQ_u4_u1_5970));\
bit_vector_and(&(EQ_u2_u1_5967), &(EQ_u4_u1_5970), &(AND_u1_u1_5971));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5971), &(AND_u1_u1_5972));\
bit_vector_cast_to_bit_vector(0, &(is_write_psr), &(AND_u1_u1_5972));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5984_c_macro_ __declare_static_bit_vector(konst_5977,2);\
bit_vector_clear(&konst_5977);\
konst_5977.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5978,1);\
__declare_static_bit_vector(konst_5980,4);\
bit_vector_clear(&konst_5980);\
konst_5980.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_5981,1);\
__declare_static_bit_vector(AND_u1_u1_5982,1);\
__declare_static_bit_vector(AND_u1_u1_5983,1);\
bit_vector_clear(&konst_5977);\
konst_5977.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5977), &(EQ_u2_u1_5978));\
bit_vector_clear(&konst_5980);\
konst_5980.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_row), &(konst_5980), &(EQ_u4_u1_5981));\
bit_vector_and(&(EQ_u2_u1_5978), &(EQ_u4_u1_5981), &(AND_u1_u1_5982));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5982), &(AND_u1_u1_5983));\
bit_vector_cast_to_bit_vector(0, &(is_write_wim), &(AND_u1_u1_5983));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_5995_c_macro_ __declare_static_bit_vector(konst_5988,2);\
bit_vector_clear(&konst_5988);\
konst_5988.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_5989,1);\
__declare_static_bit_vector(konst_5991,4);\
bit_vector_clear(&konst_5991);\
konst_5991.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_5992,1);\
__declare_static_bit_vector(AND_u1_u1_5993,1);\
__declare_static_bit_vector(AND_u1_u1_5994,1);\
bit_vector_clear(&konst_5988);\
konst_5988.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_5988), &(EQ_u2_u1_5989));\
bit_vector_clear(&konst_5991);\
konst_5991.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_row), &(konst_5991), &(EQ_u4_u1_5992));\
bit_vector_and(&(EQ_u2_u1_5989), &(EQ_u4_u1_5992), &(AND_u1_u1_5993));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_5993), &(AND_u1_u1_5994));\
bit_vector_cast_to_bit_vector(0, &(is_write_tbr), &(AND_u1_u1_5994));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6030_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_5999,2);\
__declare_static_bit_vector(CONCAT_u2_u3_6001,3);\
__declare_static_bit_vector(CONCAT_u1_u2_6004,2);\
__declare_static_bit_vector(CONCAT_u3_u5_6005,5);\
__declare_static_bit_vector(CONCAT_u1_u2_6008,2);\
__declare_static_bit_vector(CONCAT_u1_u2_6011,2);\
__declare_static_bit_vector(CONCAT_u2_u4_6012,4);\
__declare_static_bit_vector(CONCAT_u5_u9_6013,9);\
__declare_static_bit_vector(CONCAT_u1_u2_6016,2);\
__declare_static_bit_vector(CONCAT_u1_u2_6019,2);\
__declare_static_bit_vector(CONCAT_u2_u4_6020,4);\
__declare_static_bit_vector(CONCAT_u1_u2_6023,2);\
__declare_static_bit_vector(CONCAT_u1_u2_6026,2);\
__declare_static_bit_vector(CONCAT_u2_u4_6027,4);\
__declare_static_bit_vector(CONCAT_u4_u8_6028,8);\
__declare_static_bit_vector(CONCAT_u9_u17_6029,17);\
bit_vector_concatenate( &(is_nop), &(is_sethi), &(CONCAT_u1_u2_5999));\
bit_vector_concatenate( &(CONCAT_u1_u2_5999), &(is_mulscc), &(CONCAT_u2_u3_6001));\
bit_vector_concatenate( &(is_flush), &(is_stbar), &(CONCAT_u1_u2_6004));\
bit_vector_concatenate( &(CONCAT_u2_u3_6001), &(CONCAT_u1_u2_6004), &(CONCAT_u3_u5_6005));\
bit_vector_concatenate( &(is_save), &(is_restore), &(CONCAT_u1_u2_6008));\
bit_vector_concatenate( &(is_read_asr), &(is_read_y), &(CONCAT_u1_u2_6011));\
bit_vector_concatenate( &(CONCAT_u1_u2_6008), &(CONCAT_u1_u2_6011), &(CONCAT_u2_u4_6012));\
bit_vector_concatenate( &(CONCAT_u3_u5_6005), &(CONCAT_u2_u4_6012), &(CONCAT_u5_u9_6013));\
bit_vector_concatenate( &(is_read_psr), &(is_read_wim), &(CONCAT_u1_u2_6016));\
bit_vector_concatenate( &(is_read_tbr), &(is_write_asr), &(CONCAT_u1_u2_6019));\
bit_vector_concatenate( &(CONCAT_u1_u2_6016), &(CONCAT_u1_u2_6019), &(CONCAT_u2_u4_6020));\
bit_vector_concatenate( &(is_write_y), &(is_write_psr), &(CONCAT_u1_u2_6023));\
bit_vector_concatenate( &(is_write_wim), &(is_write_tbr), &(CONCAT_u1_u2_6026));\
bit_vector_concatenate( &(CONCAT_u1_u2_6023), &(CONCAT_u1_u2_6026), &(CONCAT_u2_u4_6027));\
bit_vector_concatenate( &(CONCAT_u2_u4_6020), &(CONCAT_u2_u4_6027), &(CONCAT_u4_u8_6028));\
bit_vector_concatenate( &(CONCAT_u5_u9_6013), &(CONCAT_u4_u8_6028), &(CONCAT_u9_u17_6029));\
bit_vector_cast_to_bit_vector(0, &(misc_instr_spec), &(CONCAT_u9_u17_6029));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6035_c_macro_ __declare_static_bit_vector(konst_6033,17);\
bit_vector_clear(&konst_6033);\
__declare_static_bit_vector(NEQ_u17_u1_6034,1);\
bit_vector_clear(&konst_6033);\
bit_vector_not_equal(0, &(misc_instr_spec), &(konst_6033), &NEQ_u17_u1_6034);\
bit_vector_cast_to_bit_vector(0, &(is_misc_instr), &(NEQ_u17_u1_6034));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro_ if (bit_vector_to_uint64(0, &is_misc_instr)) {\
uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"decode_stage1_misc_instr_ispec__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_nop");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_nop)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_sethi");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_sethi)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_mulscc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_mulscc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_flush");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_flush)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_stbar");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_stbar)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_save");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_save)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_restore");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_restore)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_read_asr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_read_asr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_read_y");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_read_y)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_read_psr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_read_psr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_read_wim");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_read_wim)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_read_tbr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_read_tbr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_write_asr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_write_asr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_write_y");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_write_y)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_write_psr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_write_psr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_write_wim");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_write_wim)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6054_c_macro___print_counter,"is_write_tbr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_write_tbr)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6081_c_macro_ __declare_static_bit_vector(konst_6058,4);\
bit_vector_clear(&konst_6058);\
__declare_static_bit_vector(EQ_u4_u1_6059,1);\
__declare_static_bit_vector(konst_6061,2);\
bit_vector_clear(&konst_6061);\
konst_6061.val.byte_array[0] = 3;\
__declare_static_bit_vector(ULT_u2_u1_6062,1);\
__declare_static_bit_vector(AND_u1_u1_6063,1);\
__declare_static_bit_vector(konst_6065,4);\
bit_vector_clear(&konst_6065);\
konst_6065.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_6066,1);\
__declare_static_bit_vector(konst_6068,2);\
bit_vector_clear(&konst_6068);\
konst_6068.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_6069,1);\
__declare_static_bit_vector(AND_u1_u1_6070,1);\
__declare_static_bit_vector(konst_6072,4);\
bit_vector_clear(&konst_6072);\
konst_6072.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_6073,1);\
__declare_static_bit_vector(konst_6075,2);\
bit_vector_clear(&konst_6075);\
konst_6075.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_6076,1);\
__declare_static_bit_vector(AND_u1_u1_6077,1);\
__declare_static_bit_vector(OR_u1_u1_6078,1);\
__declare_static_bit_vector(OR_u1_u1_6079,1);\
__declare_static_bit_vector(AND_u1_u1_6080,1);\
bit_vector_clear(&konst_6058);\
bit_vector_equal(0, &(op3_row), &(konst_6058), &(EQ_u4_u1_6059));\
bit_vector_clear(&konst_6061);\
konst_6061.val.byte_array[0] = 3;\
bit_vector_less(0, &(op3_col), &(konst_6061), &(ULT_u2_u1_6062));\
bit_vector_and(&(EQ_u4_u1_6059), &(ULT_u2_u1_6062), &(AND_u1_u1_6063));\
bit_vector_clear(&konst_6065);\
konst_6065.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_row), &(konst_6065), &(EQ_u4_u1_6066));\
bit_vector_clear(&konst_6068);\
konst_6068.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_6068), &(EQ_u2_u1_6069));\
bit_vector_and(&(EQ_u4_u1_6066), &(EQ_u2_u1_6069), &(AND_u1_u1_6070));\
bit_vector_clear(&konst_6072);\
konst_6072.val.byte_array[0] = 8;\
bit_vector_equal(0, &(op3_row), &(konst_6072), &(EQ_u4_u1_6073));\
bit_vector_clear(&konst_6075);\
konst_6075.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_6075), &(ULT_u2_u1_6076));\
bit_vector_and(&(EQ_u4_u1_6073), &(ULT_u2_u1_6076), &(AND_u1_u1_6077));\
bit_vector_or(&(AND_u1_u1_6070), &(AND_u1_u1_6077), &(OR_u1_u1_6078));\
bit_vector_or(&(AND_u1_u1_6063), &(OR_u1_u1_6078), &(OR_u1_u1_6079));\
bit_vector_and(&(op_eq_2), &(OR_u1_u1_6079), &(AND_u1_u1_6080));\
bit_vector_cast_to_bit_vector(0, &(is_add), &(AND_u1_u1_6080));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6108_c_macro_ __declare_static_bit_vector(konst_6085,4);\
bit_vector_clear(&konst_6085);\
konst_6085.val.byte_array[0] = 4;\
__declare_static_bit_vector(EQ_u4_u1_6086,1);\
__declare_static_bit_vector(konst_6088,4);\
bit_vector_clear(&konst_6088);\
konst_6088.val.byte_array[0] = 12;\
__declare_static_bit_vector(EQ_u4_u1_6089,1);\
__declare_static_bit_vector(OR_u1_u1_6090,1);\
__declare_static_bit_vector(konst_6092,2);\
bit_vector_clear(&konst_6092);\
konst_6092.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_6093,1);\
__declare_static_bit_vector(AND_u1_u1_6094,1);\
__declare_static_bit_vector(konst_6096,4);\
bit_vector_clear(&konst_6096);\
konst_6096.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_6097,1);\
__declare_static_bit_vector(konst_6099,4);\
bit_vector_clear(&konst_6099);\
konst_6099.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_6100,1);\
__declare_static_bit_vector(OR_u1_u1_6101,1);\
__declare_static_bit_vector(konst_6103,2);\
bit_vector_clear(&konst_6103);\
konst_6103.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_6104,1);\
__declare_static_bit_vector(AND_u1_u1_6105,1);\
__declare_static_bit_vector(OR_u1_u1_6106,1);\
__declare_static_bit_vector(AND_u1_u1_6107,1);\
bit_vector_clear(&konst_6085);\
konst_6085.val.byte_array[0] = 4;\
bit_vector_equal(0, &(op3_row), &(konst_6085), &(EQ_u4_u1_6086));\
bit_vector_clear(&konst_6088);\
konst_6088.val.byte_array[0] = 12;\
bit_vector_equal(0, &(op3_row), &(konst_6088), &(EQ_u4_u1_6089));\
bit_vector_or(&(EQ_u4_u1_6086), &(EQ_u4_u1_6089), &(OR_u1_u1_6090));\
bit_vector_clear(&konst_6092);\
konst_6092.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_6092), &(ULT_u2_u1_6093));\
bit_vector_and(&(OR_u1_u1_6090), &(ULT_u2_u1_6093), &(AND_u1_u1_6094));\
bit_vector_clear(&konst_6096);\
konst_6096.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_row), &(konst_6096), &(EQ_u4_u1_6097));\
bit_vector_clear(&konst_6099);\
konst_6099.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_row), &(konst_6099), &(EQ_u4_u1_6100));\
bit_vector_or(&(EQ_u4_u1_6097), &(EQ_u4_u1_6100), &(OR_u1_u1_6101));\
bit_vector_clear(&konst_6103);\
konst_6103.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_6103), &(EQ_u2_u1_6104));\
bit_vector_and(&(OR_u1_u1_6101), &(EQ_u2_u1_6104), &(AND_u1_u1_6105));\
bit_vector_or(&(AND_u1_u1_6094), &(AND_u1_u1_6105), &(OR_u1_u1_6106));\
bit_vector_and(&(op_eq_2), &(OR_u1_u1_6106), &(AND_u1_u1_6107));\
bit_vector_cast_to_bit_vector(0, &(is_sub), &(AND_u1_u1_6107));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6121_c_macro_ __declare_static_bit_vector(konst_6112,4);\
bit_vector_clear(&konst_6112);\
konst_6112.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_6113,1);\
__declare_static_bit_vector(AND_u1_u1_6114,1);\
__declare_static_bit_vector(konst_6117,4);\
bit_vector_clear(&konst_6117);\
konst_6117.val.byte_array[0] = 12;\
__declare_static_bit_vector(EQ_u4_u1_6118,1);\
__declare_static_bit_vector(AND_u1_u1_6119,1);\
__declare_static_bit_vector(OR_u1_u1_6120,1);\
bit_vector_clear(&konst_6112);\
konst_6112.val.byte_array[0] = 8;\
bit_vector_equal(0, &(op3_row), &(konst_6112), &(EQ_u4_u1_6113));\
bit_vector_and(&(is_add), &(EQ_u4_u1_6113), &(AND_u1_u1_6114));\
bit_vector_clear(&konst_6117);\
konst_6117.val.byte_array[0] = 12;\
bit_vector_equal(0, &(op3_row), &(konst_6117), &(EQ_u4_u1_6118));\
bit_vector_and(&(is_sub), &(EQ_u4_u1_6118), &(AND_u1_u1_6119));\
bit_vector_or(&(AND_u1_u1_6114), &(AND_u1_u1_6119), &(OR_u1_u1_6120));\
bit_vector_cast_to_bit_vector(0, &(with_carry), &(OR_u1_u1_6120));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6136_c_macro_ __declare_static_bit_vector(konst_6125,4);\
bit_vector_clear(&konst_6125);\
konst_6125.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_6126,1);\
__declare_static_bit_vector(konst_6128,4);\
bit_vector_clear(&konst_6128);\
konst_6128.val.byte_array[0] = 11;\
__declare_static_bit_vector(EQ_u4_u1_6129,1);\
__declare_static_bit_vector(OR_u1_u1_6130,1);\
__declare_static_bit_vector(konst_6132,2);\
bit_vector_clear(&konst_6132);\
konst_6132.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_6133,1);\
__declare_static_bit_vector(AND_u1_u1_6134,1);\
__declare_static_bit_vector(AND_u1_u1_6135,1);\
bit_vector_clear(&konst_6125);\
konst_6125.val.byte_array[0] = 10;\
bit_vector_equal(0, &(op3_row), &(konst_6125), &(EQ_u4_u1_6126));\
bit_vector_clear(&konst_6128);\
konst_6128.val.byte_array[0] = 11;\
bit_vector_equal(0, &(op3_row), &(konst_6128), &(EQ_u4_u1_6129));\
bit_vector_or(&(EQ_u4_u1_6126), &(EQ_u4_u1_6129), &(OR_u1_u1_6130));\
bit_vector_clear(&konst_6132);\
konst_6132.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_6132), &(ULT_u2_u1_6133));\
bit_vector_and(&(OR_u1_u1_6130), &(ULT_u2_u1_6133), &(AND_u1_u1_6134));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6134), &(AND_u1_u1_6135));\
bit_vector_cast_to_bit_vector(0, &(is_mul), &(AND_u1_u1_6135));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6147_c_macro_ __declare_static_bit_vector(konst_6140,4);\
bit_vector_clear(&konst_6140);\
konst_6140.val.byte_array[0] = 13;\
__declare_static_bit_vector(UGT_u4_u1_6141,1);\
__declare_static_bit_vector(konst_6143,2);\
bit_vector_clear(&konst_6143);\
konst_6143.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_6144,1);\
__declare_static_bit_vector(AND_u1_u1_6145,1);\
__declare_static_bit_vector(AND_u1_u1_6146,1);\
bit_vector_clear(&konst_6140);\
konst_6140.val.byte_array[0] = 13;\
bit_vector_greater(0, &(op3_row), &(konst_6140), &(UGT_u4_u1_6141));\
bit_vector_clear(&konst_6143);\
konst_6143.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_6143), &(ULT_u2_u1_6144));\
bit_vector_and(&(UGT_u4_u1_6141), &(ULT_u2_u1_6144), &(AND_u1_u1_6145));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6145), &(AND_u1_u1_6146));\
bit_vector_cast_to_bit_vector(0, &(is_div), &(AND_u1_u1_6146));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6160_c_macro_ __declare_static_bit_vector(konst_6151,4);\
bit_vector_clear(&konst_6151);\
konst_6151.val.byte_array[0] = 11;\
__declare_static_bit_vector(EQ_u4_u1_6152,1);\
__declare_static_bit_vector(AND_u1_u1_6153,1);\
__declare_static_bit_vector(konst_6156,4);\
bit_vector_clear(&konst_6156);\
konst_6156.val.byte_array[0] = 15;\
__declare_static_bit_vector(EQ_u4_u1_6157,1);\
__declare_static_bit_vector(AND_u1_u1_6158,1);\
__declare_static_bit_vector(OR_u1_u1_6159,1);\
bit_vector_clear(&konst_6151);\
konst_6151.val.byte_array[0] = 11;\
bit_vector_equal(0, &(op3_row), &(konst_6151), &(EQ_u4_u1_6152));\
bit_vector_and(&(is_mul), &(EQ_u4_u1_6152), &(AND_u1_u1_6153));\
bit_vector_clear(&konst_6156);\
konst_6156.val.byte_array[0] = 15;\
bit_vector_equal(0, &(op3_row), &(konst_6156), &(EQ_u4_u1_6157));\
bit_vector_and(&(is_div), &(EQ_u4_u1_6157), &(AND_u1_u1_6158));\
bit_vector_or(&(AND_u1_u1_6153), &(AND_u1_u1_6158), &(OR_u1_u1_6159));\
bit_vector_cast_to_bit_vector(0, &(signed_mul_div), &(OR_u1_u1_6159));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6175_c_macro_ __declare_static_bit_vector(konst_6164,4);\
bit_vector_clear(&konst_6164);\
konst_6164.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_6165,1);\
__declare_static_bit_vector(konst_6167,4);\
bit_vector_clear(&konst_6167);\
konst_6167.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_6168,1);\
__declare_static_bit_vector(OR_u1_u1_6169,1);\
__declare_static_bit_vector(konst_6171,2);\
bit_vector_clear(&konst_6171);\
konst_6171.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_6172,1);\
__declare_static_bit_vector(AND_u1_u1_6173,1);\
__declare_static_bit_vector(AND_u1_u1_6174,1);\
bit_vector_clear(&konst_6164);\
konst_6164.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_row), &(konst_6164), &(EQ_u4_u1_6165));\
bit_vector_clear(&konst_6167);\
konst_6167.val.byte_array[0] = 5;\
bit_vector_equal(0, &(op3_row), &(konst_6167), &(EQ_u4_u1_6168));\
bit_vector_or(&(EQ_u4_u1_6165), &(EQ_u4_u1_6168), &(OR_u1_u1_6169));\
bit_vector_clear(&konst_6171);\
konst_6171.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_6171), &(ULT_u2_u1_6172));\
bit_vector_and(&(OR_u1_u1_6169), &(ULT_u2_u1_6172), &(AND_u1_u1_6173));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6173), &(AND_u1_u1_6174));\
bit_vector_cast_to_bit_vector(0, &(is_and), &(AND_u1_u1_6174));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6190_c_macro_ __declare_static_bit_vector(konst_6179,4);\
bit_vector_clear(&konst_6179);\
konst_6179.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_6180,1);\
__declare_static_bit_vector(konst_6182,4);\
bit_vector_clear(&konst_6182);\
konst_6182.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_6183,1);\
__declare_static_bit_vector(OR_u1_u1_6184,1);\
__declare_static_bit_vector(konst_6186,2);\
bit_vector_clear(&konst_6186);\
konst_6186.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_6187,1);\
__declare_static_bit_vector(AND_u1_u1_6188,1);\
__declare_static_bit_vector(AND_u1_u1_6189,1);\
bit_vector_clear(&konst_6179);\
konst_6179.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_row), &(konst_6179), &(EQ_u4_u1_6180));\
bit_vector_clear(&konst_6182);\
konst_6182.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op3_row), &(konst_6182), &(EQ_u4_u1_6183));\
bit_vector_or(&(EQ_u4_u1_6180), &(EQ_u4_u1_6183), &(OR_u1_u1_6184));\
bit_vector_clear(&konst_6186);\
konst_6186.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_6186), &(ULT_u2_u1_6187));\
bit_vector_and(&(OR_u1_u1_6184), &(ULT_u2_u1_6187), &(AND_u1_u1_6188));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6188), &(AND_u1_u1_6189));\
bit_vector_cast_to_bit_vector(0, &(is_or), &(AND_u1_u1_6189));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6201_c_macro_ __declare_static_bit_vector(konst_6194,4);\
bit_vector_clear(&konst_6194);\
konst_6194.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_6195,1);\
__declare_static_bit_vector(konst_6197,2);\
bit_vector_clear(&konst_6197);\
konst_6197.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_6198,1);\
__declare_static_bit_vector(AND_u1_u1_6199,1);\
__declare_static_bit_vector(AND_u1_u1_6200,1);\
bit_vector_clear(&konst_6194);\
konst_6194.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_row), &(konst_6194), &(EQ_u4_u1_6195));\
bit_vector_clear(&konst_6197);\
konst_6197.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_6197), &(ULT_u2_u1_6198));\
bit_vector_and(&(EQ_u4_u1_6195), &(ULT_u2_u1_6198), &(AND_u1_u1_6199));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6199), &(AND_u1_u1_6200));\
bit_vector_cast_to_bit_vector(0, &(is_xor), &(AND_u1_u1_6200));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6212_c_macro_ __declare_static_bit_vector(konst_6205,4);\
bit_vector_clear(&konst_6205);\
konst_6205.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u4_u1_6206,1);\
__declare_static_bit_vector(konst_6208,2);\
bit_vector_clear(&konst_6208);\
konst_6208.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_6209,1);\
__declare_static_bit_vector(AND_u1_u1_6210,1);\
__declare_static_bit_vector(AND_u1_u1_6211,1);\
bit_vector_clear(&konst_6205);\
konst_6205.val.byte_array[0] = 7;\
bit_vector_equal(0, &(op3_row), &(konst_6205), &(EQ_u4_u1_6206));\
bit_vector_clear(&konst_6208);\
konst_6208.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_6208), &(ULT_u2_u1_6209));\
bit_vector_and(&(EQ_u4_u1_6206), &(ULT_u2_u1_6209), &(AND_u1_u1_6210));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6210), &(AND_u1_u1_6211));\
bit_vector_cast_to_bit_vector(0, &(is_xnor), &(AND_u1_u1_6211));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6223_c_macro_ __declare_static_bit_vector(konst_6216,4);\
bit_vector_clear(&konst_6216);\
konst_6216.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_6217,1);\
__declare_static_bit_vector(konst_6219,2);\
bit_vector_clear(&konst_6219);\
konst_6219.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_6220,1);\
__declare_static_bit_vector(AND_u1_u1_6221,1);\
__declare_static_bit_vector(AND_u1_u1_6222,1);\
bit_vector_clear(&konst_6216);\
konst_6216.val.byte_array[0] = 5;\
bit_vector_equal(0, &(op3_row), &(konst_6216), &(EQ_u4_u1_6217));\
bit_vector_clear(&konst_6219);\
konst_6219.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_6219), &(EQ_u2_u1_6220));\
bit_vector_and(&(EQ_u4_u1_6217), &(EQ_u2_u1_6220), &(AND_u1_u1_6221));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6221), &(AND_u1_u1_6222));\
bit_vector_cast_to_bit_vector(0, &(is_sll), &(AND_u1_u1_6222));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6234_c_macro_ __declare_static_bit_vector(konst_6227,4);\
bit_vector_clear(&konst_6227);\
konst_6227.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_6228,1);\
__declare_static_bit_vector(konst_6230,2);\
bit_vector_clear(&konst_6230);\
konst_6230.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_6231,1);\
__declare_static_bit_vector(AND_u1_u1_6232,1);\
__declare_static_bit_vector(AND_u1_u1_6233,1);\
bit_vector_clear(&konst_6227);\
konst_6227.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op3_row), &(konst_6227), &(EQ_u4_u1_6228));\
bit_vector_clear(&konst_6230);\
konst_6230.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_6230), &(EQ_u2_u1_6231));\
bit_vector_and(&(EQ_u4_u1_6228), &(EQ_u2_u1_6231), &(AND_u1_u1_6232));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6232), &(AND_u1_u1_6233));\
bit_vector_cast_to_bit_vector(0, &(is_srl), &(AND_u1_u1_6233));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6245_c_macro_ __declare_static_bit_vector(konst_6238,4);\
bit_vector_clear(&konst_6238);\
konst_6238.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u4_u1_6239,1);\
__declare_static_bit_vector(konst_6241,2);\
bit_vector_clear(&konst_6241);\
konst_6241.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_6242,1);\
__declare_static_bit_vector(AND_u1_u1_6243,1);\
__declare_static_bit_vector(AND_u1_u1_6244,1);\
bit_vector_clear(&konst_6238);\
konst_6238.val.byte_array[0] = 7;\
bit_vector_equal(0, &(op3_row), &(konst_6238), &(EQ_u4_u1_6239));\
bit_vector_clear(&konst_6241);\
konst_6241.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_6241), &(EQ_u2_u1_6242));\
bit_vector_and(&(EQ_u4_u1_6239), &(EQ_u2_u1_6242), &(AND_u1_u1_6243));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6243), &(AND_u1_u1_6244));\
bit_vector_cast_to_bit_vector(0, &(is_sra), &(AND_u1_u1_6244));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6260_c_macro_ __declare_static_bit_vector(konst_6249,4);\
bit_vector_clear(&konst_6249);\
konst_6249.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_6250,1);\
__declare_static_bit_vector(konst_6252,4);\
bit_vector_clear(&konst_6252);\
konst_6252.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_6253,1);\
__declare_static_bit_vector(OR_u1_u1_6254,1);\
__declare_static_bit_vector(konst_6256,2);\
bit_vector_clear(&konst_6256);\
konst_6256.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_6257,1);\
__declare_static_bit_vector(AND_u1_u1_6258,1);\
__declare_static_bit_vector(AND_u1_u1_6259,1);\
bit_vector_clear(&konst_6249);\
konst_6249.val.byte_array[0] = 5;\
bit_vector_equal(0, &(op3_row), &(konst_6249), &(EQ_u4_u1_6250));\
bit_vector_clear(&konst_6252);\
konst_6252.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op3_row), &(konst_6252), &(EQ_u4_u1_6253));\
bit_vector_or(&(EQ_u4_u1_6250), &(EQ_u4_u1_6253), &(OR_u1_u1_6254));\
bit_vector_clear(&konst_6256);\
konst_6256.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_6256), &(ULT_u2_u1_6257));\
bit_vector_and(&(OR_u1_u1_6254), &(ULT_u2_u1_6257), &(AND_u1_u1_6258));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6258), &(AND_u1_u1_6259));\
bit_vector_cast_to_bit_vector(0, &(negate_second_operand), &(AND_u1_u1_6259));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6284_c_macro_ __declare_static_bit_vector(konst_6264,4);\
bit_vector_clear(&konst_6264);\
konst_6264.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_6265,1);\
__declare_static_bit_vector(konst_6267,4);\
bit_vector_clear(&konst_6267);\
konst_6267.val.byte_array[0] = 13;\
__declare_static_bit_vector(EQ_u4_u1_6268,1);\
__declare_static_bit_vector(OR_u1_u1_6269,1);\
__declare_static_bit_vector(NOT_u1_u1_6270,1);\
__declare_static_bit_vector(konst_6272,2);\
bit_vector_clear(&konst_6272);\
konst_6272.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u2_u1_6273,1);\
__declare_static_bit_vector(AND_u1_u1_6274,1);\
__declare_static_bit_vector(konst_6276,4);\
bit_vector_clear(&konst_6276);\
konst_6276.val.byte_array[0] = 5;\
__declare_static_bit_vector(ULT_u4_u1_6277,1);\
__declare_static_bit_vector(konst_6279,2);\
bit_vector_clear(&konst_6279);\
konst_6279.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_6280,1);\
__declare_static_bit_vector(AND_u1_u1_6281,1);\
__declare_static_bit_vector(OR_u1_u1_6282,1);\
__declare_static_bit_vector(AND_u1_u1_6283,1);\
bit_vector_clear(&konst_6264);\
konst_6264.val.byte_array[0] = 9;\
bit_vector_equal(0, &(op3_row), &(konst_6264), &(EQ_u4_u1_6265));\
bit_vector_clear(&konst_6267);\
konst_6267.val.byte_array[0] = 13;\
bit_vector_equal(0, &(op3_row), &(konst_6267), &(EQ_u4_u1_6268));\
bit_vector_or(&(EQ_u4_u1_6265), &(EQ_u4_u1_6268), &(OR_u1_u1_6269));\
bit_vector_not( &(OR_u1_u1_6269), &(NOT_u1_u1_6270));\
bit_vector_clear(&konst_6272);\
konst_6272.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_col), &(konst_6272), &(EQ_u2_u1_6273));\
bit_vector_and(&(NOT_u1_u1_6270), &(EQ_u2_u1_6273), &(AND_u1_u1_6274));\
bit_vector_clear(&konst_6276);\
konst_6276.val.byte_array[0] = 5;\
bit_vector_less(0, &(op3_row), &(konst_6276), &(ULT_u4_u1_6277));\
bit_vector_clear(&konst_6279);\
konst_6279.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_6279), &(EQ_u2_u1_6280));\
bit_vector_and(&(ULT_u4_u1_6277), &(EQ_u2_u1_6280), &(AND_u1_u1_6281));\
bit_vector_or(&(AND_u1_u1_6274), &(AND_u1_u1_6281), &(OR_u1_u1_6282));\
bit_vector_and(&(op_eq_2), &(OR_u1_u1_6282), &(AND_u1_u1_6283));\
bit_vector_cast_to_bit_vector(0, &(set_cc), &(AND_u1_u1_6283));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6295_c_macro_ __declare_static_bit_vector(konst_6288,4);\
bit_vector_clear(&konst_6288);\
konst_6288.val.byte_array[0] = 4;\
__declare_static_bit_vector(ULT_u4_u1_6289,1);\
__declare_static_bit_vector(konst_6291,2);\
bit_vector_clear(&konst_6291);\
konst_6291.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_6292,1);\
__declare_static_bit_vector(AND_u1_u1_6293,1);\
__declare_static_bit_vector(AND_u1_u1_6294,1);\
bit_vector_clear(&konst_6288);\
konst_6288.val.byte_array[0] = 4;\
bit_vector_less(0, &(op3_row), &(konst_6288), &(ULT_u4_u1_6289));\
bit_vector_clear(&konst_6291);\
konst_6291.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_6291), &(EQ_u2_u1_6292));\
bit_vector_and(&(ULT_u4_u1_6289), &(EQ_u2_u1_6292), &(AND_u1_u1_6293));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6293), &(AND_u1_u1_6294));\
bit_vector_cast_to_bit_vector(0, &(tagged_alu_op), &(AND_u1_u1_6294));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6310_c_macro_ __declare_static_bit_vector(konst_6299,4);\
bit_vector_clear(&konst_6299);\
konst_6299.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_6300,1);\
__declare_static_bit_vector(konst_6302,4);\
bit_vector_clear(&konst_6302);\
konst_6302.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_6303,1);\
__declare_static_bit_vector(OR_u1_u1_6304,1);\
__declare_static_bit_vector(konst_6306,2);\
bit_vector_clear(&konst_6306);\
konst_6306.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_6307,1);\
__declare_static_bit_vector(AND_u1_u1_6308,1);\
__declare_static_bit_vector(AND_u1_u1_6309,1);\
bit_vector_clear(&konst_6299);\
konst_6299.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_row), &(konst_6299), &(EQ_u4_u1_6300));\
bit_vector_clear(&konst_6302);\
konst_6302.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_row), &(konst_6302), &(EQ_u4_u1_6303));\
bit_vector_or(&(EQ_u4_u1_6300), &(EQ_u4_u1_6303), &(OR_u1_u1_6304));\
bit_vector_clear(&konst_6306);\
konst_6306.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_col), &(konst_6306), &(EQ_u2_u1_6307));\
bit_vector_and(&(OR_u1_u1_6304), &(EQ_u2_u1_6307), &(AND_u1_u1_6308));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6308), &(AND_u1_u1_6309));\
bit_vector_cast_to_bit_vector(0, &(trap_on_overflow), &(AND_u1_u1_6309));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6333_c_macro_ __declare_static_bit_vector(OR_u1_u1_6314,1);\
__declare_static_bit_vector(OR_u1_u1_6316,1);\
__declare_static_bit_vector(OR_u1_u1_6319,1);\
__declare_static_bit_vector(OR_u1_u1_6321,1);\
__declare_static_bit_vector(OR_u1_u1_6322,1);\
__declare_static_bit_vector(OR_u1_u1_6325,1);\
__declare_static_bit_vector(OR_u1_u1_6327,1);\
__declare_static_bit_vector(OR_u1_u1_6330,1);\
__declare_static_bit_vector(OR_u1_u1_6331,1);\
__declare_static_bit_vector(OR_u1_u1_6332,1);\
bit_vector_or(&(is_add), &(is_sub), &(OR_u1_u1_6314));\
bit_vector_or(&(OR_u1_u1_6314), &(is_mul), &(OR_u1_u1_6316));\
bit_vector_or(&(is_div), &(is_and), &(OR_u1_u1_6319));\
bit_vector_or(&(OR_u1_u1_6319), &(is_or), &(OR_u1_u1_6321));\
bit_vector_or(&(OR_u1_u1_6316), &(OR_u1_u1_6321), &(OR_u1_u1_6322));\
bit_vector_or(&(is_xor), &(is_xnor), &(OR_u1_u1_6325));\
bit_vector_or(&(OR_u1_u1_6325), &(is_sll), &(OR_u1_u1_6327));\
bit_vector_or(&(is_srl), &(is_sra), &(OR_u1_u1_6330));\
bit_vector_or(&(OR_u1_u1_6327), &(OR_u1_u1_6330), &(OR_u1_u1_6331));\
bit_vector_or(&(OR_u1_u1_6322), &(OR_u1_u1_6331), &(OR_u1_u1_6332));\
bit_vector_cast_to_bit_vector(0, &(is_alu_instr), &(OR_u1_u1_6332));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6368_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_6337,2);\
__declare_static_bit_vector(CONCAT_u2_u3_6339,3);\
__declare_static_bit_vector(CONCAT_u1_u2_6342,2);\
__declare_static_bit_vector(CONCAT_u3_u5_6343,5);\
__declare_static_bit_vector(CONCAT_u1_u2_6346,2);\
__declare_static_bit_vector(CONCAT_u1_u2_6349,2);\
__declare_static_bit_vector(CONCAT_u2_u4_6350,4);\
__declare_static_bit_vector(CONCAT_u5_u9_6351,9);\
__declare_static_bit_vector(CONCAT_u1_u2_6354,2);\
__declare_static_bit_vector(CONCAT_u1_u2_6357,2);\
__declare_static_bit_vector(CONCAT_u2_u4_6358,4);\
__declare_static_bit_vector(CONCAT_u1_u2_6361,2);\
__declare_static_bit_vector(CONCAT_u1_u2_6364,2);\
__declare_static_bit_vector(CONCAT_u2_u4_6365,4);\
__declare_static_bit_vector(CONCAT_u4_u8_6366,8);\
__declare_static_bit_vector(CONCAT_u9_u17_6367,17);\
bit_vector_concatenate( &(is_add), &(is_sub), &(CONCAT_u1_u2_6337));\
bit_vector_concatenate( &(CONCAT_u1_u2_6337), &(is_mul), &(CONCAT_u2_u3_6339));\
bit_vector_concatenate( &(is_div), &(signed_mul_div), &(CONCAT_u1_u2_6342));\
bit_vector_concatenate( &(CONCAT_u2_u3_6339), &(CONCAT_u1_u2_6342), &(CONCAT_u3_u5_6343));\
bit_vector_concatenate( &(is_and), &(is_or), &(CONCAT_u1_u2_6346));\
bit_vector_concatenate( &(is_xor), &(is_xnor), &(CONCAT_u1_u2_6349));\
bit_vector_concatenate( &(CONCAT_u1_u2_6346), &(CONCAT_u1_u2_6349), &(CONCAT_u2_u4_6350));\
bit_vector_concatenate( &(CONCAT_u3_u5_6343), &(CONCAT_u2_u4_6350), &(CONCAT_u5_u9_6351));\
bit_vector_concatenate( &(is_sll), &(is_srl), &(CONCAT_u1_u2_6354));\
bit_vector_concatenate( &(is_sra), &(negate_second_operand), &(CONCAT_u1_u2_6357));\
bit_vector_concatenate( &(CONCAT_u1_u2_6354), &(CONCAT_u1_u2_6357), &(CONCAT_u2_u4_6358));\
bit_vector_concatenate( &(with_carry), &(set_cc), &(CONCAT_u1_u2_6361));\
bit_vector_concatenate( &(tagged_alu_op), &(trap_on_overflow), &(CONCAT_u1_u2_6364));\
bit_vector_concatenate( &(CONCAT_u1_u2_6361), &(CONCAT_u1_u2_6364), &(CONCAT_u2_u4_6365));\
bit_vector_concatenate( &(CONCAT_u2_u4_6358), &(CONCAT_u2_u4_6365), &(CONCAT_u4_u8_6366));\
bit_vector_concatenate( &(CONCAT_u5_u9_6351), &(CONCAT_u4_u8_6366), &(CONCAT_u9_u17_6367));\
bit_vector_cast_to_bit_vector(0, &(alu_instr_spec), &(CONCAT_u9_u17_6367));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro_ if (bit_vector_to_uint64(0, &is_alu_instr)) {\
uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"decode_stage1_alu_ispec__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_add");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_add)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_sub");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_sub)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_mul");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_mul)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_div");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_div)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"signed_mul_div");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(signed_mul_div)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_and");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_and)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_or");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_or)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_xor");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_xor)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_xnor");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_xnor)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_sll");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_sll)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_srl");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_srl)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"is_sra");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_sra)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"negate_second_operand");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(negate_second_operand)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"with_carry");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(with_carry)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"set_cc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(set_cc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"tagged_alu_op");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(tagged_alu_op)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6387_c_macro___print_counter,"trap_on_overflow");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(trap_on_overflow)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6398_c_macro_ __declare_static_bit_vector(konst_6391,2);\
bit_vector_clear(&konst_6391);\
konst_6391.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_6392,1);\
__declare_static_bit_vector(konst_6394,4);\
bit_vector_clear(&konst_6394);\
konst_6394.val.byte_array[0] = 4;\
__declare_static_bit_vector(EQ_u4_u1_6395,1);\
__declare_static_bit_vector(AND_u1_u1_6396,1);\
__declare_static_bit_vector(AND_u1_u1_6397,1);\
bit_vector_clear(&konst_6391);\
konst_6391.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_6391), &(EQ_u2_u1_6392));\
bit_vector_clear(&konst_6394);\
konst_6394.val.byte_array[0] = 4;\
bit_vector_equal(0, &(op3_row), &(konst_6394), &(EQ_u4_u1_6395));\
bit_vector_and(&(EQ_u2_u1_6392), &(EQ_u4_u1_6395), &(AND_u1_u1_6396));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6396), &(AND_u1_u1_6397));\
bit_vector_cast_to_bit_vector(0, &(is_fp_op_1), &(AND_u1_u1_6397));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6409_c_macro_ __declare_static_bit_vector(konst_6402,2);\
bit_vector_clear(&konst_6402);\
konst_6402.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_6403,1);\
__declare_static_bit_vector(konst_6405,4);\
bit_vector_clear(&konst_6405);\
konst_6405.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_6406,1);\
__declare_static_bit_vector(AND_u1_u1_6407,1);\
__declare_static_bit_vector(AND_u1_u1_6408,1);\
bit_vector_clear(&konst_6402);\
konst_6402.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_6402), &(EQ_u2_u1_6403));\
bit_vector_clear(&konst_6405);\
konst_6405.val.byte_array[0] = 5;\
bit_vector_equal(0, &(op3_row), &(konst_6405), &(EQ_u4_u1_6406));\
bit_vector_and(&(EQ_u2_u1_6403), &(EQ_u4_u1_6406), &(AND_u1_u1_6407));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6407), &(AND_u1_u1_6408));\
bit_vector_cast_to_bit_vector(0, &(is_fp_op_2), &(AND_u1_u1_6408));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6416_c_macro_ __declare_static_bit_vector(CONCAT_u9_u10_6413,10);\
__declare_static_bit_vector(CONCAT_u10_u11_6415,11);\
bit_vector_concatenate( &(opf), &(is_fp_op_2), &(CONCAT_u9_u10_6413));\
bit_vector_concatenate( &(CONCAT_u9_u10_6413), &(is_fp_op_1), &(CONCAT_u10_u11_6415));\
bit_vector_cast_to_bit_vector(0, &(fp_op_instr_spec), &(CONCAT_u10_u11_6415));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6421_c_macro_ __declare_static_bit_vector(OR_u1_u1_6420,1);\
bit_vector_or(&(is_fp_op_2), &(is_fp_op_1), &(OR_u1_u1_6420));\
bit_vector_cast_to_bit_vector(0, &(is_fp_op_instr), &(OR_u1_u1_6420));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_6426_c_macro_ if (bit_vector_to_uint64(0, &is_fp_op_instr)) {\
uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_6426_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_6426_c_macro___print_counter,"decode_stage1_fp_ispec__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6426_c_macro___print_counter,"opf");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(opf)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6426_c_macro___print_counter,"is_fp_op_1");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_fp_op_1)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6426_c_macro___print_counter,"is_fp_op_2");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_fp_op_2)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6437_c_macro_ __declare_static_bit_vector(konst_6430,2);\
bit_vector_clear(&konst_6430);\
konst_6430.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_6431,1);\
__declare_static_bit_vector(konst_6433,4);\
bit_vector_clear(&konst_6433);\
konst_6433.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_6434,1);\
__declare_static_bit_vector(AND_u1_u1_6435,1);\
__declare_static_bit_vector(AND_u1_u1_6436,1);\
bit_vector_clear(&konst_6430);\
konst_6430.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_6430), &(EQ_u2_u1_6431));\
bit_vector_clear(&konst_6433);\
konst_6433.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op3_row), &(konst_6433), &(EQ_u4_u1_6434));\
bit_vector_and(&(EQ_u2_u1_6431), &(EQ_u4_u1_6434), &(AND_u1_u1_6435));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6435), &(AND_u1_u1_6436));\
bit_vector_cast_to_bit_vector(0, &(is_cp_op_1), &(AND_u1_u1_6436));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6448_c_macro_ __declare_static_bit_vector(konst_6441,2);\
bit_vector_clear(&konst_6441);\
konst_6441.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_6442,1);\
__declare_static_bit_vector(konst_6444,4);\
bit_vector_clear(&konst_6444);\
konst_6444.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u4_u1_6445,1);\
__declare_static_bit_vector(AND_u1_u1_6446,1);\
__declare_static_bit_vector(AND_u1_u1_6447,1);\
bit_vector_clear(&konst_6441);\
konst_6441.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_6441), &(EQ_u2_u1_6442));\
bit_vector_clear(&konst_6444);\
konst_6444.val.byte_array[0] = 7;\
bit_vector_equal(0, &(op3_row), &(konst_6444), &(EQ_u4_u1_6445));\
bit_vector_and(&(EQ_u2_u1_6442), &(EQ_u4_u1_6445), &(AND_u1_u1_6446));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_6446), &(AND_u1_u1_6447));\
bit_vector_cast_to_bit_vector(0, &(is_cp_op_2), &(AND_u1_u1_6447));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6453_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_6452,2);\
bit_vector_concatenate( &(is_cp_op_2), &(is_cp_op_1), &(CONCAT_u1_u2_6452));\
bit_vector_cast_to_bit_vector(0, &(cp_op_instr_spec), &(CONCAT_u1_u2_6452));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6458_c_macro_ __declare_static_bit_vector(OR_u1_u1_6457,1);\
bit_vector_or(&(is_cp_op_2), &(is_cp_op_1), &(OR_u1_u1_6457));\
bit_vector_cast_to_bit_vector(0, &(is_cp_op_instr), &(OR_u1_u1_6457));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_6462_c_macro_ if (bit_vector_to_uint64(0, &is_cp_op_instr)) {\
uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_6462_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_6462_c_macro___print_counter,"decode_stage1_cp_ispec__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6462_c_macro___print_counter,"is_cp_op_1");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_cp_op_1)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6462_c_macro___print_counter,"is_cp_op_2");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_cp_op_2)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6476_c_macro_ __declare_static_bit_vector(OR_u1_u1_6466,1);\
__declare_static_bit_vector(OR_u1_u1_6468,1);\
__declare_static_bit_vector(OR_u1_u1_6471,1);\
__declare_static_bit_vector(OR_u1_u1_6473,1);\
__declare_static_bit_vector(OR_u1_u1_6474,1);\
__declare_static_bit_vector(NOT_u1_u1_6475,1);\
bit_vector_or(&(is_cp_op_instr), &(is_fp_op_instr), &(OR_u1_u1_6466));\
bit_vector_or(&(OR_u1_u1_6466), &(is_alu_instr), &(OR_u1_u1_6468));\
bit_vector_or(&(is_control_transfer_instr), &(is_data_transfer_instr), &(OR_u1_u1_6471));\
bit_vector_or(&(OR_u1_u1_6471), &(is_misc_instr), &(OR_u1_u1_6473));\
bit_vector_or(&(OR_u1_u1_6468), &(OR_u1_u1_6473), &(OR_u1_u1_6474));\
bit_vector_not( &(OR_u1_u1_6474), &(NOT_u1_u1_6475));\
bit_vector_cast_to_bit_vector(0, &(is_illegal_instr), &(NOT_u1_u1_6475));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro_ uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro___print_counter,"instruction_classification__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro___print_counter,"dti");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_data_transfer_instr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro___print_counter,"cti");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_control_transfer_instr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro___print_counter,"alu");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_alu_instr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro___print_counter,"misc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_misc_instr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro___print_counter,"fp");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_fp_op_instr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro___print_counter,"cp");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_cp_op_instr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6484_c_macro___print_counter,"illegal");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_illegal_instr)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6526_c_macro_ __declare_static_bit_vector(type_cast_6488,24);\
__declare_static_bit_vector(konst_6489,24);\
bit_vector_clear(&konst_6489);\
__declare_static_bit_vector(MUX_6490,24);\
__declare_static_bit_vector(type_cast_6493,24);\
__declare_static_bit_vector(konst_6494,24);\
bit_vector_clear(&konst_6494);\
__declare_static_bit_vector(MUX_6495,24);\
__declare_static_bit_vector(OR_u24_u24_6496,24);\
__declare_static_bit_vector(type_cast_6499,24);\
__declare_static_bit_vector(konst_6500,24);\
bit_vector_clear(&konst_6500);\
__declare_static_bit_vector(MUX_6501,24);\
__declare_static_bit_vector(type_cast_6504,24);\
__declare_static_bit_vector(konst_6505,24);\
bit_vector_clear(&konst_6505);\
__declare_static_bit_vector(MUX_6506,24);\
__declare_static_bit_vector(OR_u24_u24_6507,24);\
__declare_static_bit_vector(OR_u24_u24_6508,24);\
__declare_static_bit_vector(type_cast_6511,24);\
__declare_static_bit_vector(konst_6512,24);\
bit_vector_clear(&konst_6512);\
__declare_static_bit_vector(MUX_6513,24);\
__declare_static_bit_vector(type_cast_6516,24);\
__declare_static_bit_vector(konst_6517,24);\
bit_vector_clear(&konst_6517);\
__declare_static_bit_vector(MUX_6518,24);\
__declare_static_bit_vector(OR_u24_u24_6519,24);\
__declare_static_bit_vector(konst_6521,24);\
bit_vector_clear(&konst_6521);\
__declare_static_bit_vector(konst_6522,24);\
bit_vector_clear(&konst_6522);\
__declare_static_bit_vector(MUX_6523,24);\
__declare_static_bit_vector(OR_u24_u24_6524,24);\
__declare_static_bit_vector(OR_u24_u24_6525,24);\
if (has_undefined_bit(&is_data_transfer_instr)) {fprintf(stderr, "Error: variable is_data_transfer_instr has undefined value (%s) at test point.\n", to_string(&is_data_transfer_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_data_transfer_instr)){bit_vector_bitcast_to_bit_vector( &(type_cast_6488), &(data_transfer_instr_spec));\
bit_vector_cast_to_bit_vector(0, &(MUX_6490), &(type_cast_6488));\
}else {bit_vector_clear(&konst_6489);\
bit_vector_cast_to_bit_vector(0, &(MUX_6490), &(konst_6489));\
}if (has_undefined_bit(&is_control_transfer_instr)) {fprintf(stderr, "Error: variable is_control_transfer_instr has undefined value (%s) at test point.\n", to_string(&is_control_transfer_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_control_transfer_instr)){bit_vector_bitcast_to_bit_vector( &(type_cast_6493), &(control_transfer_instr_spec));\
bit_vector_cast_to_bit_vector(0, &(MUX_6495), &(type_cast_6493));\
}else {bit_vector_clear(&konst_6494);\
bit_vector_cast_to_bit_vector(0, &(MUX_6495), &(konst_6494));\
}bit_vector_or(&(MUX_6490), &(MUX_6495), &(OR_u24_u24_6496));\
if (has_undefined_bit(&is_alu_instr)) {fprintf(stderr, "Error: variable is_alu_instr has undefined value (%s) at test point.\n", to_string(&is_alu_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_alu_instr)){bit_vector_bitcast_to_bit_vector( &(type_cast_6499), &(alu_instr_spec));\
bit_vector_cast_to_bit_vector(0, &(MUX_6501), &(type_cast_6499));\
}else {bit_vector_clear(&konst_6500);\
bit_vector_cast_to_bit_vector(0, &(MUX_6501), &(konst_6500));\
}if (has_undefined_bit(&is_misc_instr)) {fprintf(stderr, "Error: variable is_misc_instr has undefined value (%s) at test point.\n", to_string(&is_misc_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_misc_instr)){bit_vector_bitcast_to_bit_vector( &(type_cast_6504), &(misc_instr_spec));\
bit_vector_cast_to_bit_vector(0, &(MUX_6506), &(type_cast_6504));\
}else {bit_vector_clear(&konst_6505);\
bit_vector_cast_to_bit_vector(0, &(MUX_6506), &(konst_6505));\
}bit_vector_or(&(MUX_6501), &(MUX_6506), &(OR_u24_u24_6507));\
bit_vector_or(&(OR_u24_u24_6496), &(OR_u24_u24_6507), &(OR_u24_u24_6508));\
if (has_undefined_bit(&is_fp_op_instr)) {fprintf(stderr, "Error: variable is_fp_op_instr has undefined value (%s) at test point.\n", to_string(&is_fp_op_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_fp_op_instr)){bit_vector_bitcast_to_bit_vector( &(type_cast_6511), &(fp_op_instr_spec));\
bit_vector_cast_to_bit_vector(0, &(MUX_6513), &(type_cast_6511));\
}else {bit_vector_clear(&konst_6512);\
bit_vector_cast_to_bit_vector(0, &(MUX_6513), &(konst_6512));\
}if (has_undefined_bit(&is_cp_op_instr)) {fprintf(stderr, "Error: variable is_cp_op_instr has undefined value (%s) at test point.\n", to_string(&is_cp_op_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_cp_op_instr)){bit_vector_bitcast_to_bit_vector( &(type_cast_6516), &(cp_op_instr_spec));\
bit_vector_cast_to_bit_vector(0, &(MUX_6518), &(type_cast_6516));\
}else {bit_vector_clear(&konst_6517);\
bit_vector_cast_to_bit_vector(0, &(MUX_6518), &(konst_6517));\
}bit_vector_or(&(MUX_6513), &(MUX_6518), &(OR_u24_u24_6519));\
if (has_undefined_bit(&is_illegal_instr)) {fprintf(stderr, "Error: variable is_illegal_instr has undefined value (%s) at test point.\n", to_string(&is_illegal_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_illegal_instr)){bit_vector_clear(&konst_6521);\
bit_vector_cast_to_bit_vector(0, &(MUX_6523), &(konst_6521));\
}else {bit_vector_clear(&konst_6522);\
bit_vector_cast_to_bit_vector(0, &(MUX_6523), &(konst_6522));\
}bit_vector_or(&(OR_u24_u24_6519), &(MUX_6523), &(OR_u24_u24_6524));\
bit_vector_or(&(OR_u24_u24_6508), &(OR_u24_u24_6524), &(OR_u24_u24_6525));\
bit_vector_cast_to_bit_vector(0, &(instr_spec), &(OR_u24_u24_6525));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6562_c_macro_ __declare_static_bit_vector(konst_6530,3);\
bit_vector_clear(&konst_6530);\
__declare_static_bit_vector(MUX_6531,3);\
__declare_static_bit_vector(konst_6534,3);\
bit_vector_clear(&konst_6534);\
__declare_static_bit_vector(MUX_6535,3);\
__declare_static_bit_vector(OR_u3_u3_6536,3);\
__declare_static_bit_vector(konst_6539,3);\
bit_vector_clear(&konst_6539);\
__declare_static_bit_vector(MUX_6540,3);\
__declare_static_bit_vector(konst_6543,3);\
bit_vector_clear(&konst_6543);\
__declare_static_bit_vector(MUX_6544,3);\
__declare_static_bit_vector(OR_u3_u3_6545,3);\
__declare_static_bit_vector(OR_u3_u3_6546,3);\
__declare_static_bit_vector(konst_6549,3);\
bit_vector_clear(&konst_6549);\
__declare_static_bit_vector(MUX_6550,3);\
__declare_static_bit_vector(konst_6553,3);\
bit_vector_clear(&konst_6553);\
__declare_static_bit_vector(MUX_6554,3);\
__declare_static_bit_vector(OR_u3_u3_6555,3);\
__declare_static_bit_vector(konst_6558,3);\
bit_vector_clear(&konst_6558);\
__declare_static_bit_vector(MUX_6559,3);\
__declare_static_bit_vector(OR_u3_u3_6560,3);\
__declare_static_bit_vector(OR_u3_u3_6561,3);\
if (has_undefined_bit(&is_data_transfer_instr)) {fprintf(stderr, "Error: variable is_data_transfer_instr has undefined value (%s) at test point.\n", to_string(&is_data_transfer_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_data_transfer_instr)){bit_vector_cast_to_bit_vector(0, &(MUX_6531), &(DATA_TRANSFER_INSTR));\
}else {bit_vector_clear(&konst_6530);\
bit_vector_cast_to_bit_vector(0, &(MUX_6531), &(konst_6530));\
}if (has_undefined_bit(&is_control_transfer_instr)) {fprintf(stderr, "Error: variable is_control_transfer_instr has undefined value (%s) at test point.\n", to_string(&is_control_transfer_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_control_transfer_instr)){bit_vector_cast_to_bit_vector(0, &(MUX_6535), &(CONTROL_TRANSFER_INSTR));\
}else {bit_vector_clear(&konst_6534);\
bit_vector_cast_to_bit_vector(0, &(MUX_6535), &(konst_6534));\
}bit_vector_or(&(MUX_6531), &(MUX_6535), &(OR_u3_u3_6536));\
if (has_undefined_bit(&is_alu_instr)) {fprintf(stderr, "Error: variable is_alu_instr has undefined value (%s) at test point.\n", to_string(&is_alu_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_alu_instr)){bit_vector_cast_to_bit_vector(0, &(MUX_6540), &(ALU_INSTR));\
}else {bit_vector_clear(&konst_6539);\
bit_vector_cast_to_bit_vector(0, &(MUX_6540), &(konst_6539));\
}if (has_undefined_bit(&is_misc_instr)) {fprintf(stderr, "Error: variable is_misc_instr has undefined value (%s) at test point.\n", to_string(&is_misc_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_misc_instr)){bit_vector_cast_to_bit_vector(0, &(MUX_6544), &(MISC_INSTR));\
}else {bit_vector_clear(&konst_6543);\
bit_vector_cast_to_bit_vector(0, &(MUX_6544), &(konst_6543));\
}bit_vector_or(&(MUX_6540), &(MUX_6544), &(OR_u3_u3_6545));\
bit_vector_or(&(OR_u3_u3_6536), &(OR_u3_u3_6545), &(OR_u3_u3_6546));\
if (has_undefined_bit(&is_fp_op_instr)) {fprintf(stderr, "Error: variable is_fp_op_instr has undefined value (%s) at test point.\n", to_string(&is_fp_op_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_fp_op_instr)){bit_vector_cast_to_bit_vector(0, &(MUX_6550), &(FP_INSTR));\
}else {bit_vector_clear(&konst_6549);\
bit_vector_cast_to_bit_vector(0, &(MUX_6550), &(konst_6549));\
}if (has_undefined_bit(&is_cp_op_instr)) {fprintf(stderr, "Error: variable is_cp_op_instr has undefined value (%s) at test point.\n", to_string(&is_cp_op_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_cp_op_instr)){bit_vector_cast_to_bit_vector(0, &(MUX_6554), &(CP_INSTR));\
}else {bit_vector_clear(&konst_6553);\
bit_vector_cast_to_bit_vector(0, &(MUX_6554), &(konst_6553));\
}bit_vector_or(&(MUX_6550), &(MUX_6554), &(OR_u3_u3_6555));\
if (has_undefined_bit(&is_illegal_instr)) {fprintf(stderr, "Error: variable is_illegal_instr has undefined value (%s) at test point.\n", to_string(&is_illegal_instr));assert(0);} \
if(bit_vector_to_uint64(0, &is_illegal_instr)){bit_vector_cast_to_bit_vector(0, &(MUX_6559), &(ILLEGAL_INSTR));\
}else {bit_vector_clear(&konst_6558);\
bit_vector_cast_to_bit_vector(0, &(MUX_6559), &(konst_6558));\
}bit_vector_or(&(OR_u3_u3_6555), &(MUX_6559), &(OR_u3_u3_6560));\
bit_vector_or(&(OR_u3_u3_6546), &(OR_u3_u3_6560), &(OR_u3_u3_6561));\
bit_vector_cast_to_bit_vector(0, &(instr_class), &(OR_u3_u3_6561));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_stmt_6565_c_macro_ uint32_t fpunit_exec_exec__decode_instruction_stage_1_stmt_6565_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t%s\n",fpunit_exec_exec__decode_instruction_stage_1_stmt_6565_c_macro___print_counter,"instr_spec_and_class__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6565_c_macro___print_counter,"instr_spec");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(instr_spec)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]decode_stage1>\t\t%s\t\t",fpunit_exec_exec__decode_instruction_stage_1_stmt_6565_c_macro___print_counter,"instr_class");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(instr_class)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6571_c_macro_ __declare_static_bit_vector(NOT_u1_u1_6569,1);\
__declare_static_bit_vector(AND_u1_u1_6570,1);\
bit_vector_not( &(is_ba_or_bn_cond), &(NOT_u1_u1_6569));\
bit_vector_and(&(is_bicc), &(NOT_u1_u1_6569), &(AND_u1_u1_6570));\
bit_vector_cast_to_bit_vector(0, &(uses_iu_cc), &(AND_u1_u1_6570));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6577_c_macro_ __declare_static_bit_vector(NOT_u1_u1_6575,1);\
__declare_static_bit_vector(AND_u1_u1_6576,1);\
bit_vector_not( &(is_ba_or_bn_cond), &(NOT_u1_u1_6575));\
bit_vector_and(&(is_fbfcc), &(NOT_u1_u1_6575), &(AND_u1_u1_6576));\
bit_vector_cast_to_bit_vector(0, &(uses_fp_cc), &(AND_u1_u1_6576));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6588_c_macro_ __declare_static_bit_vector(OR_u1_u1_6581,1);\
__declare_static_bit_vector(OR_u1_u1_6583,1);\
__declare_static_bit_vector(OR_u1_u1_6586,1);\
__declare_static_bit_vector(OR_u1_u1_6587,1);\
bit_vector_or(&(is_call), &(is_rett), &(OR_u1_u1_6581));\
bit_vector_or(&(OR_u1_u1_6581), &(is_jmpl), &(OR_u1_u1_6583));\
bit_vector_or(&(is_ticc), &(is_bicc), &(OR_u1_u1_6586));\
bit_vector_or(&(OR_u1_u1_6583), &(OR_u1_u1_6586), &(OR_u1_u1_6587));\
bit_vector_cast_to_bit_vector(0, &(iu_cti), &(OR_u1_u1_6587));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6605_c_macro_ __declare_static_bit_vector(NOT_u1_u1_6591,1);\
__declare_static_bit_vector(AND_u1_u1_6593,1);\
__declare_static_bit_vector(OR_u1_u1_6595,1);\
__declare_static_bit_vector(OR_u1_u1_6599,1);\
__declare_static_bit_vector(OR_u1_u1_6601,1);\
__declare_static_bit_vector(NOT_u1_u1_6602,1);\
__declare_static_bit_vector(AND_u1_u1_6603,1);\
__declare_static_bit_vector(OR_u1_u1_6604,1);\
bit_vector_not( &(is_bicc), &(NOT_u1_u1_6591));\
bit_vector_and(&(NOT_u1_u1_6591), &(iu_cti), &(AND_u1_u1_6593));\
bit_vector_or(&(AND_u1_u1_6593), &(is_alu_instr), &(OR_u1_u1_6595));\
bit_vector_or(&(is_flush), &(is_nop), &(OR_u1_u1_6599));\
bit_vector_or(&(OR_u1_u1_6599), &(is_stbar), &(OR_u1_u1_6601));\
bit_vector_not( &(OR_u1_u1_6601), &(NOT_u1_u1_6602));\
bit_vector_and(&(is_misc_instr), &(NOT_u1_u1_6602), &(AND_u1_u1_6603));\
bit_vector_or(&(OR_u1_u1_6595), &(AND_u1_u1_6603), &(OR_u1_u1_6604));\
bit_vector_cast_to_bit_vector(0, &(uses_iu1), &(OR_u1_u1_6604));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6620_c_macro_ __declare_static_bit_vector(OR_u1_u1_6609,1);\
__declare_static_bit_vector(NOT_u1_u1_6612,1);\
__declare_static_bit_vector(AND_u1_u1_6613,1);\
__declare_static_bit_vector(NOT_u1_u1_6616,1);\
__declare_static_bit_vector(AND_u1_u1_6617,1);\
__declare_static_bit_vector(OR_u1_u1_6618,1);\
__declare_static_bit_vector(OR_u1_u1_6619,1);\
bit_vector_or(&(uses_iu1), &(is_data_transfer_instr), &(OR_u1_u1_6609));\
bit_vector_not( &(is_ba_or_bn_cond), &(NOT_u1_u1_6612));\
bit_vector_and(&(is_bicc), &(NOT_u1_u1_6612), &(AND_u1_u1_6613));\
bit_vector_not( &(is_nop), &(NOT_u1_u1_6616));\
bit_vector_and(&(is_misc_instr), &(NOT_u1_u1_6616), &(AND_u1_u1_6617));\
bit_vector_or(&(AND_u1_u1_6613), &(AND_u1_u1_6617), &(OR_u1_u1_6618));\
bit_vector_or(&(OR_u1_u1_6609), &(OR_u1_u1_6618), &(OR_u1_u1_6619));\
bit_vector_cast_to_bit_vector(0, &(reads_iu_rfile), &(OR_u1_u1_6619));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6623_c_macro_ bit_vector_cast_to_bit_vector(0, &(fu_cti), &(is_fbfcc));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6626_c_macro_ bit_vector_cast_to_bit_vector(0, &(cp_cti), &(is_cbccc));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6629_c_macro_ bit_vector_cast_to_bit_vector(0, &(iu_flush), &(is_flush));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6632_c_macro_ bit_vector_cast_to_bit_vector(0, &(iu_write_psr), &(is_write_psr));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6645_c_macro_ __declare_static_bit_vector(AND_u1_u1_6636,1);\
__declare_static_bit_vector(EQ_u8_u1_6639,1);\
__declare_static_bit_vector(EQ_u8_u1_6642,1);\
__declare_static_bit_vector(OR_u1_u1_6643,1);\
__declare_static_bit_vector(AND_u1_u1_6644,1);\
bit_vector_and(&(is_store_instr), &(asi_bit), &(AND_u1_u1_6636));\
bit_vector_equal(0, &(asi_id_8), &(ASI_MMU_FLUSH_PROBE), &(EQ_u8_u1_6639));\
bit_vector_equal(0, &(asi_id_8), &(ASI_MMU_REGISTER), &(EQ_u8_u1_6642));\
bit_vector_or(&(EQ_u8_u1_6639), &(EQ_u8_u1_6642), &(OR_u1_u1_6643));\
bit_vector_and(&(AND_u1_u1_6636), &(OR_u1_u1_6643), &(AND_u1_u1_6644));\
bit_vector_cast_to_bit_vector(0, &(iu_mmu_ctrl_write), &(AND_u1_u1_6644));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6658_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_6649,2);\
__declare_static_bit_vector(CONCAT_u2_u3_6651,3);\
__declare_static_bit_vector(CONCAT_u1_u2_6654,2);\
__declare_static_bit_vector(CONCAT_u2_u3_6656,3);\
__declare_static_bit_vector(CONCAT_u3_u6_6657,6);\
bit_vector_concatenate( &(iu_cti), &(fu_cti), &(CONCAT_u1_u2_6649));\
bit_vector_concatenate( &(CONCAT_u1_u2_6649), &(cp_cti), &(CONCAT_u2_u3_6651));\
bit_vector_concatenate( &(iu_flush), &(iu_write_psr), &(CONCAT_u1_u2_6654));\
bit_vector_concatenate( &(CONCAT_u1_u2_6654), &(iu_mmu_ctrl_write), &(CONCAT_u2_u3_6656));\
bit_vector_concatenate( &(CONCAT_u2_u3_6651), &(CONCAT_u2_u3_6656), &(CONCAT_u3_u6_6657));\
bit_vector_cast_to_bit_vector(0, &(stream_corrector_info), &(CONCAT_u3_u6_6657));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6689_c_macro_ __declare_static_bit_vector(OR_u1_u1_6662,1);\
__declare_static_bit_vector(OR_u1_u1_6664,1);\
__declare_static_bit_vector(OR_u1_u1_6669,1);\
__declare_static_bit_vector(OR_u1_u1_6671,1);\
__declare_static_bit_vector(NOT_u1_u1_6672,1);\
__declare_static_bit_vector(AND_u1_u1_6673,1);\
__declare_static_bit_vector(OR_u1_u1_6674,1);\
__declare_static_bit_vector(OR_u1_u1_6679,1);\
__declare_static_bit_vector(NOT_u1_u1_6680,1);\
__declare_static_bit_vector(AND_u1_u1_6681,1);\
__declare_static_bit_vector(OR_u1_u1_6683,1);\
__declare_static_bit_vector(OR_u1_u1_6685,1);\
__declare_static_bit_vector(AND_u1_u1_6686,1);\
__declare_static_bit_vector(OR_u1_u1_6687,1);\
__declare_static_bit_vector(OR_u1_u1_6688,1);\
bit_vector_or(&(is_alu_instr), &(is_rett), &(OR_u1_u1_6662));\
bit_vector_or(&(OR_u1_u1_6662), &(is_call), &(OR_u1_u1_6664));\
bit_vector_or(&(is_nop), &(is_flush), &(OR_u1_u1_6669));\
bit_vector_or(&(OR_u1_u1_6669), &(is_stbar), &(OR_u1_u1_6671));\
bit_vector_not( &(OR_u1_u1_6671), &(NOT_u1_u1_6672));\
bit_vector_and(&(is_misc_instr), &(NOT_u1_u1_6672), &(AND_u1_u1_6673));\
bit_vector_or(&(is_jmpl), &(AND_u1_u1_6673), &(OR_u1_u1_6674));\
bit_vector_or(&(is_fp_access), &(is_cp_access), &(OR_u1_u1_6679));\
bit_vector_not( &(OR_u1_u1_6679), &(NOT_u1_u1_6680));\
bit_vector_and(&(is_load_instr), &(NOT_u1_u1_6680), &(AND_u1_u1_6681));\
bit_vector_or(&(AND_u1_u1_6681), &(is_atomic_ldstub_instr), &(OR_u1_u1_6683));\
bit_vector_or(&(OR_u1_u1_6683), &(is_swap_instr), &(OR_u1_u1_6685));\
bit_vector_and(&(is_data_transfer_instr), &(OR_u1_u1_6685), &(AND_u1_u1_6686));\
bit_vector_or(&(OR_u1_u1_6674), &(AND_u1_u1_6686), &(OR_u1_u1_6687));\
bit_vector_or(&(OR_u1_u1_6664), &(OR_u1_u1_6687), &(OR_u1_u1_6688));\
bit_vector_cast_to_bit_vector(0, &(uses_iu2), &(OR_u1_u1_6688));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6694_c_macro_ __declare_static_bit_vector(AND_u1_u1_6693,1);\
bit_vector_and(&(is_control_transfer_instr), &(is_cbccc), &(AND_u1_u1_6693));\
bit_vector_cast_to_bit_vector(0, &(cpunit_cti), &(AND_u1_u1_6693));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6701_c_macro_ __declare_static_bit_vector(AND_u1_u1_6699,1);\
__declare_static_bit_vector(OR_u1_u1_6700,1);\
bit_vector_and(&(is_data_transfer_instr), &(is_fp_load), &(AND_u1_u1_6699));\
bit_vector_or(&(is_fp_op_instr), &(AND_u1_u1_6699), &(OR_u1_u1_6700));\
bit_vector_cast_to_bit_vector(0, &(uses_fu1), &(OR_u1_u1_6700));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6715_c_macro_ __declare_static_bit_vector(NOT_u1_u1_6706,1);\
__declare_static_bit_vector(AND_u1_u1_6707,1);\
__declare_static_bit_vector(OR_u1_u1_6708,1);\
__declare_static_bit_vector(OR_u1_u1_6712,1);\
__declare_static_bit_vector(AND_u1_u1_6713,1);\
__declare_static_bit_vector(OR_u1_u1_6714,1);\
bit_vector_not( &(is_ba_or_bn_cond), &(NOT_u1_u1_6706));\
bit_vector_and(&(is_fbfcc), &(NOT_u1_u1_6706), &(AND_u1_u1_6707));\
bit_vector_or(&(is_fp_op_instr), &(AND_u1_u1_6707), &(OR_u1_u1_6708));\
bit_vector_or(&(is_fp_load), &(is_fp_store), &(OR_u1_u1_6712));\
bit_vector_and(&(is_data_transfer_instr), &(OR_u1_u1_6712), &(AND_u1_u1_6713));\
bit_vector_or(&(OR_u1_u1_6708), &(AND_u1_u1_6713), &(OR_u1_u1_6714));\
bit_vector_cast_to_bit_vector(0, &(reads_fu_rfile), &(OR_u1_u1_6714));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6718_c_macro_ bit_vector_cast_to_bit_vector(0, &(fu1_can_trap), &(is_fp_op_instr));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6727_c_macro_ __declare_static_bit_vector(OR_u1_u1_6724,1);\
__declare_static_bit_vector(AND_u1_u1_6725,1);\
__declare_static_bit_vector(OR_u1_u1_6726,1);\
bit_vector_or(&(is_fp_load), &(is_fp_store), &(OR_u1_u1_6724));\
bit_vector_and(&(is_data_transfer_instr), &(OR_u1_u1_6724), &(AND_u1_u1_6725));\
bit_vector_or(&(is_fp_op_instr), &(AND_u1_u1_6725), &(OR_u1_u1_6726));\
bit_vector_cast_to_bit_vector(0, &(uses_fu2), &(OR_u1_u1_6726));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6740_c_macro_ __declare_static_bit_vector(OR_u1_u1_6732,1);\
__declare_static_bit_vector(OR_u1_u1_6736,1);\
__declare_static_bit_vector(AND_u1_u1_6737,1);\
__declare_static_bit_vector(OR_u1_u1_6738,1);\
__declare_static_bit_vector(AND_u1_u1_6739,1);\
bit_vector_or(&(is_cp_op_instr), &(cpunit_cti), &(OR_u1_u1_6732));\
bit_vector_or(&(is_cp_store), &(is_cp_load), &(OR_u1_u1_6736));\
bit_vector_and(&(is_data_transfer_instr), &(OR_u1_u1_6736), &(AND_u1_u1_6737));\
bit_vector_or(&(OR_u1_u1_6732), &(AND_u1_u1_6737), &(OR_u1_u1_6738));\
bit_vector_and(&(ZERO_1), &(OR_u1_u1_6738), &(AND_u1_u1_6739));\
bit_vector_cast_to_bit_vector(0, &(uses_cu1), &(AND_u1_u1_6739));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6743_c_macro_ bit_vector_cast_to_bit_vector(0, &(uses_cu2), &(uses_cu1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6752_c_macro_ __declare_static_bit_vector(OR_u1_u1_6749,1);\
__declare_static_bit_vector(AND_u1_u1_6750,1);\
__declare_static_bit_vector(OR_u1_u1_6751,1);\
bit_vector_or(&(is_flush), &(is_stbar), &(OR_u1_u1_6749));\
bit_vector_and(&(is_misc_instr), &(OR_u1_u1_6749), &(AND_u1_u1_6750));\
bit_vector_or(&(is_data_transfer_instr), &(AND_u1_u1_6750), &(OR_u1_u1_6751));\
bit_vector_cast_to_bit_vector(0, &(uses_ls), &(OR_u1_u1_6751));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6783_c_macro_ __declare_static_bit_vector(NOT_u1_u1_6756,1);\
__declare_static_bit_vector(AND_u1_u1_6757,1);\
__declare_static_bit_vector(NOT_u1_u1_6759,1);\
__declare_static_bit_vector(OR_u1_u1_6762,1);\
__declare_static_bit_vector(OR_u1_u1_6764,1);\
__declare_static_bit_vector(OR_u1_u1_6767,1);\
__declare_static_bit_vector(OR_u1_u1_6769,1);\
__declare_static_bit_vector(OR_u1_u1_6770,1);\
__declare_static_bit_vector(OR_u1_u1_6773,1);\
__declare_static_bit_vector(OR_u1_u1_6775,1);\
__declare_static_bit_vector(OR_u1_u1_6778,1);\
__declare_static_bit_vector(OR_u1_u1_6779,1);\
__declare_static_bit_vector(OR_u1_u1_6780,1);\
__declare_static_bit_vector(AND_u1_u1_6781,1);\
__declare_static_bit_vector(AND_u1_u1_6782,1);\
bit_vector_not( &(tagged_alu_op), &(NOT_u1_u1_6756));\
bit_vector_and(&(uses_iu1), &(NOT_u1_u1_6756), &(AND_u1_u1_6757));\
bit_vector_not( &(trap_on_overflow), &(NOT_u1_u1_6759));\
bit_vector_or(&(is_and), &(is_or), &(OR_u1_u1_6762));\
bit_vector_or(&(OR_u1_u1_6762), &(is_xor), &(OR_u1_u1_6764));\
bit_vector_or(&(is_xnor), &(is_add), &(OR_u1_u1_6767));\
bit_vector_or(&(OR_u1_u1_6767), &(is_sub), &(OR_u1_u1_6769));\
bit_vector_or(&(OR_u1_u1_6764), &(OR_u1_u1_6769), &(OR_u1_u1_6770));\
bit_vector_or(&(is_sethi), &(is_sll), &(OR_u1_u1_6773));\
bit_vector_or(&(OR_u1_u1_6773), &(is_srl), &(OR_u1_u1_6775));\
bit_vector_or(&(is_sra), &(is_mul), &(OR_u1_u1_6778));\
bit_vector_or(&(OR_u1_u1_6775), &(OR_u1_u1_6778), &(OR_u1_u1_6779));\
bit_vector_or(&(OR_u1_u1_6770), &(OR_u1_u1_6779), &(OR_u1_u1_6780));\
bit_vector_and(&(NOT_u1_u1_6759), &(OR_u1_u1_6780), &(AND_u1_u1_6781));\
bit_vector_and(&(AND_u1_u1_6757), &(AND_u1_u1_6781), &(AND_u1_u1_6782));\
bit_vector_cast_to_bit_vector(0, &(iu1_to_iu2_fast), &(AND_u1_u1_6782));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6811_c_macro_ __declare_static_bit_vector(OR_u1_u1_6788,1);\
__declare_static_bit_vector(OR_u1_u1_6790,1);\
__declare_static_bit_vector(AND_u1_u1_6794,1);\
__declare_static_bit_vector(OR_u1_u1_6795,1);\
__declare_static_bit_vector(OR_u1_u1_6799,1);\
__declare_static_bit_vector(OR_u1_u1_6801,1);\
__declare_static_bit_vector(OR_u1_u1_6804,1);\
__declare_static_bit_vector(OR_u1_u1_6805,1);\
__declare_static_bit_vector(NOT_u1_u1_6806,1);\
__declare_static_bit_vector(AND_u1_u1_6807,1);\
__declare_static_bit_vector(OR_u1_u1_6808,1);\
__declare_static_bit_vector(OR_u1_u1_6809,1);\
__declare_static_bit_vector(AND_u1_u1_6810,1);\
bit_vector_or(&(is_ticc), &(is_jmpl), &(OR_u1_u1_6788));\
bit_vector_or(&(OR_u1_u1_6788), &(is_rett), &(OR_u1_u1_6790));\
bit_vector_and(&(tagged_alu_op), &(trap_on_overflow), &(AND_u1_u1_6794));\
bit_vector_or(&(is_div), &(AND_u1_u1_6794), &(OR_u1_u1_6795));\
bit_vector_or(&(is_nop), &(is_stbar), &(OR_u1_u1_6799));\
bit_vector_or(&(OR_u1_u1_6799), &(is_sethi), &(OR_u1_u1_6801));\
bit_vector_or(&(is_mulscc), &(is_flush), &(OR_u1_u1_6804));\
bit_vector_or(&(OR_u1_u1_6801), &(OR_u1_u1_6804), &(OR_u1_u1_6805));\
bit_vector_not( &(OR_u1_u1_6805), &(NOT_u1_u1_6806));\
bit_vector_and(&(is_misc_instr), &(NOT_u1_u1_6806), &(AND_u1_u1_6807));\
bit_vector_or(&(OR_u1_u1_6795), &(AND_u1_u1_6807), &(OR_u1_u1_6808));\
bit_vector_or(&(OR_u1_u1_6790), &(OR_u1_u1_6808), &(OR_u1_u1_6809));\
bit_vector_and(&(uses_iu1), &(OR_u1_u1_6809), &(AND_u1_u1_6810));\
bit_vector_cast_to_bit_vector(0, &(iu1_can_trap), &(AND_u1_u1_6810));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6821_c_macro_ __declare_static_bit_vector(NOT_u1_u1_6815,1);\
__declare_static_bit_vector(AND_u1_u1_6816,1);\
__declare_static_bit_vector(OR_u1_u1_6819,1);\
__declare_static_bit_vector(AND_u1_u1_6820,1);\
bit_vector_not( &(iu1_to_iu2_fast), &(NOT_u1_u1_6815));\
bit_vector_and(&(uses_iu1), &(NOT_u1_u1_6815), &(AND_u1_u1_6816));\
bit_vector_or(&(uses_iu2), &(iu1_can_trap), &(OR_u1_u1_6819));\
bit_vector_and(&(AND_u1_u1_6816), &(OR_u1_u1_6819), &(AND_u1_u1_6820));\
bit_vector_cast_to_bit_vector(0, &(iu1_to_iu2), &(AND_u1_u1_6820));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6834_c_macro_ __declare_static_bit_vector(NOT_u1_u1_6826,1);\
__declare_static_bit_vector(AND_u1_u1_6827,1);\
__declare_static_bit_vector(NOT_u1_u1_6829,1);\
__declare_static_bit_vector(AND_u1_u1_6830,1);\
__declare_static_bit_vector(OR_u1_u1_6832,1);\
__declare_static_bit_vector(AND_u1_u1_6833,1);\
bit_vector_not( &(is_call), &(NOT_u1_u1_6826));\
bit_vector_and(&(iu_cti), &(NOT_u1_u1_6826), &(AND_u1_u1_6827));\
bit_vector_not( &(is_bicc), &(NOT_u1_u1_6829));\
bit_vector_and(&(AND_u1_u1_6827), &(NOT_u1_u1_6829), &(AND_u1_u1_6830));\
bit_vector_or(&(AND_u1_u1_6830), &(iu_write_psr), &(OR_u1_u1_6832));\
bit_vector_and(&(uses_iu1), &(OR_u1_u1_6832), &(AND_u1_u1_6833));\
bit_vector_cast_to_bit_vector(0, &(iu1_to_sc), &(AND_u1_u1_6833));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6841_c_macro_ __declare_static_bit_vector(OR_u1_u1_6838,1);\
__declare_static_bit_vector(OR_u1_u1_6840,1);\
bit_vector_or(&(is_data_transfer_instr), &(is_flush), &(OR_u1_u1_6838));\
bit_vector_or(&(OR_u1_u1_6838), &(is_stbar), &(OR_u1_u1_6840));\
bit_vector_cast_to_bit_vector(0, &(iu_reg_to_ls), &(OR_u1_u1_6840));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6844_c_macro_ bit_vector_cast_to_bit_vector(0, &(iu1_to_ls_trap), &(iu1_can_trap));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6847_c_macro_ bit_vector_cast_to_bit_vector(0, &(iu1_to_fu2), &(iu1_can_trap));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6850_c_macro_ bit_vector_cast_to_bit_vector(0, &(iu1_to_cu2), &(ZERO_1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6853_c_macro_ bit_vector_cast_to_bit_vector(0, &(fu1_to_fu2), &(uses_fu1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6856_c_macro_ bit_vector_cast_to_bit_vector(0, &(fu1_to_sc), &(ZERO_1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6861_c_macro_ __declare_static_bit_vector(AND_u1_u1_6860,1);\
bit_vector_and(&(is_data_transfer_instr), &(is_fp_store), &(AND_u1_u1_6860));\
bit_vector_cast_to_bit_vector(0, &(fu_reg_to_ls), &(AND_u1_u1_6860));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6864_c_macro_ bit_vector_cast_to_bit_vector(0, &(fu1_to_ls), &(fu1_can_trap));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6867_c_macro_ bit_vector_cast_to_bit_vector(0, &(fu1_to_iu2), &(fu1_can_trap));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6870_c_macro_ bit_vector_cast_to_bit_vector(0, &(fu1_to_cu2), &(ZERO_1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6873_c_macro_ bit_vector_cast_to_bit_vector(0, &(cu1_to_cu2), &(uses_cu1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6876_c_macro_ bit_vector_cast_to_bit_vector(0, &(cu1_to_sc), &(ZERO_1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6879_c_macro_ bit_vector_cast_to_bit_vector(0, &(cu1_to_ls), &(ZERO_1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6882_c_macro_ bit_vector_cast_to_bit_vector(0, &(cu1_to_iu2), &(ZERO_1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6885_c_macro_ bit_vector_cast_to_bit_vector(0, &(cu1_to_fu2), &(ZERO_1));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6900_c_macro_ __declare_static_bit_vector(OR_u1_u1_6889,1);\
__declare_static_bit_vector(OR_u1_u1_6892,1);\
__declare_static_bit_vector(OR_u1_u1_6893,1);\
__declare_static_bit_vector(OR_u1_u1_6896,1);\
__declare_static_bit_vector(OR_u1_u1_6898,1);\
__declare_static_bit_vector(OR_u1_u1_6899,1);\
bit_vector_or(&(thread_head), &(stream_head), &(OR_u1_u1_6889));\
bit_vector_or(&(last_was_cti), &(is_rett), &(OR_u1_u1_6892));\
bit_vector_or(&(OR_u1_u1_6889), &(OR_u1_u1_6892), &(OR_u1_u1_6893));\
bit_vector_or(&(is_write_psr), &(is_flush), &(OR_u1_u1_6896));\
bit_vector_or(&(OR_u1_u1_6896), &(iu_mmu_ctrl_write), &(OR_u1_u1_6898));\
bit_vector_or(&(OR_u1_u1_6893), &(OR_u1_u1_6898), &(OR_u1_u1_6899));\
bit_vector_cast_to_bit_vector(0, &(send_from_sc_to_rest), &(OR_u1_u1_6899));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6903_c_macro_ bit_vector_cast_to_bit_vector(0, &(sc_to_iu2), &(send_from_sc_to_rest));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6906_c_macro_ bit_vector_cast_to_bit_vector(0, &(sc_to_fu2), &(send_from_sc_to_rest));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6911_c_macro_ __declare_static_bit_vector(AND_u1_u1_6910,1);\
bit_vector_and(&(ZERO_1), &(send_from_sc_to_rest), &(AND_u1_u1_6910));\
bit_vector_cast_to_bit_vector(0, &(sc_to_cu2), &(AND_u1_u1_6910));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6914_c_macro_ bit_vector_cast_to_bit_vector(0, &(sc_to_ls), &(send_from_sc_to_rest));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6917_c_macro_ bit_vector_cast_to_bit_vector(0, &(ls_to_iu2), &(is_data_transfer_instr));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6920_c_macro_ bit_vector_cast_to_bit_vector(0, &(ls_to_fu2), &(is_data_transfer_instr));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_6925_c_macro_ __declare_static_bit_vector(AND_u1_u1_6924,1);\
bit_vector_and(&(ZERO_1), &(uses_ls), &(AND_u1_u1_6924));\
bit_vector_cast_to_bit_vector(0, &(ls_to_cu2), &(AND_u1_u1_6924));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_assign_stmt_7002_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_6929,2);\
__declare_static_bit_vector(CONCAT_u2_u3_6931,3);\
__declare_static_bit_vector(CONCAT_u1_u2_6934,2);\
__declare_static_bit_vector(CONCAT_u3_u5_6935,5);\
__declare_static_bit_vector(CONCAT_u1_u2_6938,2);\
__declare_static_bit_vector(CONCAT_u2_u3_6940,3);\
__declare_static_bit_vector(CONCAT_u1_u2_6943,2);\
__declare_static_bit_vector(CONCAT_u3_u5_6944,5);\
__declare_static_bit_vector(CONCAT_u5_u10_6945,10);\
__declare_static_bit_vector(CONCAT_u1_u2_6948,2);\
__declare_static_bit_vector(CONCAT_u2_u3_6950,3);\
__declare_static_bit_vector(CONCAT_u1_u2_6953,2);\
__declare_static_bit_vector(CONCAT_u3_u5_6954,5);\
__declare_static_bit_vector(CONCAT_u1_u2_6957,2);\
__declare_static_bit_vector(CONCAT_u1_u2_6960,2);\
__declare_static_bit_vector(CONCAT_u2_u4_6961,4);\
__declare_static_bit_vector(CONCAT_u5_u9_6962,9);\
__declare_static_bit_vector(CONCAT_u10_u19_6963,19);\
__declare_static_bit_vector(CONCAT_u1_u2_6966,2);\
__declare_static_bit_vector(CONCAT_u2_u3_6968,3);\
__declare_static_bit_vector(CONCAT_u1_u2_6971,2);\
__declare_static_bit_vector(CONCAT_u3_u5_6972,5);\
__declare_static_bit_vector(CONCAT_u1_u2_6975,2);\
__declare_static_bit_vector(CONCAT_u2_u3_6977,3);\
__declare_static_bit_vector(CONCAT_u1_u2_6980,2);\
bit_vector_clear(&CONCAT_u1_u2_6980);\
__declare_static_bit_vector(CONCAT_u3_u5_6981,5);\
__declare_static_bit_vector(CONCAT_u5_u10_6982,10);\
__declare_static_bit_vector(CONCAT_u1_u2_6985,2);\
bit_vector_clear(&CONCAT_u1_u2_6985);\
__declare_static_bit_vector(CONCAT_u2_u3_6987,3);\
__declare_static_bit_vector(CONCAT_u1_u2_6990,2);\
__declare_static_bit_vector(CONCAT_u3_u5_6991,5);\
__declare_static_bit_vector(CONCAT_u1_u2_6994,2);\
__declare_static_bit_vector(CONCAT_u1_u2_6997,2);\
__declare_static_bit_vector(CONCAT_u2_u4_6998,4);\
__declare_static_bit_vector(CONCAT_u5_u9_6999,9);\
__declare_static_bit_vector(CONCAT_u10_u19_7000,19);\
__declare_static_bit_vector(CONCAT_u19_u38_7001,38);\
bit_vector_concatenate( &(uses_iu_cc), &(uses_fp_cc), &(CONCAT_u1_u2_6929));\
bit_vector_concatenate( &(CONCAT_u1_u2_6929), &(uses_iu1), &(CONCAT_u2_u3_6931));\
bit_vector_concatenate( &(uses_iu2), &(uses_ls), &(CONCAT_u1_u2_6934));\
bit_vector_concatenate( &(CONCAT_u2_u3_6931), &(CONCAT_u1_u2_6934), &(CONCAT_u3_u5_6935));\
bit_vector_concatenate( &(uses_fu1), &(uses_fu2), &(CONCAT_u1_u2_6938));\
bit_vector_concatenate( &(CONCAT_u1_u2_6938), &(uses_cu1), &(CONCAT_u2_u3_6940));\
bit_vector_concatenate( &(uses_cu2), &(reads_iu_rfile), &(CONCAT_u1_u2_6943));\
bit_vector_concatenate( &(CONCAT_u2_u3_6940), &(CONCAT_u1_u2_6943), &(CONCAT_u3_u5_6944));\
bit_vector_concatenate( &(CONCAT_u3_u5_6935), &(CONCAT_u3_u5_6944), &(CONCAT_u5_u10_6945));\
bit_vector_concatenate( &(iu1_can_trap), &(reads_fu_rfile), &(CONCAT_u1_u2_6948));\
bit_vector_concatenate( &(CONCAT_u1_u2_6948), &(fu1_can_trap), &(CONCAT_u2_u3_6950));\
bit_vector_concatenate( &(iu1_to_iu2_fast), &(iu1_to_iu2), &(CONCAT_u1_u2_6953));\
bit_vector_concatenate( &(CONCAT_u2_u3_6950), &(CONCAT_u1_u2_6953), &(CONCAT_u3_u5_6954));\
bit_vector_concatenate( &(iu1_to_sc), &(iu_reg_to_ls), &(CONCAT_u1_u2_6957));\
bit_vector_concatenate( &(iu1_to_ls_trap), &(iu1_to_fu2), &(CONCAT_u1_u2_6960));\
bit_vector_concatenate( &(CONCAT_u1_u2_6957), &(CONCAT_u1_u2_6960), &(CONCAT_u2_u4_6961));\
bit_vector_concatenate( &(CONCAT_u3_u5_6954), &(CONCAT_u2_u4_6961), &(CONCAT_u5_u9_6962));\
bit_vector_concatenate( &(CONCAT_u5_u10_6945), &(CONCAT_u5_u9_6962), &(CONCAT_u10_u19_6963));\
bit_vector_concatenate( &(iu1_to_cu2), &(fu1_to_fu2), &(CONCAT_u1_u2_6966));\
bit_vector_concatenate( &(CONCAT_u1_u2_6966), &(fu1_to_sc), &(CONCAT_u2_u3_6968));\
bit_vector_concatenate( &(fu_reg_to_ls), &(fu1_to_ls), &(CONCAT_u1_u2_6971));\
bit_vector_concatenate( &(CONCAT_u2_u3_6968), &(CONCAT_u1_u2_6971), &(CONCAT_u3_u5_6972));\
bit_vector_concatenate( &(fu1_to_iu2), &(fu1_to_cu2), &(CONCAT_u1_u2_6975));\
bit_vector_concatenate( &(CONCAT_u1_u2_6975), &(cu1_to_cu2), &(CONCAT_u2_u3_6977));\
bit_vector_concatenate( &(cu1_to_sc), &(cu1_to_ls), &(CONCAT_u1_u2_6980));\
bit_vector_concatenate( &(CONCAT_u2_u3_6977), &(CONCAT_u1_u2_6980), &(CONCAT_u3_u5_6981));\
bit_vector_concatenate( &(CONCAT_u3_u5_6972), &(CONCAT_u3_u5_6981), &(CONCAT_u5_u10_6982));\
bit_vector_concatenate( &(cu1_to_iu2), &(cu1_to_fu2), &(CONCAT_u1_u2_6985));\
bit_vector_concatenate( &(CONCAT_u1_u2_6985), &(sc_to_iu2), &(CONCAT_u2_u3_6987));\
bit_vector_concatenate( &(sc_to_fu2), &(sc_to_cu2), &(CONCAT_u1_u2_6990));\
bit_vector_concatenate( &(CONCAT_u2_u3_6987), &(CONCAT_u1_u2_6990), &(CONCAT_u3_u5_6991));\
bit_vector_concatenate( &(sc_to_ls), &(ls_to_iu2), &(CONCAT_u1_u2_6994));\
bit_vector_concatenate( &(ls_to_fu2), &(ls_to_cu2), &(CONCAT_u1_u2_6997));\
bit_vector_concatenate( &(CONCAT_u1_u2_6994), &(CONCAT_u1_u2_6997), &(CONCAT_u2_u4_6998));\
bit_vector_concatenate( &(CONCAT_u3_u5_6991), &(CONCAT_u2_u4_6998), &(CONCAT_u5_u9_6999));\
bit_vector_concatenate( &(CONCAT_u5_u10_6982), &(CONCAT_u5_u9_6999), &(CONCAT_u10_u19_7000));\
bit_vector_concatenate( &(CONCAT_u10_u19_6963), &(CONCAT_u10_u19_7000), &(CONCAT_u19_u38_7001));\
bit_vector_cast_to_bit_vector(0, &(instr_pipeline_usage), &(CONCAT_u19_u38_7001));\
;

#define fpunit_exec_exec__decode_instruction_stage_1_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pinstr_class)), &(instr_class));\
bit_vector_cast_to_bit_vector(0, &((*__pinstr_spec)), &(instr_spec));\
bit_vector_cast_to_bit_vector(0, &((*__pinstr_pipeline_usage)), &(instr_pipeline_usage));\
bit_vector_cast_to_bit_vector(0, &((*__pstream_corrector_info)), &(stream_corrector_info));\
;

#define fpunit_exec_exec__decode_is_flush_asi_inner_inarg_prep_macro__ __declare_static_bit_vector(asi_id_8,8);\
bit_vector_cast_to_bit_vector(0, &(asi_id_8), &((*__pasi_id_8)));\
__declare_static_bit_vector(is_flush_asi,1);\

#define fpunit_exec_exec__decode_is_flush_asi_assign_stmt_7047_c_macro_ __declare_static_bit_vector(EQ_u8_u1_7010,1);\
__declare_static_bit_vector(EQ_u8_u1_7013,1);\
__declare_static_bit_vector(OR_u1_u1_7014,1);\
__declare_static_bit_vector(EQ_u8_u1_7017,1);\
__declare_static_bit_vector(OR_u1_u1_7018,1);\
__declare_static_bit_vector(EQ_u8_u1_7021,1);\
__declare_static_bit_vector(EQ_u8_u1_7024,1);\
__declare_static_bit_vector(OR_u1_u1_7025,1);\
__declare_static_bit_vector(OR_u1_u1_7026,1);\
__declare_static_bit_vector(EQ_u8_u1_7029,1);\
__declare_static_bit_vector(EQ_u8_u1_7032,1);\
__declare_static_bit_vector(OR_u1_u1_7033,1);\
__declare_static_bit_vector(EQ_u8_u1_7036,1);\
__declare_static_bit_vector(OR_u1_u1_7037,1);\
__declare_static_bit_vector(EQ_u8_u1_7040,1);\
__declare_static_bit_vector(EQ_u8_u1_7043,1);\
__declare_static_bit_vector(OR_u1_u1_7044,1);\
__declare_static_bit_vector(OR_u1_u1_7045,1);\
__declare_static_bit_vector(OR_u1_u1_7046,1);\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_D_PAGE), &(EQ_u8_u1_7010));\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_D_SEGMENT), &(EQ_u8_u1_7013));\
bit_vector_or(&(EQ_u8_u1_7010), &(EQ_u8_u1_7013), &(OR_u1_u1_7014));\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_D_REGION), &(EQ_u8_u1_7017));\
bit_vector_or(&(OR_u1_u1_7014), &(EQ_u8_u1_7017), &(OR_u1_u1_7018));\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_D_CONTEXT), &(EQ_u8_u1_7021));\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_D_USER), &(EQ_u8_u1_7024));\
bit_vector_or(&(EQ_u8_u1_7021), &(EQ_u8_u1_7024), &(OR_u1_u1_7025));\
bit_vector_or(&(OR_u1_u1_7018), &(OR_u1_u1_7025), &(OR_u1_u1_7026));\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_PAGE), &(EQ_u8_u1_7029));\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_SEGMENT), &(EQ_u8_u1_7032));\
bit_vector_or(&(EQ_u8_u1_7029), &(EQ_u8_u1_7032), &(OR_u1_u1_7033));\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_REGION), &(EQ_u8_u1_7036));\
bit_vector_or(&(OR_u1_u1_7033), &(EQ_u8_u1_7036), &(OR_u1_u1_7037));\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_CONTEXT), &(EQ_u8_u1_7040));\
bit_vector_equal(0, &(asi_id_8), &(ASI_FLUSH_I_USER), &(EQ_u8_u1_7043));\
bit_vector_or(&(EQ_u8_u1_7040), &(EQ_u8_u1_7043), &(OR_u1_u1_7044));\
bit_vector_or(&(OR_u1_u1_7037), &(OR_u1_u1_7044), &(OR_u1_u1_7045));\
bit_vector_or(&(OR_u1_u1_7026), &(OR_u1_u1_7045), &(OR_u1_u1_7046));\
bit_vector_cast_to_bit_vector(0, &(is_flush_asi), &(OR_u1_u1_7046));\
;

#define fpunit_exec_exec__decode_is_flush_asi_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pis_flush_asi)), &(is_flush_asi));\
;

#define fpunit_exec_exec__decode_misc_ispec_inner_inarg_prep_macro__ __declare_static_bit_vector(ispec,24);\
bit_vector_cast_to_bit_vector(0, &(ispec), &((*__pispec)));\
__declare_static_bit_vector(is_nop,1);\
__declare_static_bit_vector(is_sethi,1);\
__declare_static_bit_vector(is_mulscc,1);\
__declare_static_bit_vector(is_flush,1);\
__declare_static_bit_vector(is_stbar,1);\
__declare_static_bit_vector(is_save,1);\
__declare_static_bit_vector(is_restore,1);\
__declare_static_bit_vector(is_read_asr,1);\
__declare_static_bit_vector(is_read_y,1);\
__declare_static_bit_vector(is_read_psr,1);\
__declare_static_bit_vector(is_read_wim,1);\
__declare_static_bit_vector(is_read_tbr,1);\
__declare_static_bit_vector(is_write_asr,1);\
__declare_static_bit_vector(is_write_y,1);\
__declare_static_bit_vector(is_write_psr,1);\
__declare_static_bit_vector(is_write_wim,1);\
__declare_static_bit_vector(is_write_tbr,1);\

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7071_c_macro_ __declare_static_bit_vector(slice_7070,1);\
bit_vector_slice(&(ispec), &(slice_7070), 16);\
bit_vector_cast_to_bit_vector(0, &(is_nop), &(slice_7070));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7075_c_macro_ __declare_static_bit_vector(slice_7074,1);\
bit_vector_slice(&(ispec), &(slice_7074), 15);\
bit_vector_cast_to_bit_vector(0, &(is_sethi), &(slice_7074));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7079_c_macro_ __declare_static_bit_vector(slice_7078,1);\
bit_vector_slice(&(ispec), &(slice_7078), 14);\
bit_vector_cast_to_bit_vector(0, &(is_mulscc), &(slice_7078));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7083_c_macro_ __declare_static_bit_vector(slice_7082,1);\
bit_vector_slice(&(ispec), &(slice_7082), 13);\
bit_vector_cast_to_bit_vector(0, &(is_flush), &(slice_7082));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7087_c_macro_ __declare_static_bit_vector(slice_7086,1);\
bit_vector_slice(&(ispec), &(slice_7086), 12);\
bit_vector_cast_to_bit_vector(0, &(is_stbar), &(slice_7086));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7091_c_macro_ __declare_static_bit_vector(slice_7090,1);\
bit_vector_slice(&(ispec), &(slice_7090), 11);\
bit_vector_cast_to_bit_vector(0, &(is_save), &(slice_7090));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7095_c_macro_ __declare_static_bit_vector(slice_7094,1);\
bit_vector_slice(&(ispec), &(slice_7094), 10);\
bit_vector_cast_to_bit_vector(0, &(is_restore), &(slice_7094));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7099_c_macro_ __declare_static_bit_vector(slice_7098,1);\
bit_vector_slice(&(ispec), &(slice_7098), 9);\
bit_vector_cast_to_bit_vector(0, &(is_read_asr), &(slice_7098));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7103_c_macro_ __declare_static_bit_vector(slice_7102,1);\
bit_vector_slice(&(ispec), &(slice_7102), 8);\
bit_vector_cast_to_bit_vector(0, &(is_read_y), &(slice_7102));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7107_c_macro_ __declare_static_bit_vector(slice_7106,1);\
bit_vector_slice(&(ispec), &(slice_7106), 7);\
bit_vector_cast_to_bit_vector(0, &(is_read_psr), &(slice_7106));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7111_c_macro_ __declare_static_bit_vector(slice_7110,1);\
bit_vector_slice(&(ispec), &(slice_7110), 6);\
bit_vector_cast_to_bit_vector(0, &(is_read_wim), &(slice_7110));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7115_c_macro_ __declare_static_bit_vector(slice_7114,1);\
bit_vector_slice(&(ispec), &(slice_7114), 5);\
bit_vector_cast_to_bit_vector(0, &(is_read_tbr), &(slice_7114));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7119_c_macro_ __declare_static_bit_vector(slice_7118,1);\
bit_vector_slice(&(ispec), &(slice_7118), 4);\
bit_vector_cast_to_bit_vector(0, &(is_write_asr), &(slice_7118));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7123_c_macro_ __declare_static_bit_vector(slice_7122,1);\
bit_vector_slice(&(ispec), &(slice_7122), 3);\
bit_vector_cast_to_bit_vector(0, &(is_write_y), &(slice_7122));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7127_c_macro_ __declare_static_bit_vector(slice_7126,1);\
bit_vector_slice(&(ispec), &(slice_7126), 2);\
bit_vector_cast_to_bit_vector(0, &(is_write_psr), &(slice_7126));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7131_c_macro_ __declare_static_bit_vector(slice_7130,1);\
bit_vector_slice(&(ispec), &(slice_7130), 1);\
bit_vector_cast_to_bit_vector(0, &(is_write_wim), &(slice_7130));\
;

#define fpunit_exec_exec__decode_misc_ispec_assign_stmt_7135_c_macro_ __declare_static_bit_vector(slice_7134,1);\
bit_vector_slice(&(ispec), &(slice_7134), 0);\
bit_vector_cast_to_bit_vector(0, &(is_write_tbr), &(slice_7134));\
;

#define fpunit_exec_exec__decode_misc_ispec_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pis_nop)), &(is_nop));\
bit_vector_cast_to_bit_vector(0, &((*__pis_sethi)), &(is_sethi));\
bit_vector_cast_to_bit_vector(0, &((*__pis_mulscc)), &(is_mulscc));\
bit_vector_cast_to_bit_vector(0, &((*__pis_flush)), &(is_flush));\
bit_vector_cast_to_bit_vector(0, &((*__pis_stbar)), &(is_stbar));\
bit_vector_cast_to_bit_vector(0, &((*__pis_save)), &(is_save));\
bit_vector_cast_to_bit_vector(0, &((*__pis_restore)), &(is_restore));\
bit_vector_cast_to_bit_vector(0, &((*__pis_read_asr)), &(is_read_asr));\
bit_vector_cast_to_bit_vector(0, &((*__pis_read_y)), &(is_read_y));\
bit_vector_cast_to_bit_vector(0, &((*__pis_read_psr)), &(is_read_psr));\
bit_vector_cast_to_bit_vector(0, &((*__pis_read_wim)), &(is_read_wim));\
bit_vector_cast_to_bit_vector(0, &((*__pis_read_tbr)), &(is_read_tbr));\
bit_vector_cast_to_bit_vector(0, &((*__pis_write_asr)), &(is_write_asr));\
bit_vector_cast_to_bit_vector(0, &((*__pis_write_y)), &(is_write_y));\
bit_vector_cast_to_bit_vector(0, &((*__pis_write_psr)), &(is_write_psr));\
bit_vector_cast_to_bit_vector(0, &((*__pis_write_wim)), &(is_write_wim));\
bit_vector_cast_to_bit_vector(0, &((*__pis_write_tbr)), &(is_write_tbr));\
;

#define fpunit_exec_exec__decode_stream_corrector_info_inner_inarg_prep_macro__ __declare_static_bit_vector(sc_info,6);\
bit_vector_cast_to_bit_vector(0, &(sc_info), &((*__psc_info)));\
__declare_static_bit_vector(iu_cti,1);\
__declare_static_bit_vector(fp_cti,1);\
__declare_static_bit_vector(cp_cti,1);\
__declare_static_bit_vector(iu_flush,1);\
__declare_static_bit_vector(iu_write_psr,1);\
__declare_static_bit_vector(iu_mmu_ctrl_write,1);\

#define fpunit_exec_exec__decode_stream_corrector_info_assign_stmt_7148_c_macro_ __declare_static_bit_vector(slice_7147,1);\
bit_vector_slice(&(sc_info), &(slice_7147), 5);\
bit_vector_cast_to_bit_vector(0, &(iu_cti), &(slice_7147));\
;

#define fpunit_exec_exec__decode_stream_corrector_info_assign_stmt_7152_c_macro_ __declare_static_bit_vector(slice_7151,1);\
bit_vector_slice(&(sc_info), &(slice_7151), 4);\
bit_vector_cast_to_bit_vector(0, &(fp_cti), &(slice_7151));\
;

#define fpunit_exec_exec__decode_stream_corrector_info_assign_stmt_7156_c_macro_ __declare_static_bit_vector(slice_7155,1);\
bit_vector_slice(&(sc_info), &(slice_7155), 3);\
bit_vector_cast_to_bit_vector(0, &(cp_cti), &(slice_7155));\
;

#define fpunit_exec_exec__decode_stream_corrector_info_assign_stmt_7160_c_macro_ __declare_static_bit_vector(slice_7159,1);\
bit_vector_slice(&(sc_info), &(slice_7159), 2);\
bit_vector_cast_to_bit_vector(0, &(iu_flush), &(slice_7159));\
;

#define fpunit_exec_exec__decode_stream_corrector_info_assign_stmt_7164_c_macro_ __declare_static_bit_vector(slice_7163,1);\
bit_vector_slice(&(sc_info), &(slice_7163), 1);\
bit_vector_cast_to_bit_vector(0, &(iu_write_psr), &(slice_7163));\
;

#define fpunit_exec_exec__decode_stream_corrector_info_assign_stmt_7168_c_macro_ __declare_static_bit_vector(slice_7167,1);\
bit_vector_slice(&(sc_info), &(slice_7167), 0);\
bit_vector_cast_to_bit_vector(0, &(iu_mmu_ctrl_write), &(slice_7167));\
;

#define fpunit_exec_exec__decode_stream_corrector_info_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__piu_cti)), &(iu_cti));\
bit_vector_cast_to_bit_vector(0, &((*__pfp_cti)), &(fp_cti));\
bit_vector_cast_to_bit_vector(0, &((*__pcp_cti)), &(cp_cti));\
bit_vector_cast_to_bit_vector(0, &((*__piu_flush)), &(iu_flush));\
bit_vector_cast_to_bit_vector(0, &((*__piu_write_psr)), &(iu_write_psr));\
bit_vector_cast_to_bit_vector(0, &((*__piu_mmu_ctrl_write)), &(iu_mmu_ctrl_write));\
;

#define fpunit_exec_exec__decode_thread_control_word_inner_inarg_prep_macro__ __declare_static_bit_vector(ctrl_word,22);\
bit_vector_cast_to_bit_vector(0, &(ctrl_word), &((*__pctrl_word)));\
__declare_static_bit_vector(sc_instr_class,3);\
__declare_static_bit_vector(debug_mode,1);\
__declare_static_bit_vector(logger_active,1);\
__declare_static_bit_vector(proc_ilvl,4);\
__declare_static_bit_vector(enable_traps,1);\
__declare_static_bit_vector(single_step_mode,1);\
__declare_static_bit_vector(ignore_break_points,1);\
__declare_static_bit_vector(S,1);\
__declare_static_bit_vector(imm_bit,1);\
__declare_static_bit_vector(is_write_psr,1);\
__declare_static_bit_vector(is_mmu_ctrl_write,1);\
__declare_static_bit_vector(is_flush,1);\
__declare_static_bit_vector(is_cti,1);\
__declare_static_bit_vector(mis_predict,1);\
__declare_static_bit_vector(trap_bit,1);\
__declare_static_bit_vector(stream_head,1);\
__declare_static_bit_vector(thread_head,1);\

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7192_c_macro_ __declare_static_bit_vector(slice_7191,3);\
bit_vector_slice(&(ctrl_word), &(slice_7191), 19);\
bit_vector_cast_to_bit_vector(0, &(sc_instr_class), &(slice_7191));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7196_c_macro_ __declare_static_bit_vector(slice_7195,1);\
bit_vector_slice(&(ctrl_word), &(slice_7195), 18);\
bit_vector_cast_to_bit_vector(0, &(debug_mode), &(slice_7195));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7200_c_macro_ __declare_static_bit_vector(slice_7199,1);\
bit_vector_slice(&(ctrl_word), &(slice_7199), 17);\
bit_vector_cast_to_bit_vector(0, &(logger_active), &(slice_7199));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7204_c_macro_ __declare_static_bit_vector(slice_7203,4);\
bit_vector_slice(&(ctrl_word), &(slice_7203), 13);\
bit_vector_cast_to_bit_vector(0, &(proc_ilvl), &(slice_7203));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7208_c_macro_ __declare_static_bit_vector(slice_7207,1);\
bit_vector_slice(&(ctrl_word), &(slice_7207), 12);\
bit_vector_cast_to_bit_vector(0, &(enable_traps), &(slice_7207));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7212_c_macro_ __declare_static_bit_vector(slice_7211,1);\
bit_vector_slice(&(ctrl_word), &(slice_7211), 11);\
bit_vector_cast_to_bit_vector(0, &(single_step_mode), &(slice_7211));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7216_c_macro_ __declare_static_bit_vector(slice_7215,1);\
bit_vector_slice(&(ctrl_word), &(slice_7215), 10);\
bit_vector_cast_to_bit_vector(0, &(ignore_break_points), &(slice_7215));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7220_c_macro_ __declare_static_bit_vector(slice_7219,1);\
bit_vector_slice(&(ctrl_word), &(slice_7219), 9);\
bit_vector_cast_to_bit_vector(0, &(S), &(slice_7219));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7224_c_macro_ __declare_static_bit_vector(slice_7223,1);\
bit_vector_slice(&(ctrl_word), &(slice_7223), 8);\
bit_vector_cast_to_bit_vector(0, &(imm_bit), &(slice_7223));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7228_c_macro_ __declare_static_bit_vector(slice_7227,1);\
bit_vector_slice(&(ctrl_word), &(slice_7227), 7);\
bit_vector_cast_to_bit_vector(0, &(is_write_psr), &(slice_7227));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7232_c_macro_ __declare_static_bit_vector(slice_7231,1);\
bit_vector_slice(&(ctrl_word), &(slice_7231), 6);\
bit_vector_cast_to_bit_vector(0, &(is_mmu_ctrl_write), &(slice_7231));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7236_c_macro_ __declare_static_bit_vector(slice_7235,1);\
bit_vector_slice(&(ctrl_word), &(slice_7235), 5);\
bit_vector_cast_to_bit_vector(0, &(is_flush), &(slice_7235));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7240_c_macro_ __declare_static_bit_vector(slice_7239,1);\
bit_vector_slice(&(ctrl_word), &(slice_7239), 4);\
bit_vector_cast_to_bit_vector(0, &(is_cti), &(slice_7239));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7244_c_macro_ __declare_static_bit_vector(slice_7243,1);\
bit_vector_slice(&(ctrl_word), &(slice_7243), 3);\
bit_vector_cast_to_bit_vector(0, &(mis_predict), &(slice_7243));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7248_c_macro_ __declare_static_bit_vector(slice_7247,1);\
bit_vector_slice(&(ctrl_word), &(slice_7247), 2);\
bit_vector_cast_to_bit_vector(0, &(trap_bit), &(slice_7247));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7252_c_macro_ __declare_static_bit_vector(slice_7251,1);\
bit_vector_slice(&(ctrl_word), &(slice_7251), 1);\
bit_vector_cast_to_bit_vector(0, &(stream_head), &(slice_7251));\
;

#define fpunit_exec_exec__decode_thread_control_word_assign_stmt_7256_c_macro_ __declare_static_bit_vector(slice_7255,1);\
bit_vector_slice(&(ctrl_word), &(slice_7255), 0);\
bit_vector_cast_to_bit_vector(0, &(thread_head), &(slice_7255));\
;

#define fpunit_exec_exec__decode_thread_control_word_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__psc_instr_class)), &(sc_instr_class));\
bit_vector_cast_to_bit_vector(0, &((*__pdebug_mode)), &(debug_mode));\
bit_vector_cast_to_bit_vector(0, &((*__plogger_active)), &(logger_active));\
bit_vector_cast_to_bit_vector(0, &((*__pproc_ilvl)), &(proc_ilvl));\
bit_vector_cast_to_bit_vector(0, &((*__penable_traps)), &(enable_traps));\
bit_vector_cast_to_bit_vector(0, &((*__psingle_step_mode)), &(single_step_mode));\
bit_vector_cast_to_bit_vector(0, &((*__pignore_break_points)), &(ignore_break_points));\
bit_vector_cast_to_bit_vector(0, &((*__pS)), &(S));\
bit_vector_cast_to_bit_vector(0, &((*__pimm_bit)), &(imm_bit));\
bit_vector_cast_to_bit_vector(0, &((*__pis_write_psr)), &(is_write_psr));\
bit_vector_cast_to_bit_vector(0, &((*__pis_mmu_ctrl_write)), &(is_mmu_ctrl_write));\
bit_vector_cast_to_bit_vector(0, &((*__pis_flush)), &(is_flush));\
bit_vector_cast_to_bit_vector(0, &((*__pis_cti)), &(is_cti));\
bit_vector_cast_to_bit_vector(0, &((*__pmis_predict)), &(mis_predict));\
bit_vector_cast_to_bit_vector(0, &((*__ptrap_bit)), &(trap_bit));\
bit_vector_cast_to_bit_vector(0, &((*__pstream_head)), &(stream_head));\
bit_vector_cast_to_bit_vector(0, &((*__pthread_head)), &(thread_head));\
;

#define fpunit_exec_exec__delay_32_2_inner_inarg_prep_macro__ __declare_static_bit_vector(X,32);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,32);\

#define fpunit_exec_exec__delay_32_2_assign_stmt_7263_c_macro_ bit_vector_cast_to_bit_vector(0, &(Y), &(X));\
;

#define fpunit_exec_exec__delay_32_2_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__delay_32_2_outer_arg_decl_macro__ __declare_static_bit_vector(__X, 32);\
bit_vector_assign_uint64(0, &__X, X);\
__declare_static_bit_vector(__Y, 32);\
;

#define fpunit_exec_exec__delay_32_2_outer_op_xfer_macro__  *Y =  bit_vector_to_uint64(0, &__Y);\
;

#define fpunit_exec_exec__delay_64_3_inner_inarg_prep_macro__ __declare_static_bit_vector(X,64);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,64);\

#define fpunit_exec_exec__delay_64_3_assign_stmt_7270_c_macro_ bit_vector_cast_to_bit_vector(0, &(Y), &(X));\
;

#define fpunit_exec_exec__delay_64_3_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__delay_64_3_outer_arg_decl_macro__ __declare_static_bit_vector(__X, 64);\
bit_vector_assign_uint64(0, &__X, X);\
__declare_static_bit_vector(__Y, 64);\
;

#define fpunit_exec_exec__delay_64_3_outer_op_xfer_macro__  *Y =  bit_vector_to_uint64(0, &__Y);\
;

#define fpunit_exec_exec__denormalize_32_inner_inarg_prep_macro__ __declare_static_bit_vector(sign,1);\
bit_vector_cast_to_bit_vector(0, &(sign), &((*__psign)));\
__declare_static_bit_vector(biased_exp,13);\
bit_vector_cast_to_bit_vector(0, &(biased_exp), &((*__pbiased_exp)));\
__declare_static_bit_vector(mantissa,23);\
bit_vector_cast_to_bit_vector(0, &(mantissa), &((*__pmantissa)));\
__declare_static_bit_vector(result,32);\
__declare_static_bit_vector(s_biased_exp,13);\
__declare_static_bit_vector(needs_denormalization,1);\
__declare_static_bit_vector(denorm_shift_amount,13);\
__declare_static_bit_vector(is_denormalizable,1);\
__declare_static_bit_vector(p,32);\
__declare_static_bit_vector(q,5);\
__declare_static_bit_vector(shifted,32);\
__declare_static_bit_vector(mantissa_denorm_final,23);\
__declare_static_bit_vector(result_denormal,32);\
__declare_static_bit_vector(result_zero,32);\
__declare_static_bit_vector(result_normal,32);\

#define fpunit_exec_exec__denormalize_32_assign_stmt_7340_c_macro_ __declare_static_bit_vector(type_cast_7339,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_7339), &(biased_exp));\
bit_vector_cast_to_bit_vector(1, &(s_biased_exp), &(type_cast_7339));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7345_c_macro_ __declare_static_bit_vector(konst_7343,13);\
bit_vector_clear(&konst_7343);\
konst_7343.val.byte_array[0] = 1;\
__declare_static_bit_vector(SLT_i13_u1_7344,1);\
bit_vector_clear(&konst_7343);\
konst_7343.val.byte_array[0] = 1;\
bit_vector_less(1, &(s_biased_exp), &(konst_7343), &(SLT_i13_u1_7344));\
bit_vector_cast_to_bit_vector(0, &(needs_denormalization), &(SLT_i13_u1_7344));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7350_c_macro_ __declare_static_bit_vector(konst_7347,13);\
bit_vector_clear(&konst_7347);\
konst_7347.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_i13_i13_7349,13);\
bit_vector_clear(&konst_7347);\
konst_7347.val.byte_array[0] = 1;\
bit_vector_minus( &(konst_7347), &(s_biased_exp), &(SUB_i13_i13_7349));\
bit_vector_cast_to_bit_vector(1, &(denorm_shift_amount), &(SUB_i13_i13_7349));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7357_c_macro_ __declare_static_bit_vector(konst_7354,13);\
bit_vector_clear(&konst_7354);\
konst_7354.val.byte_array[0] = 24;\
__declare_static_bit_vector(SLE_i13_u1_7355,1);\
__declare_static_bit_vector(AND_u1_u1_7356,1);\
bit_vector_clear(&konst_7354);\
konst_7354.val.byte_array[0] = 24;\
bit_vector_less_equal(1, &(denorm_shift_amount), &(konst_7354), &(SLE_i13_u1_7355));\
bit_vector_and(&(needs_denormalization), &(SLE_i13_u1_7355), &(AND_u1_u1_7356));\
bit_vector_cast_to_bit_vector(0, &(is_denormalizable), &(AND_u1_u1_7356));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7364_c_macro_ __declare_static_bit_vector(CONCAT_u1_u24_7361,24);\
__declare_static_bit_vector(CONCAT_u24_u32_7363,32);\
bit_vector_concatenate( &(ONE_1), &(mantissa), &(CONCAT_u1_u24_7361));\
bit_vector_concatenate( &(CONCAT_u1_u24_7361), &(ZERO_8), &(CONCAT_u24_u32_7363));\
bit_vector_cast_to_bit_vector(0, &(p), &(CONCAT_u24_u32_7363));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7368_c_macro_ __declare_static_bit_vector(type_cast_7367,5);\
bit_vector_bitcast_to_bit_vector( &(type_cast_7367), &(denorm_shift_amount));\
bit_vector_cast_to_bit_vector(0, &(q), &(type_cast_7367));\
;

#define fpunit_exec_exec__denormalize_32_call_stmt_7372_c_macro_ _fpunit_exec_exec_i32_srl_( &(p),  &(q), &(shifted));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7376_c_macro_ __declare_static_bit_vector(slice_7375,23);\
bit_vector_slice(&(shifted), &(slice_7375), 8);\
bit_vector_cast_to_bit_vector(0, &(mantissa_denorm_final), &(slice_7375));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7383_c_macro_ __declare_static_bit_vector(CONCAT_u1_u9_7380,9);\
__declare_static_bit_vector(CONCAT_u9_u32_7382,32);\
bit_vector_concatenate( &(sign), &(ZERO_8), &(CONCAT_u1_u9_7380));\
bit_vector_concatenate( &(CONCAT_u1_u9_7380), &(mantissa_denorm_final), &(CONCAT_u9_u32_7382));\
bit_vector_cast_to_bit_vector(0, &(result_denormal), &(CONCAT_u9_u32_7382));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7388_c_macro_ __declare_static_bit_vector(CONCAT_u1_u32_7387,32);\
bit_vector_concatenate( &(sign), &(ZERO_31), &(CONCAT_u1_u32_7387));\
bit_vector_cast_to_bit_vector(0, &(result_zero), &(CONCAT_u1_u32_7387));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7396_c_macro_ __declare_static_bit_vector(slice_7392,8);\
__declare_static_bit_vector(CONCAT_u1_u9_7393,9);\
__declare_static_bit_vector(CONCAT_u9_u32_7395,32);\
bit_vector_slice(&(biased_exp), &(slice_7392), 0);\
bit_vector_concatenate( &(sign), &(slice_7392), &(CONCAT_u1_u9_7393));\
bit_vector_concatenate( &(CONCAT_u1_u9_7393), &(mantissa), &(CONCAT_u9_u32_7395));\
bit_vector_cast_to_bit_vector(0, &(result_normal), &(CONCAT_u9_u32_7395));\
;

#define fpunit_exec_exec__denormalize_32_assign_stmt_7405_c_macro_ __declare_static_bit_vector(MUX_7402,32);\
__declare_static_bit_vector(MUX_7404,32);\
if (has_undefined_bit(&needs_denormalization)) {fprintf(stderr, "Error: variable needs_denormalization has undefined value (%s) at test point.\n", to_string(&needs_denormalization));assert(0);} \
if(bit_vector_to_uint64(0, &needs_denormalization)){if (has_undefined_bit(&is_denormalizable)) {fprintf(stderr, "Error: variable is_denormalizable has undefined value (%s) at test point.\n", to_string(&is_denormalizable));assert(0);} \
if(bit_vector_to_uint64(0, &is_denormalizable)){bit_vector_cast_to_bit_vector(0, &(MUX_7402), &(result_denormal));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7402), &(result_zero));\
}bit_vector_cast_to_bit_vector(0, &(MUX_7404), &(MUX_7402));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7404), &(result_normal));\
}bit_vector_cast_to_bit_vector(0, &(result), &(MUX_7404));\
;

#define fpunit_exec_exec__denormalize_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__denormalize_64_inner_inarg_prep_macro__ __declare_static_bit_vector(sign,1);\
bit_vector_cast_to_bit_vector(0, &(sign), &((*__psign)));\
__declare_static_bit_vector(biased_exp,13);\
bit_vector_cast_to_bit_vector(0, &(biased_exp), &((*__pbiased_exp)));\
__declare_static_bit_vector(mantissa,52);\
bit_vector_cast_to_bit_vector(0, &(mantissa), &((*__pmantissa)));\
__declare_static_bit_vector(result,64);\
__declare_static_bit_vector(s_biased_exp,13);\
__declare_static_bit_vector(needs_denormalization,1);\
__declare_static_bit_vector(denorm_shift_amount,13);\
__declare_static_bit_vector(is_denormalizable,1);\
__declare_static_bit_vector(p,64);\
__declare_static_bit_vector(q,6);\
__declare_static_bit_vector(shifted,64);\
__declare_static_bit_vector(mantissa_denorm_final,52);\
__declare_static_bit_vector(result_denormal,64);\
__declare_static_bit_vector(result_zero,64);\
__declare_static_bit_vector(result_normal,64);\

#define fpunit_exec_exec__denormalize_64_assign_stmt_7486_c_macro_ __declare_static_bit_vector(type_cast_7485,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_7485), &(biased_exp));\
bit_vector_cast_to_bit_vector(1, &(s_biased_exp), &(type_cast_7485));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7491_c_macro_ __declare_static_bit_vector(konst_7489,13);\
bit_vector_clear(&konst_7489);\
konst_7489.val.byte_array[0] = 1;\
__declare_static_bit_vector(SLT_i13_u1_7490,1);\
bit_vector_clear(&konst_7489);\
konst_7489.val.byte_array[0] = 1;\
bit_vector_less(1, &(s_biased_exp), &(konst_7489), &(SLT_i13_u1_7490));\
bit_vector_cast_to_bit_vector(0, &(needs_denormalization), &(SLT_i13_u1_7490));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7496_c_macro_ __declare_static_bit_vector(konst_7493,13);\
bit_vector_clear(&konst_7493);\
konst_7493.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_i13_i13_7495,13);\
bit_vector_clear(&konst_7493);\
konst_7493.val.byte_array[0] = 1;\
bit_vector_minus( &(konst_7493), &(s_biased_exp), &(SUB_i13_i13_7495));\
bit_vector_cast_to_bit_vector(1, &(denorm_shift_amount), &(SUB_i13_i13_7495));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7503_c_macro_ __declare_static_bit_vector(konst_7500,13);\
bit_vector_clear(&konst_7500);\
konst_7500.val.byte_array[0] = 52;\
__declare_static_bit_vector(SLE_i13_u1_7501,1);\
__declare_static_bit_vector(AND_u1_u1_7502,1);\
bit_vector_clear(&konst_7500);\
konst_7500.val.byte_array[0] = 52;\
bit_vector_less_equal(1, &(denorm_shift_amount), &(konst_7500), &(SLE_i13_u1_7501));\
bit_vector_and(&(needs_denormalization), &(SLE_i13_u1_7501), &(AND_u1_u1_7502));\
bit_vector_cast_to_bit_vector(0, &(is_denormalizable), &(AND_u1_u1_7502));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7510_c_macro_ __declare_static_bit_vector(CONCAT_u1_u53_7507,53);\
__declare_static_bit_vector(CONCAT_u53_u64_7509,64);\
bit_vector_concatenate( &(ONE_1), &(mantissa), &(CONCAT_u1_u53_7507));\
bit_vector_concatenate( &(CONCAT_u1_u53_7507), &(ZERO_11), &(CONCAT_u53_u64_7509));\
bit_vector_cast_to_bit_vector(0, &(p), &(CONCAT_u53_u64_7509));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7514_c_macro_ __declare_static_bit_vector(type_cast_7513,6);\
bit_vector_bitcast_to_bit_vector( &(type_cast_7513), &(denorm_shift_amount));\
bit_vector_cast_to_bit_vector(0, &(q), &(type_cast_7513));\
;

#define fpunit_exec_exec__denormalize_64_call_stmt_7518_c_macro_ _fpunit_exec_exec_i64_srl_( &(p),  &(q), &(shifted));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7522_c_macro_ __declare_static_bit_vector(slice_7521,52);\
bit_vector_slice(&(shifted), &(slice_7521), 11);\
bit_vector_cast_to_bit_vector(0, &(mantissa_denorm_final), &(slice_7521));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7529_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_7526,12);\
__declare_static_bit_vector(CONCAT_u12_u64_7528,64);\
bit_vector_concatenate( &(sign), &(ZERO_11), &(CONCAT_u1_u12_7526));\
bit_vector_concatenate( &(CONCAT_u1_u12_7526), &(mantissa_denorm_final), &(CONCAT_u12_u64_7528));\
bit_vector_cast_to_bit_vector(0, &(result_denormal), &(CONCAT_u12_u64_7528));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7534_c_macro_ __declare_static_bit_vector(CONCAT_u1_u64_7533,64);\
bit_vector_concatenate( &(sign), &(ZERO_63), &(CONCAT_u1_u64_7533));\
bit_vector_cast_to_bit_vector(0, &(result_zero), &(CONCAT_u1_u64_7533));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7542_c_macro_ __declare_static_bit_vector(slice_7538,11);\
__declare_static_bit_vector(CONCAT_u1_u12_7539,12);\
__declare_static_bit_vector(CONCAT_u12_u64_7541,64);\
bit_vector_slice(&(biased_exp), &(slice_7538), 0);\
bit_vector_concatenate( &(sign), &(slice_7538), &(CONCAT_u1_u12_7539));\
bit_vector_concatenate( &(CONCAT_u1_u12_7539), &(mantissa), &(CONCAT_u12_u64_7541));\
bit_vector_cast_to_bit_vector(0, &(result_normal), &(CONCAT_u12_u64_7541));\
;

#define fpunit_exec_exec__denormalize_64_assign_stmt_7551_c_macro_ __declare_static_bit_vector(MUX_7548,64);\
__declare_static_bit_vector(MUX_7550,64);\
if (has_undefined_bit(&needs_denormalization)) {fprintf(stderr, "Error: variable needs_denormalization has undefined value (%s) at test point.\n", to_string(&needs_denormalization));assert(0);} \
if(bit_vector_to_uint64(0, &needs_denormalization)){if (has_undefined_bit(&is_denormalizable)) {fprintf(stderr, "Error: variable is_denormalizable has undefined value (%s) at test point.\n", to_string(&is_denormalizable));assert(0);} \
if(bit_vector_to_uint64(0, &is_denormalizable)){bit_vector_cast_to_bit_vector(0, &(MUX_7548), &(result_denormal));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7548), &(result_zero));\
}bit_vector_cast_to_bit_vector(0, &(MUX_7550), &(MUX_7548));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7550), &(result_normal));\
}bit_vector_cast_to_bit_vector(0, &(result), &(MUX_7550));\
;

#define fpunit_exec_exec__denormalize_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__denormalize_fp_32_inner_inarg_prep_macro__ __declare_static_bit_vector(extn_result,81);\
bit_vector_cast_to_bit_vector(0, &(extn_result), &((*__pextn_result)));\
__declare_static_bit_vector(f32_result,32);\
__declare_static_bit_vector(EXTENDED_RESULT,81);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(apply_sticky_correction,1);\
__declare_static_bit_vector(sign,1);\
__declare_static_bit_vector(u_exp_13,13);\
__declare_static_bit_vector(mantissa_62,62);\
__declare_static_bit_vector(sp_exp_13_post_round,13);\
__declare_static_bit_vector(sp_mantissa_23_post_round,23);\
__declare_static_bit_vector(f32_normalized,32);\

#define fpunit_exec_exec__denormalize_fp_32_assign_stmt_7660_c_macro_ bit_vector_cast_to_bit_vector(0, &(EXTENDED_RESULT), &(extn_result));\
;

#define fpunit_exec_exec__denormalize_fp_32_assign_stmt_7664_c_macro_ __declare_static_bit_vector(slice_7663,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7663), 80);\
bit_vector_cast_to_bit_vector(0, &(sticky), &(slice_7663));\
;

#define fpunit_exec_exec__denormalize_fp_32_assign_stmt_7668_c_macro_ __declare_static_bit_vector(slice_7667,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7667), 79);\
bit_vector_cast_to_bit_vector(0, &(apply_sticky_correction), &(slice_7667));\
;

#define fpunit_exec_exec__denormalize_fp_32_assign_stmt_7672_c_macro_ __declare_static_bit_vector(slice_7671,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7671), 78);\
bit_vector_cast_to_bit_vector(0, &(sign), &(slice_7671));\
;

#define fpunit_exec_exec__denormalize_fp_32_assign_stmt_7676_c_macro_ __declare_static_bit_vector(slice_7675,13);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7675), 62);\
bit_vector_cast_to_bit_vector(0, &(u_exp_13), &(slice_7675));\
;

#define fpunit_exec_exec__denormalize_fp_32_assign_stmt_7680_c_macro_ __declare_static_bit_vector(slice_7679,62);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7679), 0);\
bit_vector_cast_to_bit_vector(0, &(mantissa_62), &(slice_7679));\
;

#define fpunit_exec_exec__denormalize_fp_32_call_stmt_7687_c_macro_ _fpunit_exec_exec_round_32_extn_( &(sticky),  &(apply_sticky_correction),  &(u_exp_13),  &(mantissa_62), &(sp_exp_13_post_round), &(sp_mantissa_23_post_round));\
;

#define fpunit_exec_exec__denormalize_fp_32_call_stmt_7692_c_macro_ _fpunit_exec_exec_denormalize_32_( &(sign),  &(sp_exp_13_post_round),  &(sp_mantissa_23_post_round), &(f32_normalized));\
;

#define fpunit_exec_exec__denormalize_fp_32_assign_stmt_7695_c_macro_ bit_vector_cast_to_bit_vector(0, &(f32_result), &(f32_normalized));\
;

#define fpunit_exec_exec__denormalize_fp_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pf32_result)), &(f32_result));\
;

#define fpunit_exec_exec__denormalize_fp_64_inner_inarg_prep_macro__ __declare_static_bit_vector(extn_result,81);\
bit_vector_cast_to_bit_vector(0, &(extn_result), &((*__pextn_result)));\
__declare_static_bit_vector(f64_result,64);\
__declare_static_bit_vector(EXTENDED_RESULT,81);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(apply_sticky_correction,1);\
__declare_static_bit_vector(sign,1);\
__declare_static_bit_vector(u_exp_13,13);\
__declare_static_bit_vector(mantissa_62,62);\
__declare_static_bit_vector(dp_exp_13_post_round,13);\
__declare_static_bit_vector(dp_mantissa_52_post_round,52);\
__declare_static_bit_vector(f64_normalized,64);\

#define fpunit_exec_exec__denormalize_fp_64_assign_stmt_7795_c_macro_ bit_vector_cast_to_bit_vector(0, &(EXTENDED_RESULT), &(extn_result));\
;

#define fpunit_exec_exec__denormalize_fp_64_assign_stmt_7799_c_macro_ __declare_static_bit_vector(slice_7798,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7798), 80);\
bit_vector_cast_to_bit_vector(0, &(sticky), &(slice_7798));\
;

#define fpunit_exec_exec__denormalize_fp_64_assign_stmt_7803_c_macro_ __declare_static_bit_vector(slice_7802,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7802), 79);\
bit_vector_cast_to_bit_vector(0, &(apply_sticky_correction), &(slice_7802));\
;

#define fpunit_exec_exec__denormalize_fp_64_assign_stmt_7807_c_macro_ __declare_static_bit_vector(slice_7806,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7806), 78);\
bit_vector_cast_to_bit_vector(0, &(sign), &(slice_7806));\
;

#define fpunit_exec_exec__denormalize_fp_64_assign_stmt_7811_c_macro_ __declare_static_bit_vector(slice_7810,13);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7810), 62);\
bit_vector_cast_to_bit_vector(0, &(u_exp_13), &(slice_7810));\
;

#define fpunit_exec_exec__denormalize_fp_64_assign_stmt_7815_c_macro_ __declare_static_bit_vector(slice_7814,62);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_7814), 0);\
bit_vector_cast_to_bit_vector(0, &(mantissa_62), &(slice_7814));\
;

#define fpunit_exec_exec__denormalize_fp_64_call_stmt_7822_c_macro_ _fpunit_exec_exec_round_64_extn_( &(sticky),  &(apply_sticky_correction),  &(u_exp_13),  &(mantissa_62), &(dp_exp_13_post_round), &(dp_mantissa_52_post_round));\
;

#define fpunit_exec_exec__denormalize_fp_64_call_stmt_7827_c_macro_ _fpunit_exec_exec_denormalize_64_( &(sign),  &(dp_exp_13_post_round),  &(dp_mantissa_52_post_round), &(f64_normalized));\
;

#define fpunit_exec_exec__denormalize_fp_64_assign_stmt_7830_c_macro_ bit_vector_cast_to_bit_vector(0, &(f64_result), &(f64_normalized));\
;

#define fpunit_exec_exec__denormalize_fp_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pf64_result)), &(f64_result));\
;

#define fpunit_exec_exec__early_decode_for_fetch_inner_inarg_prep_macro__ __declare_static_bit_vector(instr,32);\
bit_vector_cast_to_bit_vector(0, &(instr), &((*__pinstr)));\
__declare_static_bit_vector(is_cti,1);\
__declare_static_bit_vector(is_flush,1);\
__declare_static_bit_vector(is_write_psr,1);\
__declare_static_bit_vector(is_write_to_mmu_ctrl_register,1);\
__declare_static_bit_vector(will_trap,1);\
__declare_static_bit_vector(imm_bit,1);\
__declare_static_bit_vector(annul_bit,1);\
__declare_static_bit_vector(op,2);\
__declare_static_bit_vector(op_eq_2,1);\
__declare_static_bit_vector(op_eq_3,1);\
__declare_static_bit_vector(op2,3);\
__declare_static_bit_vector(op3,6);\
__declare_static_bit_vector(op3_col,2);\
__declare_static_bit_vector(op3_row,4);\
__declare_static_bit_vector(is_call,1);\
__declare_static_bit_vector(is_branch,1);\
__declare_static_bit_vector(is_jmpl,1);\
__declare_static_bit_vector(is_rett,1);\
__declare_static_bit_vector(is_ticc,1);\
__declare_static_bit_vector(cond,4);\
__declare_static_bit_vector(is_unimplemented,1);\
__declare_static_bit_vector(is_flush_instr,1);\
__declare_static_bit_vector(asi_bit,1);\
__declare_static_bit_vector(asi_id_8,8);\
__declare_static_bit_vector(is_flush_asi,1);\
__declare_static_bit_vector(is_load_instr,1);\
__declare_static_bit_vector(is_store_instr,1);\

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7844_c_macro_ __declare_static_bit_vector(slice_7843,2);\
bit_vector_slice(&(instr), &(slice_7843), 30);\
bit_vector_cast_to_bit_vector(0, &(op), &(slice_7843));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7849_c_macro_ __declare_static_bit_vector(konst_7847,2);\
bit_vector_clear(&konst_7847);\
konst_7847.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_7848,1);\
bit_vector_clear(&konst_7847);\
konst_7847.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op), &(konst_7847), &(EQ_u2_u1_7848));\
bit_vector_cast_to_bit_vector(0, &(op_eq_2), &(EQ_u2_u1_7848));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7854_c_macro_ __declare_static_bit_vector(konst_7852,2);\
bit_vector_clear(&konst_7852);\
konst_7852.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_7853,1);\
bit_vector_clear(&konst_7852);\
konst_7852.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op), &(konst_7852), &(EQ_u2_u1_7853));\
bit_vector_cast_to_bit_vector(0, &(op_eq_3), &(EQ_u2_u1_7853));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7858_c_macro_ __declare_static_bit_vector(slice_7857,3);\
bit_vector_slice(&(instr), &(slice_7857), 22);\
bit_vector_cast_to_bit_vector(0, &(op2), &(slice_7857));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7862_c_macro_ __declare_static_bit_vector(slice_7861,6);\
bit_vector_slice(&(instr), &(slice_7861), 19);\
bit_vector_cast_to_bit_vector(0, &(op3), &(slice_7861));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7866_c_macro_ __declare_static_bit_vector(slice_7865,2);\
bit_vector_slice(&(op3), &(slice_7865), 4);\
bit_vector_cast_to_bit_vector(0, &(op3_col), &(slice_7865));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7870_c_macro_ __declare_static_bit_vector(slice_7869,4);\
bit_vector_slice(&(op3), &(slice_7869), 0);\
bit_vector_cast_to_bit_vector(0, &(op3_row), &(slice_7869));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7875_c_macro_ __declare_static_bit_vector(konst_7873,2);\
bit_vector_clear(&konst_7873);\
konst_7873.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u2_u1_7874,1);\
bit_vector_clear(&konst_7873);\
konst_7873.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op), &(konst_7873), &(EQ_u2_u1_7874));\
bit_vector_cast_to_bit_vector(0, &(is_call), &(EQ_u2_u1_7874));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7892_c_macro_ __declare_static_bit_vector(konst_7878,2);\
bit_vector_clear(&konst_7878);\
__declare_static_bit_vector(EQ_u2_u1_7879,1);\
__declare_static_bit_vector(konst_7881,3);\
bit_vector_clear(&konst_7881);\
konst_7881.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u3_u1_7882,1);\
__declare_static_bit_vector(konst_7884,3);\
bit_vector_clear(&konst_7884);\
konst_7884.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u3_u1_7885,1);\
__declare_static_bit_vector(OR_u1_u1_7886,1);\
__declare_static_bit_vector(konst_7888,3);\
bit_vector_clear(&konst_7888);\
konst_7888.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u3_u1_7889,1);\
__declare_static_bit_vector(OR_u1_u1_7890,1);\
__declare_static_bit_vector(AND_u1_u1_7891,1);\
bit_vector_clear(&konst_7878);\
bit_vector_equal(0, &(op), &(konst_7878), &(EQ_u2_u1_7879));\
bit_vector_clear(&konst_7881);\
konst_7881.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op2), &(konst_7881), &(EQ_u3_u1_7882));\
bit_vector_clear(&konst_7884);\
konst_7884.val.byte_array[0] = 6;\
bit_vector_equal(0, &(op2), &(konst_7884), &(EQ_u3_u1_7885));\
bit_vector_or(&(EQ_u3_u1_7882), &(EQ_u3_u1_7885), &(OR_u1_u1_7886));\
bit_vector_clear(&konst_7888);\
konst_7888.val.byte_array[0] = 7;\
bit_vector_equal(0, &(op2), &(konst_7888), &(EQ_u3_u1_7889));\
bit_vector_or(&(OR_u1_u1_7886), &(EQ_u3_u1_7889), &(OR_u1_u1_7890));\
bit_vector_and(&(EQ_u2_u1_7879), &(OR_u1_u1_7890), &(AND_u1_u1_7891));\
bit_vector_cast_to_bit_vector(0, &(is_branch), &(AND_u1_u1_7891));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7903_c_macro_ __declare_static_bit_vector(konst_7896,4);\
bit_vector_clear(&konst_7896);\
konst_7896.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_7897,1);\
__declare_static_bit_vector(konst_7899,2);\
bit_vector_clear(&konst_7899);\
konst_7899.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_7900,1);\
__declare_static_bit_vector(AND_u1_u1_7901,1);\
__declare_static_bit_vector(AND_u1_u1_7902,1);\
bit_vector_clear(&konst_7896);\
konst_7896.val.byte_array[0] = 8;\
bit_vector_equal(0, &(op3_row), &(konst_7896), &(EQ_u4_u1_7897));\
bit_vector_clear(&konst_7899);\
konst_7899.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_7899), &(EQ_u2_u1_7900));\
bit_vector_and(&(EQ_u4_u1_7897), &(EQ_u2_u1_7900), &(AND_u1_u1_7901));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_7901), &(AND_u1_u1_7902));\
bit_vector_cast_to_bit_vector(0, &(is_jmpl), &(AND_u1_u1_7902));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7914_c_macro_ __declare_static_bit_vector(konst_7907,4);\
bit_vector_clear(&konst_7907);\
konst_7907.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_7908,1);\
__declare_static_bit_vector(konst_7910,2);\
bit_vector_clear(&konst_7910);\
konst_7910.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_7911,1);\
__declare_static_bit_vector(AND_u1_u1_7912,1);\
__declare_static_bit_vector(AND_u1_u1_7913,1);\
bit_vector_clear(&konst_7907);\
konst_7907.val.byte_array[0] = 9;\
bit_vector_equal(0, &(op3_row), &(konst_7907), &(EQ_u4_u1_7908));\
bit_vector_clear(&konst_7910);\
konst_7910.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_7910), &(EQ_u2_u1_7911));\
bit_vector_and(&(EQ_u4_u1_7908), &(EQ_u2_u1_7911), &(AND_u1_u1_7912));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_7912), &(AND_u1_u1_7913));\
bit_vector_cast_to_bit_vector(0, &(is_rett), &(AND_u1_u1_7913));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7925_c_macro_ __declare_static_bit_vector(konst_7918,4);\
bit_vector_clear(&konst_7918);\
konst_7918.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_7919,1);\
__declare_static_bit_vector(konst_7921,2);\
bit_vector_clear(&konst_7921);\
konst_7921.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_7922,1);\
__declare_static_bit_vector(AND_u1_u1_7923,1);\
__declare_static_bit_vector(AND_u1_u1_7924,1);\
bit_vector_clear(&konst_7918);\
konst_7918.val.byte_array[0] = 10;\
bit_vector_equal(0, &(op3_row), &(konst_7918), &(EQ_u4_u1_7919));\
bit_vector_clear(&konst_7921);\
konst_7921.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_7921), &(EQ_u2_u1_7922));\
bit_vector_and(&(EQ_u4_u1_7919), &(EQ_u2_u1_7922), &(AND_u1_u1_7923));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_7923), &(AND_u1_u1_7924));\
bit_vector_cast_to_bit_vector(0, &(is_ticc), &(AND_u1_u1_7924));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7929_c_macro_ __declare_static_bit_vector(slice_7928,4);\
bit_vector_slice(&(instr), &(slice_7928), 25);\
bit_vector_cast_to_bit_vector(0, &(cond), &(slice_7928));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7934_c_macro_ __declare_static_bit_vector(konst_7932,32);\
bit_vector_clear(&konst_7932);\
konst_7932.val.byte_array[0] = 29;\
__declare_static_bit_vector(BITSEL_u32_u1_7933,1);\
bit_vector_clear(&konst_7932);\
konst_7932.val.byte_array[0] = 29;\
bit_vector_bitsel( &(instr), &(konst_7932), &(BITSEL_u32_u1_7933));\
bit_vector_cast_to_bit_vector(0, &(annul_bit), &(BITSEL_u32_u1_7933));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7943_c_macro_ __declare_static_bit_vector(konst_7937,2);\
bit_vector_clear(&konst_7937);\
__declare_static_bit_vector(EQ_u2_u1_7938,1);\
__declare_static_bit_vector(konst_7940,3);\
bit_vector_clear(&konst_7940);\
__declare_static_bit_vector(EQ_u3_u1_7941,1);\
__declare_static_bit_vector(AND_u1_u1_7942,1);\
bit_vector_clear(&konst_7937);\
bit_vector_equal(0, &(op), &(konst_7937), &(EQ_u2_u1_7938));\
bit_vector_clear(&konst_7940);\
bit_vector_equal(0, &(op2), &(konst_7940), &(EQ_u3_u1_7941));\
bit_vector_and(&(EQ_u2_u1_7938), &(EQ_u3_u1_7941), &(AND_u1_u1_7942));\
bit_vector_cast_to_bit_vector(0, &(is_unimplemented), &(AND_u1_u1_7942));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7952_c_macro_ __declare_static_bit_vector(konst_7947,4);\
bit_vector_clear(&konst_7947);\
konst_7947.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_7948,1);\
__declare_static_bit_vector(AND_u1_u1_7949,1);\
__declare_static_bit_vector(OR_u1_u1_7951,1);\
bit_vector_clear(&konst_7947);\
konst_7947.val.byte_array[0] = 8;\
bit_vector_equal(0, &(cond), &(konst_7947), &(EQ_u4_u1_7948));\
bit_vector_and(&(is_ticc), &(EQ_u4_u1_7948), &(AND_u1_u1_7949));\
bit_vector_or(&(AND_u1_u1_7949), &(is_unimplemented), &(OR_u1_u1_7951));\
bit_vector_cast_to_bit_vector(0, &(will_trap), &(OR_u1_u1_7951));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7961_c_macro_ __declare_static_bit_vector(OR_u1_u1_7956,1);\
__declare_static_bit_vector(OR_u1_u1_7959,1);\
__declare_static_bit_vector(OR_u1_u1_7960,1);\
bit_vector_or(&(is_call), &(is_branch), &(OR_u1_u1_7956));\
bit_vector_or(&(is_jmpl), &(is_rett), &(OR_u1_u1_7959));\
bit_vector_or(&(OR_u1_u1_7956), &(OR_u1_u1_7959), &(OR_u1_u1_7960));\
bit_vector_cast_to_bit_vector(0, &(is_cti), &(OR_u1_u1_7960));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7972_c_macro_ __declare_static_bit_vector(konst_7965,2);\
bit_vector_clear(&konst_7965);\
konst_7965.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_7966,1);\
__declare_static_bit_vector(AND_u1_u1_7967,1);\
__declare_static_bit_vector(konst_7969,4);\
bit_vector_clear(&konst_7969);\
konst_7969.val.byte_array[0] = 11;\
__declare_static_bit_vector(EQ_u4_u1_7970,1);\
__declare_static_bit_vector(AND_u1_u1_7971,1);\
bit_vector_clear(&konst_7965);\
konst_7965.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_7965), &(EQ_u2_u1_7966));\
bit_vector_and(&(op_eq_2), &(EQ_u2_u1_7966), &(AND_u1_u1_7967));\
bit_vector_clear(&konst_7969);\
konst_7969.val.byte_array[0] = 11;\
bit_vector_equal(0, &(op3_row), &(konst_7969), &(EQ_u4_u1_7970));\
bit_vector_and(&(AND_u1_u1_7967), &(EQ_u4_u1_7970), &(AND_u1_u1_7971));\
bit_vector_cast_to_bit_vector(0, &(is_flush_instr), &(AND_u1_u1_7971));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7991_c_macro_ __declare_static_bit_vector(konst_7976,2);\
bit_vector_clear(&konst_7976);\
konst_7976.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u2_u1_7977,1);\
__declare_static_bit_vector(AND_u1_u1_7978,1);\
__declare_static_bit_vector(konst_7980,4);\
bit_vector_clear(&konst_7980);\
konst_7980.val.byte_array[0] = 8;\
__declare_static_bit_vector(ULT_u4_u1_7981,1);\
__declare_static_bit_vector(konst_7983,4);\
bit_vector_clear(&konst_7983);\
konst_7983.val.byte_array[0] = 8;\
__declare_static_bit_vector(UGT_u4_u1_7984,1);\
__declare_static_bit_vector(konst_7986,4);\
bit_vector_clear(&konst_7986);\
konst_7986.val.byte_array[0] = 11;\
__declare_static_bit_vector(ULT_u4_u1_7987,1);\
__declare_static_bit_vector(AND_u1_u1_7988,1);\
__declare_static_bit_vector(OR_u1_u1_7989,1);\
__declare_static_bit_vector(AND_u1_u1_7990,1);\
bit_vector_clear(&konst_7976);\
konst_7976.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_col), &(konst_7976), &(EQ_u2_u1_7977));\
bit_vector_and(&(op_eq_3), &(EQ_u2_u1_7977), &(AND_u1_u1_7978));\
bit_vector_clear(&konst_7980);\
konst_7980.val.byte_array[0] = 8;\
bit_vector_less(0, &(op3_row), &(konst_7980), &(ULT_u4_u1_7981));\
bit_vector_clear(&konst_7983);\
konst_7983.val.byte_array[0] = 8;\
bit_vector_greater(0, &(op3_row), &(konst_7983), &(UGT_u4_u1_7984));\
bit_vector_clear(&konst_7986);\
konst_7986.val.byte_array[0] = 11;\
bit_vector_less(0, &(op3_row), &(konst_7986), &(ULT_u4_u1_7987));\
bit_vector_and(&(UGT_u4_u1_7984), &(ULT_u4_u1_7987), &(AND_u1_u1_7988));\
bit_vector_or(&(ULT_u4_u1_7981), &(AND_u1_u1_7988), &(OR_u1_u1_7989));\
bit_vector_and(&(AND_u1_u1_7978), &(OR_u1_u1_7989), &(AND_u1_u1_7990));\
bit_vector_cast_to_bit_vector(0, &(asi_bit), &(AND_u1_u1_7990));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_7995_c_macro_ __declare_static_bit_vector(slice_7994,8);\
bit_vector_slice(&(instr), &(slice_7994), 5);\
bit_vector_cast_to_bit_vector(0, &(asi_id_8), &(slice_7994));\
;

#define fpunit_exec_exec__early_decode_for_fetch_call_stmt_7998_c_macro_ _fpunit_exec_exec_decode_is_flush_asi_( &(asi_id_8), &(is_flush_asi));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_8005_c_macro_ __declare_static_bit_vector(AND_u1_u1_8003,1);\
__declare_static_bit_vector(OR_u1_u1_8004,1);\
bit_vector_and(&(asi_bit), &(is_flush_asi), &(AND_u1_u1_8003));\
bit_vector_or(&(is_flush_instr), &(AND_u1_u1_8003), &(OR_u1_u1_8004));\
bit_vector_cast_to_bit_vector(0, &(is_flush), &(OR_u1_u1_8004));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_8016_c_macro_ __declare_static_bit_vector(konst_8009,2);\
bit_vector_clear(&konst_8009);\
konst_8009.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_8010,1);\
__declare_static_bit_vector(konst_8012,4);\
bit_vector_clear(&konst_8012);\
konst_8012.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_8013,1);\
__declare_static_bit_vector(AND_u1_u1_8014,1);\
__declare_static_bit_vector(AND_u1_u1_8015,1);\
bit_vector_clear(&konst_8009);\
konst_8009.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_col), &(konst_8009), &(EQ_u2_u1_8010));\
bit_vector_clear(&konst_8012);\
konst_8012.val.byte_array[0] = 1;\
bit_vector_equal(0, &(op3_row), &(konst_8012), &(EQ_u4_u1_8013));\
bit_vector_and(&(EQ_u2_u1_8010), &(EQ_u4_u1_8013), &(AND_u1_u1_8014));\
bit_vector_and(&(op_eq_2), &(AND_u1_u1_8014), &(AND_u1_u1_8015));\
bit_vector_cast_to_bit_vector(0, &(is_write_psr), &(AND_u1_u1_8015));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_8021_c_macro_ __declare_static_bit_vector(konst_8019,32);\
bit_vector_clear(&konst_8019);\
konst_8019.val.byte_array[0] = 13;\
__declare_static_bit_vector(BITSEL_u32_u1_8020,1);\
bit_vector_clear(&konst_8019);\
konst_8019.val.byte_array[0] = 13;\
bit_vector_bitsel( &(instr), &(konst_8019), &(BITSEL_u32_u1_8020));\
bit_vector_cast_to_bit_vector(0, &(imm_bit), &(BITSEL_u32_u1_8020));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_8056_c_macro_ __declare_static_bit_vector(konst_8025,4);\
bit_vector_clear(&konst_8025);\
konst_8025.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u4_u1_8026,1);\
__declare_static_bit_vector(konst_8028,4);\
bit_vector_clear(&konst_8028);\
konst_8028.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_8029,1);\
__declare_static_bit_vector(konst_8031,2);\
bit_vector_clear(&konst_8031);\
konst_8031.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_8032,1);\
__declare_static_bit_vector(AND_u1_u1_8033,1);\
__declare_static_bit_vector(OR_u1_u1_8034,1);\
__declare_static_bit_vector(konst_8036,4);\
bit_vector_clear(&konst_8036);\
konst_8036.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_8037,1);\
__declare_static_bit_vector(OR_u1_u1_8038,1);\
__declare_static_bit_vector(konst_8040,4);\
bit_vector_clear(&konst_8040);\
konst_8040.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_8041,1);\
__declare_static_bit_vector(konst_8043,2);\
bit_vector_clear(&konst_8043);\
konst_8043.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_8044,1);\
__declare_static_bit_vector(AND_u1_u1_8045,1);\
__declare_static_bit_vector(OR_u1_u1_8046,1);\
__declare_static_bit_vector(konst_8048,4);\
bit_vector_clear(&konst_8048);\
konst_8048.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_8049,1);\
__declare_static_bit_vector(konst_8051,2);\
bit_vector_clear(&konst_8051);\
konst_8051.val.byte_array[0] = 2;\
__declare_static_bit_vector(ULT_u2_u1_8052,1);\
__declare_static_bit_vector(AND_u1_u1_8053,1);\
__declare_static_bit_vector(OR_u1_u1_8054,1);\
__declare_static_bit_vector(AND_u1_u1_8055,1);\
bit_vector_clear(&konst_8025);\
konst_8025.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_row), &(konst_8025), &(ULT_u4_u1_8026));\
bit_vector_clear(&konst_8028);\
konst_8028.val.byte_array[0] = 2;\
bit_vector_equal(0, &(op3_row), &(konst_8028), &(EQ_u4_u1_8029));\
bit_vector_clear(&konst_8031);\
konst_8031.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_8031), &(ULT_u2_u1_8032));\
bit_vector_and(&(EQ_u4_u1_8029), &(ULT_u2_u1_8032), &(AND_u1_u1_8033));\
bit_vector_or(&(ULT_u4_u1_8026), &(AND_u1_u1_8033), &(OR_u1_u1_8034));\
bit_vector_clear(&konst_8036);\
konst_8036.val.byte_array[0] = 3;\
bit_vector_equal(0, &(op3_row), &(konst_8036), &(EQ_u4_u1_8037));\
bit_vector_or(&(OR_u1_u1_8034), &(EQ_u4_u1_8037), &(OR_u1_u1_8038));\
bit_vector_clear(&konst_8040);\
konst_8040.val.byte_array[0] = 9;\
bit_vector_equal(0, &(op3_row), &(konst_8040), &(EQ_u4_u1_8041));\
bit_vector_clear(&konst_8043);\
konst_8043.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_8043), &(ULT_u2_u1_8044));\
bit_vector_and(&(EQ_u4_u1_8041), &(ULT_u2_u1_8044), &(AND_u1_u1_8045));\
bit_vector_or(&(OR_u1_u1_8038), &(AND_u1_u1_8045), &(OR_u1_u1_8046));\
bit_vector_clear(&konst_8048);\
konst_8048.val.byte_array[0] = 10;\
bit_vector_equal(0, &(op3_row), &(konst_8048), &(EQ_u4_u1_8049));\
bit_vector_clear(&konst_8051);\
konst_8051.val.byte_array[0] = 2;\
bit_vector_less(0, &(op3_col), &(konst_8051), &(ULT_u2_u1_8052));\
bit_vector_and(&(EQ_u4_u1_8049), &(ULT_u2_u1_8052), &(AND_u1_u1_8053));\
bit_vector_or(&(OR_u1_u1_8046), &(AND_u1_u1_8053), &(OR_u1_u1_8054));\
bit_vector_and(&(op_eq_3), &(OR_u1_u1_8054), &(AND_u1_u1_8055));\
bit_vector_cast_to_bit_vector(0, &(is_load_instr), &(AND_u1_u1_8055));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_8067_c_macro_ __declare_static_bit_vector(konst_8060,4);\
bit_vector_clear(&konst_8060);\
konst_8060.val.byte_array[0] = 3;\
__declare_static_bit_vector(UGT_u4_u1_8061,1);\
__declare_static_bit_vector(konst_8063,4);\
bit_vector_clear(&konst_8063);\
konst_8063.val.byte_array[0] = 8;\
__declare_static_bit_vector(ULT_u4_u1_8064,1);\
__declare_static_bit_vector(AND_u1_u1_8065,1);\
__declare_static_bit_vector(AND_u1_u1_8066,1);\
bit_vector_clear(&konst_8060);\
konst_8060.val.byte_array[0] = 3;\
bit_vector_greater(0, &(op3_row), &(konst_8060), &(UGT_u4_u1_8061));\
bit_vector_clear(&konst_8063);\
konst_8063.val.byte_array[0] = 8;\
bit_vector_less(0, &(op3_row), &(konst_8063), &(ULT_u4_u1_8064));\
bit_vector_and(&(UGT_u4_u1_8061), &(ULT_u4_u1_8064), &(AND_u1_u1_8065));\
bit_vector_and(&(op_eq_3), &(AND_u1_u1_8065), &(AND_u1_u1_8066));\
bit_vector_cast_to_bit_vector(0, &(is_store_instr), &(AND_u1_u1_8066));\
;

#define fpunit_exec_exec__early_decode_for_fetch_assign_stmt_8082_c_macro_ __declare_static_bit_vector(OR_u1_u1_8071,1);\
__declare_static_bit_vector(AND_u1_u1_8073,1);\
__declare_static_bit_vector(EQ_u8_u1_8076,1);\
__declare_static_bit_vector(EQ_u8_u1_8079,1);\
__declare_static_bit_vector(OR_u1_u1_8080,1);\
__declare_static_bit_vector(AND_u1_u1_8081,1);\
bit_vector_or(&(is_load_instr), &(is_store_instr), &(OR_u1_u1_8071));\
bit_vector_and(&(OR_u1_u1_8071), &(asi_bit), &(AND_u1_u1_8073));\
bit_vector_equal(0, &(asi_id_8), &(ASI_MMU_FLUSH_PROBE), &(EQ_u8_u1_8076));\
bit_vector_equal(0, &(asi_id_8), &(ASI_MMU_REGISTER), &(EQ_u8_u1_8079));\
bit_vector_or(&(EQ_u8_u1_8076), &(EQ_u8_u1_8079), &(OR_u1_u1_8080));\
bit_vector_and(&(AND_u1_u1_8073), &(OR_u1_u1_8080), &(AND_u1_u1_8081));\
bit_vector_cast_to_bit_vector(0, &(is_write_to_mmu_ctrl_register), &(AND_u1_u1_8081));\
;

#define fpunit_exec_exec__early_decode_for_fetch_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pis_cti)), &(is_cti));\
bit_vector_cast_to_bit_vector(0, &((*__pis_flush)), &(is_flush));\
bit_vector_cast_to_bit_vector(0, &((*__pis_write_psr)), &(is_write_psr));\
bit_vector_cast_to_bit_vector(0, &((*__pis_write_to_mmu_ctrl_register)), &(is_write_to_mmu_ctrl_register));\
bit_vector_cast_to_bit_vector(0, &((*__pwill_trap)), &(will_trap));\
bit_vector_cast_to_bit_vector(0, &((*__pimm_bit)), &(imm_bit));\
bit_vector_cast_to_bit_vector(0, &((*__pannul_bit)), &(annul_bit));\
;

#define fpunit_exec_exec__exec_bicc_generic_inner_inarg_prep_macro__ __declare_static_bit_vector(br_annul_flag,1);\
bit_vector_cast_to_bit_vector(0, &(br_annul_flag), &((*__pbr_annul_flag)));\
__declare_static_bit_vector(br_cond,4);\
bit_vector_cast_to_bit_vector(0, &(br_cond), &((*__pbr_cond)));\
__declare_static_bit_vector(ccodes,4);\
bit_vector_cast_to_bit_vector(0, &(ccodes), &((*__pccodes)));\
__declare_static_bit_vector(br_taken,1);\
__declare_static_bit_vector(annul_next,1);\
__declare_static_bit_vector(N,1);\
__declare_static_bit_vector(Z,1);\
__declare_static_bit_vector(V,1);\
__declare_static_bit_vector(C,1);\
__declare_static_bit_vector(branch_always,1);\

#define fpunit_exec_exec__exec_bicc_generic_assign_stmt_8094_c_macro_ __declare_static_bit_vector(konst_8092,4);\
bit_vector_clear(&konst_8092);\
konst_8092.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u4_u1_8093,1);\
bit_vector_clear(&konst_8092);\
konst_8092.val.byte_array[0] = 3;\
bit_vector_bitsel( &(ccodes), &(konst_8092), &(BITSEL_u4_u1_8093));\
bit_vector_cast_to_bit_vector(0, &(N), &(BITSEL_u4_u1_8093));\
;

#define fpunit_exec_exec__exec_bicc_generic_assign_stmt_8099_c_macro_ __declare_static_bit_vector(konst_8097,4);\
bit_vector_clear(&konst_8097);\
konst_8097.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u4_u1_8098,1);\
bit_vector_clear(&konst_8097);\
konst_8097.val.byte_array[0] = 2;\
bit_vector_bitsel( &(ccodes), &(konst_8097), &(BITSEL_u4_u1_8098));\
bit_vector_cast_to_bit_vector(0, &(Z), &(BITSEL_u4_u1_8098));\
;

#define fpunit_exec_exec__exec_bicc_generic_assign_stmt_8104_c_macro_ __declare_static_bit_vector(konst_8102,4);\
bit_vector_clear(&konst_8102);\
konst_8102.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u4_u1_8103,1);\
bit_vector_clear(&konst_8102);\
konst_8102.val.byte_array[0] = 1;\
bit_vector_bitsel( &(ccodes), &(konst_8102), &(BITSEL_u4_u1_8103));\
bit_vector_cast_to_bit_vector(0, &(V), &(BITSEL_u4_u1_8103));\
;

#define fpunit_exec_exec__exec_bicc_generic_assign_stmt_8109_c_macro_ __declare_static_bit_vector(konst_8107,4);\
bit_vector_clear(&konst_8107);\
__declare_static_bit_vector(BITSEL_u4_u1_8108,1);\
bit_vector_clear(&konst_8107);\
bit_vector_bitsel( &(ccodes), &(konst_8107), &(BITSEL_u4_u1_8108));\
bit_vector_cast_to_bit_vector(0, &(C), &(BITSEL_u4_u1_8108));\
;

#define fpunit_exec_exec__exec_bicc_generic_assign_stmt_8245_c_macro_ __declare_static_bit_vector(konst_8112,4);\
bit_vector_clear(&konst_8112);\
konst_8112.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_8113,1);\
__declare_static_bit_vector(konst_8115,1);\
bit_vector_clear(&konst_8115);\
__declare_static_bit_vector(MUX_8116,1);\
__declare_static_bit_vector(konst_8118,4);\
bit_vector_clear(&konst_8118);\
__declare_static_bit_vector(EQ_u4_u1_8119,1);\
__declare_static_bit_vector(konst_8121,1);\
bit_vector_clear(&konst_8121);\
__declare_static_bit_vector(MUX_8122,1);\
__declare_static_bit_vector(OR_u1_u1_8123,1);\
__declare_static_bit_vector(konst_8125,4);\
bit_vector_clear(&konst_8125);\
konst_8125.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_8126,1);\
__declare_static_bit_vector(NOT_u1_u1_8128,1);\
__declare_static_bit_vector(konst_8129,1);\
bit_vector_clear(&konst_8129);\
__declare_static_bit_vector(MUX_8130,1);\
__declare_static_bit_vector(konst_8132,4);\
bit_vector_clear(&konst_8132);\
konst_8132.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_8133,1);\
__declare_static_bit_vector(konst_8135,1);\
bit_vector_clear(&konst_8135);\
__declare_static_bit_vector(MUX_8136,1);\
__declare_static_bit_vector(OR_u1_u1_8137,1);\
__declare_static_bit_vector(OR_u1_u1_8138,1);\
__declare_static_bit_vector(konst_8140,4);\
bit_vector_clear(&konst_8140);\
konst_8140.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_8141,1);\
__declare_static_bit_vector(XOR_u1_u1_8145,1);\
__declare_static_bit_vector(OR_u1_u1_8146,1);\
__declare_static_bit_vector(NOT_u1_u1_8147,1);\
__declare_static_bit_vector(konst_8148,1);\
bit_vector_clear(&konst_8148);\
__declare_static_bit_vector(MUX_8149,1);\
__declare_static_bit_vector(konst_8151,4);\
bit_vector_clear(&konst_8151);\
konst_8151.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_8152,1);\
__declare_static_bit_vector(XOR_u1_u1_8156,1);\
__declare_static_bit_vector(OR_u1_u1_8157,1);\
__declare_static_bit_vector(konst_8158,1);\
bit_vector_clear(&konst_8158);\
__declare_static_bit_vector(MUX_8159,1);\
__declare_static_bit_vector(OR_u1_u1_8160,1);\
__declare_static_bit_vector(konst_8162,4);\
bit_vector_clear(&konst_8162);\
konst_8162.val.byte_array[0] = 11;\
__declare_static_bit_vector(EQ_u4_u1_8163,1);\
__declare_static_bit_vector(XOR_u1_u1_8166,1);\
__declare_static_bit_vector(NOT_u1_u1_8167,1);\
__declare_static_bit_vector(konst_8168,1);\
bit_vector_clear(&konst_8168);\
__declare_static_bit_vector(MUX_8169,1);\
__declare_static_bit_vector(konst_8171,4);\
bit_vector_clear(&konst_8171);\
konst_8171.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_8172,1);\
__declare_static_bit_vector(XOR_u1_u1_8175,1);\
__declare_static_bit_vector(konst_8176,1);\
bit_vector_clear(&konst_8176);\
__declare_static_bit_vector(MUX_8177,1);\
__declare_static_bit_vector(OR_u1_u1_8178,1);\
__declare_static_bit_vector(OR_u1_u1_8179,1);\
__declare_static_bit_vector(OR_u1_u1_8180,1);\
__declare_static_bit_vector(konst_8182,4);\
bit_vector_clear(&konst_8182);\
konst_8182.val.byte_array[0] = 12;\
__declare_static_bit_vector(EQ_u4_u1_8183,1);\
__declare_static_bit_vector(OR_u1_u1_8186,1);\
__declare_static_bit_vector(NOT_u1_u1_8187,1);\
__declare_static_bit_vector(konst_8188,1);\
bit_vector_clear(&konst_8188);\
__declare_static_bit_vector(MUX_8189,1);\
__declare_static_bit_vector(konst_8191,4);\
bit_vector_clear(&konst_8191);\
konst_8191.val.byte_array[0] = 4;\
__declare_static_bit_vector(EQ_u4_u1_8192,1);\
__declare_static_bit_vector(OR_u1_u1_8195,1);\
__declare_static_bit_vector(konst_8196,1);\
bit_vector_clear(&konst_8196);\
__declare_static_bit_vector(MUX_8197,1);\
__declare_static_bit_vector(OR_u1_u1_8198,1);\
__declare_static_bit_vector(konst_8200,4);\
bit_vector_clear(&konst_8200);\
konst_8200.val.byte_array[0] = 13;\
__declare_static_bit_vector(EQ_u4_u1_8201,1);\
__declare_static_bit_vector(NOT_u1_u1_8203,1);\
__declare_static_bit_vector(konst_8204,1);\
bit_vector_clear(&konst_8204);\
__declare_static_bit_vector(MUX_8205,1);\
__declare_static_bit_vector(konst_8207,4);\
bit_vector_clear(&konst_8207);\
konst_8207.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_8208,1);\
__declare_static_bit_vector(konst_8210,1);\
bit_vector_clear(&konst_8210);\
__declare_static_bit_vector(MUX_8211,1);\
__declare_static_bit_vector(OR_u1_u1_8212,1);\
__declare_static_bit_vector(OR_u1_u1_8213,1);\
__declare_static_bit_vector(konst_8215,4);\
bit_vector_clear(&konst_8215);\
konst_8215.val.byte_array[0] = 14;\
__declare_static_bit_vector(EQ_u4_u1_8216,1);\
__declare_static_bit_vector(NOT_u1_u1_8218,1);\
__declare_static_bit_vector(konst_8219,1);\
bit_vector_clear(&konst_8219);\
__declare_static_bit_vector(MUX_8220,1);\
__declare_static_bit_vector(konst_8222,4);\
bit_vector_clear(&konst_8222);\
konst_8222.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_8223,1);\
__declare_static_bit_vector(konst_8225,1);\
bit_vector_clear(&konst_8225);\
__declare_static_bit_vector(MUX_8226,1);\
__declare_static_bit_vector(OR_u1_u1_8227,1);\
__declare_static_bit_vector(konst_8229,4);\
bit_vector_clear(&konst_8229);\
konst_8229.val.byte_array[0] = 15;\
__declare_static_bit_vector(EQ_u4_u1_8230,1);\
__declare_static_bit_vector(NOT_u1_u1_8232,1);\
__declare_static_bit_vector(konst_8233,1);\
bit_vector_clear(&konst_8233);\
__declare_static_bit_vector(MUX_8234,1);\
__declare_static_bit_vector(konst_8236,4);\
bit_vector_clear(&konst_8236);\
konst_8236.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u4_u1_8237,1);\
__declare_static_bit_vector(konst_8239,1);\
bit_vector_clear(&konst_8239);\
__declare_static_bit_vector(MUX_8240,1);\
__declare_static_bit_vector(OR_u1_u1_8241,1);\
__declare_static_bit_vector(OR_u1_u1_8242,1);\
__declare_static_bit_vector(OR_u1_u1_8243,1);\
__declare_static_bit_vector(OR_u1_u1_8244,1);\
bit_vector_clear(&konst_8112);\
konst_8112.val.byte_array[0] = 8;\
bit_vector_equal(0, &(br_cond), &(konst_8112), &(EQ_u4_u1_8113));\
if (has_undefined_bit(&EQ_u4_u1_8113)) {fprintf(stderr, "Error: variable EQ_u4_u1_8113 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8113));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8113)){bit_vector_cast_to_bit_vector(0, &(MUX_8116), &(ONE_1));\
}else {bit_vector_clear(&konst_8115);\
bit_vector_cast_to_bit_vector(0, &(MUX_8116), &(konst_8115));\
}bit_vector_clear(&konst_8118);\
bit_vector_equal(0, &(br_cond), &(konst_8118), &(EQ_u4_u1_8119));\
if (has_undefined_bit(&EQ_u4_u1_8119)) {fprintf(stderr, "Error: variable EQ_u4_u1_8119 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8119));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8119)){bit_vector_cast_to_bit_vector(0, &(MUX_8122), &(ZERO_1));\
}else {bit_vector_clear(&konst_8121);\
bit_vector_cast_to_bit_vector(0, &(MUX_8122), &(konst_8121));\
}bit_vector_or(&(MUX_8116), &(MUX_8122), &(OR_u1_u1_8123));\
bit_vector_clear(&konst_8125);\
konst_8125.val.byte_array[0] = 9;\
bit_vector_equal(0, &(br_cond), &(konst_8125), &(EQ_u4_u1_8126));\
if (has_undefined_bit(&EQ_u4_u1_8126)) {fprintf(stderr, "Error: variable EQ_u4_u1_8126 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8126));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8126)){bit_vector_not( &(Z), &(NOT_u1_u1_8128));\
bit_vector_cast_to_bit_vector(0, &(MUX_8130), &(NOT_u1_u1_8128));\
}else {bit_vector_clear(&konst_8129);\
bit_vector_cast_to_bit_vector(0, &(MUX_8130), &(konst_8129));\
}bit_vector_clear(&konst_8132);\
konst_8132.val.byte_array[0] = 1;\
bit_vector_equal(0, &(br_cond), &(konst_8132), &(EQ_u4_u1_8133));\
if (has_undefined_bit(&EQ_u4_u1_8133)) {fprintf(stderr, "Error: variable EQ_u4_u1_8133 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8133));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8133)){bit_vector_cast_to_bit_vector(0, &(MUX_8136), &(Z));\
}else {bit_vector_clear(&konst_8135);\
bit_vector_cast_to_bit_vector(0, &(MUX_8136), &(konst_8135));\
}bit_vector_or(&(MUX_8130), &(MUX_8136), &(OR_u1_u1_8137));\
bit_vector_or(&(OR_u1_u1_8123), &(OR_u1_u1_8137), &(OR_u1_u1_8138));\
bit_vector_clear(&konst_8140);\
konst_8140.val.byte_array[0] = 10;\
bit_vector_equal(0, &(br_cond), &(konst_8140), &(EQ_u4_u1_8141));\
if (has_undefined_bit(&EQ_u4_u1_8141)) {fprintf(stderr, "Error: variable EQ_u4_u1_8141 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8141));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8141)){bit_vector_xor(&(N), &(V), &(XOR_u1_u1_8145));\
bit_vector_or(&(Z), &(XOR_u1_u1_8145), &(OR_u1_u1_8146));\
bit_vector_not( &(OR_u1_u1_8146), &(NOT_u1_u1_8147));\
bit_vector_cast_to_bit_vector(0, &(MUX_8149), &(NOT_u1_u1_8147));\
}else {bit_vector_clear(&konst_8148);\
bit_vector_cast_to_bit_vector(0, &(MUX_8149), &(konst_8148));\
}bit_vector_clear(&konst_8151);\
konst_8151.val.byte_array[0] = 2;\
bit_vector_equal(0, &(br_cond), &(konst_8151), &(EQ_u4_u1_8152));\
if (has_undefined_bit(&EQ_u4_u1_8152)) {fprintf(stderr, "Error: variable EQ_u4_u1_8152 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8152));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8152)){bit_vector_xor(&(N), &(V), &(XOR_u1_u1_8156));\
bit_vector_or(&(Z), &(XOR_u1_u1_8156), &(OR_u1_u1_8157));\
bit_vector_cast_to_bit_vector(0, &(MUX_8159), &(OR_u1_u1_8157));\
}else {bit_vector_clear(&konst_8158);\
bit_vector_cast_to_bit_vector(0, &(MUX_8159), &(konst_8158));\
}bit_vector_or(&(MUX_8149), &(MUX_8159), &(OR_u1_u1_8160));\
bit_vector_clear(&konst_8162);\
konst_8162.val.byte_array[0] = 11;\
bit_vector_equal(0, &(br_cond), &(konst_8162), &(EQ_u4_u1_8163));\
if (has_undefined_bit(&EQ_u4_u1_8163)) {fprintf(stderr, "Error: variable EQ_u4_u1_8163 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8163));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8163)){bit_vector_xor(&(N), &(V), &(XOR_u1_u1_8166));\
bit_vector_not( &(XOR_u1_u1_8166), &(NOT_u1_u1_8167));\
bit_vector_cast_to_bit_vector(0, &(MUX_8169), &(NOT_u1_u1_8167));\
}else {bit_vector_clear(&konst_8168);\
bit_vector_cast_to_bit_vector(0, &(MUX_8169), &(konst_8168));\
}bit_vector_clear(&konst_8171);\
konst_8171.val.byte_array[0] = 3;\
bit_vector_equal(0, &(br_cond), &(konst_8171), &(EQ_u4_u1_8172));\
if (has_undefined_bit(&EQ_u4_u1_8172)) {fprintf(stderr, "Error: variable EQ_u4_u1_8172 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8172));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8172)){bit_vector_xor(&(N), &(V), &(XOR_u1_u1_8175));\
bit_vector_cast_to_bit_vector(0, &(MUX_8177), &(XOR_u1_u1_8175));\
}else {bit_vector_clear(&konst_8176);\
bit_vector_cast_to_bit_vector(0, &(MUX_8177), &(konst_8176));\
}bit_vector_or(&(MUX_8169), &(MUX_8177), &(OR_u1_u1_8178));\
bit_vector_or(&(OR_u1_u1_8160), &(OR_u1_u1_8178), &(OR_u1_u1_8179));\
bit_vector_or(&(OR_u1_u1_8138), &(OR_u1_u1_8179), &(OR_u1_u1_8180));\
bit_vector_clear(&konst_8182);\
konst_8182.val.byte_array[0] = 12;\
bit_vector_equal(0, &(br_cond), &(konst_8182), &(EQ_u4_u1_8183));\
if (has_undefined_bit(&EQ_u4_u1_8183)) {fprintf(stderr, "Error: variable EQ_u4_u1_8183 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8183));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8183)){bit_vector_or(&(C), &(Z), &(OR_u1_u1_8186));\
bit_vector_not( &(OR_u1_u1_8186), &(NOT_u1_u1_8187));\
bit_vector_cast_to_bit_vector(0, &(MUX_8189), &(NOT_u1_u1_8187));\
}else {bit_vector_clear(&konst_8188);\
bit_vector_cast_to_bit_vector(0, &(MUX_8189), &(konst_8188));\
}bit_vector_clear(&konst_8191);\
konst_8191.val.byte_array[0] = 4;\
bit_vector_equal(0, &(br_cond), &(konst_8191), &(EQ_u4_u1_8192));\
if (has_undefined_bit(&EQ_u4_u1_8192)) {fprintf(stderr, "Error: variable EQ_u4_u1_8192 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8192));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8192)){bit_vector_or(&(C), &(Z), &(OR_u1_u1_8195));\
bit_vector_cast_to_bit_vector(0, &(MUX_8197), &(OR_u1_u1_8195));\
}else {bit_vector_clear(&konst_8196);\
bit_vector_cast_to_bit_vector(0, &(MUX_8197), &(konst_8196));\
}bit_vector_or(&(MUX_8189), &(MUX_8197), &(OR_u1_u1_8198));\
bit_vector_clear(&konst_8200);\
konst_8200.val.byte_array[0] = 13;\
bit_vector_equal(0, &(br_cond), &(konst_8200), &(EQ_u4_u1_8201));\
if (has_undefined_bit(&EQ_u4_u1_8201)) {fprintf(stderr, "Error: variable EQ_u4_u1_8201 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8201));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8201)){bit_vector_not( &(C), &(NOT_u1_u1_8203));\
bit_vector_cast_to_bit_vector(0, &(MUX_8205), &(NOT_u1_u1_8203));\
}else {bit_vector_clear(&konst_8204);\
bit_vector_cast_to_bit_vector(0, &(MUX_8205), &(konst_8204));\
}bit_vector_clear(&konst_8207);\
konst_8207.val.byte_array[0] = 5;\
bit_vector_equal(0, &(br_cond), &(konst_8207), &(EQ_u4_u1_8208));\
if (has_undefined_bit(&EQ_u4_u1_8208)) {fprintf(stderr, "Error: variable EQ_u4_u1_8208 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8208));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8208)){bit_vector_cast_to_bit_vector(0, &(MUX_8211), &(C));\
}else {bit_vector_clear(&konst_8210);\
bit_vector_cast_to_bit_vector(0, &(MUX_8211), &(konst_8210));\
}bit_vector_or(&(MUX_8205), &(MUX_8211), &(OR_u1_u1_8212));\
bit_vector_or(&(OR_u1_u1_8198), &(OR_u1_u1_8212), &(OR_u1_u1_8213));\
bit_vector_clear(&konst_8215);\
konst_8215.val.byte_array[0] = 14;\
bit_vector_equal(0, &(br_cond), &(konst_8215), &(EQ_u4_u1_8216));\
if (has_undefined_bit(&EQ_u4_u1_8216)) {fprintf(stderr, "Error: variable EQ_u4_u1_8216 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8216));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8216)){bit_vector_not( &(N), &(NOT_u1_u1_8218));\
bit_vector_cast_to_bit_vector(0, &(MUX_8220), &(NOT_u1_u1_8218));\
}else {bit_vector_clear(&konst_8219);\
bit_vector_cast_to_bit_vector(0, &(MUX_8220), &(konst_8219));\
}bit_vector_clear(&konst_8222);\
konst_8222.val.byte_array[0] = 6;\
bit_vector_equal(0, &(br_cond), &(konst_8222), &(EQ_u4_u1_8223));\
if (has_undefined_bit(&EQ_u4_u1_8223)) {fprintf(stderr, "Error: variable EQ_u4_u1_8223 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8223));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8223)){bit_vector_cast_to_bit_vector(0, &(MUX_8226), &(N));\
}else {bit_vector_clear(&konst_8225);\
bit_vector_cast_to_bit_vector(0, &(MUX_8226), &(konst_8225));\
}bit_vector_or(&(MUX_8220), &(MUX_8226), &(OR_u1_u1_8227));\
bit_vector_clear(&konst_8229);\
konst_8229.val.byte_array[0] = 15;\
bit_vector_equal(0, &(br_cond), &(konst_8229), &(EQ_u4_u1_8230));\
if (has_undefined_bit(&EQ_u4_u1_8230)) {fprintf(stderr, "Error: variable EQ_u4_u1_8230 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8230));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8230)){bit_vector_not( &(V), &(NOT_u1_u1_8232));\
bit_vector_cast_to_bit_vector(0, &(MUX_8234), &(NOT_u1_u1_8232));\
}else {bit_vector_clear(&konst_8233);\
bit_vector_cast_to_bit_vector(0, &(MUX_8234), &(konst_8233));\
}bit_vector_clear(&konst_8236);\
konst_8236.val.byte_array[0] = 7;\
bit_vector_equal(0, &(br_cond), &(konst_8236), &(EQ_u4_u1_8237));\
if (has_undefined_bit(&EQ_u4_u1_8237)) {fprintf(stderr, "Error: variable EQ_u4_u1_8237 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_8237));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_8237)){bit_vector_cast_to_bit_vector(0, &(MUX_8240), &(V));\
}else {bit_vector_clear(&konst_8239);\
bit_vector_cast_to_bit_vector(0, &(MUX_8240), &(konst_8239));\
}bit_vector_or(&(MUX_8234), &(MUX_8240), &(OR_u1_u1_8241));\
bit_vector_or(&(OR_u1_u1_8227), &(OR_u1_u1_8241), &(OR_u1_u1_8242));\
bit_vector_or(&(OR_u1_u1_8213), &(OR_u1_u1_8242), &(OR_u1_u1_8243));\
bit_vector_or(&(OR_u1_u1_8180), &(OR_u1_u1_8243), &(OR_u1_u1_8244));\
bit_vector_cast_to_bit_vector(0, &(br_taken), &(OR_u1_u1_8244));\
;

#define fpunit_exec_exec__exec_bicc_generic_assign_stmt_8250_c_macro_ __declare_static_bit_vector(konst_8248,4);\
bit_vector_clear(&konst_8248);\
konst_8248.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_8249,1);\
bit_vector_clear(&konst_8248);\
konst_8248.val.byte_array[0] = 8;\
bit_vector_equal(0, &(br_cond), &(konst_8248), &(EQ_u4_u1_8249));\
bit_vector_cast_to_bit_vector(0, &(branch_always), &(EQ_u4_u1_8249));\
;

#define fpunit_exec_exec__exec_bicc_generic_assign_stmt_8258_c_macro_ __declare_static_bit_vector(AND_u1_u1_8255,1);\
__declare_static_bit_vector(MUX_8257,1);\
if (has_undefined_bit(&br_taken)) {fprintf(stderr, "Error: variable br_taken has undefined value (%s) at test point.\n", to_string(&br_taken));assert(0);} \
if(bit_vector_to_uint64(0, &br_taken)){bit_vector_and(&(branch_always), &(br_annul_flag), &(AND_u1_u1_8255));\
bit_vector_cast_to_bit_vector(0, &(MUX_8257), &(AND_u1_u1_8255));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_8257), &(br_annul_flag));\
}bit_vector_cast_to_bit_vector(0, &(annul_next), &(MUX_8257));\
;

#define fpunit_exec_exec__exec_bicc_generic_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pbr_taken)), &(br_taken));\
bit_vector_cast_to_bit_vector(0, &((*__pannul_next)), &(annul_next));\
;

#define fpunit_exec_exec__exec_daemon_inner_inarg_prep_macro__
#define fpunit_exec_exec__exec_daemon_branch_block_stmt_16373_c_export_decl_macro_ __declare_static_bit_vector(decoded_info,79);\
__declare_static_bit_vector(get_rfile_resp,1);\
__declare_static_bit_vector(ops,174);\
__declare_static_bit_vector(get_rfile_resp_16652_delayed_1_0,1);\
__declare_static_bit_vector(get_rfile_resp_16658_delayed_1_0,1);\
__declare_static_bit_vector(ops_valid,1);\
__declare_static_bit_vector(decoded_info_d,79);\
__declare_static_bit_vector(thread_head,1);\
__declare_static_bit_vector(stream_head,1);\
__declare_static_bit_vector(thread_id,4);\
__declare_static_bit_vector(stream_id,2);\
__declare_static_bit_vector(slot_id,6);\
__declare_static_bit_vector(do_not_bypass,1);\
__declare_static_bit_vector(write_reg_id,5);\
__declare_static_bit_vector(fbcond,4);\
__declare_static_bit_vector(annul_flag,1);\
__declare_static_bit_vector(decode_trap,1);\
__declare_static_bit_vector(unimpl_instr,1);\
__declare_static_bit_vector(invalid_reg,1);\
__declare_static_bit_vector(seq_error,1);\
__declare_static_bit_vector(ieee_754_exception,1);\
__declare_static_bit_vector(cexc,5);\
__declare_static_bit_vector(fp_dti,1);\
__declare_static_bit_vector(issue_fmovs,1);\
__declare_static_bit_vector(issue_fnegs,1);\
__declare_static_bit_vector(issue_fabss,1);\
__declare_static_bit_vector(issue_fbfcc,1);\
__declare_static_bit_vector(issue_fadds,1);\
__declare_static_bit_vector(issue_fsubs,1);\
__declare_static_bit_vector(issue_fmuls,1);\
__declare_static_bit_vector(issue_fdivs,1);\
__declare_static_bit_vector(issue_fsqrts,1);\
__declare_static_bit_vector(issue_fcmps,1);\
__declare_static_bit_vector(issue_fcmpes,1);\
__declare_static_bit_vector(issue_fitos,1);\
__declare_static_bit_vector(issue_fstoi,1);\
__declare_static_bit_vector(issue_fstod,1);\
__declare_static_bit_vector(issue_faddd,1);\
__declare_static_bit_vector(issue_fsubd,1);\
__declare_static_bit_vector(issue_fsmuld,1);\
__declare_static_bit_vector(issue_fmuld,1);\
__declare_static_bit_vector(issue_fdivd,1);\
__declare_static_bit_vector(issue_fsqrtd,1);\
__declare_static_bit_vector(issue_fcmpd,1);\
__declare_static_bit_vector(issue_fcmped,1);\
__declare_static_bit_vector(issue_fitod,1);\
__declare_static_bit_vector(issue_fdtoi,1);\
__declare_static_bit_vector(issue_fdtos,1);\
__declare_static_bit_vector(issue_vfadd,1);\
__declare_static_bit_vector(issue_vfsub,1);\
__declare_static_bit_vector(issue_vfmul,1);\
__declare_static_bit_vector(vf_data_type,3);\
__declare_static_bit_vector(issue_vfhtoi16,1);\
__declare_static_bit_vector(issue_vfi16toh,1);\
__declare_static_bit_vector(issue_faddreduce16,1);\
__declare_static_bit_vector(issue_fstoh,1);\
__declare_static_bit_vector(issue_fhtos,1);\
__declare_static_bit_vector(is_store,1);\
__declare_static_bit_vector(ldfsr,1);\
__declare_static_bit_vector(skip_fp,1);\
__declare_static_bit_vector(r1_val_h,32);\
__declare_static_bit_vector(r1_val_l,32);\
__declare_static_bit_vector(r2_val_h,32);\
__declare_static_bit_vector(r2_val_l,32);\
__declare_static_bit_vector(fsr_val,32);\
static float f1_s;\
static float f2_s;\
static double f1_d;\
static double f2_d;\
__declare_static_bit_vector(st_val_h,32);\
__declare_static_bit_vector(st_val_l,32);\
__declare_static_bit_vector(uses_fu1,1);\
__declare_static_bit_vector(fu1_to_fu2,1);\
__declare_static_bit_vector(fu1_to_sc,1);\
__declare_static_bit_vector(fu1_trap_to_ls,1);\
__declare_static_bit_vector(fu1_to_iu2,1);\
__declare_static_bit_vector(fu1_to_cu2,1);\
__declare_static_bit_vector(f1_s_class,10);\
__declare_static_bit_vector(f2_s_class,10);\
__declare_static_bit_vector(f1_d_class,10);\
__declare_static_bit_vector(f2_d_class,10);\
__declare_static_bit_vector(simd_alu,1);\
__declare_static_bit_vector(simd_32_flag,1);\
__declare_static_bit_vector(issue_simd_32,1);\
__declare_static_bit_vector(simd_16_flag,1);\
__declare_static_bit_vector(uf1_s,32);\
__declare_static_bit_vector(uf1_d,64);\
__declare_static_bit_vector(uf2_d,64);\
__declare_static_bit_vector(vfhtoi16_result,64);\
__declare_static_bit_vector(vfi16toh_result,64);\
__declare_static_bit_vector(issue_vfconv,1);\
__declare_static_bit_vector(issue_vfhtoi16_16871_delayed_2_0,1);\
__declare_static_bit_vector(vfconv_result_d,64);\
__declare_static_bit_vector(fhtos_result,32);\
__declare_static_bit_vector(fstoh_result,16);\
__declare_static_bit_vector(issue_fhconv,1);\
__declare_static_bit_vector(fhconv_result_s,32);\
__declare_static_bit_vector(negate_second_operand,1);\
__declare_static_bit_vector(movs_result,32);\
__declare_static_bit_vector(negs_result,32);\
static float fnegs_result;\
__declare_static_bit_vector(abs_result,32);\
__declare_static_bit_vector(negd_result,64);\
static double fnegd_result;\
__declare_static_bit_vector(triv_result_s,32);\
__declare_static_bit_vector(triv_flag_s,1);\
__declare_static_bit_vector(use_fadders,1);\
static float adder_op2_s;\
__declare_static_bit_vector(uadder_op2_s,32);\
static double f2_s_d;\
static double fstod_result;\
__declare_static_bit_vector(use_fadderd,1);\
static double adder_op2_d;\
__declare_static_bit_vector(uadder_op2_d,64);\
__declare_static_bit_vector(use_dp_fadder,1);\
__declare_static_bit_vector(neg_f2_s_class,10);\
__declare_static_bit_vector(neg_f2_d_class,10);\
__declare_static_bit_vector(adder_op2_s_class,10);\
__declare_static_bit_vector(adder_op2_d_class,10);\
__declare_static_bit_vector(single_precision_inputs_to_adder,1);\
__declare_static_bit_vector(double_precision_inputs_to_adder,1);\
__declare_static_bit_vector(denormalize_flag_add,1);\
__declare_static_bit_vector(extn_result_add,81);\
__declare_static_bit_vector(use_faddervs,1);\
__declare_static_bit_vector(use_fmulvs,1);\
__declare_static_bit_vector(vs_op_1,32);\
static float vs_fop_1;\
__declare_static_bit_vector(vs_fop_1_class,10);\
__declare_static_bit_vector(vs_op_2,32);\
static float vs_fop_2;\
__declare_static_bit_vector(vs_fop_2_class,10);\
__declare_static_bit_vector(neg_vs_fop_2_class,10);\
__declare_static_bit_vector(vs_addsub_fop_2_class,10);\
__declare_static_bit_vector(vs_addsub_needs_norm,1);\
__declare_static_bit_vector(vs_addsub_extension_result,81);\
__declare_static_bit_vector(vs_mul_needs_norm,1);\
__declare_static_bit_vector(vs_mul_extension_result,81);\
__declare_static_bit_vector(use_faddervs_17114_delayed_1_0,1);\
__declare_static_bit_vector(condition_denormalize_flag_vs_addsub,1);\
__declare_static_bit_vector(use_fmulvs_17119_delayed_2_0,1);\
__declare_static_bit_vector(condition_denormalize_flag_vs_mul,1);\
__declare_static_bit_vector(condition_denormalize_flag_vs_addsub_17124_delayed_1_0,1);\
__declare_static_bit_vector(denormalize_vs,1);\
__declare_static_bit_vector(use_faddervs_17129_delayed_1_0,1);\
__declare_static_bit_vector(MUX_17132_17132_delayed_1_0,81);\
__declare_static_bit_vector(use_fmulvs_17133_delayed_2_0,1);\
__declare_static_bit_vector(extn_result_to_vs_round_and_normalize,81);\
__declare_static_bit_vector(vs_round_result,32);\
__declare_static_bit_vector(denorm_result_vs_slow,32);\
__declare_static_bit_vector(simd32_result_fast_h,32);\
__declare_static_bit_vector(simd32_result_slow_h,32);\
__declare_static_bit_vector(use_dp_fmul,1);\
__declare_static_bit_vector(double_mul,1);\
__declare_static_bit_vector(mul_uf1_s,32);\
__declare_static_bit_vector(mul_uf2_s,32);\
__declare_static_bit_vector(mul_uf1_d,64);\
__declare_static_bit_vector(mul_uf2_d,64);\
__declare_static_bit_vector(single_precision_inputs_to_mul,1);\
__declare_static_bit_vector(denormalize_flag_mul,1);\
__declare_static_bit_vector(extn_result_mul,81);\
__declare_static_bit_vector(fitod_in,32);\
static double fitod_result;\
__declare_static_bit_vector(convert_to_single,1);\
static double to_single_in;\
__declare_static_bit_vector(denorm_double_to_single,1);\
__declare_static_bit_vector(extn_result_double_to_single,81);\
__declare_static_bit_vector(use_dp_fadder_17236_delayed_2_0,1);\
__declare_static_bit_vector(condition_denormalize_flag_add,1);\
__declare_static_bit_vector(use_dp_fmul_17241_delayed_2_0,1);\
__declare_static_bit_vector(condition_denormalize_flag_mul,1);\
__declare_static_bit_vector(convert_to_single_17246_delayed_2_0,1);\
__declare_static_bit_vector(condition_denormalize_flag_double_to_single,1);\
__declare_static_bit_vector(denormalize_flag,1);\
__declare_static_bit_vector(use_dp_fadder_17258_delayed_2_0,1);\
__declare_static_bit_vector(use_dp_fmul_17262_delayed_2_0,1);\
__declare_static_bit_vector(convert_to_single_17267_delayed_2_0,1);\
__declare_static_bit_vector(extn_result_to_round_and_normalize,81);\
__declare_static_bit_vector(double_precision_round_normalize,1);\
__declare_static_bit_vector(round_d_result,64);\
__declare_static_bit_vector(round_s_result,32);\
__declare_static_bit_vector(double_precision_round_normalize_17286_delayed_2_0,1);\
__declare_static_bit_vector(denormalize_flag_64,1);\
__declare_static_bit_vector(denorm_result_d_slow,64);\
__declare_static_bit_vector(NOT_u1_u1_17296_17296_delayed_2_0,1);\
__declare_static_bit_vector(denormalize_flag_32,1);\
__declare_static_bit_vector(denorm_result_s_slow,32);\
__declare_static_bit_vector(denormalize_flag_32_17304_delayed_1_0,1);\
__declare_static_bit_vector(round_s_result_17306_delayed_1_0,32);\
__declare_static_bit_vector(addsubs_result,32);\
__declare_static_bit_vector(denormalize_flag_64_17310_delayed_1_0,1);\
__declare_static_bit_vector(round_d_result_17312_delayed_1_0,64);\
__declare_static_bit_vector(addsubd_result,64);\
__declare_static_bit_vector(denormalize_flag_32_17316_delayed_1_0,1);\
__declare_static_bit_vector(round_s_result_17318_delayed_1_0,32);\
__declare_static_bit_vector(muls_result,32);\
__declare_static_bit_vector(denormalize_flag_64_17322_delayed_1_0,1);\
__declare_static_bit_vector(round_d_result_17324_delayed_1_0,64);\
__declare_static_bit_vector(muld_result,64);\
static double fsmuld_result;\
__declare_static_bit_vector(condition_denormalize_flag_double_to_single_17332_delayed_1_0,1);\
__declare_static_bit_vector(round_s_result_17334_delayed_1_0,32);\
__declare_static_bit_vector(to_single_out,32);\
__declare_static_bit_vector(use_fadders_17338_delayed_3_0,1);\
__declare_static_bit_vector(add_sub_mul_s_result,32);\
__declare_static_bit_vector(use_fadderd_17344_delayed_3_0,1);\
__declare_static_bit_vector(add_sub_mul_d_result,64);\
__declare_static_bit_vector(simd32_result_fast_l,32);\
__declare_static_bit_vector(simd32_result_slow_l,32);\
__declare_static_bit_vector(issue_simd_16,1);\
__declare_static_bit_vector(simd_16_result_64,64);\
static float fdivs_result;\
__declare_static_bit_vector(divs_result,32);\
static float fsqrts_result;\
__declare_static_bit_vector(sqrts_result,32);\
static float cmp_in_1_s;\
static float cmp_in_2_s;\
__declare_static_bit_vector(cmps_flags,2);\
__declare_static_bit_vector(cmpes_flags,2);\
static double dtoi_in;\
__declare_static_bit_vector(issue_toi,1);\
__declare_static_bit_vector(toi_result_temp,32);\
__declare_static_bit_vector(dtoi_result,32);\
__declare_static_bit_vector(stoi_result,32);\
static double fdivd_result;\
static double fsqrtd_result;\
static double cmp_in_1_d;\
static double cmp_in_2_d;\
__declare_static_bit_vector(cmpd_flags,2);\
__declare_static_bit_vector(cmped_flags,2);\
__declare_static_bit_vector(itos_result,32);\
__declare_static_bit_vector(stod_result,64);\
__declare_static_bit_vector(divd_result,64);\
__declare_static_bit_vector(sqrtd_result,64);\
__declare_static_bit_vector(itod_result,64);\
__declare_static_bit_vector(dtos_result_slow,32);\
__declare_static_bit_vector(dtos_result_fast,32);\
__declare_static_bit_vector(fp_has_trapped,1);\
__declare_static_bit_vector(fp_traps,4);\
__declare_static_bit_vector(OR_u1_u1_17536_17536_delayed_3_0,1);\
__declare_static_bit_vector(issue_fdivd_17545_delayed_3_0,1);\
__declare_static_bit_vector(issue_simd_32_17549_delayed_3_0,1);\
__declare_static_bit_vector(issue_fsqrtd_17540_delayed_3_0,1);\
__declare_static_bit_vector(i_result_d,64);\
__declare_static_bit_vector(MUX_17584_17584_delayed_1_0,64);\
__declare_static_bit_vector(simd_16_flag_17585_delayed_1_0,1);\
__declare_static_bit_vector(OR_u64_u64_17589_17589_delayed_1_0,64);\
__declare_static_bit_vector(MUX_17579_17579_delayed_2_0,64);\
__declare_static_bit_vector(OR_u1_u1_17565_17565_delayed_2_0,1);\
__declare_static_bit_vector(issue_simd_32_17569_delayed_2_0,1);\
__declare_static_bit_vector(issue_vfconv_17590_delayed_2_0,1);\
__declare_static_bit_vector(i_result_d_fast,64);\
__declare_static_bit_vector(OR_u1_u1_17602_17602_delayed_3_0,1);\
__declare_static_bit_vector(issue_fdivs_17606_delayed_3_0,1);\
__declare_static_bit_vector(issue_fsqrts_17611_delayed_3_0,1);\
__declare_static_bit_vector(issue_fdtos_17615_delayed_3_0,1);\
__declare_static_bit_vector(i_result_s,32);\
__declare_static_bit_vector(MUX_17634_17634_delayed_2_0,32);\
__declare_static_bit_vector(OR_u1_u1_17627_17627_delayed_2_0,1);\
__declare_static_bit_vector(MUX_17663_17663_delayed_1_0,32);\
__declare_static_bit_vector(issue_faddreduce16_17655_delayed_1_0,1);\
__declare_static_bit_vector(OR_u32_u32_17664_17664_delayed_1_0,32);\
__declare_static_bit_vector(issue_fstoi_17636_delayed_2_0,1);\
__declare_static_bit_vector(issue_fdtoi_17640_delayed_2_0,1);\
__declare_static_bit_vector(issue_fdtos_17646_delayed_2_0,1);\
__declare_static_bit_vector(issue_fitos_17650_delayed_2_0,1);\
__declare_static_bit_vector(i_result_s_fast,32);\
__declare_static_bit_vector(update_fcc,1);\
__declare_static_bit_vector(updated_fcc,2);\
__declare_static_bit_vector(i_result_d_h,32);\
__declare_static_bit_vector(i_result_d_l,32);\
__declare_static_bit_vector(i_result_d_h_fast,32);\
__declare_static_bit_vector(i_result_d_l_fast,32);\
__declare_static_bit_vector(is_double_result,1);\
__declare_static_bit_vector(is_single_result,1);\
__declare_static_bit_vector(is_double_result_17765_delayed_3_0,1);\
__declare_static_bit_vector(wb_h,32);\
__declare_static_bit_vector(is_double_result_17771_delayed_3_0,1);\
__declare_static_bit_vector(is_single_result_17775_delayed_3_0,1);\
__declare_static_bit_vector(wb_l,32);\
__declare_static_bit_vector(is_double_result_17782_delayed_2_0,1);\
__declare_static_bit_vector(wb_h_fast,32);\
__declare_static_bit_vector(is_double_result_17788_delayed_2_0,1);\
__declare_static_bit_vector(is_single_result_17792_delayed_2_0,1);\
__declare_static_bit_vector(wb_l_fast,32);\
__declare_static_bit_vector(OR_u1_u1_17805_17805_delayed_2_0,1);\
__declare_static_bit_vector(use_dp_fmul_17806_delayed_2_0,1);\
__declare_static_bit_vector(use_dp_fadder_17810_delayed_2_0,1);\
__declare_static_bit_vector(use_faddervs_17814_delayed_1_0,1);\
__declare_static_bit_vector(AND_u1_u1_17816_17816_delayed_1_0,1);\
__declare_static_bit_vector(use_fmulvs_17817_delayed_2_0,1);\
__declare_static_bit_vector(issue_fdtos_17821_delayed_2_0,1);\
__declare_static_bit_vector(fast_is_not_valid,1);\
__declare_static_bit_vector(NOT_u1_u1_17834_17834_delayed_2_0,1);\
__declare_static_bit_vector(NOT_u1_u1_17829_17829_delayed_2_0,1);\
__declare_static_bit_vector(AND_u1_u1_17840_17840_delayed_2_0,1);\
__declare_static_bit_vector(send_bypass,1);\
__declare_static_bit_vector(write_reg_flag,1);\
__declare_static_bit_vector(bypass_ftt,3);\
__declare_static_bit_vector(thread_id_17920_delayed_2_0,4);\
__declare_static_bit_vector(CONCAT_u2_u8_17924_17924_delayed_2_0,8);\
__declare_static_bit_vector(CONCAT_u3_u6_17930_17930_delayed_2_0,6);\
__declare_static_bit_vector(CONCAT_u6_u7_17936_17936_delayed_2_0,7);\
__declare_static_bit_vector(write_reg_id_17937_delayed_2_0,5);\
__declare_static_bit_vector(bypass_to_reg_file,95);\
__declare_static_bit_vector(thread_id_17951_delayed_2_0,4);\
__declare_static_bit_vector(CONCAT_u2_u8_17955_17955_delayed_2_0,8);\
__declare_static_bit_vector(CONCAT_u2_u7_17967_17967_delayed_2_0,7);\
__declare_static_bit_vector(CONCAT_u8_u11_17975_17975_delayed_2_0,11);\
__declare_static_bit_vector(skip_fp_17976_delayed_2_0,1);\
__declare_static_bit_vector(to_wb_fast,96);\
__declare_static_bit_vector(fu1_to_fu2_17984_delayed_2_0,1);\
__declare_static_bit_vector(thread_id_18003_delayed_2_0,4);\
__declare_static_bit_vector(CONCAT_u2_u8_18007_18007_delayed_2_0,8);\
__declare_static_bit_vector(CONCAT_u2_u7_18019_18019_delayed_2_0,7);\
__declare_static_bit_vector(CONCAT_u13_u20_18020_18020_delayed_1_0,20);\
__declare_static_bit_vector(CONCAT_u8_u11_18027_18027_delayed_3_0,11);\
__declare_static_bit_vector(skip_fp_18028_delayed_3_0,1);\
__declare_static_bit_vector(to_wb_slow,96);\
__declare_static_bit_vector(fu1_to_fu2_18037_delayed_2_0,1);\
__declare_static_bit_vector(send_to_slow,1);\
__declare_static_bit_vector(send_to_slow_18041_delayed_1_0,1);\
__declare_static_bit_vector(trap_or_error,1);\
__declare_static_bit_vector(to_ls,13);\
__declare_static_bit_vector(to_iu,13);\


#define fpunit_exec_exec__exec_daemon_merge_stmt_16375_c_preamble_macro_ uint8_t merge_stmt_16375_entry_flag;\
merge_stmt_16375_entry_flag = do_while_entry_flag;\
goto merge_stmt_16375_run;\
merge_stmt_16375_run: ;\
;

#define fpunit_exec_exec__exec_daemon_merge_stmt_16375_c_postamble_macro_ merge_stmt_16375_entry_flag = 0;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16378_c_macro_ __declare_static_bit_vector(RPIPE_teu_idispatch_to_fpunit_exec_16377,79);\
read_bit_vector_from_pipe("teu_idispatch_to_fpunit_exec",&(RPIPE_teu_idispatch_to_fpunit_exec_16377));\
bit_vector_cast_to_bit_vector(0, &(decoded_info), &(RPIPE_teu_idispatch_to_fpunit_exec_16377));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16383_c_macro_ __declare_static_bit_vector(konst_16381,79);\
bit_vector_clear(&konst_16381);\
konst_16381.val.byte_array[0] = 6;\
__declare_static_bit_vector(BITSEL_u79_u1_16382,1);\
bit_vector_clear(&konst_16381);\
konst_16381.val.byte_array[0] = 6;\
bit_vector_bitsel( &(decoded_info), &(konst_16381), &(BITSEL_u79_u1_16382));\
bit_vector_cast_to_bit_vector(0, &(get_rfile_resp), &(BITSEL_u79_u1_16382));\
;

#define fpunit_exec_exec__exec_daemon_stmt_16386_c_macro_ if (bit_vector_to_uint64(0, &get_rfile_resp)) {\
uint32_t fpunit_exec_exec__exec_daemon_stmt_16386_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__exec_daemon_stmt_16386_c_macro___print_counter,"get_rfile_resp");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16386_c_macro___print_counter,"decoded_info");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(decoded_info)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__exec_daemon_assign_stmt_16390_c_macro_ if (has_undefined_bit(&get_rfile_resp)) {fprintf(stderr, "Error: variable get_rfile_resp has undefined value (%s) at test point.\n", to_string(&get_rfile_resp));assert(0);} \
__declare_static_bit_vector(RPIPE_fpunit_register_file_read_access_response_16389,174);\
if (bit_vector_to_uint64(0, &get_rfile_resp)) {\
read_bit_vector_from_pipe("fpunit_register_file_read_access_response",&(RPIPE_fpunit_register_file_read_access_response_16389));\
bit_vector_cast_to_bit_vector(0, &(ops), &(RPIPE_fpunit_register_file_read_access_response_16389));\
}
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16393_c_macro_ bit_vector_cast_to_bit_vector(0, &(get_rfile_resp_16652_delayed_1_0), &(get_rfile_resp));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16396_c_macro_ bit_vector_cast_to_bit_vector(0, &(get_rfile_resp_16658_delayed_1_0), &(get_rfile_resp));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16403_c_macro_ __declare_static_bit_vector(konst_16400,174);\
bit_vector_clear(&konst_16400);\
konst_16400.val.byte_array[0] = 172;\
__declare_static_bit_vector(BITSEL_u174_u1_16401,1);\
__declare_static_bit_vector(AND_u1_u1_16402,1);\
bit_vector_clear(&konst_16400);\
konst_16400.val.byte_array[0] = 172;\
bit_vector_bitsel( &(ops), &(konst_16400), &(BITSEL_u174_u1_16401));\
bit_vector_and(&(get_rfile_resp_16658_delayed_1_0), &(BITSEL_u174_u1_16401), &(AND_u1_u1_16402));\
bit_vector_cast_to_bit_vector(0, &(ops_valid), &(AND_u1_u1_16402));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16407_c_macro_ if (has_undefined_bit(&ops_valid)) {fprintf(stderr, "Error: variable ops_valid has undefined value (%s) at test point.\n", to_string(&ops_valid));assert(0);} \
if (bit_vector_to_uint64(0, &ops_valid)) {\
write_bit_vector_to_pipe("noblock_fpunit_exec_to_regfile_credit_return",&(ONE_1));\
}
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16410_c_macro_ bit_vector_cast_to_bit_vector(0, &(decoded_info_d), &(decoded_info));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16487_c_macro_ _fpunit_exec_exec_pre_op_preparation_( &(decoded_info_d),  &(ops), &(thread_head), &(stream_head), &(thread_id), &(stream_id), &(slot_id), &(do_not_bypass), &(write_reg_id), &(fbcond), &(annul_flag), &(decode_trap), &(unimpl_instr), &(invalid_reg), &(seq_error), &(ieee_754_exception), &(cexc), &(fp_dti), &(issue_fmovs), &(issue_fnegs), &(issue_fabss), &(issue_fbfcc), &(issue_fadds), &(issue_fsubs), &(issue_fmuls), &(issue_fdivs), &(issue_fsqrts), &(issue_fcmps), &(issue_fcmpes), &(issue_fitos), &(issue_fstoi), &(issue_fstod), &(issue_faddd), &(issue_fsubd), &(issue_fsmuld), &(issue_fmuld), &(issue_fdivd), &(issue_fsqrtd), &(issue_fcmpd), &(issue_fcmped), &(issue_fitod), &(issue_fdtoi), &(issue_fdtos), &(issue_vfadd), &(issue_vfsub), &(issue_vfmul), &(vf_data_type), &(issue_vfhtoi16), &(issue_vfi16toh), &(issue_faddreduce16), &(issue_fstoh), &(issue_fhtos), &(is_store), &(ldfsr), &(skip_fp), &(r1_val_h), &(r1_val_l), &(r2_val_h), &(r2_val_l), &(fsr_val), &(f1_s), &(f2_s), &(f1_d), &(f2_d), &(st_val_h), &(st_val_l), &(uses_fu1), &(fu1_to_fu2), &(fu1_to_sc), &(fu1_trap_to_ls), &(fu1_to_iu2), &(fu1_to_cu2), &(f1_s_class), &(f2_s_class), &(f1_d_class), &(f2_d_class));\
;

#define fpunit_exec_exec__exec_daemon_stmt_16556_c_macro_ uint32_t fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"pre_op_preparation");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"thread_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(thread_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"stream_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(stream_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"slot_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(slot_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"write_reg_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(write_reg_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"fbcond");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fbcond)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"annul_flag");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(annul_flag)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"decode_trap");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(decode_trap)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"unimpl_instr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(unimpl_instr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"invalid_reg");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(invalid_reg)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"seq_error");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(seq_error)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"ieee_754_exception");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ieee_754_exception)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"cexc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(cexc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"fp_dti");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fp_dti)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fmovs");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fmovs)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fnegs");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fnegs)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fabss");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fabss)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fbfcc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fbfcc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fadds");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fadds)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fsubs");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fsubs)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fmuls");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fmuls)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fdivs");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fdivs)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fsqrts");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fsqrts)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fcmps");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fcmps)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fcmpes");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fcmpes)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fitos");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fitos)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fstoi");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fstoi)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fstod");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fstod)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_faddd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_faddd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fsubd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fsubd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fsmuld");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fsmuld)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fmuld");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fmuld)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fdivd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fdivd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fsqrtd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fsqrtd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fcmpd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fcmpd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fcmped");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fcmped)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fitod");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fitod)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fdtoi");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fdtoi)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fdtos");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fdtos)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_vfadd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_vfadd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_vfsub");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_vfsub)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_vfmul");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_vfmul)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"vf_data_type");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(vf_data_type)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_vfhtoi16");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_vfhtoi16)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_vfi16toh");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_vfi16toh)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_faddreduce16");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_faddreduce16)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fstoh");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fstoh)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"issue_fhtos");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(issue_fhtos)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"is_store");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(is_store)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"ldfsr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ldfsr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"skip_fp");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(skip_fp)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"r1_val_h");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(r1_val_h)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"r1_val_l");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(r1_val_l)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"r2_val_h");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(r2_val_h)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"r2_val_l");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(r2_val_l)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"fsr_val");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fsr_val)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"f1_s");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",f1_s);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"f2_s");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",f2_s);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"f1_d");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",f1_d);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"f2_d");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",f2_d);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"st_val_h");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(st_val_h)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"st_val_l");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(st_val_l)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"uses_fu1");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(uses_fu1)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"fu1_to_fu2");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fu1_to_fu2)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"fu1_to_sc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fu1_to_sc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"f1_s_class");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_s_class)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"f2_s_class");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_s_class)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"f1_d_class");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_d_class)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_16556_c_macro___print_counter,"f2_d_class");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_d_class)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16563_c_macro_ __declare_static_bit_vector(OR_u1_u1_16560,1);\
__declare_static_bit_vector(OR_u1_u1_16562,1);\
bit_vector_or(&(issue_vfadd), &(issue_vfsub), &(OR_u1_u1_16560));\
bit_vector_or(&(OR_u1_u1_16560), &(issue_vfmul), &(OR_u1_u1_16562));\
bit_vector_cast_to_bit_vector(0, &(simd_alu), &(OR_u1_u1_16562));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16570_c_macro_ __declare_static_bit_vector(konst_16567,3);\
bit_vector_clear(&konst_16567);\
konst_16567.val.byte_array[0] = 4;\
__declare_static_bit_vector(EQ_u3_u1_16568,1);\
__declare_static_bit_vector(AND_u1_u1_16569,1);\
bit_vector_clear(&konst_16567);\
konst_16567.val.byte_array[0] = 4;\
bit_vector_equal(0, &(vf_data_type), &(konst_16567), &(EQ_u3_u1_16568));\
bit_vector_and(&(simd_alu), &(EQ_u3_u1_16568), &(AND_u1_u1_16569));\
bit_vector_cast_to_bit_vector(0, &(simd_32_flag), &(AND_u1_u1_16569));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16573_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_simd_32), &(simd_32_flag));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16580_c_macro_ __declare_static_bit_vector(konst_16577,3);\
bit_vector_clear(&konst_16577);\
konst_16577.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u3_u1_16578,1);\
__declare_static_bit_vector(AND_u1_u1_16579,1);\
bit_vector_clear(&konst_16577);\
konst_16577.val.byte_array[0] = 2;\
bit_vector_equal(0, &(vf_data_type), &(konst_16577), &(EQ_u3_u1_16578));\
bit_vector_and(&(simd_alu), &(EQ_u3_u1_16578), &(AND_u1_u1_16579));\
bit_vector_cast_to_bit_vector(0, &(simd_16_flag), &(AND_u1_u1_16579));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16584_c_macro_ __declare_static_bit_vector(type_cast_16583,32);\
float_bitcast_to_bit_vector( &(type_cast_16583), &(f1_s));\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &(type_cast_16583));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16588_c_macro_ __declare_static_bit_vector(type_cast_16587,64);\
double_bitcast_to_bit_vector( &(type_cast_16587), &(f1_d));\
bit_vector_cast_to_bit_vector(0, &(uf1_d), &(type_cast_16587));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16592_c_macro_ __declare_static_bit_vector(type_cast_16591,64);\
double_bitcast_to_bit_vector( &(type_cast_16591), &(f2_d));\
bit_vector_cast_to_bit_vector(0, &(uf2_d), &(type_cast_16591));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16596_c_macro_ if (has_undefined_bit(&issue_vfhtoi16)) {fprintf(stderr, "Error: variable issue_vfhtoi16 has undefined value (%s) at test point.\n", to_string(&issue_vfhtoi16));assert(0);} \
if (bit_vector_to_uint64(0, &issue_vfhtoi16)) {\
_fpunit_exec_exec_exec_vfhtoi16_( &(uf1_d), &(vfhtoi16_result));\
}\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16600_c_macro_ if (has_undefined_bit(&issue_vfi16toh)) {fprintf(stderr, "Error: variable issue_vfi16toh has undefined value (%s) at test point.\n", to_string(&issue_vfi16toh));assert(0);} \
if (bit_vector_to_uint64(0, &issue_vfi16toh)) {\
_fpunit_exec_exec_exec_vfi16toh_( &(uf1_d), &(vfi16toh_result));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16605_c_macro_ __declare_static_bit_vector(OR_u1_u1_16604,1);\
bit_vector_or(&(issue_vfhtoi16), &(issue_vfi16toh), &(OR_u1_u1_16604));\
bit_vector_cast_to_bit_vector(0, &(issue_vfconv), &(OR_u1_u1_16604));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16608_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_vfhtoi16_16871_delayed_2_0), &(issue_vfhtoi16));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16614_c_macro_ __declare_static_bit_vector(MUX_16613,64);\
if (has_undefined_bit(&issue_vfhtoi16_16871_delayed_2_0)) {fprintf(stderr, "Error: variable issue_vfhtoi16_16871_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&issue_vfhtoi16_16871_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_vfhtoi16_16871_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_16613), &(vfhtoi16_result));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_16613), &(vfi16toh_result));\
}bit_vector_cast_to_bit_vector(0, &(vfconv_result_d), &(MUX_16613));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16618_c_macro_ __declare_static_bit_vector(slice_16616,16);\
bit_vector_slice(&(uf1_s), &(slice_16616), 0);\
_fpunit_exec_exec_exec_fhtos_( &(slice_16616), &(fhtos_result));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16621_c_macro_ _fpunit_exec_exec_exec_fstoh_( &(uf1_s), &(fstoh_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16626_c_macro_ __declare_static_bit_vector(OR_u1_u1_16625,1);\
bit_vector_or(&(issue_fstoh), &(issue_fhtos), &(OR_u1_u1_16625));\
bit_vector_cast_to_bit_vector(0, &(issue_fhconv), &(OR_u1_u1_16625));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16634_c_macro_ __declare_static_bit_vector(CONCAT_u16_u32_16631,32);\
__declare_static_bit_vector(MUX_16633,32);\
if (has_undefined_bit(&issue_fstoh)) {fprintf(stderr, "Error: variable issue_fstoh has undefined value (%s) at test point.\n", to_string(&issue_fstoh));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fstoh)){bit_vector_concatenate( &(ZERO_16), &(fstoh_result), &(CONCAT_u16_u32_16631));\
bit_vector_cast_to_bit_vector(0, &(MUX_16633), &(CONCAT_u16_u32_16631));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_16633), &(fhtos_result));\
}bit_vector_cast_to_bit_vector(0, &(fhconv_result_s), &(MUX_16633));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16641_c_macro_ __declare_static_bit_vector(OR_u1_u1_16638,1);\
__declare_static_bit_vector(OR_u1_u1_16640,1);\
bit_vector_or(&(issue_fsubs), &(issue_fsubd), &(OR_u1_u1_16638));\
bit_vector_or(&(OR_u1_u1_16638), &(issue_vfsub), &(OR_u1_u1_16640));\
bit_vector_cast_to_bit_vector(0, &(negate_second_operand), &(OR_u1_u1_16640));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16644_c_macro_ bit_vector_cast_to_bit_vector(0, &(movs_result), &(r2_val_l));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16651_c_macro_ __declare_static_bit_vector(konst_16647,32);\
bit_vector_clear(&konst_16647);\
konst_16647.val.byte_array[0] = 31;\
__declare_static_bit_vector(SHL_u32_u32_16648,32);\
bit_vector_clear(&SHL_u32_u32_16648);\
SHL_u32_u32_16648.val.byte_array[3] = 128;\
__declare_static_bit_vector(XOR_u32_u32_16650,32);\
bit_vector_clear(&konst_16647);\
konst_16647.val.byte_array[0] = 31;\
bit_vector_shift_left(&(ONE_32), &(konst_16647), &(SHL_u32_u32_16648));\
bit_vector_xor(&(SHL_u32_u32_16648), &(r2_val_l), &(XOR_u32_u32_16650));\
bit_vector_cast_to_bit_vector(0, &(negs_result), &(XOR_u32_u32_16650));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16655_c_macro_ static float type_cast_16654;\
bit_vector_bitcast_to_float( &(type_cast_16654),  &(negs_result));\
fnegs_result = type_cast_16654;\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16663_c_macro_ __declare_static_bit_vector(konst_16658,32);\
bit_vector_clear(&konst_16658);\
konst_16658.val.byte_array[0] = 31;\
__declare_static_bit_vector(SHL_u32_u32_16659,32);\
bit_vector_clear(&SHL_u32_u32_16659);\
SHL_u32_u32_16659.val.byte_array[3] = 128;\
__declare_static_bit_vector(NOT_u32_u32_16660,32);\
bit_vector_clear(&NOT_u32_u32_16660);\
NOT_u32_u32_16660.val.byte_array[0] = 255;\
NOT_u32_u32_16660.val.byte_array[1] = 255;\
NOT_u32_u32_16660.val.byte_array[2] = 255;\
NOT_u32_u32_16660.val.byte_array[3] = 127;\
__declare_static_bit_vector(AND_u32_u32_16662,32);\
bit_vector_clear(&konst_16658);\
konst_16658.val.byte_array[0] = 31;\
bit_vector_shift_left(&(ONE_32), &(konst_16658), &(SHL_u32_u32_16659));\
bit_vector_not( &(SHL_u32_u32_16659), &(NOT_u32_u32_16660));\
bit_vector_and(&(NOT_u32_u32_16660), &(r2_val_l), &(AND_u32_u32_16662));\
bit_vector_cast_to_bit_vector(0, &(abs_result), &(AND_u32_u32_16662));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16672_c_macro_ __declare_static_bit_vector(konst_16666,64);\
bit_vector_clear(&konst_16666);\
konst_16666.val.byte_array[0] = 63;\
__declare_static_bit_vector(SHL_u64_u64_16667,64);\
bit_vector_clear(&SHL_u64_u64_16667);\
SHL_u64_u64_16667.val.byte_array[7] = 128;\
__declare_static_bit_vector(CONCAT_u32_u64_16670,64);\
__declare_static_bit_vector(XOR_u64_u64_16671,64);\
bit_vector_clear(&konst_16666);\
konst_16666.val.byte_array[0] = 63;\
bit_vector_shift_left(&(ONE_64), &(konst_16666), &(SHL_u64_u64_16667));\
bit_vector_concatenate( &(r2_val_h), &(r2_val_l), &(CONCAT_u32_u64_16670));\
bit_vector_xor(&(SHL_u64_u64_16667), &(CONCAT_u32_u64_16670), &(XOR_u64_u64_16671));\
bit_vector_cast_to_bit_vector(0, &(negd_result), &(XOR_u64_u64_16671));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16676_c_macro_ static double type_cast_16675;\
bit_vector_bitcast_to_double( &(type_cast_16675),  &(negd_result));\
fnegd_result = type_cast_16675;\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16692_c_macro_ __declare_static_bit_vector(konst_16680,32);\
bit_vector_clear(&konst_16680);\
__declare_static_bit_vector(MUX_16681,32);\
__declare_static_bit_vector(konst_16684,32);\
bit_vector_clear(&konst_16684);\
__declare_static_bit_vector(MUX_16685,32);\
__declare_static_bit_vector(OR_u32_u32_16686,32);\
__declare_static_bit_vector(konst_16689,32);\
bit_vector_clear(&konst_16689);\
__declare_static_bit_vector(MUX_16690,32);\
__declare_static_bit_vector(OR_u32_u32_16691,32);\
if (has_undefined_bit(&issue_fmovs)) {fprintf(stderr, "Error: variable issue_fmovs has undefined value (%s) at test point.\n", to_string(&issue_fmovs));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fmovs)){bit_vector_cast_to_bit_vector(0, &(MUX_16681), &(movs_result));\
}else {bit_vector_clear(&konst_16680);\
bit_vector_cast_to_bit_vector(0, &(MUX_16681), &(konst_16680));\
}if (has_undefined_bit(&issue_fnegs)) {fprintf(stderr, "Error: variable issue_fnegs has undefined value (%s) at test point.\n", to_string(&issue_fnegs));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fnegs)){bit_vector_cast_to_bit_vector(0, &(MUX_16685), &(negs_result));\
}else {bit_vector_clear(&konst_16684);\
bit_vector_cast_to_bit_vector(0, &(MUX_16685), &(konst_16684));\
}bit_vector_or(&(MUX_16681), &(MUX_16685), &(OR_u32_u32_16686));\
if (has_undefined_bit(&issue_fabss)) {fprintf(stderr, "Error: variable issue_fabss has undefined value (%s) at test point.\n", to_string(&issue_fabss));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fabss)){bit_vector_cast_to_bit_vector(0, &(MUX_16690), &(abs_result));\
}else {bit_vector_clear(&konst_16689);\
bit_vector_cast_to_bit_vector(0, &(MUX_16690), &(konst_16689));\
}bit_vector_or(&(OR_u32_u32_16686), &(MUX_16690), &(OR_u32_u32_16691));\
bit_vector_cast_to_bit_vector(0, &(triv_result_s), &(OR_u32_u32_16691));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16699_c_macro_ __declare_static_bit_vector(OR_u1_u1_16696,1);\
__declare_static_bit_vector(OR_u1_u1_16698,1);\
bit_vector_or(&(issue_fmovs), &(issue_fnegs), &(OR_u1_u1_16696));\
bit_vector_or(&(OR_u1_u1_16696), &(issue_fabss), &(OR_u1_u1_16698));\
bit_vector_cast_to_bit_vector(0, &(triv_flag_s), &(OR_u1_u1_16698));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16710_c_macro_ __declare_static_bit_vector(OR_u1_u1_16703,1);\
__declare_static_bit_vector(OR_u1_u1_16707,1);\
__declare_static_bit_vector(AND_u1_u1_16708,1);\
__declare_static_bit_vector(OR_u1_u1_16709,1);\
bit_vector_or(&(issue_fadds), &(issue_fsubs), &(OR_u1_u1_16703));\
bit_vector_or(&(issue_vfadd), &(issue_vfsub), &(OR_u1_u1_16707));\
bit_vector_and(&(simd_32_flag), &(OR_u1_u1_16707), &(AND_u1_u1_16708));\
bit_vector_or(&(OR_u1_u1_16703), &(AND_u1_u1_16708), &(OR_u1_u1_16709));\
bit_vector_cast_to_bit_vector(0, &(use_fadders), &(OR_u1_u1_16709));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16716_c_macro_ static float MUX_16715;\
if (has_undefined_bit(&issue_fsubs)) {fprintf(stderr, "Error: variable issue_fsubs has undefined value (%s) at test point.\n", to_string(&issue_fsubs));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fsubs)){MUX_16715 = fnegs_result;\
}else {MUX_16715 = f2_s;\
}adder_op2_s = MUX_16715;\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16720_c_macro_ __declare_static_bit_vector(type_cast_16719,32);\
float_bitcast_to_bit_vector( &(type_cast_16719), &(adder_op2_s));\
bit_vector_cast_to_bit_vector(0, &(uadder_op2_s), &(type_cast_16719));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16723_c_macro_ _fpunit_exec_exec_SingleToDouble_( &(f2_s), &(f2_s_d));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16726_c_macro_ fstod_result = f2_s_d;\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16731_c_macro_ __declare_static_bit_vector(OR_u1_u1_16730,1);\
bit_vector_or(&(issue_faddd), &(issue_fsubd), &(OR_u1_u1_16730));\
bit_vector_cast_to_bit_vector(0, &(use_fadderd), &(OR_u1_u1_16730));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16737_c_macro_ static double MUX_16736;\
if (has_undefined_bit(&issue_faddd)) {fprintf(stderr, "Error: variable issue_faddd has undefined value (%s) at test point.\n", to_string(&issue_faddd));assert(0);} \
if(bit_vector_to_uint64(0, &issue_faddd)){MUX_16736 = f2_d;\
}else {MUX_16736 = fnegd_result;\
}adder_op2_d = MUX_16736;\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16741_c_macro_ __declare_static_bit_vector(type_cast_16740,64);\
double_bitcast_to_bit_vector( &(type_cast_16740), &(adder_op2_d));\
bit_vector_cast_to_bit_vector(0, &(uadder_op2_d), &(type_cast_16740));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16746_c_macro_ __declare_static_bit_vector(OR_u1_u1_16745,1);\
bit_vector_or(&(use_fadders), &(use_fadderd), &(OR_u1_u1_16745));\
bit_vector_cast_to_bit_vector(0, &(use_dp_fadder), &(OR_u1_u1_16745));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16749_c_macro_ _fpunit_exec_exec_negate_classification_( &(f2_s_class), &(neg_f2_s_class));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16752_c_macro_ _fpunit_exec_exec_negate_classification_( &(f2_d_class), &(neg_f2_d_class));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16758_c_macro_ __declare_static_bit_vector(MUX_16757,10);\
if (has_undefined_bit(&negate_second_operand)) {fprintf(stderr, "Error: variable negate_second_operand has undefined value (%s) at test point.\n", to_string(&negate_second_operand));assert(0);} \
if(bit_vector_to_uint64(0, &negate_second_operand)){bit_vector_cast_to_bit_vector(0, &(MUX_16757), &(neg_f2_s_class));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_16757), &(f2_s_class));\
}bit_vector_cast_to_bit_vector(0, &(adder_op2_s_class), &(MUX_16757));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16764_c_macro_ __declare_static_bit_vector(MUX_16763,10);\
if (has_undefined_bit(&negate_second_operand)) {fprintf(stderr, "Error: variable negate_second_operand has undefined value (%s) at test point.\n", to_string(&negate_second_operand));assert(0);} \
if(bit_vector_to_uint64(0, &negate_second_operand)){bit_vector_cast_to_bit_vector(0, &(MUX_16763), &(neg_f2_d_class));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_16763), &(f2_d_class));\
}bit_vector_cast_to_bit_vector(0, &(adder_op2_d_class), &(MUX_16763));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16773_c_macro_ __declare_static_bit_vector(OR_u1_u1_16768,1);\
__declare_static_bit_vector(OR_u1_u1_16771,1);\
__declare_static_bit_vector(OR_u1_u1_16772,1);\
bit_vector_or(&(issue_fadds), &(issue_fsubs), &(OR_u1_u1_16768));\
bit_vector_or(&(issue_vfadd), &(issue_vfsub), &(OR_u1_u1_16771));\
bit_vector_or(&(OR_u1_u1_16768), &(OR_u1_u1_16771), &(OR_u1_u1_16772));\
bit_vector_cast_to_bit_vector(0, &(single_precision_inputs_to_adder), &(OR_u1_u1_16772));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16778_c_macro_ __declare_static_bit_vector(OR_u1_u1_16777,1);\
bit_vector_or(&(issue_faddd), &(issue_fsubd), &(OR_u1_u1_16777));\
bit_vector_cast_to_bit_vector(0, &(double_precision_inputs_to_adder), &(OR_u1_u1_16777));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16792_c_macro_ if (has_undefined_bit(&use_dp_fadder)) {fprintf(stderr, "Error: variable use_dp_fadder has undefined value (%s) at test point.\n", to_string(&use_dp_fadder));assert(0);} \
if (bit_vector_to_uint64(0, &use_dp_fadder)) {\
_fpunit_exec_exec_fpadd64_op_( &(single_precision_inputs_to_adder),  &(double_precision_inputs_to_adder),  &(uf1_s),  &(f1_s_class),  &(uadder_op2_s),  &(adder_op2_s_class),  &(uf1_d),  &(f1_d_class),  &(uadder_op2_d),  &(adder_op2_d_class), &(denormalize_flag_add), &(extn_result_add));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16799_c_macro_ __declare_static_bit_vector(OR_u1_u1_16797,1);\
__declare_static_bit_vector(AND_u1_u1_16798,1);\
bit_vector_or(&(issue_vfadd), &(issue_vfsub), &(OR_u1_u1_16797));\
bit_vector_and(&(simd_32_flag), &(OR_u1_u1_16797), &(AND_u1_u1_16798));\
bit_vector_cast_to_bit_vector(0, &(use_faddervs), &(AND_u1_u1_16798));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16804_c_macro_ __declare_static_bit_vector(AND_u1_u1_16803,1);\
bit_vector_and(&(simd_32_flag), &(issue_vfmul), &(AND_u1_u1_16803));\
bit_vector_cast_to_bit_vector(0, &(use_fmulvs), &(AND_u1_u1_16803));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16808_c_macro_ __declare_static_bit_vector(slice_16807,32);\
bit_vector_slice(&(uf1_d), &(slice_16807), 32);\
bit_vector_cast_to_bit_vector(0, &(vs_op_1), &(slice_16807));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16812_c_macro_ static float type_cast_16811;\
bit_vector_bitcast_to_float( &(type_cast_16811),  &(vs_op_1));\
vs_fop_1 = type_cast_16811;\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16815_c_macro_ _fpunit_exec_exec_classFp32IntoClassWord_( &(vs_fop_1), &(vs_fop_1_class));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16819_c_macro_ __declare_static_bit_vector(slice_16818,32);\
bit_vector_slice(&(uf2_d), &(slice_16818), 32);\
bit_vector_cast_to_bit_vector(0, &(vs_op_2), &(slice_16818));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16823_c_macro_ static float type_cast_16822;\
bit_vector_bitcast_to_float( &(type_cast_16822),  &(vs_op_2));\
vs_fop_2 = type_cast_16822;\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16826_c_macro_ _fpunit_exec_exec_classFp32IntoClassWord_( &(vs_fop_2), &(vs_fop_2_class));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16829_c_macro_ _fpunit_exec_exec_negate_classification_( &(vs_fop_2_class), &(neg_vs_fop_2_class));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16835_c_macro_ __declare_static_bit_vector(MUX_16834,10);\
if (has_undefined_bit(&negate_second_operand)) {fprintf(stderr, "Error: variable negate_second_operand has undefined value (%s) at test point.\n", to_string(&negate_second_operand));assert(0);} \
if(bit_vector_to_uint64(0, &negate_second_operand)){bit_vector_cast_to_bit_vector(0, &(MUX_16834), &(neg_vs_fop_2_class));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_16834), &(vs_fop_2_class));\
}bit_vector_cast_to_bit_vector(0, &(vs_addsub_fop_2_class), &(MUX_16834));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16843_c_macro_ if (has_undefined_bit(&use_faddervs)) {fprintf(stderr, "Error: variable use_faddervs has undefined value (%s) at test point.\n", to_string(&use_faddervs));assert(0);} \
if (bit_vector_to_uint64(0, &use_faddervs)) {\
_fpunit_exec_exec_fpadd32_op_( &(vs_op_1),  &(vs_fop_1_class),  &(vs_op_2),  &(vs_addsub_fop_2_class), &(vs_addsub_needs_norm), &(vs_addsub_extension_result));\
}\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16851_c_macro_ if (has_undefined_bit(&use_fmulvs)) {fprintf(stderr, "Error: variable use_fmulvs has undefined value (%s) at test point.\n", to_string(&use_fmulvs));assert(0);} \
if (bit_vector_to_uint64(0, &use_fmulvs)) {\
_fpunit_exec_exec_fpmul32_op_( &(vs_op_1),  &(vs_fop_1_class),  &(vs_op_2),  &(vs_fop_2_class), &(vs_mul_needs_norm), &(vs_mul_extension_result));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16854_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_faddervs_17114_delayed_1_0), &(use_faddervs));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16859_c_macro_ __declare_static_bit_vector(AND_u1_u1_16858,1);\
bit_vector_and(&(use_faddervs_17114_delayed_1_0), &(vs_addsub_needs_norm), &(AND_u1_u1_16858));\
bit_vector_cast_to_bit_vector(0, &(condition_denormalize_flag_vs_addsub), &(AND_u1_u1_16858));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16862_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_fmulvs_17119_delayed_2_0), &(use_fmulvs));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16867_c_macro_ __declare_static_bit_vector(AND_u1_u1_16866,1);\
bit_vector_and(&(use_fmulvs_17119_delayed_2_0), &(vs_mul_needs_norm), &(AND_u1_u1_16866));\
bit_vector_cast_to_bit_vector(0, &(condition_denormalize_flag_vs_mul), &(AND_u1_u1_16866));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16870_c_macro_ bit_vector_cast_to_bit_vector(0, &(condition_denormalize_flag_vs_addsub_17124_delayed_1_0), &(condition_denormalize_flag_vs_addsub));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16875_c_macro_ __declare_static_bit_vector(OR_u1_u1_16874,1);\
bit_vector_or(&(condition_denormalize_flag_vs_addsub_17124_delayed_1_0), &(condition_denormalize_flag_vs_mul), &(OR_u1_u1_16874));\
bit_vector_cast_to_bit_vector(0, &(denormalize_vs), &(OR_u1_u1_16874));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16878_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_faddervs_17129_delayed_1_0), &(use_faddervs));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16884_c_macro_ __declare_static_bit_vector(konst_16882,81);\
bit_vector_clear(&konst_16882);\
__declare_static_bit_vector(MUX_16883,81);\
if (has_undefined_bit(&use_faddervs_17129_delayed_1_0)) {fprintf(stderr, "Error: variable use_faddervs_17129_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&use_faddervs_17129_delayed_1_0));assert(0);} \
if(bit_vector_to_uint64(0, &use_faddervs_17129_delayed_1_0)){bit_vector_cast_to_bit_vector(0, &(MUX_16883), &(vs_addsub_extension_result));\
}else {bit_vector_clear(&konst_16882);\
bit_vector_cast_to_bit_vector(0, &(MUX_16883), &(konst_16882));\
}bit_vector_cast_to_bit_vector(0, &(MUX_17132_17132_delayed_1_0), &(MUX_16883));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16887_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_fmulvs_17133_delayed_2_0), &(use_fmulvs));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16895_c_macro_ __declare_static_bit_vector(konst_16892,81);\
bit_vector_clear(&konst_16892);\
__declare_static_bit_vector(MUX_16893,81);\
__declare_static_bit_vector(OR_u81_u81_16894,81);\
if (has_undefined_bit(&use_fmulvs_17133_delayed_2_0)) {fprintf(stderr, "Error: variable use_fmulvs_17133_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&use_fmulvs_17133_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &use_fmulvs_17133_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_16893), &(vs_mul_extension_result));\
}else {bit_vector_clear(&konst_16892);\
bit_vector_cast_to_bit_vector(0, &(MUX_16893), &(konst_16892));\
}bit_vector_or(&(MUX_17132_17132_delayed_1_0), &(MUX_16893), &(OR_u81_u81_16894));\
bit_vector_cast_to_bit_vector(0, &(extn_result_to_vs_round_and_normalize), &(OR_u81_u81_16894));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16898_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_result_to_vs_round_and_normalize), &(vs_round_result));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16902_c_macro_ if (has_undefined_bit(&denormalize_vs)) {fprintf(stderr, "Error: variable denormalize_vs has undefined value (%s) at test point.\n", to_string(&denormalize_vs));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_vs)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_result_to_vs_round_and_normalize), &(denorm_result_vs_slow));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16905_c_macro_ bit_vector_cast_to_bit_vector(0, &(simd32_result_fast_h), &(vs_round_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16908_c_macro_ bit_vector_cast_to_bit_vector(0, &(simd32_result_slow_h), &(denorm_result_vs_slow));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16919_c_macro_ __declare_static_bit_vector(OR_u1_u1_16912,1);\
__declare_static_bit_vector(AND_u1_u1_16916,1);\
__declare_static_bit_vector(OR_u1_u1_16917,1);\
__declare_static_bit_vector(OR_u1_u1_16918,1);\
bit_vector_or(&(issue_fmuld), &(issue_fmuls), &(OR_u1_u1_16912));\
bit_vector_and(&(simd_32_flag), &(issue_vfmul), &(AND_u1_u1_16916));\
bit_vector_or(&(issue_fsmuld), &(AND_u1_u1_16916), &(OR_u1_u1_16917));\
bit_vector_or(&(OR_u1_u1_16912), &(OR_u1_u1_16917), &(OR_u1_u1_16918));\
bit_vector_cast_to_bit_vector(0, &(use_dp_fmul), &(OR_u1_u1_16918));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16924_c_macro_ __declare_static_bit_vector(OR_u1_u1_16923,1);\
bit_vector_or(&(issue_fmuld), &(issue_fsmuld), &(OR_u1_u1_16923));\
bit_vector_cast_to_bit_vector(0, &(double_mul), &(OR_u1_u1_16923));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16928_c_macro_ __declare_static_bit_vector(type_cast_16927,32);\
float_bitcast_to_bit_vector( &(type_cast_16927), &(f1_s));\
bit_vector_cast_to_bit_vector(0, &(mul_uf1_s), &(type_cast_16927));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16932_c_macro_ __declare_static_bit_vector(type_cast_16931,32);\
float_bitcast_to_bit_vector( &(type_cast_16931), &(f2_s));\
bit_vector_cast_to_bit_vector(0, &(mul_uf2_s), &(type_cast_16931));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16936_c_macro_ __declare_static_bit_vector(type_cast_16935,64);\
double_bitcast_to_bit_vector( &(type_cast_16935), &(f1_d));\
bit_vector_cast_to_bit_vector(0, &(mul_uf1_d), &(type_cast_16935));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16940_c_macro_ __declare_static_bit_vector(type_cast_16939,64);\
double_bitcast_to_bit_vector( &(type_cast_16939), &(f2_d));\
bit_vector_cast_to_bit_vector(0, &(mul_uf2_d), &(type_cast_16939));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16947_c_macro_ __declare_static_bit_vector(OR_u1_u1_16944,1);\
__declare_static_bit_vector(OR_u1_u1_16946,1);\
bit_vector_or(&(issue_fmuls), &(issue_fsmuld), &(OR_u1_u1_16944));\
bit_vector_or(&(OR_u1_u1_16944), &(issue_vfmul), &(OR_u1_u1_16946));\
bit_vector_cast_to_bit_vector(0, &(single_precision_inputs_to_mul), &(OR_u1_u1_16946));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16961_c_macro_ if (has_undefined_bit(&use_dp_fmul)) {fprintf(stderr, "Error: variable use_dp_fmul has undefined value (%s) at test point.\n", to_string(&use_dp_fmul));assert(0);} \
if (bit_vector_to_uint64(0, &use_dp_fmul)) {\
_fpunit_exec_exec_fpmul64_op_( &(single_precision_inputs_to_mul),  &(double_mul),  &(mul_uf1_s),  &(f1_s_class),  &(mul_uf2_s),  &(f2_s_class),  &(mul_uf1_d),  &(f1_d_class),  &(mul_uf2_d),  &(f2_d_class), &(denormalize_flag_mul), &(extn_result_mul));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16967_c_macro_ __declare_static_bit_vector(konst_16965,32);\
bit_vector_clear(&konst_16965);\
__declare_static_bit_vector(MUX_16966,32);\
if (has_undefined_bit(&ops_valid)) {fprintf(stderr, "Error: variable ops_valid has undefined value (%s) at test point.\n", to_string(&ops_valid));assert(0);} \
if(bit_vector_to_uint64(0, &ops_valid)){bit_vector_cast_to_bit_vector(0, &(MUX_16966), &(r2_val_l));\
}else {bit_vector_clear(&konst_16965);\
bit_vector_cast_to_bit_vector(0, &(MUX_16966), &(konst_16965));\
}bit_vector_cast_to_bit_vector(0, &(fitod_in), &(MUX_16966));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16970_c_macro_ _fpunit_exec_exec_fitod64_( &(fitod_in), &(fitod_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16975_c_macro_ __declare_static_bit_vector(OR_u1_u1_16974,1);\
bit_vector_or(&(issue_fitos), &(issue_fdtos), &(OR_u1_u1_16974));\
bit_vector_cast_to_bit_vector(0, &(convert_to_single), &(OR_u1_u1_16974));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16981_c_macro_ static double MUX_16980;\
if (has_undefined_bit(&issue_fdtos)) {fprintf(stderr, "Error: variable issue_fdtos has undefined value (%s) at test point.\n", to_string(&issue_fdtos));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fdtos)){MUX_16980 = f2_d;\
}else {MUX_16980 = fitod_result;\
}to_single_in = MUX_16980;\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_16986_c_macro_ if (has_undefined_bit(&convert_to_single)) {fprintf(stderr, "Error: variable convert_to_single has undefined value (%s) at test point.\n", to_string(&convert_to_single));assert(0);} \
if (bit_vector_to_uint64(0, &convert_to_single)) {\
_fpunit_exec_exec_DoubleToSingle_( &(to_single_in), &(denorm_double_to_single), &(extn_result_double_to_single));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16989_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_dp_fadder_17236_delayed_2_0), &(use_dp_fadder));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16994_c_macro_ __declare_static_bit_vector(AND_u1_u1_16993,1);\
bit_vector_and(&(use_dp_fadder_17236_delayed_2_0), &(denormalize_flag_add), &(AND_u1_u1_16993));\
bit_vector_cast_to_bit_vector(0, &(condition_denormalize_flag_add), &(AND_u1_u1_16993));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_16997_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_dp_fmul_17241_delayed_2_0), &(use_dp_fmul));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17002_c_macro_ __declare_static_bit_vector(AND_u1_u1_17001,1);\
bit_vector_and(&(use_dp_fmul_17241_delayed_2_0), &(denormalize_flag_mul), &(AND_u1_u1_17001));\
bit_vector_cast_to_bit_vector(0, &(condition_denormalize_flag_mul), &(AND_u1_u1_17001));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17005_c_macro_ bit_vector_cast_to_bit_vector(0, &(convert_to_single_17246_delayed_2_0), &(convert_to_single));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17010_c_macro_ __declare_static_bit_vector(AND_u1_u1_17009,1);\
bit_vector_and(&(convert_to_single_17246_delayed_2_0), &(denorm_double_to_single), &(AND_u1_u1_17009));\
bit_vector_cast_to_bit_vector(0, &(condition_denormalize_flag_double_to_single), &(AND_u1_u1_17009));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17017_c_macro_ __declare_static_bit_vector(OR_u1_u1_17014,1);\
__declare_static_bit_vector(OR_u1_u1_17016,1);\
bit_vector_or(&(condition_denormalize_flag_double_to_single), &(condition_denormalize_flag_add), &(OR_u1_u1_17014));\
bit_vector_or(&(OR_u1_u1_17014), &(condition_denormalize_flag_mul), &(OR_u1_u1_17016));\
bit_vector_cast_to_bit_vector(0, &(denormalize_flag), &(OR_u1_u1_17016));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17020_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_dp_fadder_17258_delayed_2_0), &(use_dp_fadder));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17023_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_dp_fmul_17262_delayed_2_0), &(use_dp_fmul));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17026_c_macro_ bit_vector_cast_to_bit_vector(0, &(convert_to_single_17267_delayed_2_0), &(convert_to_single));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17042_c_macro_ __declare_static_bit_vector(konst_17030,81);\
bit_vector_clear(&konst_17030);\
__declare_static_bit_vector(MUX_17031,81);\
__declare_static_bit_vector(konst_17034,81);\
bit_vector_clear(&konst_17034);\
__declare_static_bit_vector(MUX_17035,81);\
__declare_static_bit_vector(OR_u81_u81_17036,81);\
__declare_static_bit_vector(konst_17039,81);\
bit_vector_clear(&konst_17039);\
__declare_static_bit_vector(MUX_17040,81);\
__declare_static_bit_vector(OR_u81_u81_17041,81);\
if (has_undefined_bit(&use_dp_fadder_17258_delayed_2_0)) {fprintf(stderr, "Error: variable use_dp_fadder_17258_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&use_dp_fadder_17258_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &use_dp_fadder_17258_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17031), &(extn_result_add));\
}else {bit_vector_clear(&konst_17030);\
bit_vector_cast_to_bit_vector(0, &(MUX_17031), &(konst_17030));\
}if (has_undefined_bit(&use_dp_fmul_17262_delayed_2_0)) {fprintf(stderr, "Error: variable use_dp_fmul_17262_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&use_dp_fmul_17262_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &use_dp_fmul_17262_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17035), &(extn_result_mul));\
}else {bit_vector_clear(&konst_17034);\
bit_vector_cast_to_bit_vector(0, &(MUX_17035), &(konst_17034));\
}bit_vector_or(&(MUX_17031), &(MUX_17035), &(OR_u81_u81_17036));\
if (has_undefined_bit(&convert_to_single_17267_delayed_2_0)) {fprintf(stderr, "Error: variable convert_to_single_17267_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&convert_to_single_17267_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &convert_to_single_17267_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17040), &(extn_result_double_to_single));\
}else {bit_vector_clear(&konst_17039);\
bit_vector_cast_to_bit_vector(0, &(MUX_17040), &(konst_17039));\
}bit_vector_or(&(OR_u81_u81_17036), &(MUX_17040), &(OR_u81_u81_17041));\
bit_vector_cast_to_bit_vector(0, &(extn_result_to_round_and_normalize), &(OR_u81_u81_17041));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17047_c_macro_ __declare_static_bit_vector(OR_u1_u1_17046,1);\
bit_vector_or(&(use_fadderd), &(double_mul), &(OR_u1_u1_17046));\
bit_vector_cast_to_bit_vector(0, &(double_precision_round_normalize), &(OR_u1_u1_17046));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17050_c_macro_ _fpunit_exec_exec_round_fp_64_( &(extn_result_to_round_and_normalize), &(round_d_result));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17053_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_result_to_round_and_normalize), &(round_s_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17056_c_macro_ bit_vector_cast_to_bit_vector(0, &(double_precision_round_normalize_17286_delayed_2_0), &(double_precision_round_normalize));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17061_c_macro_ __declare_static_bit_vector(AND_u1_u1_17060,1);\
bit_vector_and(&(denormalize_flag), &(double_precision_round_normalize_17286_delayed_2_0), &(AND_u1_u1_17060));\
bit_vector_cast_to_bit_vector(0, &(denormalize_flag_64), &(AND_u1_u1_17060));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17065_c_macro_ if (has_undefined_bit(&denormalize_flag_64)) {fprintf(stderr, "Error: variable denormalize_flag_64 has undefined value (%s) at test point.\n", to_string(&denormalize_flag_64));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_64)) {\
_fpunit_exec_exec_denormalize_fp_64_( &(extn_result_to_round_and_normalize), &(denorm_result_d_slow));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17069_c_macro_ __declare_static_bit_vector(NOT_u1_u1_17068,1);\
bit_vector_not( &(double_precision_round_normalize), &(NOT_u1_u1_17068));\
bit_vector_cast_to_bit_vector(0, &(NOT_u1_u1_17296_17296_delayed_2_0), &(NOT_u1_u1_17068));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17074_c_macro_ __declare_static_bit_vector(AND_u1_u1_17073,1);\
bit_vector_and(&(denormalize_flag), &(NOT_u1_u1_17296_17296_delayed_2_0), &(AND_u1_u1_17073));\
bit_vector_cast_to_bit_vector(0, &(denormalize_flag_32), &(AND_u1_u1_17073));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17078_c_macro_ if (has_undefined_bit(&denormalize_flag_32)) {fprintf(stderr, "Error: variable denormalize_flag_32 has undefined value (%s) at test point.\n", to_string(&denormalize_flag_32));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_32)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_result_to_round_and_normalize), &(denorm_result_s_slow));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17081_c_macro_ bit_vector_cast_to_bit_vector(0, &(denormalize_flag_32_17304_delayed_1_0), &(denormalize_flag_32));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17084_c_macro_ bit_vector_cast_to_bit_vector(0, &(round_s_result_17306_delayed_1_0), &(round_s_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17090_c_macro_ __declare_static_bit_vector(MUX_17089,32);\
if (has_undefined_bit(&denormalize_flag_32_17304_delayed_1_0)) {fprintf(stderr, "Error: variable denormalize_flag_32_17304_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&denormalize_flag_32_17304_delayed_1_0));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_32_17304_delayed_1_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17089), &(denorm_result_s_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_17089), &(round_s_result_17306_delayed_1_0));\
}bit_vector_cast_to_bit_vector(0, &(addsubs_result), &(MUX_17089));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17093_c_macro_ bit_vector_cast_to_bit_vector(0, &(denormalize_flag_64_17310_delayed_1_0), &(denormalize_flag_64));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17096_c_macro_ bit_vector_cast_to_bit_vector(0, &(round_d_result_17312_delayed_1_0), &(round_d_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17102_c_macro_ __declare_static_bit_vector(MUX_17101,64);\
if (has_undefined_bit(&denormalize_flag_64_17310_delayed_1_0)) {fprintf(stderr, "Error: variable denormalize_flag_64_17310_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&denormalize_flag_64_17310_delayed_1_0));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_64_17310_delayed_1_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17101), &(denorm_result_d_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_17101), &(round_d_result_17312_delayed_1_0));\
}bit_vector_cast_to_bit_vector(0, &(addsubd_result), &(MUX_17101));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17105_c_macro_ bit_vector_cast_to_bit_vector(0, &(denormalize_flag_32_17316_delayed_1_0), &(denormalize_flag_32));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17108_c_macro_ bit_vector_cast_to_bit_vector(0, &(round_s_result_17318_delayed_1_0), &(round_s_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17114_c_macro_ __declare_static_bit_vector(MUX_17113,32);\
if (has_undefined_bit(&denormalize_flag_32_17316_delayed_1_0)) {fprintf(stderr, "Error: variable denormalize_flag_32_17316_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&denormalize_flag_32_17316_delayed_1_0));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_32_17316_delayed_1_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17113), &(denorm_result_s_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_17113), &(round_s_result_17318_delayed_1_0));\
}bit_vector_cast_to_bit_vector(0, &(muls_result), &(MUX_17113));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17117_c_macro_ bit_vector_cast_to_bit_vector(0, &(denormalize_flag_64_17322_delayed_1_0), &(denormalize_flag_64));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17120_c_macro_ bit_vector_cast_to_bit_vector(0, &(round_d_result_17324_delayed_1_0), &(round_d_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17126_c_macro_ __declare_static_bit_vector(MUX_17125,64);\
if (has_undefined_bit(&denormalize_flag_64_17322_delayed_1_0)) {fprintf(stderr, "Error: variable denormalize_flag_64_17322_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&denormalize_flag_64_17322_delayed_1_0));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_64_17322_delayed_1_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17125), &(denorm_result_d_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_17125), &(round_d_result_17324_delayed_1_0));\
}bit_vector_cast_to_bit_vector(0, &(muld_result), &(MUX_17125));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17130_c_macro_ static double type_cast_17129;\
bit_vector_bitcast_to_double( &(type_cast_17129),  &(muld_result));\
fsmuld_result = type_cast_17129;\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17133_c_macro_ bit_vector_cast_to_bit_vector(0, &(condition_denormalize_flag_double_to_single_17332_delayed_1_0), &(condition_denormalize_flag_double_to_single));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17136_c_macro_ bit_vector_cast_to_bit_vector(0, &(round_s_result_17334_delayed_1_0), &(round_s_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17142_c_macro_ __declare_static_bit_vector(MUX_17141,32);\
if (has_undefined_bit(&condition_denormalize_flag_double_to_single_17332_delayed_1_0)) {fprintf(stderr, "Error: variable condition_denormalize_flag_double_to_single_17332_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&condition_denormalize_flag_double_to_single_17332_delayed_1_0));assert(0);} \
if(bit_vector_to_uint64(0, &condition_denormalize_flag_double_to_single_17332_delayed_1_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17141), &(denorm_result_s_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_17141), &(round_s_result_17334_delayed_1_0));\
}bit_vector_cast_to_bit_vector(0, &(to_single_out), &(MUX_17141));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17145_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_fadders_17338_delayed_3_0), &(use_fadders));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17151_c_macro_ __declare_static_bit_vector(MUX_17150,32);\
if (has_undefined_bit(&use_fadders_17338_delayed_3_0)) {fprintf(stderr, "Error: variable use_fadders_17338_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&use_fadders_17338_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &use_fadders_17338_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17150), &(addsubs_result));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_17150), &(muls_result));\
}bit_vector_cast_to_bit_vector(0, &(add_sub_mul_s_result), &(MUX_17150));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17154_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_fadderd_17344_delayed_3_0), &(use_fadderd));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17160_c_macro_ __declare_static_bit_vector(MUX_17159,64);\
if (has_undefined_bit(&use_fadderd_17344_delayed_3_0)) {fprintf(stderr, "Error: variable use_fadderd_17344_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&use_fadderd_17344_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &use_fadderd_17344_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17159), &(addsubd_result));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_17159), &(muld_result));\
}bit_vector_cast_to_bit_vector(0, &(add_sub_mul_d_result), &(MUX_17159));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17163_c_macro_ bit_vector_cast_to_bit_vector(0, &(simd32_result_fast_l), &(round_s_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17166_c_macro_ bit_vector_cast_to_bit_vector(0, &(simd32_result_slow_l), &(add_sub_mul_s_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17173_c_macro_ __declare_static_bit_vector(AND_u1_u1_17170,1);\
__declare_static_bit_vector(OR_u1_u1_17172,1);\
bit_vector_and(&(simd_16_flag), &(simd_alu), &(AND_u1_u1_17170));\
bit_vector_or(&(AND_u1_u1_17170), &(issue_faddreduce16), &(OR_u1_u1_17172));\
bit_vector_cast_to_bit_vector(0, &(issue_simd_16), &(OR_u1_u1_17172));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17182_c_macro_ if (has_undefined_bit(&issue_simd_16)) {fprintf(stderr, "Error: variable issue_simd_16 has undefined value (%s) at test point.\n", to_string(&issue_simd_16));assert(0);} \
if (bit_vector_to_uint64(0, &issue_simd_16)) {\
_fpunit_exec_exec_exec_fp_simd_16_op_( &(issue_vfadd),  &(issue_vfsub),  &(issue_vfmul),  &(issue_faddreduce16),  &(uf1_d),  &(uf2_d), &(simd_16_result_64));\
}\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17187_c_macro_ if (has_undefined_bit(&issue_fdivs)) {fprintf(stderr, "Error: variable issue_fdivs has undefined value (%s) at test point.\n", to_string(&issue_fdivs));assert(0);} \
if (bit_vector_to_uint64(0, &issue_fdivs)) {\
_fpunit_exec_exec_fpdivide32_( &(f1_s),  &(f2_s), &(fdivs_result));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17191_c_macro_ __declare_static_bit_vector(type_cast_17190,32);\
float_bitcast_to_bit_vector( &(type_cast_17190), &(fdivs_result));\
bit_vector_cast_to_bit_vector(0, &(divs_result), &(type_cast_17190));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17195_c_macro_ if (has_undefined_bit(&issue_fsqrts)) {fprintf(stderr, "Error: variable issue_fsqrts has undefined value (%s) at test point.\n", to_string(&issue_fsqrts));assert(0);} \
if (bit_vector_to_uint64(0, &issue_fsqrts)) {\
_fpunit_exec_exec_fpsqrt32_bit_wise_( &(f2_s), &(fsqrts_result));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17199_c_macro_ __declare_static_bit_vector(type_cast_17198,32);\
float_bitcast_to_bit_vector( &(type_cast_17198), &(fsqrts_result));\
bit_vector_cast_to_bit_vector(0, &(sqrts_result), &(type_cast_17198));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17205_c_macro_ static float konst_17203;\
konst_17203 = 0.000000e+00;\
static float MUX_17204;\
if (has_undefined_bit(&ops_valid)) {fprintf(stderr, "Error: variable ops_valid has undefined value (%s) at test point.\n", to_string(&ops_valid));assert(0);} \
if(bit_vector_to_uint64(0, &ops_valid)){MUX_17204 = f1_s;\
}else {konst_17203 = 0.000000e+00;\
MUX_17204 = konst_17203;\
}cmp_in_1_s = MUX_17204;\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17211_c_macro_ static float konst_17209;\
konst_17209 = 0.000000e+00;\
static float MUX_17210;\
if (has_undefined_bit(&ops_valid)) {fprintf(stderr, "Error: variable ops_valid has undefined value (%s) at test point.\n", to_string(&ops_valid));assert(0);} \
if(bit_vector_to_uint64(0, &ops_valid)){MUX_17210 = f2_s;\
}else {konst_17209 = 0.000000e+00;\
MUX_17210 = konst_17209;\
}cmp_in_2_s = MUX_17210;\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17216_c_macro_ __declare_static_bit_vector(konst_17214,1);\
bit_vector_clear(&konst_17214);\
bit_vector_clear(&konst_17214);\
_fpunit_exec_exec_fpcmp32_( &(cmp_in_1_s),  &(cmp_in_2_s),  &(konst_17214), &(cmps_flags));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17221_c_macro_ __declare_static_bit_vector(konst_17219,1);\
bit_vector_clear(&konst_17219);\
konst_17219.val.byte_array[0] = 1;\
bit_vector_clear(&konst_17219);\
konst_17219.val.byte_array[0] = 1;\
_fpunit_exec_exec_fpcmp32_( &(cmp_in_1_s),  &(cmp_in_2_s),  &(konst_17219), &(cmpes_flags));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17227_c_macro_ static double MUX_17226;\
if (has_undefined_bit(&issue_fdtoi)) {fprintf(stderr, "Error: variable issue_fdtoi has undefined value (%s) at test point.\n", to_string(&issue_fdtoi));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fdtoi)){MUX_17226 = f2_d;\
}else {MUX_17226 = f2_s_d;\
}dtoi_in = MUX_17226;\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17232_c_macro_ __declare_static_bit_vector(OR_u1_u1_17231,1);\
bit_vector_or(&(issue_fstoi), &(issue_fdtoi), &(OR_u1_u1_17231));\
bit_vector_cast_to_bit_vector(0, &(issue_toi), &(OR_u1_u1_17231));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17236_c_macro_ if (has_undefined_bit(&issue_toi)) {fprintf(stderr, "Error: variable issue_toi has undefined value (%s) at test point.\n", to_string(&issue_toi));assert(0);} \
if (bit_vector_to_uint64(0, &issue_toi)) {\
_fpunit_exec_exec_fdtoi_op_( &(dtoi_in), &(toi_result_temp));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17240_c_macro_ __declare_static_bit_vector(type_cast_17239,32);\
bit_vector_bitcast_to_bit_vector( &(type_cast_17239), &(toi_result_temp));\
bit_vector_cast_to_bit_vector(0, &(dtoi_result), &(type_cast_17239));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17244_c_macro_ __declare_static_bit_vector(type_cast_17243,32);\
bit_vector_bitcast_to_bit_vector( &(type_cast_17243), &(toi_result_temp));\
bit_vector_cast_to_bit_vector(0, &(stoi_result), &(type_cast_17243));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17249_c_macro_ if (has_undefined_bit(&issue_fdivd)) {fprintf(stderr, "Error: variable issue_fdivd has undefined value (%s) at test point.\n", to_string(&issue_fdivd));assert(0);} \
if (bit_vector_to_uint64(0, &issue_fdivd)) {\
_fpunit_exec_exec_fpdivide64_( &(f1_d),  &(f2_d), &(fdivd_result));\
}\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17253_c_macro_ if (has_undefined_bit(&issue_fsqrtd)) {fprintf(stderr, "Error: variable issue_fsqrtd has undefined value (%s) at test point.\n", to_string(&issue_fsqrtd));assert(0);} \
if (bit_vector_to_uint64(0, &issue_fsqrtd)) {\
_fpunit_exec_exec_fpsqrt64_bit_wise_( &(f2_d), &(fsqrtd_result));\
}\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17259_c_macro_ static double konst_17257;\
konst_17257 = 0.000000e+00;\
static double MUX_17258;\
if (has_undefined_bit(&ops_valid)) {fprintf(stderr, "Error: variable ops_valid has undefined value (%s) at test point.\n", to_string(&ops_valid));assert(0);} \
if(bit_vector_to_uint64(0, &ops_valid)){MUX_17258 = f1_d;\
}else {konst_17257 = 0.000000e+00;\
MUX_17258 = konst_17257;\
}cmp_in_1_d = MUX_17258;\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17265_c_macro_ static double konst_17263;\
konst_17263 = 0.000000e+00;\
static double MUX_17264;\
if (has_undefined_bit(&ops_valid)) {fprintf(stderr, "Error: variable ops_valid has undefined value (%s) at test point.\n", to_string(&ops_valid));assert(0);} \
if(bit_vector_to_uint64(0, &ops_valid)){MUX_17264 = f2_d;\
}else {konst_17263 = 0.000000e+00;\
MUX_17264 = konst_17263;\
}cmp_in_2_d = MUX_17264;\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17270_c_macro_ __declare_static_bit_vector(konst_17268,1);\
bit_vector_clear(&konst_17268);\
bit_vector_clear(&konst_17268);\
_fpunit_exec_exec_fpcmp64_( &(cmp_in_1_d),  &(cmp_in_2_d),  &(konst_17268), &(cmpd_flags));\
;

#define fpunit_exec_exec__exec_daemon_call_stmt_17275_c_macro_ __declare_static_bit_vector(konst_17273,1);\
bit_vector_clear(&konst_17273);\
konst_17273.val.byte_array[0] = 1;\
bit_vector_clear(&konst_17273);\
konst_17273.val.byte_array[0] = 1;\
_fpunit_exec_exec_fpcmp64_( &(cmp_in_1_d),  &(cmp_in_2_d),  &(konst_17273), &(cmped_flags));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17278_c_macro_ bit_vector_cast_to_bit_vector(0, &(itos_result), &(round_s_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17282_c_macro_ __declare_static_bit_vector(type_cast_17281,64);\
double_bitcast_to_bit_vector( &(type_cast_17281), &(fstod_result));\
bit_vector_cast_to_bit_vector(0, &(stod_result), &(type_cast_17281));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17286_c_macro_ __declare_static_bit_vector(type_cast_17285,64);\
double_bitcast_to_bit_vector( &(type_cast_17285), &(fdivd_result));\
bit_vector_cast_to_bit_vector(0, &(divd_result), &(type_cast_17285));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17290_c_macro_ __declare_static_bit_vector(type_cast_17289,64);\
double_bitcast_to_bit_vector( &(type_cast_17289), &(fsqrtd_result));\
bit_vector_cast_to_bit_vector(0, &(sqrtd_result), &(type_cast_17289));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17294_c_macro_ __declare_static_bit_vector(type_cast_17293,64);\
double_bitcast_to_bit_vector( &(type_cast_17293), &(fitod_result));\
bit_vector_cast_to_bit_vector(0, &(itod_result), &(type_cast_17293));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17298_c_macro_ __declare_static_bit_vector(type_cast_17297,32);\
bit_vector_bitcast_to_bit_vector( &(type_cast_17297), &(to_single_out));\
bit_vector_cast_to_bit_vector(0, &(dtos_result_slow), &(type_cast_17297));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17301_c_macro_ bit_vector_cast_to_bit_vector(0, &(dtos_result_fast), &(round_s_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17308_c_macro_ __declare_static_bit_vector(OR_u1_u1_17306,1);\
__declare_static_bit_vector(AND_u1_u1_17307,1);\
bit_vector_or(&(decode_trap), &(ieee_754_exception), &(OR_u1_u1_17306));\
bit_vector_and(&(uses_fu1), &(OR_u1_u1_17306), &(AND_u1_u1_17307));\
bit_vector_cast_to_bit_vector(0, &(fp_has_trapped), &(AND_u1_u1_17307));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17325_c_macro_ __declare_static_bit_vector(AND_u1_u1_17312,1);\
__declare_static_bit_vector(AND_u1_u1_17315,1);\
__declare_static_bit_vector(CONCAT_u1_u2_17316,2);\
__declare_static_bit_vector(AND_u1_u1_17319,1);\
__declare_static_bit_vector(AND_u1_u1_17322,1);\
__declare_static_bit_vector(CONCAT_u1_u2_17323,2);\
__declare_static_bit_vector(CONCAT_u2_u4_17324,4);\
bit_vector_and(&(uses_fu1), &(unimpl_instr), &(AND_u1_u1_17312));\
bit_vector_and(&(uses_fu1), &(invalid_reg), &(AND_u1_u1_17315));\
bit_vector_concatenate( &(AND_u1_u1_17312), &(AND_u1_u1_17315), &(CONCAT_u1_u2_17316));\
bit_vector_and(&(uses_fu1), &(seq_error), &(AND_u1_u1_17319));\
bit_vector_and(&(uses_fu1), &(ieee_754_exception), &(AND_u1_u1_17322));\
bit_vector_concatenate( &(AND_u1_u1_17319), &(AND_u1_u1_17322), &(CONCAT_u1_u2_17323));\
bit_vector_concatenate( &(CONCAT_u1_u2_17316), &(CONCAT_u1_u2_17323), &(CONCAT_u2_u4_17324));\
bit_vector_cast_to_bit_vector(0, &(fp_traps), &(CONCAT_u2_u4_17324));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17334_c_macro_ __declare_static_bit_vector(OR_u1_u1_17329,1);\
__declare_static_bit_vector(OR_u1_u1_17332,1);\
__declare_static_bit_vector(OR_u1_u1_17333,1);\
bit_vector_or(&(issue_faddd), &(issue_fsubd), &(OR_u1_u1_17329));\
bit_vector_or(&(issue_fmuld), &(issue_fsmuld), &(OR_u1_u1_17332));\
bit_vector_or(&(OR_u1_u1_17329), &(OR_u1_u1_17332), &(OR_u1_u1_17333));\
bit_vector_cast_to_bit_vector(0, &(OR_u1_u1_17536_17536_delayed_3_0), &(OR_u1_u1_17333));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17337_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fdivd_17545_delayed_3_0), &(issue_fdivd));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17340_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_simd_32_17549_delayed_3_0), &(issue_simd_32));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17343_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fsqrtd_17540_delayed_3_0), &(issue_fsqrtd));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17366_c_macro_ __declare_static_bit_vector(konst_17347,64);\
bit_vector_clear(&konst_17347);\
__declare_static_bit_vector(MUX_17348,64);\
__declare_static_bit_vector(konst_17351,64);\
bit_vector_clear(&konst_17351);\
__declare_static_bit_vector(MUX_17352,64);\
__declare_static_bit_vector(OR_u64_u64_17353,64);\
__declare_static_bit_vector(konst_17356,64);\
bit_vector_clear(&konst_17356);\
__declare_static_bit_vector(MUX_17357,64);\
__declare_static_bit_vector(CONCAT_u32_u64_17361,64);\
__declare_static_bit_vector(konst_17362,64);\
bit_vector_clear(&konst_17362);\
__declare_static_bit_vector(MUX_17363,64);\
__declare_static_bit_vector(OR_u64_u64_17364,64);\
__declare_static_bit_vector(OR_u64_u64_17365,64);\
if (has_undefined_bit(&OR_u1_u1_17536_17536_delayed_3_0)) {fprintf(stderr, "Error: variable OR_u1_u1_17536_17536_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_17536_17536_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_17536_17536_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17348), &(add_sub_mul_d_result));\
}else {bit_vector_clear(&konst_17347);\
bit_vector_cast_to_bit_vector(0, &(MUX_17348), &(konst_17347));\
}if (has_undefined_bit(&issue_fsqrtd_17540_delayed_3_0)) {fprintf(stderr, "Error: variable issue_fsqrtd_17540_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&issue_fsqrtd_17540_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fsqrtd_17540_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17352), &(sqrtd_result));\
}else {bit_vector_clear(&konst_17351);\
bit_vector_cast_to_bit_vector(0, &(MUX_17352), &(konst_17351));\
}bit_vector_or(&(MUX_17348), &(MUX_17352), &(OR_u64_u64_17353));\
if (has_undefined_bit(&issue_fdivd_17545_delayed_3_0)) {fprintf(stderr, "Error: variable issue_fdivd_17545_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&issue_fdivd_17545_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fdivd_17545_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17357), &(divd_result));\
}else {bit_vector_clear(&konst_17356);\
bit_vector_cast_to_bit_vector(0, &(MUX_17357), &(konst_17356));\
}if (has_undefined_bit(&issue_simd_32_17549_delayed_3_0)) {fprintf(stderr, "Error: variable issue_simd_32_17549_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&issue_simd_32_17549_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_simd_32_17549_delayed_3_0)){bit_vector_concatenate( &(simd32_result_slow_h), &(simd32_result_slow_l), &(CONCAT_u32_u64_17361));\
bit_vector_cast_to_bit_vector(0, &(MUX_17363), &(CONCAT_u32_u64_17361));\
}else {bit_vector_clear(&konst_17362);\
bit_vector_cast_to_bit_vector(0, &(MUX_17363), &(konst_17362));\
}bit_vector_or(&(MUX_17357), &(MUX_17363), &(OR_u64_u64_17364));\
bit_vector_or(&(OR_u64_u64_17353), &(OR_u64_u64_17364), &(OR_u64_u64_17365));\
bit_vector_cast_to_bit_vector(0, &(i_result_d), &(OR_u64_u64_17365));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17372_c_macro_ __declare_static_bit_vector(konst_17370,64);\
bit_vector_clear(&konst_17370);\
__declare_static_bit_vector(MUX_17371,64);\
if (has_undefined_bit(&issue_fitod)) {fprintf(stderr, "Error: variable issue_fitod has undefined value (%s) at test point.\n", to_string(&issue_fitod));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fitod)){bit_vector_cast_to_bit_vector(0, &(MUX_17371), &(itod_result));\
}else {bit_vector_clear(&konst_17370);\
bit_vector_cast_to_bit_vector(0, &(MUX_17371), &(konst_17370));\
}bit_vector_cast_to_bit_vector(0, &(MUX_17584_17584_delayed_1_0), &(MUX_17371));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17375_c_macro_ bit_vector_cast_to_bit_vector(0, &(simd_16_flag_17585_delayed_1_0), &(simd_16_flag));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17383_c_macro_ __declare_static_bit_vector(konst_17380,64);\
bit_vector_clear(&konst_17380);\
__declare_static_bit_vector(MUX_17381,64);\
__declare_static_bit_vector(OR_u64_u64_17382,64);\
if (has_undefined_bit(&simd_16_flag_17585_delayed_1_0)) {fprintf(stderr, "Error: variable simd_16_flag_17585_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&simd_16_flag_17585_delayed_1_0));assert(0);} \
if(bit_vector_to_uint64(0, &simd_16_flag_17585_delayed_1_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17381), &(simd_16_result_64));\
}else {bit_vector_clear(&konst_17380);\
bit_vector_cast_to_bit_vector(0, &(MUX_17381), &(konst_17380));\
}bit_vector_or(&(MUX_17584_17584_delayed_1_0), &(MUX_17381), &(OR_u64_u64_17382));\
bit_vector_cast_to_bit_vector(0, &(OR_u64_u64_17589_17589_delayed_1_0), &(OR_u64_u64_17382));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17389_c_macro_ __declare_static_bit_vector(konst_17387,64);\
bit_vector_clear(&konst_17387);\
__declare_static_bit_vector(MUX_17388,64);\
if (has_undefined_bit(&issue_fstod)) {fprintf(stderr, "Error: variable issue_fstod has undefined value (%s) at test point.\n", to_string(&issue_fstod));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fstod)){bit_vector_cast_to_bit_vector(0, &(MUX_17388), &(stod_result));\
}else {bit_vector_clear(&konst_17387);\
bit_vector_cast_to_bit_vector(0, &(MUX_17388), &(konst_17387));\
}bit_vector_cast_to_bit_vector(0, &(MUX_17579_17579_delayed_2_0), &(MUX_17388));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17398_c_macro_ __declare_static_bit_vector(OR_u1_u1_17393,1);\
__declare_static_bit_vector(OR_u1_u1_17396,1);\
__declare_static_bit_vector(OR_u1_u1_17397,1);\
bit_vector_or(&(issue_faddd), &(issue_fsubd), &(OR_u1_u1_17393));\
bit_vector_or(&(issue_fsmuld), &(issue_fmuld), &(OR_u1_u1_17396));\
bit_vector_or(&(OR_u1_u1_17393), &(OR_u1_u1_17396), &(OR_u1_u1_17397));\
bit_vector_cast_to_bit_vector(0, &(OR_u1_u1_17565_17565_delayed_2_0), &(OR_u1_u1_17397));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17401_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_simd_32_17569_delayed_2_0), &(issue_simd_32));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17404_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_vfconv_17590_delayed_2_0), &(issue_vfconv));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17426_c_macro_ __declare_static_bit_vector(konst_17408,64);\
bit_vector_clear(&konst_17408);\
__declare_static_bit_vector(MUX_17409,64);\
__declare_static_bit_vector(CONCAT_u32_u64_17413,64);\
__declare_static_bit_vector(konst_17414,64);\
bit_vector_clear(&konst_17414);\
__declare_static_bit_vector(MUX_17415,64);\
__declare_static_bit_vector(OR_u64_u64_17416,64);\
__declare_static_bit_vector(OR_u64_u64_17418,64);\
__declare_static_bit_vector(konst_17422,64);\
bit_vector_clear(&konst_17422);\
__declare_static_bit_vector(MUX_17423,64);\
__declare_static_bit_vector(OR_u64_u64_17424,64);\
__declare_static_bit_vector(OR_u64_u64_17425,64);\
if (has_undefined_bit(&OR_u1_u1_17565_17565_delayed_2_0)) {fprintf(stderr, "Error: variable OR_u1_u1_17565_17565_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_17565_17565_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_17565_17565_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17409), &(round_d_result));\
}else {bit_vector_clear(&konst_17408);\
bit_vector_cast_to_bit_vector(0, &(MUX_17409), &(konst_17408));\
}if (has_undefined_bit(&issue_simd_32_17569_delayed_2_0)) {fprintf(stderr, "Error: variable issue_simd_32_17569_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&issue_simd_32_17569_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_simd_32_17569_delayed_2_0)){bit_vector_concatenate( &(simd32_result_fast_h), &(simd32_result_fast_l), &(CONCAT_u32_u64_17413));\
bit_vector_cast_to_bit_vector(0, &(MUX_17415), &(CONCAT_u32_u64_17413));\
}else {bit_vector_clear(&konst_17414);\
bit_vector_cast_to_bit_vector(0, &(MUX_17415), &(konst_17414));\
}bit_vector_or(&(MUX_17409), &(MUX_17415), &(OR_u64_u64_17416));\
bit_vector_or(&(OR_u64_u64_17416), &(MUX_17579_17579_delayed_2_0), &(OR_u64_u64_17418));\
if (has_undefined_bit(&issue_vfconv_17590_delayed_2_0)) {fprintf(stderr, "Error: variable issue_vfconv_17590_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&issue_vfconv_17590_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_vfconv_17590_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17423), &(vfconv_result_d));\
}else {bit_vector_clear(&konst_17422);\
bit_vector_cast_to_bit_vector(0, &(MUX_17423), &(konst_17422));\
}bit_vector_or(&(OR_u64_u64_17589_17589_delayed_1_0), &(MUX_17423), &(OR_u64_u64_17424));\
bit_vector_or(&(OR_u64_u64_17418), &(OR_u64_u64_17424), &(OR_u64_u64_17425));\
bit_vector_cast_to_bit_vector(0, &(i_result_d_fast), &(OR_u64_u64_17425));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17433_c_macro_ __declare_static_bit_vector(OR_u1_u1_17430,1);\
__declare_static_bit_vector(OR_u1_u1_17432,1);\
bit_vector_or(&(issue_fadds), &(issue_fsubs), &(OR_u1_u1_17430));\
bit_vector_or(&(OR_u1_u1_17430), &(issue_fmuls), &(OR_u1_u1_17432));\
bit_vector_cast_to_bit_vector(0, &(OR_u1_u1_17602_17602_delayed_3_0), &(OR_u1_u1_17432));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17436_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fdivs_17606_delayed_3_0), &(issue_fdivs));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17439_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fsqrts_17611_delayed_3_0), &(issue_fsqrts));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17442_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fdtos_17615_delayed_3_0), &(issue_fdtos));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17463_c_macro_ __declare_static_bit_vector(konst_17446,32);\
bit_vector_clear(&konst_17446);\
__declare_static_bit_vector(MUX_17447,32);\
__declare_static_bit_vector(konst_17450,32);\
bit_vector_clear(&konst_17450);\
__declare_static_bit_vector(MUX_17451,32);\
__declare_static_bit_vector(OR_u32_u32_17452,32);\
__declare_static_bit_vector(konst_17455,32);\
bit_vector_clear(&konst_17455);\
__declare_static_bit_vector(MUX_17456,32);\
__declare_static_bit_vector(konst_17459,32);\
bit_vector_clear(&konst_17459);\
__declare_static_bit_vector(MUX_17460,32);\
__declare_static_bit_vector(OR_u32_u32_17461,32);\
__declare_static_bit_vector(OR_u32_u32_17462,32);\
if (has_undefined_bit(&OR_u1_u1_17602_17602_delayed_3_0)) {fprintf(stderr, "Error: variable OR_u1_u1_17602_17602_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_17602_17602_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_17602_17602_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17447), &(add_sub_mul_s_result));\
}else {bit_vector_clear(&konst_17446);\
bit_vector_cast_to_bit_vector(0, &(MUX_17447), &(konst_17446));\
}if (has_undefined_bit(&issue_fdivs_17606_delayed_3_0)) {fprintf(stderr, "Error: variable issue_fdivs_17606_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&issue_fdivs_17606_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fdivs_17606_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17451), &(divs_result));\
}else {bit_vector_clear(&konst_17450);\
bit_vector_cast_to_bit_vector(0, &(MUX_17451), &(konst_17450));\
}bit_vector_or(&(MUX_17447), &(MUX_17451), &(OR_u32_u32_17452));\
if (has_undefined_bit(&issue_fsqrts_17611_delayed_3_0)) {fprintf(stderr, "Error: variable issue_fsqrts_17611_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&issue_fsqrts_17611_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fsqrts_17611_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17456), &(sqrts_result));\
}else {bit_vector_clear(&konst_17455);\
bit_vector_cast_to_bit_vector(0, &(MUX_17456), &(konst_17455));\
}if (has_undefined_bit(&issue_fdtos_17615_delayed_3_0)) {fprintf(stderr, "Error: variable issue_fdtos_17615_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&issue_fdtos_17615_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fdtos_17615_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17460), &(dtos_result_slow));\
}else {bit_vector_clear(&konst_17459);\
bit_vector_cast_to_bit_vector(0, &(MUX_17460), &(konst_17459));\
}bit_vector_or(&(MUX_17456), &(MUX_17460), &(OR_u32_u32_17461));\
bit_vector_or(&(OR_u32_u32_17452), &(OR_u32_u32_17461), &(OR_u32_u32_17462));\
bit_vector_cast_to_bit_vector(0, &(i_result_s), &(OR_u32_u32_17462));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17469_c_macro_ __declare_static_bit_vector(konst_17467,32);\
bit_vector_clear(&konst_17467);\
__declare_static_bit_vector(MUX_17468,32);\
if (has_undefined_bit(&triv_flag_s)) {fprintf(stderr, "Error: variable triv_flag_s has undefined value (%s) at test point.\n", to_string(&triv_flag_s));assert(0);} \
if(bit_vector_to_uint64(0, &triv_flag_s)){bit_vector_cast_to_bit_vector(0, &(MUX_17468), &(triv_result_s));\
}else {bit_vector_clear(&konst_17467);\
bit_vector_cast_to_bit_vector(0, &(MUX_17468), &(konst_17467));\
}bit_vector_cast_to_bit_vector(0, &(MUX_17634_17634_delayed_2_0), &(MUX_17468));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17476_c_macro_ __declare_static_bit_vector(OR_u1_u1_17473,1);\
__declare_static_bit_vector(OR_u1_u1_17475,1);\
bit_vector_or(&(issue_fadds), &(issue_fsubs), &(OR_u1_u1_17473));\
bit_vector_or(&(OR_u1_u1_17473), &(issue_fmuls), &(OR_u1_u1_17475));\
bit_vector_cast_to_bit_vector(0, &(OR_u1_u1_17627_17627_delayed_2_0), &(OR_u1_u1_17475));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17482_c_macro_ __declare_static_bit_vector(konst_17480,32);\
bit_vector_clear(&konst_17480);\
__declare_static_bit_vector(MUX_17481,32);\
if (has_undefined_bit(&issue_fhconv)) {fprintf(stderr, "Error: variable issue_fhconv has undefined value (%s) at test point.\n", to_string(&issue_fhconv));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fhconv)){bit_vector_cast_to_bit_vector(0, &(MUX_17481), &(fhconv_result_s));\
}else {bit_vector_clear(&konst_17480);\
bit_vector_cast_to_bit_vector(0, &(MUX_17481), &(konst_17480));\
}bit_vector_cast_to_bit_vector(0, &(MUX_17663_17663_delayed_1_0), &(MUX_17481));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17485_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_faddreduce16_17655_delayed_1_0), &(issue_faddreduce16));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17494_c_macro_ __declare_static_bit_vector(slice_17489,32);\
__declare_static_bit_vector(konst_17490,32);\
bit_vector_clear(&konst_17490);\
__declare_static_bit_vector(MUX_17491,32);\
__declare_static_bit_vector(OR_u32_u32_17493,32);\
if (has_undefined_bit(&issue_faddreduce16_17655_delayed_1_0)) {fprintf(stderr, "Error: variable issue_faddreduce16_17655_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&issue_faddreduce16_17655_delayed_1_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_faddreduce16_17655_delayed_1_0)){bit_vector_slice(&(simd_16_result_64), &(slice_17489), 0);\
bit_vector_cast_to_bit_vector(0, &(MUX_17491), &(slice_17489));\
}else {bit_vector_clear(&konst_17490);\
bit_vector_cast_to_bit_vector(0, &(MUX_17491), &(konst_17490));\
}bit_vector_or(&(MUX_17491), &(MUX_17663_17663_delayed_1_0), &(OR_u32_u32_17493));\
bit_vector_cast_to_bit_vector(0, &(OR_u32_u32_17664_17664_delayed_1_0), &(OR_u32_u32_17493));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17497_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fstoi_17636_delayed_2_0), &(issue_fstoi));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17500_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fdtoi_17640_delayed_2_0), &(issue_fdtoi));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17503_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fdtos_17646_delayed_2_0), &(issue_fdtos));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17506_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fitos_17650_delayed_2_0), &(issue_fitos));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17536_c_macro_ __declare_static_bit_vector(konst_17510,32);\
bit_vector_clear(&konst_17510);\
__declare_static_bit_vector(MUX_17511,32);\
__declare_static_bit_vector(OR_u32_u32_17513,32);\
__declare_static_bit_vector(konst_17516,32);\
bit_vector_clear(&konst_17516);\
__declare_static_bit_vector(MUX_17517,32);\
__declare_static_bit_vector(konst_17520,32);\
bit_vector_clear(&konst_17520);\
__declare_static_bit_vector(MUX_17521,32);\
__declare_static_bit_vector(OR_u32_u32_17522,32);\
__declare_static_bit_vector(OR_u32_u32_17523,32);\
__declare_static_bit_vector(konst_17526,32);\
bit_vector_clear(&konst_17526);\
__declare_static_bit_vector(MUX_17527,32);\
__declare_static_bit_vector(konst_17530,32);\
bit_vector_clear(&konst_17530);\
__declare_static_bit_vector(MUX_17531,32);\
__declare_static_bit_vector(OR_u32_u32_17532,32);\
__declare_static_bit_vector(OR_u32_u32_17534,32);\
__declare_static_bit_vector(OR_u32_u32_17535,32);\
if (has_undefined_bit(&OR_u1_u1_17627_17627_delayed_2_0)) {fprintf(stderr, "Error: variable OR_u1_u1_17627_17627_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_17627_17627_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_17627_17627_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17511), &(round_s_result));\
}else {bit_vector_clear(&konst_17510);\
bit_vector_cast_to_bit_vector(0, &(MUX_17511), &(konst_17510));\
}bit_vector_or(&(MUX_17511), &(MUX_17634_17634_delayed_2_0), &(OR_u32_u32_17513));\
if (has_undefined_bit(&issue_fstoi_17636_delayed_2_0)) {fprintf(stderr, "Error: variable issue_fstoi_17636_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&issue_fstoi_17636_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fstoi_17636_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17517), &(stoi_result));\
}else {bit_vector_clear(&konst_17516);\
bit_vector_cast_to_bit_vector(0, &(MUX_17517), &(konst_17516));\
}if (has_undefined_bit(&issue_fdtoi_17640_delayed_2_0)) {fprintf(stderr, "Error: variable issue_fdtoi_17640_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&issue_fdtoi_17640_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fdtoi_17640_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17521), &(dtoi_result));\
}else {bit_vector_clear(&konst_17520);\
bit_vector_cast_to_bit_vector(0, &(MUX_17521), &(konst_17520));\
}bit_vector_or(&(MUX_17517), &(MUX_17521), &(OR_u32_u32_17522));\
bit_vector_or(&(OR_u32_u32_17513), &(OR_u32_u32_17522), &(OR_u32_u32_17523));\
if (has_undefined_bit(&issue_fdtos_17646_delayed_2_0)) {fprintf(stderr, "Error: variable issue_fdtos_17646_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&issue_fdtos_17646_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fdtos_17646_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17527), &(dtos_result_fast));\
}else {bit_vector_clear(&konst_17526);\
bit_vector_cast_to_bit_vector(0, &(MUX_17527), &(konst_17526));\
}if (has_undefined_bit(&issue_fitos_17650_delayed_2_0)) {fprintf(stderr, "Error: variable issue_fitos_17650_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&issue_fitos_17650_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fitos_17650_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17531), &(itos_result));\
}else {bit_vector_clear(&konst_17530);\
bit_vector_cast_to_bit_vector(0, &(MUX_17531), &(konst_17530));\
}bit_vector_or(&(MUX_17527), &(MUX_17531), &(OR_u32_u32_17532));\
bit_vector_or(&(OR_u32_u32_17532), &(OR_u32_u32_17664_17664_delayed_1_0), &(OR_u32_u32_17534));\
bit_vector_or(&(OR_u32_u32_17523), &(OR_u32_u32_17534), &(OR_u32_u32_17535));\
bit_vector_cast_to_bit_vector(0, &(i_result_s_fast), &(OR_u32_u32_17535));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17545_c_macro_ __declare_static_bit_vector(OR_u1_u1_17540,1);\
__declare_static_bit_vector(OR_u1_u1_17543,1);\
__declare_static_bit_vector(OR_u1_u1_17544,1);\
bit_vector_or(&(issue_fcmps), &(issue_fcmpes), &(OR_u1_u1_17540));\
bit_vector_or(&(issue_fcmpd), &(issue_fcmped), &(OR_u1_u1_17543));\
bit_vector_or(&(OR_u1_u1_17540), &(OR_u1_u1_17543), &(OR_u1_u1_17544));\
bit_vector_cast_to_bit_vector(0, &(update_fcc), &(OR_u1_u1_17544));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17566_c_macro_ __declare_static_bit_vector(konst_17549,2);\
bit_vector_clear(&konst_17549);\
__declare_static_bit_vector(MUX_17550,2);\
__declare_static_bit_vector(konst_17553,2);\
bit_vector_clear(&konst_17553);\
__declare_static_bit_vector(MUX_17554,2);\
__declare_static_bit_vector(OR_u2_u2_17555,2);\
__declare_static_bit_vector(konst_17558,2);\
bit_vector_clear(&konst_17558);\
__declare_static_bit_vector(MUX_17559,2);\
__declare_static_bit_vector(konst_17562,2);\
bit_vector_clear(&konst_17562);\
__declare_static_bit_vector(MUX_17563,2);\
__declare_static_bit_vector(OR_u2_u2_17564,2);\
__declare_static_bit_vector(OR_u2_u2_17565,2);\
if (has_undefined_bit(&issue_fcmps)) {fprintf(stderr, "Error: variable issue_fcmps has undefined value (%s) at test point.\n", to_string(&issue_fcmps));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fcmps)){bit_vector_cast_to_bit_vector(0, &(MUX_17550), &(cmps_flags));\
}else {bit_vector_clear(&konst_17549);\
bit_vector_cast_to_bit_vector(0, &(MUX_17550), &(konst_17549));\
}if (has_undefined_bit(&issue_fcmpes)) {fprintf(stderr, "Error: variable issue_fcmpes has undefined value (%s) at test point.\n", to_string(&issue_fcmpes));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fcmpes)){bit_vector_cast_to_bit_vector(0, &(MUX_17554), &(cmpes_flags));\
}else {bit_vector_clear(&konst_17553);\
bit_vector_cast_to_bit_vector(0, &(MUX_17554), &(konst_17553));\
}bit_vector_or(&(MUX_17550), &(MUX_17554), &(OR_u2_u2_17555));\
if (has_undefined_bit(&issue_fcmpd)) {fprintf(stderr, "Error: variable issue_fcmpd has undefined value (%s) at test point.\n", to_string(&issue_fcmpd));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fcmpd)){bit_vector_cast_to_bit_vector(0, &(MUX_17559), &(cmpd_flags));\
}else {bit_vector_clear(&konst_17558);\
bit_vector_cast_to_bit_vector(0, &(MUX_17559), &(konst_17558));\
}if (has_undefined_bit(&issue_fcmped)) {fprintf(stderr, "Error: variable issue_fcmped has undefined value (%s) at test point.\n", to_string(&issue_fcmped));assert(0);} \
if(bit_vector_to_uint64(0, &issue_fcmped)){bit_vector_cast_to_bit_vector(0, &(MUX_17563), &(cmped_flags));\
}else {bit_vector_clear(&konst_17562);\
bit_vector_cast_to_bit_vector(0, &(MUX_17563), &(konst_17562));\
}bit_vector_or(&(MUX_17559), &(MUX_17563), &(OR_u2_u2_17564));\
bit_vector_or(&(OR_u2_u2_17555), &(OR_u2_u2_17564), &(OR_u2_u2_17565));\
bit_vector_cast_to_bit_vector(0, &(updated_fcc), &(OR_u2_u2_17565));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17570_c_macro_ __declare_static_bit_vector(slice_17569,32);\
bit_vector_slice(&(i_result_d), &(slice_17569), 32);\
bit_vector_cast_to_bit_vector(0, &(i_result_d_h), &(slice_17569));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17574_c_macro_ __declare_static_bit_vector(slice_17573,32);\
bit_vector_slice(&(i_result_d), &(slice_17573), 0);\
bit_vector_cast_to_bit_vector(0, &(i_result_d_l), &(slice_17573));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17578_c_macro_ __declare_static_bit_vector(slice_17577,32);\
bit_vector_slice(&(i_result_d_fast), &(slice_17577), 32);\
bit_vector_cast_to_bit_vector(0, &(i_result_d_h_fast), &(slice_17577));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17582_c_macro_ __declare_static_bit_vector(slice_17581,32);\
bit_vector_slice(&(i_result_d_fast), &(slice_17581), 0);\
bit_vector_cast_to_bit_vector(0, &(i_result_d_l_fast), &(slice_17581));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17603_c_macro_ __declare_static_bit_vector(OR_u1_u1_17586,1);\
__declare_static_bit_vector(OR_u1_u1_17588,1);\
__declare_static_bit_vector(OR_u1_u1_17591,1);\
__declare_static_bit_vector(OR_u1_u1_17592,1);\
__declare_static_bit_vector(OR_u1_u1_17595,1);\
__declare_static_bit_vector(OR_u1_u1_17597,1);\
__declare_static_bit_vector(OR_u1_u1_17600,1);\
__declare_static_bit_vector(OR_u1_u1_17601,1);\
__declare_static_bit_vector(OR_u1_u1_17602,1);\
bit_vector_or(&(issue_faddd), &(issue_fsubd), &(OR_u1_u1_17586));\
bit_vector_or(&(OR_u1_u1_17586), &(issue_fmuld), &(OR_u1_u1_17588));\
bit_vector_or(&(issue_fsqrtd), &(issue_fsmuld), &(OR_u1_u1_17591));\
bit_vector_or(&(OR_u1_u1_17588), &(OR_u1_u1_17591), &(OR_u1_u1_17592));\
bit_vector_or(&(issue_fdivd), &(issue_fitod), &(OR_u1_u1_17595));\
bit_vector_or(&(OR_u1_u1_17595), &(issue_fstod), &(OR_u1_u1_17597));\
bit_vector_or(&(simd_alu), &(issue_vfconv), &(OR_u1_u1_17600));\
bit_vector_or(&(OR_u1_u1_17597), &(OR_u1_u1_17600), &(OR_u1_u1_17601));\
bit_vector_or(&(OR_u1_u1_17592), &(OR_u1_u1_17601), &(OR_u1_u1_17602));\
bit_vector_cast_to_bit_vector(0, &(is_double_result), &(OR_u1_u1_17602));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17632_c_macro_ __declare_static_bit_vector(OR_u1_u1_17607,1);\
__declare_static_bit_vector(OR_u1_u1_17610,1);\
__declare_static_bit_vector(OR_u1_u1_17611,1);\
__declare_static_bit_vector(OR_u1_u1_17614,1);\
__declare_static_bit_vector(OR_u1_u1_17616,1);\
__declare_static_bit_vector(OR_u1_u1_17617,1);\
__declare_static_bit_vector(OR_u1_u1_17620,1);\
__declare_static_bit_vector(OR_u1_u1_17623,1);\
__declare_static_bit_vector(OR_u1_u1_17624,1);\
__declare_static_bit_vector(OR_u1_u1_17627,1);\
__declare_static_bit_vector(OR_u1_u1_17629,1);\
__declare_static_bit_vector(OR_u1_u1_17630,1);\
__declare_static_bit_vector(OR_u1_u1_17631,1);\
bit_vector_or(&(issue_fadds), &(issue_fsubs), &(OR_u1_u1_17607));\
bit_vector_or(&(issue_fmuls), &(issue_fsqrts), &(OR_u1_u1_17610));\
bit_vector_or(&(OR_u1_u1_17607), &(OR_u1_u1_17610), &(OR_u1_u1_17611));\
bit_vector_or(&(issue_fdivs), &(issue_fmovs), &(OR_u1_u1_17614));\
bit_vector_or(&(OR_u1_u1_17614), &(issue_fnegs), &(OR_u1_u1_17616));\
bit_vector_or(&(OR_u1_u1_17611), &(OR_u1_u1_17616), &(OR_u1_u1_17617));\
bit_vector_or(&(issue_fabss), &(issue_fdtoi), &(OR_u1_u1_17620));\
bit_vector_or(&(issue_fstoi), &(issue_fdtos), &(OR_u1_u1_17623));\
bit_vector_or(&(OR_u1_u1_17620), &(OR_u1_u1_17623), &(OR_u1_u1_17624));\
bit_vector_or(&(issue_fitos), &(issue_faddreduce16), &(OR_u1_u1_17627));\
bit_vector_or(&(OR_u1_u1_17627), &(issue_fhconv), &(OR_u1_u1_17629));\
bit_vector_or(&(OR_u1_u1_17624), &(OR_u1_u1_17629), &(OR_u1_u1_17630));\
bit_vector_or(&(OR_u1_u1_17617), &(OR_u1_u1_17630), &(OR_u1_u1_17631));\
bit_vector_cast_to_bit_vector(0, &(is_single_result), &(OR_u1_u1_17631));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17635_c_macro_ bit_vector_cast_to_bit_vector(0, &(is_double_result_17765_delayed_3_0), &(is_double_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17641_c_macro_ __declare_static_bit_vector(MUX_17640,32);\
if (has_undefined_bit(&is_double_result_17765_delayed_3_0)) {fprintf(stderr, "Error: variable is_double_result_17765_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&is_double_result_17765_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &is_double_result_17765_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17640), &(i_result_d_h));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_17640), &(ZERO_32));\
}bit_vector_cast_to_bit_vector(0, &(wb_h), &(MUX_17640));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17644_c_macro_ bit_vector_cast_to_bit_vector(0, &(is_double_result_17771_delayed_3_0), &(is_double_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17647_c_macro_ bit_vector_cast_to_bit_vector(0, &(is_single_result_17775_delayed_3_0), &(is_single_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17658_c_macro_ __declare_static_bit_vector(konst_17651,32);\
bit_vector_clear(&konst_17651);\
__declare_static_bit_vector(MUX_17652,32);\
__declare_static_bit_vector(konst_17655,32);\
bit_vector_clear(&konst_17655);\
__declare_static_bit_vector(MUX_17656,32);\
__declare_static_bit_vector(OR_u32_u32_17657,32);\
if (has_undefined_bit(&is_double_result_17771_delayed_3_0)) {fprintf(stderr, "Error: variable is_double_result_17771_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&is_double_result_17771_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &is_double_result_17771_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17652), &(i_result_d_l));\
}else {bit_vector_clear(&konst_17651);\
bit_vector_cast_to_bit_vector(0, &(MUX_17652), &(konst_17651));\
}if (has_undefined_bit(&is_single_result_17775_delayed_3_0)) {fprintf(stderr, "Error: variable is_single_result_17775_delayed_3_0 has undefined value (%s) at test point.\n", to_string(&is_single_result_17775_delayed_3_0));assert(0);} \
if(bit_vector_to_uint64(0, &is_single_result_17775_delayed_3_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17656), &(i_result_s));\
}else {bit_vector_clear(&konst_17655);\
bit_vector_cast_to_bit_vector(0, &(MUX_17656), &(konst_17655));\
}bit_vector_or(&(MUX_17652), &(MUX_17656), &(OR_u32_u32_17657));\
bit_vector_cast_to_bit_vector(0, &(wb_l), &(OR_u32_u32_17657));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17661_c_macro_ bit_vector_cast_to_bit_vector(0, &(is_double_result_17782_delayed_2_0), &(is_double_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17667_c_macro_ __declare_static_bit_vector(MUX_17666,32);\
if (has_undefined_bit(&is_double_result_17782_delayed_2_0)) {fprintf(stderr, "Error: variable is_double_result_17782_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&is_double_result_17782_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &is_double_result_17782_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17666), &(i_result_d_h_fast));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_17666), &(ZERO_32));\
}bit_vector_cast_to_bit_vector(0, &(wb_h_fast), &(MUX_17666));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17670_c_macro_ bit_vector_cast_to_bit_vector(0, &(is_double_result_17788_delayed_2_0), &(is_double_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17673_c_macro_ bit_vector_cast_to_bit_vector(0, &(is_single_result_17792_delayed_2_0), &(is_single_result));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17684_c_macro_ __declare_static_bit_vector(konst_17677,32);\
bit_vector_clear(&konst_17677);\
__declare_static_bit_vector(MUX_17678,32);\
__declare_static_bit_vector(konst_17681,32);\
bit_vector_clear(&konst_17681);\
__declare_static_bit_vector(MUX_17682,32);\
__declare_static_bit_vector(OR_u32_u32_17683,32);\
if (has_undefined_bit(&is_double_result_17788_delayed_2_0)) {fprintf(stderr, "Error: variable is_double_result_17788_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&is_double_result_17788_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &is_double_result_17788_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17678), &(i_result_d_l_fast));\
}else {bit_vector_clear(&konst_17677);\
bit_vector_cast_to_bit_vector(0, &(MUX_17678), &(konst_17677));\
}if (has_undefined_bit(&is_single_result_17792_delayed_2_0)) {fprintf(stderr, "Error: variable is_single_result_17792_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&is_single_result_17792_delayed_2_0));assert(0);} \
if(bit_vector_to_uint64(0, &is_single_result_17792_delayed_2_0)){bit_vector_cast_to_bit_vector(0, &(MUX_17682), &(i_result_s_fast));\
}else {bit_vector_clear(&konst_17681);\
bit_vector_cast_to_bit_vector(0, &(MUX_17682), &(konst_17681));\
}bit_vector_or(&(MUX_17678), &(MUX_17682), &(OR_u32_u32_17683));\
bit_vector_cast_to_bit_vector(0, &(wb_l_fast), &(OR_u32_u32_17683));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17693_c_macro_ __declare_static_bit_vector(OR_u1_u1_17688,1);\
__declare_static_bit_vector(OR_u1_u1_17691,1);\
__declare_static_bit_vector(OR_u1_u1_17692,1);\
bit_vector_or(&(issue_fdivs), &(issue_fdivd), &(OR_u1_u1_17688));\
bit_vector_or(&(issue_fsqrts), &(issue_fsqrtd), &(OR_u1_u1_17691));\
bit_vector_or(&(OR_u1_u1_17688), &(OR_u1_u1_17691), &(OR_u1_u1_17692));\
bit_vector_cast_to_bit_vector(0, &(OR_u1_u1_17805_17805_delayed_2_0), &(OR_u1_u1_17692));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17696_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_dp_fmul_17806_delayed_2_0), &(use_dp_fmul));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17699_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_dp_fadder_17810_delayed_2_0), &(use_dp_fadder));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17702_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_faddervs_17814_delayed_1_0), &(use_faddervs));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17707_c_macro_ __declare_static_bit_vector(AND_u1_u1_17706,1);\
bit_vector_and(&(use_faddervs_17814_delayed_1_0), &(vs_addsub_needs_norm), &(AND_u1_u1_17706));\
bit_vector_cast_to_bit_vector(0, &(AND_u1_u1_17816_17816_delayed_1_0), &(AND_u1_u1_17706));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17710_c_macro_ bit_vector_cast_to_bit_vector(0, &(use_fmulvs_17817_delayed_2_0), &(use_fmulvs));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17713_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fdtos_17821_delayed_2_0), &(issue_fdtos));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17734_c_macro_ __declare_static_bit_vector(AND_u1_u1_17718,1);\
__declare_static_bit_vector(OR_u1_u1_17719,1);\
__declare_static_bit_vector(AND_u1_u1_17722,1);\
__declare_static_bit_vector(OR_u1_u1_17723,1);\
__declare_static_bit_vector(AND_u1_u1_17727,1);\
__declare_static_bit_vector(OR_u1_u1_17728,1);\
__declare_static_bit_vector(AND_u1_u1_17731,1);\
__declare_static_bit_vector(OR_u1_u1_17732,1);\
__declare_static_bit_vector(OR_u1_u1_17733,1);\
bit_vector_and(&(use_dp_fmul_17806_delayed_2_0), &(denormalize_flag_mul), &(AND_u1_u1_17718));\
bit_vector_or(&(OR_u1_u1_17805_17805_delayed_2_0), &(AND_u1_u1_17718), &(OR_u1_u1_17719));\
bit_vector_and(&(use_dp_fadder_17810_delayed_2_0), &(denormalize_flag_add), &(AND_u1_u1_17722));\
bit_vector_or(&(OR_u1_u1_17719), &(AND_u1_u1_17722), &(OR_u1_u1_17723));\
bit_vector_and(&(use_fmulvs_17817_delayed_2_0), &(vs_mul_needs_norm), &(AND_u1_u1_17727));\
bit_vector_or(&(AND_u1_u1_17816_17816_delayed_1_0), &(AND_u1_u1_17727), &(OR_u1_u1_17728));\
bit_vector_and(&(issue_fdtos_17821_delayed_2_0), &(denorm_double_to_single), &(AND_u1_u1_17731));\
bit_vector_or(&(OR_u1_u1_17728), &(AND_u1_u1_17731), &(OR_u1_u1_17732));\
bit_vector_or(&(OR_u1_u1_17723), &(OR_u1_u1_17732), &(OR_u1_u1_17733));\
bit_vector_cast_to_bit_vector(0, &(fast_is_not_valid), &(OR_u1_u1_17733));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17738_c_macro_ __declare_static_bit_vector(NOT_u1_u1_17737,1);\
bit_vector_not( &(fp_dti), &(NOT_u1_u1_17737));\
bit_vector_cast_to_bit_vector(0, &(NOT_u1_u1_17834_17834_delayed_2_0), &(NOT_u1_u1_17737));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17742_c_macro_ __declare_static_bit_vector(NOT_u1_u1_17741,1);\
bit_vector_not( &(skip_fp), &(NOT_u1_u1_17741));\
bit_vector_cast_to_bit_vector(0, &(NOT_u1_u1_17829_17829_delayed_2_0), &(NOT_u1_u1_17741));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17749_c_macro_ __declare_static_bit_vector(NOT_u1_u1_17745,1);\
__declare_static_bit_vector(NOT_u1_u1_17747,1);\
__declare_static_bit_vector(AND_u1_u1_17748,1);\
bit_vector_not( &(do_not_bypass), &(NOT_u1_u1_17745));\
bit_vector_not( &(issue_fbfcc), &(NOT_u1_u1_17747));\
bit_vector_and(&(NOT_u1_u1_17745), &(NOT_u1_u1_17747), &(AND_u1_u1_17748));\
bit_vector_cast_to_bit_vector(0, &(AND_u1_u1_17840_17840_delayed_2_0), &(AND_u1_u1_17748));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17759_c_macro_ __declare_static_bit_vector(NOT_u1_u1_17753,1);\
__declare_static_bit_vector(AND_u1_u1_17754,1);\
__declare_static_bit_vector(AND_u1_u1_17756,1);\
__declare_static_bit_vector(AND_u1_u1_17758,1);\
bit_vector_not( &(fast_is_not_valid), &(NOT_u1_u1_17753));\
bit_vector_and(&(NOT_u1_u1_17829_17829_delayed_2_0), &(NOT_u1_u1_17753), &(AND_u1_u1_17754));\
bit_vector_and(&(AND_u1_u1_17754), &(NOT_u1_u1_17834_17834_delayed_2_0), &(AND_u1_u1_17756));\
bit_vector_and(&(AND_u1_u1_17756), &(AND_u1_u1_17840_17840_delayed_2_0), &(AND_u1_u1_17758));\
bit_vector_cast_to_bit_vector(0, &(send_bypass), &(AND_u1_u1_17758));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17798_c_macro_ __declare_static_bit_vector(OR_u1_u1_17763,1);\
__declare_static_bit_vector(OR_u1_u1_17765,1);\
__declare_static_bit_vector(OR_u1_u1_17768,1);\
__declare_static_bit_vector(OR_u1_u1_17769,1);\
__declare_static_bit_vector(OR_u1_u1_17772,1);\
__declare_static_bit_vector(OR_u1_u1_17774,1);\
__declare_static_bit_vector(OR_u1_u1_17777,1);\
__declare_static_bit_vector(OR_u1_u1_17778,1);\
__declare_static_bit_vector(OR_u1_u1_17779,1);\
__declare_static_bit_vector(OR_u1_u1_17782,1);\
__declare_static_bit_vector(OR_u1_u1_17784,1);\
__declare_static_bit_vector(OR_u1_u1_17787,1);\
__declare_static_bit_vector(OR_u1_u1_17788,1);\
__declare_static_bit_vector(OR_u1_u1_17791,1);\
__declare_static_bit_vector(OR_u1_u1_17794,1);\
__declare_static_bit_vector(OR_u1_u1_17795,1);\
__declare_static_bit_vector(OR_u1_u1_17796,1);\
__declare_static_bit_vector(OR_u1_u1_17797,1);\
bit_vector_or(&(issue_fadds), &(issue_fsubs), &(OR_u1_u1_17763));\
bit_vector_or(&(OR_u1_u1_17763), &(issue_fmuls), &(OR_u1_u1_17765));\
bit_vector_or(&(issue_fmovs), &(issue_fnegs), &(OR_u1_u1_17768));\
bit_vector_or(&(OR_u1_u1_17765), &(OR_u1_u1_17768), &(OR_u1_u1_17769));\
bit_vector_or(&(issue_fabss), &(issue_fstoi), &(OR_u1_u1_17772));\
bit_vector_or(&(OR_u1_u1_17772), &(issue_fdtoi), &(OR_u1_u1_17774));\
bit_vector_or(&(issue_fitos), &(issue_faddd), &(OR_u1_u1_17777));\
bit_vector_or(&(OR_u1_u1_17774), &(OR_u1_u1_17777), &(OR_u1_u1_17778));\
bit_vector_or(&(OR_u1_u1_17769), &(OR_u1_u1_17778), &(OR_u1_u1_17779));\
bit_vector_or(&(issue_fsubd), &(issue_fsmuld), &(OR_u1_u1_17782));\
bit_vector_or(&(OR_u1_u1_17782), &(issue_fmuld), &(OR_u1_u1_17784));\
bit_vector_or(&(issue_fstod), &(issue_fitod), &(OR_u1_u1_17787));\
bit_vector_or(&(OR_u1_u1_17784), &(OR_u1_u1_17787), &(OR_u1_u1_17788));\
bit_vector_or(&(simd_alu), &(issue_faddreduce16), &(OR_u1_u1_17791));\
bit_vector_or(&(issue_fstoh), &(issue_fhtos), &(OR_u1_u1_17794));\
bit_vector_or(&(OR_u1_u1_17791), &(OR_u1_u1_17794), &(OR_u1_u1_17795));\
bit_vector_or(&(OR_u1_u1_17788), &(OR_u1_u1_17795), &(OR_u1_u1_17796));\
bit_vector_or(&(OR_u1_u1_17779), &(OR_u1_u1_17796), &(OR_u1_u1_17797));\
bit_vector_cast_to_bit_vector(0, &(write_reg_flag), &(OR_u1_u1_17797));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17834_c_macro_ __declare_static_bit_vector(AND_u1_u1_17802,1);\
__declare_static_bit_vector(konst_17803,3);\
bit_vector_clear(&konst_17803);\
konst_17803.val.byte_array[0] = 3;\
__declare_static_bit_vector(type_cast_17804,3);\
bit_vector_clear(&type_cast_17804);\
type_cast_17804.val.byte_array[0] = 3;\
__declare_static_bit_vector(konst_17805,3);\
bit_vector_clear(&konst_17805);\
__declare_static_bit_vector(MUX_17806,3);\
__declare_static_bit_vector(AND_u1_u1_17809,1);\
__declare_static_bit_vector(konst_17810,3);\
bit_vector_clear(&konst_17810);\
konst_17810.val.byte_array[0] = 6;\
__declare_static_bit_vector(type_cast_17811,3);\
bit_vector_clear(&type_cast_17811);\
type_cast_17811.val.byte_array[0] = 6;\
__declare_static_bit_vector(konst_17812,3);\
bit_vector_clear(&konst_17812);\
__declare_static_bit_vector(MUX_17813,3);\
__declare_static_bit_vector(OR_u3_u3_17814,3);\
__declare_static_bit_vector(AND_u1_u1_17817,1);\
__declare_static_bit_vector(konst_17818,3);\
bit_vector_clear(&konst_17818);\
konst_17818.val.byte_array[0] = 4;\
__declare_static_bit_vector(type_cast_17819,3);\
bit_vector_clear(&type_cast_17819);\
type_cast_17819.val.byte_array[0] = 4;\
__declare_static_bit_vector(konst_17820,3);\
bit_vector_clear(&konst_17820);\
__declare_static_bit_vector(MUX_17821,3);\
__declare_static_bit_vector(NOT_u1_u1_17824,1);\
__declare_static_bit_vector(AND_u1_u1_17825,1);\
__declare_static_bit_vector(AND_u1_u1_17827,1);\
__declare_static_bit_vector(konst_17828,3);\
bit_vector_clear(&konst_17828);\
konst_17828.val.byte_array[0] = 1;\
__declare_static_bit_vector(type_cast_17829,3);\
bit_vector_clear(&type_cast_17829);\
type_cast_17829.val.byte_array[0] = 1;\
__declare_static_bit_vector(konst_17830,3);\
bit_vector_clear(&konst_17830);\
__declare_static_bit_vector(MUX_17831,3);\
__declare_static_bit_vector(OR_u3_u3_17832,3);\
__declare_static_bit_vector(OR_u3_u3_17833,3);\
bit_vector_and(&(uses_fu1), &(unimpl_instr), &(AND_u1_u1_17802));\
if (has_undefined_bit(&AND_u1_u1_17802)) {fprintf(stderr, "Error: variable AND_u1_u1_17802 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_17802));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_17802)){bit_vector_clear(&konst_17803);\
konst_17803.val.byte_array[0] = 3;\
bit_vector_bitcast_to_bit_vector( &(type_cast_17804), &(konst_17803));\
bit_vector_cast_to_bit_vector(0, &(MUX_17806), &(type_cast_17804));\
}else {bit_vector_clear(&konst_17805);\
bit_vector_cast_to_bit_vector(0, &(MUX_17806), &(konst_17805));\
}bit_vector_and(&(uses_fu1), &(invalid_reg), &(AND_u1_u1_17809));\
if (has_undefined_bit(&AND_u1_u1_17809)) {fprintf(stderr, "Error: variable AND_u1_u1_17809 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_17809));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_17809)){bit_vector_clear(&konst_17810);\
konst_17810.val.byte_array[0] = 6;\
bit_vector_bitcast_to_bit_vector( &(type_cast_17811), &(konst_17810));\
bit_vector_cast_to_bit_vector(0, &(MUX_17813), &(type_cast_17811));\
}else {bit_vector_clear(&konst_17812);\
bit_vector_cast_to_bit_vector(0, &(MUX_17813), &(konst_17812));\
}bit_vector_or(&(MUX_17806), &(MUX_17813), &(OR_u3_u3_17814));\
bit_vector_and(&(uses_fu1), &(seq_error), &(AND_u1_u1_17817));\
if (has_undefined_bit(&AND_u1_u1_17817)) {fprintf(stderr, "Error: variable AND_u1_u1_17817 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_17817));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_17817)){bit_vector_clear(&konst_17818);\
konst_17818.val.byte_array[0] = 4;\
bit_vector_bitcast_to_bit_vector( &(type_cast_17819), &(konst_17818));\
bit_vector_cast_to_bit_vector(0, &(MUX_17821), &(type_cast_17819));\
}else {bit_vector_clear(&konst_17820);\
bit_vector_cast_to_bit_vector(0, &(MUX_17821), &(konst_17820));\
}bit_vector_not( &(decode_trap), &(NOT_u1_u1_17824));\
bit_vector_and(&(uses_fu1), &(NOT_u1_u1_17824), &(AND_u1_u1_17825));\
bit_vector_and(&(AND_u1_u1_17825), &(ieee_754_exception), &(AND_u1_u1_17827));\
if (has_undefined_bit(&AND_u1_u1_17827)) {fprintf(stderr, "Error: variable AND_u1_u1_17827 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_17827));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_17827)){bit_vector_clear(&konst_17828);\
konst_17828.val.byte_array[0] = 1;\
bit_vector_bitcast_to_bit_vector( &(type_cast_17829), &(konst_17828));\
bit_vector_cast_to_bit_vector(0, &(MUX_17831), &(type_cast_17829));\
}else {bit_vector_clear(&konst_17830);\
bit_vector_cast_to_bit_vector(0, &(MUX_17831), &(konst_17830));\
}bit_vector_or(&(MUX_17821), &(MUX_17831), &(OR_u3_u3_17832));\
bit_vector_or(&(OR_u3_u3_17814), &(OR_u3_u3_17832), &(OR_u3_u3_17833));\
bit_vector_cast_to_bit_vector(0, &(bypass_ftt), &(OR_u3_u3_17833));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17837_c_macro_ bit_vector_cast_to_bit_vector(0, &(thread_id_17920_delayed_2_0), &(thread_id));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17842_c_macro_ __declare_static_bit_vector(CONCAT_u2_u8_17841,8);\
bit_vector_concatenate( &(stream_id), &(slot_id), &(CONCAT_u2_u8_17841));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u2_u8_17924_17924_delayed_2_0), &(CONCAT_u2_u8_17841));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17849_c_macro_ __declare_static_bit_vector(CONCAT_u1_u3_17846,3);\
__declare_static_bit_vector(CONCAT_u3_u6_17848,6);\
bit_vector_concatenate( &(update_fcc), &(updated_fcc), &(CONCAT_u1_u3_17846));\
bit_vector_concatenate( &(CONCAT_u1_u3_17846), &(bypass_ftt), &(CONCAT_u3_u6_17848));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u3_u6_17930_17930_delayed_2_0), &(CONCAT_u3_u6_17848));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17856_c_macro_ __declare_static_bit_vector(CONCAT_u5_u6_17853,6);\
__declare_static_bit_vector(CONCAT_u6_u7_17855,7);\
bit_vector_concatenate( &(cexc), &(write_reg_flag), &(CONCAT_u5_u6_17853));\
bit_vector_concatenate( &(CONCAT_u5_u6_17853), &(is_double_result), &(CONCAT_u6_u7_17855));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u6_u7_17936_17936_delayed_2_0), &(CONCAT_u6_u7_17855));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17859_c_macro_ bit_vector_cast_to_bit_vector(0, &(write_reg_id_17937_delayed_2_0), &(write_reg_id));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17876_c_macro_ __declare_static_bit_vector(CONCAT_u1_u5_17863,5);\
__declare_static_bit_vector(CONCAT_u5_u13_17865,13);\
__declare_static_bit_vector(CONCAT_u13_u19_17867,19);\
__declare_static_bit_vector(CONCAT_u5_u37_17871,37);\
__declare_static_bit_vector(CONCAT_u37_u69_17873,69);\
__declare_static_bit_vector(CONCAT_u7_u76_17874,76);\
__declare_static_bit_vector(CONCAT_u19_u95_17875,95);\
bit_vector_concatenate( &(send_bypass), &(thread_id_17920_delayed_2_0), &(CONCAT_u1_u5_17863));\
bit_vector_concatenate( &(CONCAT_u1_u5_17863), &(CONCAT_u2_u8_17924_17924_delayed_2_0), &(CONCAT_u5_u13_17865));\
bit_vector_concatenate( &(CONCAT_u5_u13_17865), &(CONCAT_u3_u6_17930_17930_delayed_2_0), &(CONCAT_u13_u19_17867));\
bit_vector_concatenate( &(write_reg_id_17937_delayed_2_0), &(wb_h_fast), &(CONCAT_u5_u37_17871));\
bit_vector_concatenate( &(CONCAT_u5_u37_17871), &(wb_l_fast), &(CONCAT_u37_u69_17873));\
bit_vector_concatenate( &(CONCAT_u6_u7_17936_17936_delayed_2_0), &(CONCAT_u37_u69_17873), &(CONCAT_u7_u76_17874));\
bit_vector_concatenate( &(CONCAT_u13_u19_17867), &(CONCAT_u7_u76_17874), &(CONCAT_u19_u95_17875));\
bit_vector_cast_to_bit_vector(0, &(bypass_to_reg_file), &(CONCAT_u19_u95_17875));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17879_c_macro_ write_bit_vector_to_pipe("noblock_fpunit_exec_bypass_signal_to_register_file",&(bypass_to_reg_file));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17882_c_macro_ bit_vector_cast_to_bit_vector(0, &(thread_id_17951_delayed_2_0), &(thread_id));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17887_c_macro_ __declare_static_bit_vector(CONCAT_u2_u8_17886,8);\
bit_vector_concatenate( &(stream_id), &(slot_id), &(CONCAT_u2_u8_17886));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u2_u8_17955_17955_delayed_2_0), &(CONCAT_u2_u8_17886));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17900_c_macro_ __declare_static_bit_vector(OR_u1_u1_17893,1);\
__declare_static_bit_vector(AND_u1_u1_17894,1);\
__declare_static_bit_vector(CONCAT_u1_u2_17895,2);\
__declare_static_bit_vector(CONCAT_u1_u5_17898,5);\
__declare_static_bit_vector(CONCAT_u2_u7_17899,7);\
bit_vector_or(&(decode_trap), &(ieee_754_exception), &(OR_u1_u1_17893));\
bit_vector_and(&(uses_fu1), &(OR_u1_u1_17893), &(AND_u1_u1_17894));\
bit_vector_concatenate( &(ZERO_1), &(AND_u1_u1_17894), &(CONCAT_u1_u2_17895));\
bit_vector_concatenate( &(ieee_754_exception), &(fp_traps), &(CONCAT_u1_u5_17898));\
bit_vector_concatenate( &(CONCAT_u1_u2_17895), &(CONCAT_u1_u5_17898), &(CONCAT_u2_u7_17899));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u2_u7_17967_17967_delayed_2_0), &(CONCAT_u2_u7_17899));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17909_c_macro_ __declare_static_bit_vector(CONCAT_u5_u8_17904,8);\
__declare_static_bit_vector(CONCAT_u1_u3_17907,3);\
__declare_static_bit_vector(CONCAT_u8_u11_17908,11);\
bit_vector_concatenate( &(cexc), &(ZERO_3), &(CONCAT_u5_u8_17904));\
bit_vector_concatenate( &(update_fcc), &(updated_fcc), &(CONCAT_u1_u3_17907));\
bit_vector_concatenate( &(CONCAT_u5_u8_17904), &(CONCAT_u1_u3_17907), &(CONCAT_u8_u11_17908));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u8_u11_17975_17975_delayed_2_0), &(CONCAT_u8_u11_17908));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17912_c_macro_ bit_vector_cast_to_bit_vector(0, &(skip_fp_17976_delayed_2_0), &(skip_fp));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17930_c_macro_ __declare_static_bit_vector(NOT_u1_u1_17915,1);\
__declare_static_bit_vector(CONCAT_u1_u5_17917,5);\
__declare_static_bit_vector(CONCAT_u5_u13_17919,13);\
__declare_static_bit_vector(CONCAT_u13_u20_17921,20);\
__declare_static_bit_vector(CONCAT_u1_u33_17925,33);\
__declare_static_bit_vector(CONCAT_u33_u65_17927,65);\
__declare_static_bit_vector(CONCAT_u11_u76_17928,76);\
__declare_static_bit_vector(CONCAT_u20_u96_17929,96);\
bit_vector_not( &(fast_is_not_valid), &(NOT_u1_u1_17915));\
bit_vector_concatenate( &(NOT_u1_u1_17915), &(thread_id_17951_delayed_2_0), &(CONCAT_u1_u5_17917));\
bit_vector_concatenate( &(CONCAT_u1_u5_17917), &(CONCAT_u2_u8_17955_17955_delayed_2_0), &(CONCAT_u5_u13_17919));\
bit_vector_concatenate( &(CONCAT_u5_u13_17919), &(CONCAT_u2_u7_17967_17967_delayed_2_0), &(CONCAT_u13_u20_17921));\
bit_vector_concatenate( &(skip_fp_17976_delayed_2_0), &(wb_h_fast), &(CONCAT_u1_u33_17925));\
bit_vector_concatenate( &(CONCAT_u1_u33_17925), &(wb_l_fast), &(CONCAT_u33_u65_17927));\
bit_vector_concatenate( &(CONCAT_u8_u11_17975_17975_delayed_2_0), &(CONCAT_u33_u65_17927), &(CONCAT_u11_u76_17928));\
bit_vector_concatenate( &(CONCAT_u13_u20_17921), &(CONCAT_u11_u76_17928), &(CONCAT_u20_u96_17929));\
bit_vector_cast_to_bit_vector(0, &(to_wb_fast), &(CONCAT_u20_u96_17929));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17933_c_macro_ bit_vector_cast_to_bit_vector(0, &(fu1_to_fu2_17984_delayed_2_0), &(fu1_to_fu2));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17937_c_macro_ if (has_undefined_bit(&fu1_to_fu2_17984_delayed_2_0)) {fprintf(stderr, "Error: variable fu1_to_fu2_17984_delayed_2_0 has undefined value (%s) at test point.\n", to_string(&fu1_to_fu2_17984_delayed_2_0));assert(0);} \
if (bit_vector_to_uint64(0, &fu1_to_fu2_17984_delayed_2_0)) {\
write_bit_vector_to_pipe("fpunit_exec_to_writeback_fast",&(to_wb_fast));\
}
;

#define fpunit_exec_exec__exec_daemon_stmt_17950_c_macro_ if (bit_vector_to_uint64(0, &fu1_to_fu2)) {\
uint32_t fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"fpunit_exec_to_writeback");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"thread_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(thread_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"stream_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(stream_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"slot_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(slot_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"ieee_754_exception");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ieee_754_exception)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"decode_trap");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(decode_trap)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"cexc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(cexc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"wb_h");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(wb_h)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"wb_l");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(wb_l)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"update_fcc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(update_fcc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"updated_fcc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(updated_fcc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__exec_daemon_stmt_17950_c_macro___print_counter,"skip_fp");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(skip_fp)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__exec_daemon_assign_stmt_17953_c_macro_ bit_vector_cast_to_bit_vector(0, &(thread_id_18003_delayed_2_0), &(thread_id));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17958_c_macro_ __declare_static_bit_vector(CONCAT_u2_u8_17957,8);\
bit_vector_concatenate( &(stream_id), &(slot_id), &(CONCAT_u2_u8_17957));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u2_u8_18007_18007_delayed_2_0), &(CONCAT_u2_u8_17957));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17971_c_macro_ __declare_static_bit_vector(OR_u1_u1_17964,1);\
__declare_static_bit_vector(AND_u1_u1_17965,1);\
__declare_static_bit_vector(CONCAT_u1_u2_17966,2);\
__declare_static_bit_vector(CONCAT_u1_u5_17969,5);\
__declare_static_bit_vector(CONCAT_u2_u7_17970,7);\
bit_vector_or(&(decode_trap), &(ieee_754_exception), &(OR_u1_u1_17964));\
bit_vector_and(&(uses_fu1), &(OR_u1_u1_17964), &(AND_u1_u1_17965));\
bit_vector_concatenate( &(ZERO_1), &(AND_u1_u1_17965), &(CONCAT_u1_u2_17966));\
bit_vector_concatenate( &(ieee_754_exception), &(fp_traps), &(CONCAT_u1_u5_17969));\
bit_vector_concatenate( &(CONCAT_u1_u2_17966), &(CONCAT_u1_u5_17969), &(CONCAT_u2_u7_17970));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u2_u7_18019_18019_delayed_2_0), &(CONCAT_u2_u7_17970));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17980_c_macro_ __declare_static_bit_vector(CONCAT_u1_u5_17975,5);\
__declare_static_bit_vector(CONCAT_u5_u13_17977,13);\
__declare_static_bit_vector(CONCAT_u13_u20_17979,20);\
bit_vector_concatenate( &(fast_is_not_valid), &(thread_id_18003_delayed_2_0), &(CONCAT_u1_u5_17975));\
bit_vector_concatenate( &(CONCAT_u1_u5_17975), &(CONCAT_u2_u8_18007_18007_delayed_2_0), &(CONCAT_u5_u13_17977));\
bit_vector_concatenate( &(CONCAT_u5_u13_17977), &(CONCAT_u2_u7_18019_18019_delayed_2_0), &(CONCAT_u13_u20_17979));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u13_u20_18020_18020_delayed_1_0), &(CONCAT_u13_u20_17979));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17989_c_macro_ __declare_static_bit_vector(CONCAT_u5_u8_17984,8);\
__declare_static_bit_vector(CONCAT_u1_u3_17987,3);\
__declare_static_bit_vector(CONCAT_u8_u11_17988,11);\
bit_vector_concatenate( &(cexc), &(ZERO_3), &(CONCAT_u5_u8_17984));\
bit_vector_concatenate( &(update_fcc), &(updated_fcc), &(CONCAT_u1_u3_17987));\
bit_vector_concatenate( &(CONCAT_u5_u8_17984), &(CONCAT_u1_u3_17987), &(CONCAT_u8_u11_17988));\
bit_vector_cast_to_bit_vector(0, &(CONCAT_u8_u11_18027_18027_delayed_3_0), &(CONCAT_u8_u11_17988));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_17992_c_macro_ bit_vector_cast_to_bit_vector(0, &(skip_fp_18028_delayed_3_0), &(skip_fp));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18003_c_macro_ __declare_static_bit_vector(CONCAT_u1_u33_17998,33);\
__declare_static_bit_vector(CONCAT_u33_u65_18000,65);\
__declare_static_bit_vector(CONCAT_u11_u76_18001,76);\
__declare_static_bit_vector(CONCAT_u20_u96_18002,96);\
bit_vector_concatenate( &(skip_fp_18028_delayed_3_0), &(wb_h), &(CONCAT_u1_u33_17998));\
bit_vector_concatenate( &(CONCAT_u1_u33_17998), &(wb_l), &(CONCAT_u33_u65_18000));\
bit_vector_concatenate( &(CONCAT_u8_u11_18027_18027_delayed_3_0), &(CONCAT_u33_u65_18000), &(CONCAT_u11_u76_18001));\
bit_vector_concatenate( &(CONCAT_u13_u20_18020_18020_delayed_1_0), &(CONCAT_u11_u76_18001), &(CONCAT_u20_u96_18002));\
bit_vector_cast_to_bit_vector(0, &(to_wb_slow), &(CONCAT_u20_u96_18002));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18006_c_macro_ bit_vector_cast_to_bit_vector(0, &(fu1_to_fu2_18037_delayed_2_0), &(fu1_to_fu2));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18011_c_macro_ __declare_static_bit_vector(AND_u1_u1_18010,1);\
bit_vector_and(&(fu1_to_fu2_18037_delayed_2_0), &(fast_is_not_valid), &(AND_u1_u1_18010));\
bit_vector_cast_to_bit_vector(0, &(send_to_slow), &(AND_u1_u1_18010));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18014_c_macro_ bit_vector_cast_to_bit_vector(0, &(send_to_slow_18041_delayed_1_0), &(send_to_slow));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18018_c_macro_ if (has_undefined_bit(&send_to_slow_18041_delayed_1_0)) {fprintf(stderr, "Error: variable send_to_slow_18041_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&send_to_slow_18041_delayed_1_0));assert(0);} \
if (bit_vector_to_uint64(0, &send_to_slow_18041_delayed_1_0)) {\
write_bit_vector_to_pipe("fpunit_exec_to_writeback_slow",&(to_wb_slow));\
}
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18021_c_macro_ bit_vector_cast_to_bit_vector(0, &(trap_or_error), &(fp_has_trapped));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18030_c_macro_ __declare_static_bit_vector(CONCAT_u4_u6_18025,6);\
__declare_static_bit_vector(CONCAT_u6_u7_18028,7);\
__declare_static_bit_vector(CONCAT_u6_u13_18029,13);\
bit_vector_concatenate( &(thread_id), &(stream_id), &(CONCAT_u4_u6_18025));\
bit_vector_concatenate( &(slot_id), &(trap_or_error), &(CONCAT_u6_u7_18028));\
bit_vector_concatenate( &(CONCAT_u4_u6_18025), &(CONCAT_u6_u7_18028), &(CONCAT_u6_u13_18029));\
bit_vector_cast_to_bit_vector(0, &(to_ls), &(CONCAT_u6_u13_18029));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18034_c_macro_ if (has_undefined_bit(&fu1_trap_to_ls)) {fprintf(stderr, "Error: variable fu1_trap_to_ls has undefined value (%s) at test point.\n", to_string(&fu1_trap_to_ls));assert(0);} \
if (bit_vector_to_uint64(0, &fu1_trap_to_ls)) {\
write_bit_vector_to_pipe("teu_fpunit_trap_to_loadstore",&(to_ls));\
}
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18043_c_macro_ __declare_static_bit_vector(CONCAT_u4_u6_18038,6);\
__declare_static_bit_vector(CONCAT_u6_u7_18041,7);\
__declare_static_bit_vector(CONCAT_u6_u13_18042,13);\
bit_vector_concatenate( &(thread_id), &(stream_id), &(CONCAT_u4_u6_18038));\
bit_vector_concatenate( &(slot_id), &(trap_or_error), &(CONCAT_u6_u7_18041));\
bit_vector_concatenate( &(CONCAT_u4_u6_18038), &(CONCAT_u6_u7_18041), &(CONCAT_u6_u13_18042));\
bit_vector_cast_to_bit_vector(0, &(to_iu), &(CONCAT_u6_u13_18042));\
;

#define fpunit_exec_exec__exec_daemon_assign_stmt_18047_c_macro_ if (has_undefined_bit(&fu1_to_iu2)) {fprintf(stderr, "Error: variable fu1_to_iu2 has undefined value (%s) at test point.\n", to_string(&fu1_to_iu2));assert(0);} \
if (bit_vector_to_uint64(0, &fu1_to_iu2)) {\
write_bit_vector_to_pipe("teu_fpunit_trap_to_iunit",&(to_iu));\
}
;

#define fpunit_exec_exec__exec_daemon_stmt_18048_c_macro_ usleep (100);\
;

#define fpunit_exec_exec__exec_daemon_branch_block_stmt_16373_c_export_apply_macro_ ;

#define fpunit_exec_exec__exec_daemon_inner_outarg_prep_macro__ ;

#define fpunit_exec_exec__exec_daemon_outer_arg_decl_macro__ ;

#define fpunit_exec_exec__exec_daemon_outer_op_xfer_macro__ ;

#define fpunit_exec_exec__exec_fbfcc_generic_inner_inarg_prep_macro__ __declare_static_bit_vector(br_cond,4);\
bit_vector_cast_to_bit_vector(0, &(br_cond), &((*__pbr_cond)));\
__declare_static_bit_vector(fcc,2);\
bit_vector_cast_to_bit_vector(0, &(fcc), &((*__pfcc)));\
__declare_static_bit_vector(annul_flag,1);\
bit_vector_cast_to_bit_vector(0, &(annul_flag), &((*__pannul_flag)));\
__declare_static_bit_vector(br_taken,1);\
__declare_static_bit_vector(annul_next,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(L,1);\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(U,1);\
__declare_static_bit_vector(br_taken_raw,1);\
__declare_static_bit_vector(branch_always,1);\

#define fpunit_exec_exec__exec_fbfcc_generic_assign_stmt_18063_c_macro_ __declare_static_bit_vector(konst_18061,2);\
bit_vector_clear(&konst_18061);\
__declare_static_bit_vector(EQ_u2_u1_18062,1);\
bit_vector_clear(&konst_18061);\
bit_vector_equal(0, &(fcc), &(konst_18061), &(EQ_u2_u1_18062));\
bit_vector_cast_to_bit_vector(0, &(E), &(EQ_u2_u1_18062));\
;

#define fpunit_exec_exec__exec_fbfcc_generic_assign_stmt_18068_c_macro_ __declare_static_bit_vector(konst_18066,2);\
bit_vector_clear(&konst_18066);\
konst_18066.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u2_u1_18067,1);\
bit_vector_clear(&konst_18066);\
konst_18066.val.byte_array[0] = 1;\
bit_vector_equal(0, &(fcc), &(konst_18066), &(EQ_u2_u1_18067));\
bit_vector_cast_to_bit_vector(0, &(L), &(EQ_u2_u1_18067));\
;

#define fpunit_exec_exec__exec_fbfcc_generic_assign_stmt_18073_c_macro_ __declare_static_bit_vector(konst_18071,2);\
bit_vector_clear(&konst_18071);\
konst_18071.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_18072,1);\
bit_vector_clear(&konst_18071);\
konst_18071.val.byte_array[0] = 2;\
bit_vector_equal(0, &(fcc), &(konst_18071), &(EQ_u2_u1_18072));\
bit_vector_cast_to_bit_vector(0, &(G), &(EQ_u2_u1_18072));\
;

#define fpunit_exec_exec__exec_fbfcc_generic_assign_stmt_18078_c_macro_ __declare_static_bit_vector(konst_18076,2);\
bit_vector_clear(&konst_18076);\
konst_18076.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_18077,1);\
bit_vector_clear(&konst_18076);\
konst_18076.val.byte_array[0] = 3;\
bit_vector_equal(0, &(fcc), &(konst_18076), &(EQ_u2_u1_18077));\
bit_vector_cast_to_bit_vector(0, &(U), &(EQ_u2_u1_18077));\
;

#define fpunit_exec_exec__exec_fbfcc_generic_assign_stmt_18207_c_macro_ __declare_static_bit_vector(konst_18081,4);\
bit_vector_clear(&konst_18081);\
konst_18081.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_18082,1);\
__declare_static_bit_vector(konst_18084,1);\
bit_vector_clear(&konst_18084);\
__declare_static_bit_vector(MUX_18085,1);\
__declare_static_bit_vector(konst_18087,4);\
bit_vector_clear(&konst_18087);\
__declare_static_bit_vector(EQ_u4_u1_18088,1);\
__declare_static_bit_vector(konst_18090,1);\
bit_vector_clear(&konst_18090);\
__declare_static_bit_vector(MUX_18091,1);\
__declare_static_bit_vector(OR_u1_u1_18092,1);\
__declare_static_bit_vector(konst_18094,4);\
bit_vector_clear(&konst_18094);\
konst_18094.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u4_u1_18095,1);\
__declare_static_bit_vector(konst_18097,1);\
bit_vector_clear(&konst_18097);\
__declare_static_bit_vector(MUX_18098,1);\
__declare_static_bit_vector(konst_18100,4);\
bit_vector_clear(&konst_18100);\
konst_18100.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_18101,1);\
__declare_static_bit_vector(konst_18103,1);\
bit_vector_clear(&konst_18103);\
__declare_static_bit_vector(MUX_18104,1);\
__declare_static_bit_vector(OR_u1_u1_18105,1);\
__declare_static_bit_vector(OR_u1_u1_18106,1);\
__declare_static_bit_vector(konst_18108,4);\
bit_vector_clear(&konst_18108);\
konst_18108.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_18109,1);\
__declare_static_bit_vector(OR_u1_u1_18112,1);\
__declare_static_bit_vector(konst_18113,1);\
bit_vector_clear(&konst_18113);\
__declare_static_bit_vector(MUX_18114,1);\
__declare_static_bit_vector(konst_18116,4);\
bit_vector_clear(&konst_18116);\
konst_18116.val.byte_array[0] = 4;\
__declare_static_bit_vector(EQ_u4_u1_18117,1);\
__declare_static_bit_vector(konst_18119,1);\
bit_vector_clear(&konst_18119);\
__declare_static_bit_vector(MUX_18120,1);\
__declare_static_bit_vector(OR_u1_u1_18121,1);\
__declare_static_bit_vector(konst_18123,4);\
bit_vector_clear(&konst_18123);\
konst_18123.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_18124,1);\
__declare_static_bit_vector(OR_u1_u1_18127,1);\
__declare_static_bit_vector(konst_18128,1);\
bit_vector_clear(&konst_18128);\
__declare_static_bit_vector(MUX_18129,1);\
__declare_static_bit_vector(konst_18131,4);\
bit_vector_clear(&konst_18131);\
konst_18131.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_18132,1);\
__declare_static_bit_vector(OR_u1_u1_18135,1);\
__declare_static_bit_vector(konst_18136,1);\
bit_vector_clear(&konst_18136);\
__declare_static_bit_vector(MUX_18137,1);\
__declare_static_bit_vector(OR_u1_u1_18138,1);\
__declare_static_bit_vector(OR_u1_u1_18139,1);\
__declare_static_bit_vector(OR_u1_u1_18140,1);\
__declare_static_bit_vector(konst_18142,4);\
bit_vector_clear(&konst_18142);\
konst_18142.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_18143,1);\
__declare_static_bit_vector(NOT_u1_u1_18145,1);\
__declare_static_bit_vector(konst_18146,1);\
bit_vector_clear(&konst_18146);\
__declare_static_bit_vector(MUX_18147,1);\
__declare_static_bit_vector(konst_18149,4);\
bit_vector_clear(&konst_18149);\
konst_18149.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_18150,1);\
__declare_static_bit_vector(konst_18152,1);\
bit_vector_clear(&konst_18152);\
__declare_static_bit_vector(MUX_18153,1);\
__declare_static_bit_vector(OR_u1_u1_18154,1);\
__declare_static_bit_vector(konst_18156,4);\
bit_vector_clear(&konst_18156);\
konst_18156.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_18157,1);\
__declare_static_bit_vector(OR_u1_u1_18160,1);\
__declare_static_bit_vector(konst_18161,1);\
bit_vector_clear(&konst_18161);\
__declare_static_bit_vector(MUX_18162,1);\
__declare_static_bit_vector(konst_18164,4);\
bit_vector_clear(&konst_18164);\
konst_18164.val.byte_array[0] = 11;\
__declare_static_bit_vector(EQ_u4_u1_18165,1);\
__declare_static_bit_vector(OR_u1_u1_18168,1);\
__declare_static_bit_vector(konst_18169,1);\
bit_vector_clear(&konst_18169);\
__declare_static_bit_vector(MUX_18170,1);\
__declare_static_bit_vector(OR_u1_u1_18171,1);\
__declare_static_bit_vector(OR_u1_u1_18172,1);\
__declare_static_bit_vector(konst_18174,4);\
bit_vector_clear(&konst_18174);\
konst_18174.val.byte_array[0] = 12;\
__declare_static_bit_vector(EQ_u4_u1_18175,1);\
__declare_static_bit_vector(NOT_u1_u1_18177,1);\
__declare_static_bit_vector(konst_18178,1);\
bit_vector_clear(&konst_18178);\
__declare_static_bit_vector(MUX_18179,1);\
__declare_static_bit_vector(konst_18181,4);\
bit_vector_clear(&konst_18181);\
konst_18181.val.byte_array[0] = 13;\
__declare_static_bit_vector(EQ_u4_u1_18182,1);\
__declare_static_bit_vector(OR_u1_u1_18185,1);\
__declare_static_bit_vector(konst_18186,1);\
bit_vector_clear(&konst_18186);\
__declare_static_bit_vector(MUX_18187,1);\
__declare_static_bit_vector(OR_u1_u1_18188,1);\
__declare_static_bit_vector(konst_18190,4);\
bit_vector_clear(&konst_18190);\
konst_18190.val.byte_array[0] = 14;\
__declare_static_bit_vector(EQ_u4_u1_18191,1);\
__declare_static_bit_vector(NOT_u1_u1_18193,1);\
__declare_static_bit_vector(konst_18194,1);\
bit_vector_clear(&konst_18194);\
__declare_static_bit_vector(MUX_18195,1);\
__declare_static_bit_vector(konst_18197,4);\
bit_vector_clear(&konst_18197);\
konst_18197.val.byte_array[0] = 15;\
__declare_static_bit_vector(EQ_u4_u1_18198,1);\
__declare_static_bit_vector(NOT_u1_u1_18200,1);\
__declare_static_bit_vector(konst_18201,1);\
bit_vector_clear(&konst_18201);\
__declare_static_bit_vector(MUX_18202,1);\
__declare_static_bit_vector(OR_u1_u1_18203,1);\
__declare_static_bit_vector(OR_u1_u1_18204,1);\
__declare_static_bit_vector(OR_u1_u1_18205,1);\
__declare_static_bit_vector(OR_u1_u1_18206,1);\
bit_vector_clear(&konst_18081);\
konst_18081.val.byte_array[0] = 8;\
bit_vector_equal(0, &(br_cond), &(konst_18081), &(EQ_u4_u1_18082));\
if (has_undefined_bit(&EQ_u4_u1_18082)) {fprintf(stderr, "Error: variable EQ_u4_u1_18082 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18082));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18082)){bit_vector_cast_to_bit_vector(0, &(MUX_18085), &(ONE_1));\
}else {bit_vector_clear(&konst_18084);\
bit_vector_cast_to_bit_vector(0, &(MUX_18085), &(konst_18084));\
}bit_vector_clear(&konst_18087);\
bit_vector_equal(0, &(br_cond), &(konst_18087), &(EQ_u4_u1_18088));\
if (has_undefined_bit(&EQ_u4_u1_18088)) {fprintf(stderr, "Error: variable EQ_u4_u1_18088 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18088));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18088)){bit_vector_cast_to_bit_vector(0, &(MUX_18091), &(ZERO_1));\
}else {bit_vector_clear(&konst_18090);\
bit_vector_cast_to_bit_vector(0, &(MUX_18091), &(konst_18090));\
}bit_vector_or(&(MUX_18085), &(MUX_18091), &(OR_u1_u1_18092));\
bit_vector_clear(&konst_18094);\
konst_18094.val.byte_array[0] = 7;\
bit_vector_equal(0, &(br_cond), &(konst_18094), &(EQ_u4_u1_18095));\
if (has_undefined_bit(&EQ_u4_u1_18095)) {fprintf(stderr, "Error: variable EQ_u4_u1_18095 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18095));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18095)){bit_vector_cast_to_bit_vector(0, &(MUX_18098), &(U));\
}else {bit_vector_clear(&konst_18097);\
bit_vector_cast_to_bit_vector(0, &(MUX_18098), &(konst_18097));\
}bit_vector_clear(&konst_18100);\
konst_18100.val.byte_array[0] = 6;\
bit_vector_equal(0, &(br_cond), &(konst_18100), &(EQ_u4_u1_18101));\
if (has_undefined_bit(&EQ_u4_u1_18101)) {fprintf(stderr, "Error: variable EQ_u4_u1_18101 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18101));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18101)){bit_vector_cast_to_bit_vector(0, &(MUX_18104), &(G));\
}else {bit_vector_clear(&konst_18103);\
bit_vector_cast_to_bit_vector(0, &(MUX_18104), &(konst_18103));\
}bit_vector_or(&(MUX_18098), &(MUX_18104), &(OR_u1_u1_18105));\
bit_vector_or(&(OR_u1_u1_18092), &(OR_u1_u1_18105), &(OR_u1_u1_18106));\
bit_vector_clear(&konst_18108);\
konst_18108.val.byte_array[0] = 5;\
bit_vector_equal(0, &(br_cond), &(konst_18108), &(EQ_u4_u1_18109));\
if (has_undefined_bit(&EQ_u4_u1_18109)) {fprintf(stderr, "Error: variable EQ_u4_u1_18109 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18109));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18109)){bit_vector_or(&(G), &(U), &(OR_u1_u1_18112));\
bit_vector_cast_to_bit_vector(0, &(MUX_18114), &(OR_u1_u1_18112));\
}else {bit_vector_clear(&konst_18113);\
bit_vector_cast_to_bit_vector(0, &(MUX_18114), &(konst_18113));\
}bit_vector_clear(&konst_18116);\
konst_18116.val.byte_array[0] = 4;\
bit_vector_equal(0, &(br_cond), &(konst_18116), &(EQ_u4_u1_18117));\
if (has_undefined_bit(&EQ_u4_u1_18117)) {fprintf(stderr, "Error: variable EQ_u4_u1_18117 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18117));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18117)){bit_vector_cast_to_bit_vector(0, &(MUX_18120), &(L));\
}else {bit_vector_clear(&konst_18119);\
bit_vector_cast_to_bit_vector(0, &(MUX_18120), &(konst_18119));\
}bit_vector_or(&(MUX_18114), &(MUX_18120), &(OR_u1_u1_18121));\
bit_vector_clear(&konst_18123);\
konst_18123.val.byte_array[0] = 3;\
bit_vector_equal(0, &(br_cond), &(konst_18123), &(EQ_u4_u1_18124));\
if (has_undefined_bit(&EQ_u4_u1_18124)) {fprintf(stderr, "Error: variable EQ_u4_u1_18124 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18124));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18124)){bit_vector_or(&(L), &(U), &(OR_u1_u1_18127));\
bit_vector_cast_to_bit_vector(0, &(MUX_18129), &(OR_u1_u1_18127));\
}else {bit_vector_clear(&konst_18128);\
bit_vector_cast_to_bit_vector(0, &(MUX_18129), &(konst_18128));\
}bit_vector_clear(&konst_18131);\
konst_18131.val.byte_array[0] = 2;\
bit_vector_equal(0, &(br_cond), &(konst_18131), &(EQ_u4_u1_18132));\
if (has_undefined_bit(&EQ_u4_u1_18132)) {fprintf(stderr, "Error: variable EQ_u4_u1_18132 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18132));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18132)){bit_vector_or(&(L), &(G), &(OR_u1_u1_18135));\
bit_vector_cast_to_bit_vector(0, &(MUX_18137), &(OR_u1_u1_18135));\
}else {bit_vector_clear(&konst_18136);\
bit_vector_cast_to_bit_vector(0, &(MUX_18137), &(konst_18136));\
}bit_vector_or(&(MUX_18129), &(MUX_18137), &(OR_u1_u1_18138));\
bit_vector_or(&(OR_u1_u1_18121), &(OR_u1_u1_18138), &(OR_u1_u1_18139));\
bit_vector_or(&(OR_u1_u1_18106), &(OR_u1_u1_18139), &(OR_u1_u1_18140));\
bit_vector_clear(&konst_18142);\
konst_18142.val.byte_array[0] = 1;\
bit_vector_equal(0, &(br_cond), &(konst_18142), &(EQ_u4_u1_18143));\
if (has_undefined_bit(&EQ_u4_u1_18143)) {fprintf(stderr, "Error: variable EQ_u4_u1_18143 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18143));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18143)){bit_vector_not( &(E), &(NOT_u1_u1_18145));\
bit_vector_cast_to_bit_vector(0, &(MUX_18147), &(NOT_u1_u1_18145));\
}else {bit_vector_clear(&konst_18146);\
bit_vector_cast_to_bit_vector(0, &(MUX_18147), &(konst_18146));\
}bit_vector_clear(&konst_18149);\
konst_18149.val.byte_array[0] = 9;\
bit_vector_equal(0, &(br_cond), &(konst_18149), &(EQ_u4_u1_18150));\
if (has_undefined_bit(&EQ_u4_u1_18150)) {fprintf(stderr, "Error: variable EQ_u4_u1_18150 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18150));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18150)){bit_vector_cast_to_bit_vector(0, &(MUX_18153), &(E));\
}else {bit_vector_clear(&konst_18152);\
bit_vector_cast_to_bit_vector(0, &(MUX_18153), &(konst_18152));\
}bit_vector_or(&(MUX_18147), &(MUX_18153), &(OR_u1_u1_18154));\
bit_vector_clear(&konst_18156);\
konst_18156.val.byte_array[0] = 10;\
bit_vector_equal(0, &(br_cond), &(konst_18156), &(EQ_u4_u1_18157));\
if (has_undefined_bit(&EQ_u4_u1_18157)) {fprintf(stderr, "Error: variable EQ_u4_u1_18157 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18157));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18157)){bit_vector_or(&(E), &(U), &(OR_u1_u1_18160));\
bit_vector_cast_to_bit_vector(0, &(MUX_18162), &(OR_u1_u1_18160));\
}else {bit_vector_clear(&konst_18161);\
bit_vector_cast_to_bit_vector(0, &(MUX_18162), &(konst_18161));\
}bit_vector_clear(&konst_18164);\
konst_18164.val.byte_array[0] = 11;\
bit_vector_equal(0, &(br_cond), &(konst_18164), &(EQ_u4_u1_18165));\
if (has_undefined_bit(&EQ_u4_u1_18165)) {fprintf(stderr, "Error: variable EQ_u4_u1_18165 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18165));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18165)){bit_vector_or(&(G), &(E), &(OR_u1_u1_18168));\
bit_vector_cast_to_bit_vector(0, &(MUX_18170), &(OR_u1_u1_18168));\
}else {bit_vector_clear(&konst_18169);\
bit_vector_cast_to_bit_vector(0, &(MUX_18170), &(konst_18169));\
}bit_vector_or(&(MUX_18162), &(MUX_18170), &(OR_u1_u1_18171));\
bit_vector_or(&(OR_u1_u1_18154), &(OR_u1_u1_18171), &(OR_u1_u1_18172));\
bit_vector_clear(&konst_18174);\
konst_18174.val.byte_array[0] = 12;\
bit_vector_equal(0, &(br_cond), &(konst_18174), &(EQ_u4_u1_18175));\
if (has_undefined_bit(&EQ_u4_u1_18175)) {fprintf(stderr, "Error: variable EQ_u4_u1_18175 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18175));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18175)){bit_vector_not( &(L), &(NOT_u1_u1_18177));\
bit_vector_cast_to_bit_vector(0, &(MUX_18179), &(NOT_u1_u1_18177));\
}else {bit_vector_clear(&konst_18178);\
bit_vector_cast_to_bit_vector(0, &(MUX_18179), &(konst_18178));\
}bit_vector_clear(&konst_18181);\
konst_18181.val.byte_array[0] = 13;\
bit_vector_equal(0, &(br_cond), &(konst_18181), &(EQ_u4_u1_18182));\
if (has_undefined_bit(&EQ_u4_u1_18182)) {fprintf(stderr, "Error: variable EQ_u4_u1_18182 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18182));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18182)){bit_vector_or(&(L), &(E), &(OR_u1_u1_18185));\
bit_vector_cast_to_bit_vector(0, &(MUX_18187), &(OR_u1_u1_18185));\
}else {bit_vector_clear(&konst_18186);\
bit_vector_cast_to_bit_vector(0, &(MUX_18187), &(konst_18186));\
}bit_vector_or(&(MUX_18179), &(MUX_18187), &(OR_u1_u1_18188));\
bit_vector_clear(&konst_18190);\
konst_18190.val.byte_array[0] = 14;\
bit_vector_equal(0, &(br_cond), &(konst_18190), &(EQ_u4_u1_18191));\
if (has_undefined_bit(&EQ_u4_u1_18191)) {fprintf(stderr, "Error: variable EQ_u4_u1_18191 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18191));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18191)){bit_vector_not( &(G), &(NOT_u1_u1_18193));\
bit_vector_cast_to_bit_vector(0, &(MUX_18195), &(NOT_u1_u1_18193));\
}else {bit_vector_clear(&konst_18194);\
bit_vector_cast_to_bit_vector(0, &(MUX_18195), &(konst_18194));\
}bit_vector_clear(&konst_18197);\
konst_18197.val.byte_array[0] = 15;\
bit_vector_equal(0, &(br_cond), &(konst_18197), &(EQ_u4_u1_18198));\
if (has_undefined_bit(&EQ_u4_u1_18198)) {fprintf(stderr, "Error: variable EQ_u4_u1_18198 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18198));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18198)){bit_vector_not( &(U), &(NOT_u1_u1_18200));\
bit_vector_cast_to_bit_vector(0, &(MUX_18202), &(NOT_u1_u1_18200));\
}else {bit_vector_clear(&konst_18201);\
bit_vector_cast_to_bit_vector(0, &(MUX_18202), &(konst_18201));\
}bit_vector_or(&(MUX_18195), &(MUX_18202), &(OR_u1_u1_18203));\
bit_vector_or(&(OR_u1_u1_18188), &(OR_u1_u1_18203), &(OR_u1_u1_18204));\
bit_vector_or(&(OR_u1_u1_18172), &(OR_u1_u1_18204), &(OR_u1_u1_18205));\
bit_vector_or(&(OR_u1_u1_18140), &(OR_u1_u1_18205), &(OR_u1_u1_18206));\
bit_vector_cast_to_bit_vector(0, &(br_taken_raw), &(OR_u1_u1_18206));\
;

#define fpunit_exec_exec__exec_fbfcc_generic_assign_stmt_18212_c_macro_ __declare_static_bit_vector(konst_18210,4);\
bit_vector_clear(&konst_18210);\
konst_18210.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_18211,1);\
bit_vector_clear(&konst_18210);\
konst_18210.val.byte_array[0] = 8;\
bit_vector_equal(0, &(br_cond), &(konst_18210), &(EQ_u4_u1_18211));\
bit_vector_cast_to_bit_vector(0, &(branch_always), &(EQ_u4_u1_18211));\
;

#define fpunit_exec_exec__exec_fbfcc_generic_assign_stmt_18220_c_macro_ __declare_static_bit_vector(AND_u1_u1_18217,1);\
__declare_static_bit_vector(MUX_18219,1);\
if (has_undefined_bit(&br_taken_raw)) {fprintf(stderr, "Error: variable br_taken_raw has undefined value (%s) at test point.\n", to_string(&br_taken_raw));assert(0);} \
if(bit_vector_to_uint64(0, &br_taken_raw)){bit_vector_and(&(branch_always), &(annul_flag), &(AND_u1_u1_18217));\
bit_vector_cast_to_bit_vector(0, &(MUX_18219), &(AND_u1_u1_18217));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_18219), &(annul_flag));\
}bit_vector_cast_to_bit_vector(0, &(annul_next), &(MUX_18219));\
;

#define fpunit_exec_exec__exec_fbfcc_generic_assign_stmt_18223_c_macro_ bit_vector_cast_to_bit_vector(0, &(br_taken), &(br_taken_raw));\
;

#define fpunit_exec_exec__exec_fbfcc_generic_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pbr_taken)), &(br_taken));\
bit_vector_cast_to_bit_vector(0, &((*__pannul_next)), &(annul_next));\
;

#define fpunit_exec_exec__exec_fhtoi16_inner_inarg_prep_macro__ __declare_static_bit_vector(uf1_h,16);\
bit_vector_cast_to_bit_vector(0, &(uf1_h), &((*__puf1_h)));\
__declare_static_bit_vector(result,16);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_sign,1);\
__declare_static_bit_vector(f1_exponent,5);\
__declare_static_bit_vector(f1_mantissa,10);\
__declare_static_bit_vector(frac_ext,26);\
__declare_static_bit_vector(unbiased_exp_h_i9,9);\
__declare_static_bit_vector(is_zero,1);\
__declare_static_bit_vector(left_shift_amount,26);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(ufrac,16);\

#define fpunit_exec_exec__exec_fhtoi16_call_stmt_9515_c_macro_ _fpunit_exec_exec_classifyFp16_( &(uf1_h), &(f1_zero), &(f1_normal), &(f1_inf), &(f1_nan));\
;

#define fpunit_exec_exec__exec_fhtoi16_call_stmt_9520_c_macro_ _fpunit_exec_exec_splitFp16_( &(uf1_h), &(f1_sign), &(f1_exponent), &(f1_mantissa));\
;

#define fpunit_exec_exec__exec_fhtoi16_assign_stmt_9527_c_macro_ __declare_static_bit_vector(CONCAT_u15_u16_9524,16);\
bit_vector_clear(&CONCAT_u15_u16_9524);\
CONCAT_u15_u16_9524.val.byte_array[0] = 1;\
__declare_static_bit_vector(CONCAT_u16_u26_9526,26);\
bit_vector_concatenate( &(ZERO_15), &(ONE_1), &(CONCAT_u15_u16_9524));\
bit_vector_concatenate( &(CONCAT_u15_u16_9524), &(f1_mantissa), &(CONCAT_u16_u26_9526));\
bit_vector_cast_to_bit_vector(0, &(frac_ext), &(CONCAT_u16_u26_9526));\
;

#define fpunit_exec_exec__exec_fhtoi16_assign_stmt_9534_c_macro_ __declare_static_bit_vector(type_cast_9531,9);\
__declare_static_bit_vector(konst_9532,9);\
bit_vector_clear(&konst_9532);\
konst_9532.val.byte_array[0] = 15;\
__declare_static_bit_vector(SUB_i9_i9_9533,9);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9531), &(f1_exponent));\
bit_vector_clear(&konst_9532);\
konst_9532.val.byte_array[0] = 15;\
bit_vector_minus( &(type_cast_9531), &(konst_9532), &(SUB_i9_i9_9533));\
bit_vector_cast_to_bit_vector(1, &(unbiased_exp_h_i9), &(SUB_i9_i9_9533));\
;

#define fpunit_exec_exec__exec_fhtoi16_assign_stmt_9539_c_macro_ __declare_static_bit_vector(konst_9537,9);\
bit_vector_clear(&konst_9537);\
__declare_static_bit_vector(SLT_i9_u1_9538,1);\
bit_vector_clear(&konst_9537);\
bit_vector_less(1, &(unbiased_exp_h_i9), &(konst_9537), &(SLT_i9_u1_9538));\
bit_vector_cast_to_bit_vector(0, &(is_zero), &(SLT_i9_u1_9538));\
;

#define fpunit_exec_exec__exec_fhtoi16_assign_stmt_9543_c_macro_ __declare_static_bit_vector(type_cast_9542,26);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9542), &(unbiased_exp_h_i9));\
bit_vector_cast_to_bit_vector(0, &(left_shift_amount), &(type_cast_9542));\
;

#define fpunit_exec_exec__exec_fhtoi16_assign_stmt_9548_c_macro_ __declare_static_bit_vector(konst_9546,26);\
bit_vector_clear(&konst_9546);\
konst_9546.val.byte_array[0] = 15;\
__declare_static_bit_vector(UGT_u26_u1_9547,1);\
bit_vector_clear(&konst_9546);\
konst_9546.val.byte_array[0] = 15;\
bit_vector_greater(0, &(left_shift_amount), &(konst_9546), &(UGT_u26_u1_9547));\
bit_vector_cast_to_bit_vector(0, &(overflow), &(UGT_u26_u1_9547));\
;

#define fpunit_exec_exec__exec_fhtoi16_assign_stmt_9554_c_macro_ __declare_static_bit_vector(SHL_u26_u26_9552,26);\
__declare_static_bit_vector(slice_9553,16);\
bit_vector_shift_left(&(frac_ext), &(left_shift_amount), &(SHL_u26_u26_9552));\
bit_vector_slice(&(SHL_u26_u26_9552), &(slice_9553), 10);\
bit_vector_cast_to_bit_vector(0, &(ufrac), &(slice_9553));\
;

#define fpunit_exec_exec__exec_fhtoi16_assign_stmt_9584_c_macro_ __declare_static_bit_vector(konst_9557,16);\
bit_vector_clear(&konst_9557);\
__declare_static_bit_vector(AND_u1_u1_9560,1);\
__declare_static_bit_vector(konst_9561,16);\
bit_vector_clear(&konst_9561);\
konst_9561.val.byte_array[1] = 128;\
__declare_static_bit_vector(konst_9562,16);\
bit_vector_clear(&konst_9562);\
__declare_static_bit_vector(MUX_9563,16);\
__declare_static_bit_vector(NOT_u1_u1_9566,1);\
__declare_static_bit_vector(AND_u1_u1_9567,1);\
__declare_static_bit_vector(konst_9568,16);\
bit_vector_clear(&konst_9568);\
konst_9568.val.byte_array[0] = 255;\
konst_9568.val.byte_array[1] = 127;\
__declare_static_bit_vector(konst_9569,16);\
bit_vector_clear(&konst_9569);\
__declare_static_bit_vector(MUX_9570,16);\
__declare_static_bit_vector(OR_u16_u16_9571,16);\
__declare_static_bit_vector(NOT_u1_u1_9573,1);\
__declare_static_bit_vector(NOT_u16_u16_9576,16);\
__declare_static_bit_vector(call_increment_16_expr_9577,16);\
__declare_static_bit_vector(MUX_9579,16);\
__declare_static_bit_vector(konst_9580,16);\
bit_vector_clear(&konst_9580);\
__declare_static_bit_vector(MUX_9581,16);\
__declare_static_bit_vector(OR_u16_u16_9582,16);\
__declare_static_bit_vector(MUX_9583,16);\
if (has_undefined_bit(&is_zero)) {fprintf(stderr, "Error: variable is_zero has undefined value (%s) at test point.\n", to_string(&is_zero));assert(0);} \
if(bit_vector_to_uint64(0, &is_zero)){bit_vector_clear(&konst_9557);\
bit_vector_cast_to_bit_vector(0, &(MUX_9583), &(konst_9557));\
}else {bit_vector_and(&(overflow), &(f1_sign), &(AND_u1_u1_9560));\
if (has_undefined_bit(&AND_u1_u1_9560)) {fprintf(stderr, "Error: variable AND_u1_u1_9560 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_9560));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_9560)){bit_vector_clear(&konst_9561);\
konst_9561.val.byte_array[1] = 128;\
bit_vector_cast_to_bit_vector(0, &(MUX_9563), &(konst_9561));\
}else {bit_vector_clear(&konst_9562);\
bit_vector_cast_to_bit_vector(0, &(MUX_9563), &(konst_9562));\
}bit_vector_not( &(f1_sign), &(NOT_u1_u1_9566));\
bit_vector_and(&(overflow), &(NOT_u1_u1_9566), &(AND_u1_u1_9567));\
if (has_undefined_bit(&AND_u1_u1_9567)) {fprintf(stderr, "Error: variable AND_u1_u1_9567 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_9567));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_9567)){bit_vector_clear(&konst_9568);\
konst_9568.val.byte_array[0] = 255;\
konst_9568.val.byte_array[1] = 127;\
bit_vector_cast_to_bit_vector(0, &(MUX_9570), &(konst_9568));\
}else {bit_vector_clear(&konst_9569);\
bit_vector_cast_to_bit_vector(0, &(MUX_9570), &(konst_9569));\
}bit_vector_or(&(MUX_9563), &(MUX_9570), &(OR_u16_u16_9571));\
bit_vector_not( &(overflow), &(NOT_u1_u1_9573));\
if (has_undefined_bit(&NOT_u1_u1_9573)) {fprintf(stderr, "Error: variable NOT_u1_u1_9573 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_9573));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_9573)){if (has_undefined_bit(&f1_sign)) {fprintf(stderr, "Error: variable f1_sign has undefined value (%s) at test point.\n", to_string(&f1_sign));assert(0);} \
if(bit_vector_to_uint64(0, &f1_sign)){bit_vector_not( &(ufrac), &(NOT_u16_u16_9576));\
_fpunit_exec_exec_increment_16_( &(NOT_u16_u16_9576), &(call_increment_16_expr_9577));\
bit_vector_cast_to_bit_vector(0, &(MUX_9579), &(call_increment_16_expr_9577));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9579), &(ufrac));\
}bit_vector_cast_to_bit_vector(0, &(MUX_9581), &(MUX_9579));\
}else {bit_vector_clear(&konst_9580);\
bit_vector_cast_to_bit_vector(0, &(MUX_9581), &(konst_9580));\
}bit_vector_or(&(OR_u16_u16_9571), &(MUX_9581), &(OR_u16_u16_9582));\
bit_vector_cast_to_bit_vector(0, &(MUX_9583), &(OR_u16_u16_9582));\
}bit_vector_cast_to_bit_vector(0, &(result), &(MUX_9583));\
;

#define fpunit_exec_exec__exec_fhtoi16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__exec_fhtoi16_outer_arg_decl_macro__ __declare_static_bit_vector(__uf1_h, 16);\
bit_vector_assign_uint64(0, &__uf1_h, uf1_h);\
__declare_static_bit_vector(__result, 16);\
;

#define fpunit_exec_exec__exec_fhtoi16_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__exec_fhtos_inner_inarg_prep_macro__ __declare_static_bit_vector(uf1_h,16);\
bit_vector_cast_to_bit_vector(0, &(uf1_h), &((*__puf1_h)));\
__declare_static_bit_vector(result,32);\
__declare_static_bit_vector(uf1_sign,1);\
__declare_static_bit_vector(uf1_exponent,5);\
__declare_static_bit_vector(uf1_mantissa,10);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(unbiased_exp_h,9);\
__declare_static_bit_vector(exp_8,8);\
__declare_static_bit_vector(man_23,23);\
__declare_static_bit_vector(result_norm,32);\
__declare_static_bit_vector(result_qnan,32);\
bit_vector_clear(&result_qnan);\
result_qnan.val.byte_array[2] = 192;\
result_qnan.val.byte_array[3] = 127;\
__declare_static_bit_vector(result_zero,32);\
__declare_static_bit_vector(result_infinity,32);\

#define fpunit_exec_exec__exec_fhtos_call_stmt_9804_c_macro_ _fpunit_exec_exec_splitFp16_( &(uf1_h), &(uf1_sign), &(uf1_exponent), &(uf1_mantissa));\
;

#define fpunit_exec_exec__exec_fhtos_call_stmt_9810_c_macro_ _fpunit_exec_exec_classifyFp16_( &(uf1_h), &(f1_zero), &(f1_normal), &(f1_nan), &(f1_inf));\
;

#define fpunit_exec_exec__exec_fhtos_assign_stmt_9816_c_macro_ __declare_static_bit_vector(type_cast_9813,9);\
__declare_static_bit_vector(konst_9814,9);\
bit_vector_clear(&konst_9814);\
konst_9814.val.byte_array[0] = 15;\
__declare_static_bit_vector(SUB_i9_i9_9815,9);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9813), &(uf1_exponent));\
bit_vector_clear(&konst_9814);\
konst_9814.val.byte_array[0] = 15;\
bit_vector_minus( &(type_cast_9813), &(konst_9814), &(SUB_i9_i9_9815));\
bit_vector_cast_to_bit_vector(1, &(unbiased_exp_h), &(SUB_i9_i9_9815));\
;

#define fpunit_exec_exec__exec_fhtos_assign_stmt_9822_c_macro_ __declare_static_bit_vector(konst_9819,9);\
bit_vector_clear(&konst_9819);\
konst_9819.val.byte_array[0] = 127;\
__declare_static_bit_vector(ADD_i9_i9_9820,9);\
__declare_static_bit_vector(type_cast_9821,8);\
bit_vector_clear(&konst_9819);\
konst_9819.val.byte_array[0] = 127;\
bit_vector_plus( &(unbiased_exp_h), &(konst_9819), &(ADD_i9_i9_9820));\
bit_vector_bitcast_to_bit_vector( &(type_cast_9821), &(ADD_i9_i9_9820));\
bit_vector_cast_to_bit_vector(0, &(exp_8), &(type_cast_9821));\
;

#define fpunit_exec_exec__exec_fhtos_assign_stmt_9828_c_macro_ __declare_static_bit_vector(konst_9825,13);\
bit_vector_clear(&konst_9825);\
__declare_static_bit_vector(type_cast_9826,13);\
bit_vector_clear(&type_cast_9826);\
__declare_static_bit_vector(CONCAT_u10_u23_9827,23);\
bit_vector_clear(&konst_9825);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9826), &(konst_9825));\
bit_vector_concatenate( &(uf1_mantissa), &(type_cast_9826), &(CONCAT_u10_u23_9827));\
bit_vector_cast_to_bit_vector(0, &(man_23), &(CONCAT_u10_u23_9827));\
;

#define fpunit_exec_exec__exec_fhtos_assign_stmt_9835_c_macro_ __declare_static_bit_vector(CONCAT_u1_u9_9832,9);\
__declare_static_bit_vector(CONCAT_u9_u32_9834,32);\
bit_vector_concatenate( &(uf1_sign), &(exp_8), &(CONCAT_u1_u9_9832));\
bit_vector_concatenate( &(CONCAT_u1_u9_9832), &(man_23), &(CONCAT_u9_u32_9834));\
bit_vector_cast_to_bit_vector(0, &(result_norm), &(CONCAT_u9_u32_9834));\
;

#define fpunit_exec_exec__exec_fhtos_assign_stmt_9845_c_macro_ __declare_static_bit_vector(konst_9838,8);\
bit_vector_clear(&konst_9838);\
konst_9838.val.byte_array[0] = 255;\
__declare_static_bit_vector(type_cast_9839,8);\
bit_vector_clear(&type_cast_9839);\
type_cast_9839.val.byte_array[0] = 255;\
__declare_static_bit_vector(CONCAT_u1_u9_9840,9);\
bit_vector_clear(&CONCAT_u1_u9_9840);\
CONCAT_u1_u9_9840.val.byte_array[0] = 255;\
__declare_static_bit_vector(CONCAT_u1_u23_9843,23);\
bit_vector_clear(&CONCAT_u1_u23_9843);\
CONCAT_u1_u23_9843.val.byte_array[2] = 64;\
__declare_static_bit_vector(CONCAT_u9_u32_9844,32);\
bit_vector_clear(&CONCAT_u9_u32_9844);\
CONCAT_u9_u32_9844.val.byte_array[2] = 192;\
CONCAT_u9_u32_9844.val.byte_array[3] = 127;\
bit_vector_clear(&konst_9838);\
konst_9838.val.byte_array[0] = 255;\
bit_vector_bitcast_to_bit_vector( &(type_cast_9839), &(konst_9838));\
bit_vector_concatenate( &(ZERO_1), &(type_cast_9839), &(CONCAT_u1_u9_9840));\
bit_vector_concatenate( &(ONE_1), &(ZERO_22), &(CONCAT_u1_u23_9843));\
bit_vector_concatenate( &(CONCAT_u1_u9_9840), &(CONCAT_u1_u23_9843), &(CONCAT_u9_u32_9844));\
bit_vector_cast_to_bit_vector(0, &(result_qnan), &(CONCAT_u9_u32_9844));\
;

#define fpunit_exec_exec__exec_fhtos_assign_stmt_9850_c_macro_ __declare_static_bit_vector(CONCAT_u1_u32_9849,32);\
bit_vector_concatenate( &(uf1_sign), &(ZERO_31), &(CONCAT_u1_u32_9849));\
bit_vector_cast_to_bit_vector(0, &(result_zero), &(CONCAT_u1_u32_9849));\
;

#define fpunit_exec_exec__exec_fhtos_assign_stmt_9858_c_macro_ __declare_static_bit_vector(konst_9853,8);\
bit_vector_clear(&konst_9853);\
konst_9853.val.byte_array[0] = 255;\
__declare_static_bit_vector(type_cast_9854,8);\
bit_vector_clear(&type_cast_9854);\
type_cast_9854.val.byte_array[0] = 255;\
__declare_static_bit_vector(CONCAT_u1_u9_9855,9);\
__declare_static_bit_vector(CONCAT_u9_u32_9857,32);\
bit_vector_clear(&konst_9853);\
konst_9853.val.byte_array[0] = 255;\
bit_vector_bitcast_to_bit_vector( &(type_cast_9854), &(konst_9853));\
bit_vector_concatenate( &(uf1_sign), &(type_cast_9854), &(CONCAT_u1_u9_9855));\
bit_vector_concatenate( &(CONCAT_u1_u9_9855), &(ZERO_23), &(CONCAT_u9_u32_9857));\
bit_vector_cast_to_bit_vector(0, &(result_infinity), &(CONCAT_u9_u32_9857));\
;

#define fpunit_exec_exec__exec_fhtos_assign_stmt_9870_c_macro_ __declare_static_bit_vector(MUX_9867,32);\
__declare_static_bit_vector(MUX_9868,32);\
__declare_static_bit_vector(MUX_9869,32);\
if (has_undefined_bit(&f1_inf)) {fprintf(stderr, "Error: variable f1_inf has undefined value (%s) at test point.\n", to_string(&f1_inf));assert(0);} \
if(bit_vector_to_uint64(0, &f1_inf)){bit_vector_cast_to_bit_vector(0, &(MUX_9869), &(result_infinity));\
}else {if (has_undefined_bit(&f1_zero)) {fprintf(stderr, "Error: variable f1_zero has undefined value (%s) at test point.\n", to_string(&f1_zero));assert(0);} \
if(bit_vector_to_uint64(0, &f1_zero)){bit_vector_cast_to_bit_vector(0, &(MUX_9868), &(result_zero));\
}else {if (has_undefined_bit(&f1_normal)) {fprintf(stderr, "Error: variable f1_normal has undefined value (%s) at test point.\n", to_string(&f1_normal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_normal)){bit_vector_cast_to_bit_vector(0, &(MUX_9867), &(result_norm));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9867), &(result_qnan));\
}bit_vector_cast_to_bit_vector(0, &(MUX_9868), &(MUX_9867));\
}bit_vector_cast_to_bit_vector(0, &(MUX_9869), &(MUX_9868));\
}bit_vector_cast_to_bit_vector(0, &(result), &(MUX_9869));\
;

#define fpunit_exec_exec__exec_fhtos_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__exec_fhtos_outer_arg_decl_macro__ __declare_static_bit_vector(__uf1_h, 16);\
bit_vector_assign_uint64(0, &__uf1_h, uf1_h);\
__declare_static_bit_vector(__result, 32);\
;

#define fpunit_exec_exec__exec_fhtos_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__exec_fi16toh_inner_inarg_prep_macro__ __declare_static_bit_vector(X,16);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,16);\
__declare_static_bit_vector(Xcompl,16);\
__declare_static_bit_vector(sign,1);\
__declare_static_bit_vector(Xmagn,16);\
__declare_static_bit_vector(pos1,4);\
__declare_static_bit_vector(found1,1);\
__declare_static_bit_vector(is_zero,1);\
__declare_static_bit_vector(shift_amount,5);\
__declare_static_bit_vector(expon,5);\
__declare_static_bit_vector(shifted_mantissa_16,16);\
__declare_static_bit_vector(mantissa,10);\
__declare_static_bit_vector(result_nz,16);\

#define fpunit_exec_exec__exec_fi16toh_call_stmt_9700_c_macro_ _fpunit_exec_exec_twos_complement_16_( &(X), &(Xcompl));\
;

#define fpunit_exec_exec__exec_fi16toh_assign_stmt_9705_c_macro_ __declare_static_bit_vector(konst_9703,16);\
bit_vector_clear(&konst_9703);\
konst_9703.val.byte_array[0] = 15;\
__declare_static_bit_vector(BITSEL_u16_u1_9704,1);\
bit_vector_clear(&konst_9703);\
konst_9703.val.byte_array[0] = 15;\
bit_vector_bitsel( &(X), &(konst_9703), &(BITSEL_u16_u1_9704));\
bit_vector_cast_to_bit_vector(0, &(sign), &(BITSEL_u16_u1_9704));\
;

#define fpunit_exec_exec__exec_fi16toh_assign_stmt_9711_c_macro_ __declare_static_bit_vector(MUX_9710,16);\
if (has_undefined_bit(&sign)) {fprintf(stderr, "Error: variable sign has undefined value (%s) at test point.\n", to_string(&sign));assert(0);} \
if(bit_vector_to_uint64(0, &sign)){bit_vector_cast_to_bit_vector(0, &(MUX_9710), &(Xcompl));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9710), &(X));\
}bit_vector_cast_to_bit_vector(0, &(Xmagn), &(MUX_9710));\
;

#define fpunit_exec_exec__exec_fi16toh_call_stmt_9715_c_macro_ _fpunit_exec_exec_find_left_16_( &(Xmagn), &(pos1), &(found1));\
;

#define fpunit_exec_exec__exec_fi16toh_assign_stmt_9720_c_macro_ __declare_static_bit_vector(konst_9718,16);\
bit_vector_clear(&konst_9718);\
__declare_static_bit_vector(EQ_u16_u1_9719,1);\
bit_vector_clear(&konst_9718);\
bit_vector_equal(0, &(Xmagn), &(konst_9718), &(EQ_u16_u1_9719));\
bit_vector_cast_to_bit_vector(0, &(is_zero), &(EQ_u16_u1_9719));\
;

#define fpunit_exec_exec__exec_fi16toh_assign_stmt_9727_c_macro_ __declare_static_bit_vector(konst_9722,5);\
bit_vector_clear(&konst_9722);\
konst_9722.val.byte_array[0] = 16;\
__declare_static_bit_vector(type_cast_9724,5);\
__declare_static_bit_vector(SUB_u5_u5_9725,5);\
__declare_static_bit_vector(type_cast_9726,5);\
bit_vector_clear(&konst_9722);\
konst_9722.val.byte_array[0] = 16;\
bit_vector_bitcast_to_bit_vector( &(type_cast_9724), &(pos1));\
bit_vector_minus( &(konst_9722), &(type_cast_9724), &(SUB_u5_u5_9725));\
bit_vector_bitcast_to_bit_vector( &(type_cast_9726), &(SUB_u5_u5_9725));\
bit_vector_cast_to_bit_vector(0, &(shift_amount), &(type_cast_9726));\
;

#define fpunit_exec_exec__exec_fi16toh_assign_stmt_9733_c_macro_ __declare_static_bit_vector(type_cast_9730,5);\
__declare_static_bit_vector(konst_9731,5);\
bit_vector_clear(&konst_9731);\
konst_9731.val.byte_array[0] = 15;\
__declare_static_bit_vector(ADD_u5_u5_9732,5);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9730), &(pos1));\
bit_vector_clear(&konst_9731);\
konst_9731.val.byte_array[0] = 15;\
bit_vector_plus( &(type_cast_9730), &(konst_9731), &(ADD_u5_u5_9732));\
bit_vector_cast_to_bit_vector(0, &(expon), &(ADD_u5_u5_9732));\
;

#define fpunit_exec_exec__exec_fi16toh_call_stmt_9737_c_macro_ _fpunit_exec_exec_i16_sll_( &(Xmagn),  &(shift_amount), &(shifted_mantissa_16));\
;

#define fpunit_exec_exec__exec_fi16toh_assign_stmt_9741_c_macro_ __declare_static_bit_vector(slice_9740,10);\
bit_vector_slice(&(shifted_mantissa_16), &(slice_9740), 6);\
bit_vector_cast_to_bit_vector(0, &(mantissa), &(slice_9740));\
;

#define fpunit_exec_exec__exec_fi16toh_assign_stmt_9748_c_macro_ __declare_static_bit_vector(CONCAT_u1_u6_9745,6);\
__declare_static_bit_vector(CONCAT_u6_u16_9747,16);\
bit_vector_concatenate( &(sign), &(expon), &(CONCAT_u1_u6_9745));\
bit_vector_concatenate( &(CONCAT_u1_u6_9745), &(mantissa), &(CONCAT_u6_u16_9747));\
bit_vector_cast_to_bit_vector(0, &(result_nz), &(CONCAT_u6_u16_9747));\
;

#define fpunit_exec_exec__exec_fi16toh_assign_stmt_9754_c_macro_ __declare_static_bit_vector(konst_9751,16);\
bit_vector_clear(&konst_9751);\
__declare_static_bit_vector(MUX_9753,16);\
if (has_undefined_bit(&is_zero)) {fprintf(stderr, "Error: variable is_zero has undefined value (%s) at test point.\n", to_string(&is_zero));assert(0);} \
if(bit_vector_to_uint64(0, &is_zero)){bit_vector_clear(&konst_9751);\
bit_vector_cast_to_bit_vector(0, &(MUX_9753), &(konst_9751));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9753), &(result_nz));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_9753));\
;

#define fpunit_exec_exec__exec_fi16toh_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__exec_fi16toh_outer_arg_decl_macro__ __declare_static_bit_vector(__X, 16);\
bit_vector_assign_uint64(0, &__X, X);\
__declare_static_bit_vector(__Y, 16);\
;

#define fpunit_exec_exec__exec_fi16toh_outer_op_xfer_macro__  *Y =  bit_vector_to_uint64(0, &__Y);\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_inner_inarg_prep_macro__ __declare_static_bit_vector(issue_vfadd,1);\
bit_vector_cast_to_bit_vector(0, &(issue_vfadd), &((*__pissue_vfadd)));\
__declare_static_bit_vector(issue_vfsub,1);\
bit_vector_cast_to_bit_vector(0, &(issue_vfsub), &((*__pissue_vfsub)));\
__declare_static_bit_vector(issue_vfmul,1);\
bit_vector_cast_to_bit_vector(0, &(issue_vfmul), &((*__pissue_vfmul)));\
__declare_static_bit_vector(issue_faddreduce16,1);\
bit_vector_cast_to_bit_vector(0, &(issue_faddreduce16), &((*__pissue_faddreduce16)));\
__declare_static_bit_vector(uf1_d,64);\
bit_vector_cast_to_bit_vector(0, &(uf1_d), &((*__puf1_d)));\
__declare_static_bit_vector(uf2_d,64);\
bit_vector_cast_to_bit_vector(0, &(uf2_d), &((*__puf2_d)));\
__declare_static_bit_vector(simd_16_result,64);\
__declare_static_bit_vector(x3,16);\
__declare_static_bit_vector(x2,16);\
__declare_static_bit_vector(x1,16);\
__declare_static_bit_vector(x0,16);\
__declare_static_bit_vector(y3,16);\
__declare_static_bit_vector(y2,16);\
__declare_static_bit_vector(y1,16);\
__declare_static_bit_vector(y0,16);\
__declare_static_bit_vector(is_addsub,1);\
__declare_static_bit_vector(addsub_op_1_3,16);\
__declare_static_bit_vector(addsub_op_2_3,16);\
__declare_static_bit_vector(a3,16);\
__declare_static_bit_vector(addsub_op_1_2,16);\
__declare_static_bit_vector(addsub_op_2_2,16);\
__declare_static_bit_vector(a2,16);\
__declare_static_bit_vector(addsub_op_1_1,16);\
__declare_static_bit_vector(addsub_op_2_1,16);\
__declare_static_bit_vector(a1,16);\
__declare_static_bit_vector(addsub_op_1_0,16);\
__declare_static_bit_vector(addsub_op_2_0,16);\
__declare_static_bit_vector(a0,16);\
__declare_static_bit_vector(reduce_result_64,64);\
__declare_static_bit_vector(addsub_result_64,64);\
__declare_static_bit_vector(m3,16);\
__declare_static_bit_vector(m2,16);\
__declare_static_bit_vector(m1,16);\
__declare_static_bit_vector(m0,16);\
__declare_static_bit_vector(mul_result_64,64);\

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14080_c_macro_ __declare_static_bit_vector(slice_14079,16);\
bit_vector_slice(&(uf1_d), &(slice_14079), 48);\
bit_vector_cast_to_bit_vector(0, &(x3), &(slice_14079));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14084_c_macro_ __declare_static_bit_vector(slice_14083,16);\
bit_vector_slice(&(uf1_d), &(slice_14083), 32);\
bit_vector_cast_to_bit_vector(0, &(x2), &(slice_14083));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14088_c_macro_ __declare_static_bit_vector(slice_14087,16);\
bit_vector_slice(&(uf1_d), &(slice_14087), 16);\
bit_vector_cast_to_bit_vector(0, &(x1), &(slice_14087));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14092_c_macro_ __declare_static_bit_vector(slice_14091,16);\
bit_vector_slice(&(uf1_d), &(slice_14091), 0);\
bit_vector_cast_to_bit_vector(0, &(x0), &(slice_14091));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14096_c_macro_ __declare_static_bit_vector(slice_14095,16);\
bit_vector_slice(&(uf2_d), &(slice_14095), 48);\
bit_vector_cast_to_bit_vector(0, &(y3), &(slice_14095));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14100_c_macro_ __declare_static_bit_vector(slice_14099,16);\
bit_vector_slice(&(uf2_d), &(slice_14099), 32);\
bit_vector_cast_to_bit_vector(0, &(y2), &(slice_14099));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14104_c_macro_ __declare_static_bit_vector(slice_14103,16);\
bit_vector_slice(&(uf2_d), &(slice_14103), 16);\
bit_vector_cast_to_bit_vector(0, &(y1), &(slice_14103));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14108_c_macro_ __declare_static_bit_vector(slice_14107,16);\
bit_vector_slice(&(uf2_d), &(slice_14107), 0);\
bit_vector_cast_to_bit_vector(0, &(y0), &(slice_14107));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14113_c_macro_ __declare_static_bit_vector(OR_u1_u1_14112,1);\
bit_vector_or(&(issue_vfadd), &(issue_vfsub), &(OR_u1_u1_14112));\
bit_vector_cast_to_bit_vector(0, &(is_addsub), &(OR_u1_u1_14112));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14116_c_macro_ bit_vector_cast_to_bit_vector(0, &(addsub_op_1_3), &(x3));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14122_c_macro_ __declare_static_bit_vector(MUX_14121,16);\
if (has_undefined_bit(&is_addsub)) {fprintf(stderr, "Error: variable is_addsub has undefined value (%s) at test point.\n", to_string(&is_addsub));assert(0);} \
if(bit_vector_to_uint64(0, &is_addsub)){bit_vector_cast_to_bit_vector(0, &(MUX_14121), &(y3));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14121), &(x2));\
}bit_vector_cast_to_bit_vector(0, &(addsub_op_2_3), &(MUX_14121));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_call_stmt_14127_c_macro_ _fpunit_exec_exec_faddsub16_( &(addsub_op_1_3),  &(addsub_op_2_3),  &(issue_vfsub), &(a3));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14133_c_macro_ __declare_static_bit_vector(MUX_14132,16);\
if (has_undefined_bit(&is_addsub)) {fprintf(stderr, "Error: variable is_addsub has undefined value (%s) at test point.\n", to_string(&is_addsub));assert(0);} \
if(bit_vector_to_uint64(0, &is_addsub)){bit_vector_cast_to_bit_vector(0, &(MUX_14132), &(x2));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14132), &(x1));\
}bit_vector_cast_to_bit_vector(0, &(addsub_op_1_2), &(MUX_14132));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14139_c_macro_ __declare_static_bit_vector(MUX_14138,16);\
if (has_undefined_bit(&is_addsub)) {fprintf(stderr, "Error: variable is_addsub has undefined value (%s) at test point.\n", to_string(&is_addsub));assert(0);} \
if(bit_vector_to_uint64(0, &is_addsub)){bit_vector_cast_to_bit_vector(0, &(MUX_14138), &(y2));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14138), &(x0));\
}bit_vector_cast_to_bit_vector(0, &(addsub_op_2_2), &(MUX_14138));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_call_stmt_14144_c_macro_ _fpunit_exec_exec_faddsub16_( &(addsub_op_1_2),  &(addsub_op_2_2),  &(issue_vfsub), &(a2));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14150_c_macro_ __declare_static_bit_vector(MUX_14149,16);\
if (has_undefined_bit(&is_addsub)) {fprintf(stderr, "Error: variable is_addsub has undefined value (%s) at test point.\n", to_string(&is_addsub));assert(0);} \
if(bit_vector_to_uint64(0, &is_addsub)){bit_vector_cast_to_bit_vector(0, &(MUX_14149), &(x1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14149), &(a3));\
}bit_vector_cast_to_bit_vector(0, &(addsub_op_1_1), &(MUX_14149));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14156_c_macro_ __declare_static_bit_vector(MUX_14155,16);\
if (has_undefined_bit(&is_addsub)) {fprintf(stderr, "Error: variable is_addsub has undefined value (%s) at test point.\n", to_string(&is_addsub));assert(0);} \
if(bit_vector_to_uint64(0, &is_addsub)){bit_vector_cast_to_bit_vector(0, &(MUX_14155), &(y1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14155), &(a2));\
}bit_vector_cast_to_bit_vector(0, &(addsub_op_2_1), &(MUX_14155));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_call_stmt_14161_c_macro_ _fpunit_exec_exec_faddsub16_( &(addsub_op_1_1),  &(addsub_op_2_1),  &(issue_vfsub), &(a1));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14164_c_macro_ bit_vector_cast_to_bit_vector(0, &(addsub_op_1_0), &(x0));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14167_c_macro_ bit_vector_cast_to_bit_vector(0, &(addsub_op_2_0), &(y0));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_call_stmt_14172_c_macro_ _fpunit_exec_exec_faddsub16_( &(addsub_op_1_0),  &(addsub_op_2_0),  &(issue_vfsub), &(a0));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14177_c_macro_ __declare_static_bit_vector(CONCAT_u48_u64_14176,64);\
bit_vector_concatenate( &(ZERO_48), &(a1), &(CONCAT_u48_u64_14176));\
bit_vector_cast_to_bit_vector(0, &(reduce_result_64), &(CONCAT_u48_u64_14176));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14186_c_macro_ __declare_static_bit_vector(CONCAT_u16_u32_14181,32);\
__declare_static_bit_vector(CONCAT_u16_u32_14184,32);\
__declare_static_bit_vector(CONCAT_u32_u64_14185,64);\
bit_vector_concatenate( &(a3), &(a2), &(CONCAT_u16_u32_14181));\
bit_vector_concatenate( &(a1), &(a0), &(CONCAT_u16_u32_14184));\
bit_vector_concatenate( &(CONCAT_u16_u32_14181), &(CONCAT_u16_u32_14184), &(CONCAT_u32_u64_14185));\
bit_vector_cast_to_bit_vector(0, &(addsub_result_64), &(CONCAT_u32_u64_14185));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_call_stmt_14190_c_macro_ _fpunit_exec_exec_fmul16_( &(x3),  &(y3), &(m3));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_call_stmt_14194_c_macro_ _fpunit_exec_exec_fmul16_( &(x2),  &(y2), &(m2));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_call_stmt_14198_c_macro_ _fpunit_exec_exec_fmul16_( &(x1),  &(y1), &(m1));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_call_stmt_14202_c_macro_ _fpunit_exec_exec_fmul16_( &(x0),  &(y0), &(m0));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14211_c_macro_ __declare_static_bit_vector(CONCAT_u16_u32_14206,32);\
__declare_static_bit_vector(CONCAT_u16_u32_14209,32);\
__declare_static_bit_vector(CONCAT_u32_u64_14210,64);\
bit_vector_concatenate( &(m3), &(m2), &(CONCAT_u16_u32_14206));\
bit_vector_concatenate( &(m1), &(m0), &(CONCAT_u16_u32_14209));\
bit_vector_concatenate( &(CONCAT_u16_u32_14206), &(CONCAT_u16_u32_14209), &(CONCAT_u32_u64_14210));\
bit_vector_cast_to_bit_vector(0, &(mul_result_64), &(CONCAT_u32_u64_14210));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_assign_stmt_14227_c_macro_ __declare_static_bit_vector(konst_14215,64);\
bit_vector_clear(&konst_14215);\
__declare_static_bit_vector(MUX_14216,64);\
__declare_static_bit_vector(konst_14219,64);\
bit_vector_clear(&konst_14219);\
__declare_static_bit_vector(MUX_14220,64);\
__declare_static_bit_vector(OR_u64_u64_14221,64);\
__declare_static_bit_vector(konst_14224,64);\
bit_vector_clear(&konst_14224);\
__declare_static_bit_vector(MUX_14225,64);\
__declare_static_bit_vector(OR_u64_u64_14226,64);\
if (has_undefined_bit(&is_addsub)) {fprintf(stderr, "Error: variable is_addsub has undefined value (%s) at test point.\n", to_string(&is_addsub));assert(0);} \
if(bit_vector_to_uint64(0, &is_addsub)){bit_vector_cast_to_bit_vector(0, &(MUX_14216), &(addsub_result_64));\
}else {bit_vector_clear(&konst_14215);\
bit_vector_cast_to_bit_vector(0, &(MUX_14216), &(konst_14215));\
}if (has_undefined_bit(&issue_vfmul)) {fprintf(stderr, "Error: variable issue_vfmul has undefined value (%s) at test point.\n", to_string(&issue_vfmul));assert(0);} \
if(bit_vector_to_uint64(0, &issue_vfmul)){bit_vector_cast_to_bit_vector(0, &(MUX_14220), &(mul_result_64));\
}else {bit_vector_clear(&konst_14219);\
bit_vector_cast_to_bit_vector(0, &(MUX_14220), &(konst_14219));\
}bit_vector_or(&(MUX_14216), &(MUX_14220), &(OR_u64_u64_14221));\
if (has_undefined_bit(&issue_faddreduce16)) {fprintf(stderr, "Error: variable issue_faddreduce16 has undefined value (%s) at test point.\n", to_string(&issue_faddreduce16));assert(0);} \
if(bit_vector_to_uint64(0, &issue_faddreduce16)){bit_vector_cast_to_bit_vector(0, &(MUX_14225), &(reduce_result_64));\
}else {bit_vector_clear(&konst_14224);\
bit_vector_cast_to_bit_vector(0, &(MUX_14225), &(konst_14224));\
}bit_vector_or(&(OR_u64_u64_14221), &(MUX_14225), &(OR_u64_u64_14226));\
bit_vector_cast_to_bit_vector(0, &(simd_16_result), &(OR_u64_u64_14226));\
;

#define fpunit_exec_exec__exec_fp_simd_16_op_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__psimd_16_result)), &(simd_16_result));\
;

#define fpunit_exec_exec__exec_fstoh_inner_inarg_prep_macro__ __declare_static_bit_vector(uf1_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &((*__puf1_s)));\
__declare_static_bit_vector(result,16);\
__declare_static_bit_vector(sign_s,1);\
__declare_static_bit_vector(exp_s,8);\
__declare_static_bit_vector(mant_s,23);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(bias,10);\
__declare_static_bit_vector(exp_without_bias,10);\
__declare_static_bit_vector(max_h_exponent,10);\
bit_vector_clear(&max_h_exponent);\
max_h_exponent.val.byte_array[0] = 16;\
__declare_static_bit_vector(min_h_exponent,10);\
bit_vector_clear(&min_h_exponent);\
min_h_exponent.val.byte_array[0] = 241;\
min_h_exponent.val.byte_array[1] = 255;\
__declare_static_bit_vector(exp_overflow,1);\
__declare_static_bit_vector(exp_underflow,1);\
__declare_static_bit_vector(mantissa_h,10);\
__declare_static_bit_vector(nominal_h_bias,10);\
bit_vector_clear(&nominal_h_bias);\
nominal_h_bias.val.byte_array[0] = 15;\
__declare_static_bit_vector(exp_normal,5);\
__declare_static_bit_vector(result_normal,16);\
__declare_static_bit_vector(result_abnormal,16);\
__declare_static_bit_vector(abnormal_flag,1);\

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9930_c_macro_ __declare_static_bit_vector(konst_9928,32);\
bit_vector_clear(&konst_9928);\
konst_9928.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_9929,1);\
bit_vector_clear(&konst_9928);\
konst_9928.val.byte_array[0] = 31;\
bit_vector_bitsel( &(uf1_s), &(konst_9928), &(BITSEL_u32_u1_9929));\
bit_vector_cast_to_bit_vector(0, &(sign_s), &(BITSEL_u32_u1_9929));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9934_c_macro_ __declare_static_bit_vector(slice_9933,8);\
bit_vector_slice(&(uf1_s), &(slice_9933), 23);\
bit_vector_cast_to_bit_vector(0, &(exp_s), &(slice_9933));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9938_c_macro_ __declare_static_bit_vector(slice_9937,23);\
bit_vector_slice(&(uf1_s), &(slice_9937), 0);\
bit_vector_cast_to_bit_vector(0, &(mant_s), &(slice_9937));\
;

#define fpunit_exec_exec__exec_fstoh_call_stmt_9946_c_macro_ static float type_cast_9940;\
bit_vector_bitcast_to_float( &(type_cast_9940),  &(uf1_s));\
_fpunit_exec_exec_classify_32_( &(type_cast_9940), &(f1_zero), &(f1_normal), &(f1_denormal), &(f1_inf), &(f1_nan));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9954_c_macro_ __declare_static_bit_vector(konst_9949,10);\
bit_vector_clear(&konst_9949);\
konst_9949.val.byte_array[0] = 126;\
__declare_static_bit_vector(type_cast_9950,10);\
bit_vector_clear(&type_cast_9950);\
type_cast_9950.val.byte_array[0] = 126;\
__declare_static_bit_vector(konst_9951,10);\
bit_vector_clear(&konst_9951);\
konst_9951.val.byte_array[0] = 127;\
__declare_static_bit_vector(MUX_9952,10);\
__declare_static_bit_vector(type_cast_9953,10);\
if (has_undefined_bit(&f1_denormal)) {fprintf(stderr, "Error: variable f1_denormal has undefined value (%s) at test point.\n", to_string(&f1_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_denormal)){bit_vector_clear(&konst_9949);\
konst_9949.val.byte_array[0] = 126;\
bit_vector_bitcast_to_bit_vector( &(type_cast_9950), &(konst_9949));\
bit_vector_cast_to_bit_vector(1, &(MUX_9952), &(type_cast_9950));\
}else {bit_vector_clear(&konst_9951);\
konst_9951.val.byte_array[0] = 127;\
bit_vector_cast_to_bit_vector(1, &(MUX_9952), &(konst_9951));\
}bit_vector_bitcast_to_bit_vector( &(type_cast_9953), &(MUX_9952));\
bit_vector_cast_to_bit_vector(1, &(bias), &(type_cast_9953));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9960_c_macro_ __declare_static_bit_vector(type_cast_9957,10);\
__declare_static_bit_vector(SUB_i10_i10_9959,10);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9957), &(exp_s));\
bit_vector_minus( &(type_cast_9957), &(bias), &(SUB_i10_i10_9959));\
bit_vector_cast_to_bit_vector(1, &(exp_without_bias), &(SUB_i10_i10_9959));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9964_c_macro_ __declare_static_bit_vector(konst_9962,10);\
bit_vector_clear(&konst_9962);\
konst_9962.val.byte_array[0] = 16;\
__declare_static_bit_vector(type_cast_9963,10);\
bit_vector_clear(&type_cast_9963);\
type_cast_9963.val.byte_array[0] = 16;\
bit_vector_clear(&konst_9962);\
konst_9962.val.byte_array[0] = 16;\
bit_vector_bitcast_to_bit_vector( &(type_cast_9963), &(konst_9962));\
bit_vector_cast_to_bit_vector(1, &(max_h_exponent), &(type_cast_9963));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9968_c_macro_ __declare_static_bit_vector(konst_9966,10);\
bit_vector_clear(&konst_9966);\
konst_9966.val.byte_array[0] = 241;\
konst_9966.val.byte_array[1] = 255;\
__declare_static_bit_vector(type_cast_9967,10);\
bit_vector_clear(&type_cast_9967);\
type_cast_9967.val.byte_array[0] = 241;\
type_cast_9967.val.byte_array[1] = 255;\
bit_vector_clear(&konst_9966);\
konst_9966.val.byte_array[0] = 241;\
konst_9966.val.byte_array[1] = 255;\
bit_vector_bitcast_to_bit_vector( &(type_cast_9967), &(konst_9966));\
bit_vector_cast_to_bit_vector(1, &(min_h_exponent), &(type_cast_9967));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9973_c_macro_ __declare_static_bit_vector(SGT_i10_u1_9972,1);\
bit_vector_greater(1, &(exp_without_bias), &(max_h_exponent), &(SGT_i10_u1_9972));\
bit_vector_cast_to_bit_vector(0, &(exp_overflow), &(SGT_i10_u1_9972));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9978_c_macro_ __declare_static_bit_vector(SLT_i10_u1_9977,1);\
bit_vector_less(1, &(exp_without_bias), &(min_h_exponent), &(SLT_i10_u1_9977));\
bit_vector_cast_to_bit_vector(0, &(exp_underflow), &(SLT_i10_u1_9977));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9982_c_macro_ __declare_static_bit_vector(slice_9981,10);\
bit_vector_slice(&(mant_s), &(slice_9981), 13);\
bit_vector_cast_to_bit_vector(0, &(mantissa_h), &(slice_9981));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9986_c_macro_ __declare_static_bit_vector(konst_9984,10);\
bit_vector_clear(&konst_9984);\
konst_9984.val.byte_array[0] = 15;\
__declare_static_bit_vector(type_cast_9985,10);\
bit_vector_clear(&type_cast_9985);\
type_cast_9985.val.byte_array[0] = 15;\
bit_vector_clear(&konst_9984);\
konst_9984.val.byte_array[0] = 15;\
bit_vector_bitcast_to_bit_vector( &(type_cast_9985), &(konst_9984));\
bit_vector_cast_to_bit_vector(1, &(nominal_h_bias), &(type_cast_9985));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9992_c_macro_ __declare_static_bit_vector(ADD_i10_i10_9990,10);\
__declare_static_bit_vector(type_cast_9991,5);\
bit_vector_plus( &(exp_without_bias), &(nominal_h_bias), &(ADD_i10_i10_9990));\
bit_vector_bitcast_to_bit_vector( &(type_cast_9991), &(ADD_i10_i10_9990));\
bit_vector_cast_to_bit_vector(0, &(exp_normal), &(type_cast_9991));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_9999_c_macro_ __declare_static_bit_vector(CONCAT_u1_u6_9996,6);\
__declare_static_bit_vector(CONCAT_u6_u16_9998,16);\
bit_vector_concatenate( &(sign_s), &(exp_normal), &(CONCAT_u1_u6_9996));\
bit_vector_concatenate( &(CONCAT_u1_u6_9996), &(mantissa_h), &(CONCAT_u6_u16_9998));\
bit_vector_cast_to_bit_vector(0, &(result_normal), &(CONCAT_u6_u16_9998));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_10017_c_macro_ __declare_static_bit_vector(OR_u1_u1_10003,1);\
__declare_static_bit_vector(call_getHalfInf_expr_10005,16);\
__declare_static_bit_vector(OR_u1_u1_10008,1);\
__declare_static_bit_vector(OR_u1_u1_10010,1);\
__declare_static_bit_vector(call_getHalfZero_expr_10012,16);\
__declare_static_bit_vector(call_getHalfNan_expr_10014,16);\
__declare_static_bit_vector(MUX_10015,16);\
__declare_static_bit_vector(MUX_10016,16);\
bit_vector_or(&(f1_inf), &(exp_overflow), &(OR_u1_u1_10003));\
if (has_undefined_bit(&OR_u1_u1_10003)) {fprintf(stderr, "Error: variable OR_u1_u1_10003 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_10003));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_10003)){_fpunit_exec_exec_getHalfInf_( &(sign_s), &(call_getHalfInf_expr_10005));\
bit_vector_cast_to_bit_vector(0, &(MUX_10016), &(call_getHalfInf_expr_10005));\
}else {bit_vector_or(&(f1_zero), &(f1_denormal), &(OR_u1_u1_10008));\
bit_vector_or(&(OR_u1_u1_10008), &(exp_underflow), &(OR_u1_u1_10010));\
if (has_undefined_bit(&OR_u1_u1_10010)) {fprintf(stderr, "Error: variable OR_u1_u1_10010 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_10010));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_10010)){_fpunit_exec_exec_getHalfZero_( &(sign_s), &(call_getHalfZero_expr_10012));\
bit_vector_cast_to_bit_vector(0, &(MUX_10015), &(call_getHalfZero_expr_10012));\
}else {_fpunit_exec_exec_getHalfNan_( &(sign_s), &(call_getHalfNan_expr_10014));\
bit_vector_cast_to_bit_vector(0, &(MUX_10015), &(call_getHalfNan_expr_10014));\
}bit_vector_cast_to_bit_vector(0, &(MUX_10016), &(MUX_10015));\
}bit_vector_cast_to_bit_vector(0, &(result_abnormal), &(MUX_10016));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_10028_c_macro_ __declare_static_bit_vector(OR_u1_u1_10021,1);\
__declare_static_bit_vector(OR_u1_u1_10023,1);\
__declare_static_bit_vector(OR_u1_u1_10026,1);\
__declare_static_bit_vector(OR_u1_u1_10027,1);\
bit_vector_or(&(f1_inf), &(f1_zero), &(OR_u1_u1_10021));\
bit_vector_or(&(OR_u1_u1_10021), &(f1_denormal), &(OR_u1_u1_10023));\
bit_vector_or(&(exp_overflow), &(exp_underflow), &(OR_u1_u1_10026));\
bit_vector_or(&(OR_u1_u1_10023), &(OR_u1_u1_10026), &(OR_u1_u1_10027));\
bit_vector_cast_to_bit_vector(0, &(abnormal_flag), &(OR_u1_u1_10027));\
;

#define fpunit_exec_exec__exec_fstoh_assign_stmt_10034_c_macro_ __declare_static_bit_vector(MUX_10033,16);\
if (has_undefined_bit(&abnormal_flag)) {fprintf(stderr, "Error: variable abnormal_flag has undefined value (%s) at test point.\n", to_string(&abnormal_flag));assert(0);} \
if(bit_vector_to_uint64(0, &abnormal_flag)){bit_vector_cast_to_bit_vector(0, &(MUX_10033), &(result_abnormal));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10033), &(result_normal));\
}bit_vector_cast_to_bit_vector(0, &(result), &(MUX_10033));\
;

#define fpunit_exec_exec__exec_fstoh_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__exec_fstoh_outer_arg_decl_macro__ __declare_static_bit_vector(__uf1_s, 32);\
bit_vector_assign_uint64(0, &__uf1_s, uf1_s);\
__declare_static_bit_vector(__result, 16);\
;

#define fpunit_exec_exec__exec_fstoh_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__exec_vfhtoi16_inner_inarg_prep_macro__ __declare_static_bit_vector(X,64);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,64);\
__declare_static_bit_vector(X3,16);\
__declare_static_bit_vector(X2,16);\
__declare_static_bit_vector(X1,16);\
__declare_static_bit_vector(X0,16);\
__declare_static_bit_vector(Y3,16);\
__declare_static_bit_vector(Y2,16);\
__declare_static_bit_vector(Y1,16);\
__declare_static_bit_vector(Y0,16);\

#define fpunit_exec_exec__exec_vfhtoi16_assign_stmt_9592_c_macro_ __declare_static_bit_vector(slice_9591,16);\
bit_vector_slice(&(X), &(slice_9591), 48);\
bit_vector_cast_to_bit_vector(0, &(X3), &(slice_9591));\
;

#define fpunit_exec_exec__exec_vfhtoi16_assign_stmt_9596_c_macro_ __declare_static_bit_vector(slice_9595,16);\
bit_vector_slice(&(X), &(slice_9595), 32);\
bit_vector_cast_to_bit_vector(0, &(X2), &(slice_9595));\
;

#define fpunit_exec_exec__exec_vfhtoi16_assign_stmt_9600_c_macro_ __declare_static_bit_vector(slice_9599,16);\
bit_vector_slice(&(X), &(slice_9599), 16);\
bit_vector_cast_to_bit_vector(0, &(X1), &(slice_9599));\
;

#define fpunit_exec_exec__exec_vfhtoi16_assign_stmt_9604_c_macro_ __declare_static_bit_vector(slice_9603,16);\
bit_vector_slice(&(X), &(slice_9603), 0);\
bit_vector_cast_to_bit_vector(0, &(X0), &(slice_9603));\
;

#define fpunit_exec_exec__exec_vfhtoi16_call_stmt_9607_c_macro_ _fpunit_exec_exec_exec_fhtoi16_( &(X3), &(Y3));\
;

#define fpunit_exec_exec__exec_vfhtoi16_call_stmt_9610_c_macro_ _fpunit_exec_exec_exec_fhtoi16_( &(X2), &(Y2));\
;

#define fpunit_exec_exec__exec_vfhtoi16_call_stmt_9613_c_macro_ _fpunit_exec_exec_exec_fhtoi16_( &(X1), &(Y1));\
;

#define fpunit_exec_exec__exec_vfhtoi16_call_stmt_9616_c_macro_ _fpunit_exec_exec_exec_fhtoi16_( &(X0), &(Y0));\
;

#define fpunit_exec_exec__exec_vfhtoi16_assign_stmt_9625_c_macro_ __declare_static_bit_vector(CONCAT_u16_u32_9620,32);\
__declare_static_bit_vector(CONCAT_u16_u32_9623,32);\
__declare_static_bit_vector(CONCAT_u32_u64_9624,64);\
bit_vector_concatenate( &(Y3), &(Y2), &(CONCAT_u16_u32_9620));\
bit_vector_concatenate( &(Y1), &(Y0), &(CONCAT_u16_u32_9623));\
bit_vector_concatenate( &(CONCAT_u16_u32_9620), &(CONCAT_u16_u32_9623), &(CONCAT_u32_u64_9624));\
bit_vector_cast_to_bit_vector(0, &(Y), &(CONCAT_u32_u64_9624));\
;

#define fpunit_exec_exec__exec_vfhtoi16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__exec_vfhtoi16_outer_arg_decl_macro__ __declare_static_bit_vector(__X, 64);\
bit_vector_assign_uint64(0, &__X, X);\
__declare_static_bit_vector(__Y, 64);\
;

#define fpunit_exec_exec__exec_vfhtoi16_outer_op_xfer_macro__  *Y =  bit_vector_to_uint64(0, &__Y);\
;

#define fpunit_exec_exec__exec_vfi16toh_inner_inarg_prep_macro__ __declare_static_bit_vector(X,64);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(Y,64);\
__declare_static_bit_vector(X3,16);\
__declare_static_bit_vector(X2,16);\
__declare_static_bit_vector(X1,16);\
__declare_static_bit_vector(X0,16);\
__declare_static_bit_vector(Y3,16);\
__declare_static_bit_vector(Y2,16);\
__declare_static_bit_vector(Y1,16);\
__declare_static_bit_vector(Y0,16);\

#define fpunit_exec_exec__exec_vfi16toh_assign_stmt_9762_c_macro_ __declare_static_bit_vector(slice_9761,16);\
bit_vector_slice(&(X), &(slice_9761), 48);\
bit_vector_cast_to_bit_vector(0, &(X3), &(slice_9761));\
;

#define fpunit_exec_exec__exec_vfi16toh_assign_stmt_9766_c_macro_ __declare_static_bit_vector(slice_9765,16);\
bit_vector_slice(&(X), &(slice_9765), 32);\
bit_vector_cast_to_bit_vector(0, &(X2), &(slice_9765));\
;

#define fpunit_exec_exec__exec_vfi16toh_assign_stmt_9770_c_macro_ __declare_static_bit_vector(slice_9769,16);\
bit_vector_slice(&(X), &(slice_9769), 16);\
bit_vector_cast_to_bit_vector(0, &(X1), &(slice_9769));\
;

#define fpunit_exec_exec__exec_vfi16toh_assign_stmt_9774_c_macro_ __declare_static_bit_vector(slice_9773,16);\
bit_vector_slice(&(X), &(slice_9773), 0);\
bit_vector_cast_to_bit_vector(0, &(X0), &(slice_9773));\
;

#define fpunit_exec_exec__exec_vfi16toh_call_stmt_9777_c_macro_ _fpunit_exec_exec_exec_fi16toh_( &(X3), &(Y3));\
;

#define fpunit_exec_exec__exec_vfi16toh_call_stmt_9780_c_macro_ _fpunit_exec_exec_exec_fi16toh_( &(X2), &(Y2));\
;

#define fpunit_exec_exec__exec_vfi16toh_call_stmt_9783_c_macro_ _fpunit_exec_exec_exec_fi16toh_( &(X1), &(Y1));\
;

#define fpunit_exec_exec__exec_vfi16toh_call_stmt_9786_c_macro_ _fpunit_exec_exec_exec_fi16toh_( &(X0), &(Y0));\
;

#define fpunit_exec_exec__exec_vfi16toh_assign_stmt_9795_c_macro_ __declare_static_bit_vector(CONCAT_u16_u32_9790,32);\
__declare_static_bit_vector(CONCAT_u16_u32_9793,32);\
__declare_static_bit_vector(CONCAT_u32_u64_9794,64);\
bit_vector_concatenate( &(Y3), &(Y2), &(CONCAT_u16_u32_9790));\
bit_vector_concatenate( &(Y1), &(Y0), &(CONCAT_u16_u32_9793));\
bit_vector_concatenate( &(CONCAT_u16_u32_9790), &(CONCAT_u16_u32_9793), &(CONCAT_u32_u64_9794));\
bit_vector_cast_to_bit_vector(0, &(Y), &(CONCAT_u32_u64_9794));\
;

#define fpunit_exec_exec__exec_vfi16toh_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__exec_vfi16toh_outer_arg_decl_macro__ __declare_static_bit_vector(__X, 64);\
bit_vector_assign_uint64(0, &__X, X);\
__declare_static_bit_vector(__Y, 64);\
;

#define fpunit_exec_exec__exec_vfi16toh_outer_op_xfer_macro__  *Y =  bit_vector_to_uint64(0, &__Y);\
;

#define fpunit_exec_exec__execute_fbfcc_inner_inarg_prep_macro__ __declare_static_bit_vector(br_cond,4);\
bit_vector_cast_to_bit_vector(0, &(br_cond), &((*__pbr_cond)));\
__declare_static_bit_vector(fsr,32);\
bit_vector_cast_to_bit_vector(0, &(fsr), &((*__pfsr)));\
__declare_static_bit_vector(annul_flag,1);\
bit_vector_cast_to_bit_vector(0, &(annul_flag), &((*__pannul_flag)));\
__declare_static_bit_vector(br_taken,1);\
__declare_static_bit_vector(annul_next,1);\
__declare_static_bit_vector(fcc,2);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(L,1);\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(U,1);\
__declare_static_bit_vector(br_taken_raw,1);\
__declare_static_bit_vector(branch_always,1);\

#define fpunit_exec_exec__execute_fbfcc_stmt_18234_c_macro_ uint32_t fpunit_exec_exec__execute_fbfcc_stmt_18234_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__execute_fbfcc_stmt_18234_c_macro___print_counter,"execute_fbcc_in_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__execute_fbfcc_stmt_18234_c_macro___print_counter,"br_cond");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(br_cond)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__execute_fbfcc_stmt_18234_c_macro___print_counter,"fsr");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fsr)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__execute_fbfcc_stmt_18234_c_macro___print_counter,"annul_flag");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(annul_flag)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__execute_fbfcc_assign_stmt_18238_c_macro_ __declare_static_bit_vector(slice_18237,2);\
bit_vector_slice(&(fsr), &(slice_18237), 10);\
bit_vector_cast_to_bit_vector(0, &(fcc), &(slice_18237));\
;

#define fpunit_exec_exec__execute_fbfcc_assign_stmt_18243_c_macro_ __declare_static_bit_vector(konst_18241,2);\
bit_vector_clear(&konst_18241);\
__declare_static_bit_vector(EQ_u2_u1_18242,1);\
bit_vector_clear(&konst_18241);\
bit_vector_equal(0, &(fcc), &(konst_18241), &(EQ_u2_u1_18242));\
bit_vector_cast_to_bit_vector(0, &(E), &(EQ_u2_u1_18242));\
;

#define fpunit_exec_exec__execute_fbfcc_assign_stmt_18248_c_macro_ __declare_static_bit_vector(konst_18246,2);\
bit_vector_clear(&konst_18246);\
konst_18246.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u2_u1_18247,1);\
bit_vector_clear(&konst_18246);\
konst_18246.val.byte_array[0] = 1;\
bit_vector_equal(0, &(fcc), &(konst_18246), &(EQ_u2_u1_18247));\
bit_vector_cast_to_bit_vector(0, &(L), &(EQ_u2_u1_18247));\
;

#define fpunit_exec_exec__execute_fbfcc_assign_stmt_18253_c_macro_ __declare_static_bit_vector(konst_18251,2);\
bit_vector_clear(&konst_18251);\
konst_18251.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u2_u1_18252,1);\
bit_vector_clear(&konst_18251);\
konst_18251.val.byte_array[0] = 2;\
bit_vector_equal(0, &(fcc), &(konst_18251), &(EQ_u2_u1_18252));\
bit_vector_cast_to_bit_vector(0, &(G), &(EQ_u2_u1_18252));\
;

#define fpunit_exec_exec__execute_fbfcc_assign_stmt_18258_c_macro_ __declare_static_bit_vector(konst_18256,2);\
bit_vector_clear(&konst_18256);\
konst_18256.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u2_u1_18257,1);\
bit_vector_clear(&konst_18256);\
konst_18256.val.byte_array[0] = 3;\
bit_vector_equal(0, &(fcc), &(konst_18256), &(EQ_u2_u1_18257));\
bit_vector_cast_to_bit_vector(0, &(U), &(EQ_u2_u1_18257));\
;

#define fpunit_exec_exec__execute_fbfcc_assign_stmt_18387_c_macro_ __declare_static_bit_vector(konst_18261,4);\
bit_vector_clear(&konst_18261);\
konst_18261.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_18262,1);\
__declare_static_bit_vector(konst_18264,1);\
bit_vector_clear(&konst_18264);\
__declare_static_bit_vector(MUX_18265,1);\
__declare_static_bit_vector(konst_18267,4);\
bit_vector_clear(&konst_18267);\
__declare_static_bit_vector(EQ_u4_u1_18268,1);\
__declare_static_bit_vector(konst_18270,1);\
bit_vector_clear(&konst_18270);\
__declare_static_bit_vector(MUX_18271,1);\
__declare_static_bit_vector(OR_u1_u1_18272,1);\
__declare_static_bit_vector(konst_18274,4);\
bit_vector_clear(&konst_18274);\
konst_18274.val.byte_array[0] = 7;\
__declare_static_bit_vector(EQ_u4_u1_18275,1);\
__declare_static_bit_vector(konst_18277,1);\
bit_vector_clear(&konst_18277);\
__declare_static_bit_vector(MUX_18278,1);\
__declare_static_bit_vector(konst_18280,4);\
bit_vector_clear(&konst_18280);\
konst_18280.val.byte_array[0] = 6;\
__declare_static_bit_vector(EQ_u4_u1_18281,1);\
__declare_static_bit_vector(konst_18283,1);\
bit_vector_clear(&konst_18283);\
__declare_static_bit_vector(MUX_18284,1);\
__declare_static_bit_vector(OR_u1_u1_18285,1);\
__declare_static_bit_vector(OR_u1_u1_18286,1);\
__declare_static_bit_vector(konst_18288,4);\
bit_vector_clear(&konst_18288);\
konst_18288.val.byte_array[0] = 5;\
__declare_static_bit_vector(EQ_u4_u1_18289,1);\
__declare_static_bit_vector(OR_u1_u1_18292,1);\
__declare_static_bit_vector(konst_18293,1);\
bit_vector_clear(&konst_18293);\
__declare_static_bit_vector(MUX_18294,1);\
__declare_static_bit_vector(konst_18296,4);\
bit_vector_clear(&konst_18296);\
konst_18296.val.byte_array[0] = 4;\
__declare_static_bit_vector(EQ_u4_u1_18297,1);\
__declare_static_bit_vector(konst_18299,1);\
bit_vector_clear(&konst_18299);\
__declare_static_bit_vector(MUX_18300,1);\
__declare_static_bit_vector(OR_u1_u1_18301,1);\
__declare_static_bit_vector(konst_18303,4);\
bit_vector_clear(&konst_18303);\
konst_18303.val.byte_array[0] = 3;\
__declare_static_bit_vector(EQ_u4_u1_18304,1);\
__declare_static_bit_vector(OR_u1_u1_18307,1);\
__declare_static_bit_vector(konst_18308,1);\
bit_vector_clear(&konst_18308);\
__declare_static_bit_vector(MUX_18309,1);\
__declare_static_bit_vector(konst_18311,4);\
bit_vector_clear(&konst_18311);\
konst_18311.val.byte_array[0] = 2;\
__declare_static_bit_vector(EQ_u4_u1_18312,1);\
__declare_static_bit_vector(OR_u1_u1_18315,1);\
__declare_static_bit_vector(konst_18316,1);\
bit_vector_clear(&konst_18316);\
__declare_static_bit_vector(MUX_18317,1);\
__declare_static_bit_vector(OR_u1_u1_18318,1);\
__declare_static_bit_vector(OR_u1_u1_18319,1);\
__declare_static_bit_vector(OR_u1_u1_18320,1);\
__declare_static_bit_vector(konst_18322,4);\
bit_vector_clear(&konst_18322);\
konst_18322.val.byte_array[0] = 1;\
__declare_static_bit_vector(EQ_u4_u1_18323,1);\
__declare_static_bit_vector(NOT_u1_u1_18325,1);\
__declare_static_bit_vector(konst_18326,1);\
bit_vector_clear(&konst_18326);\
__declare_static_bit_vector(MUX_18327,1);\
__declare_static_bit_vector(konst_18329,4);\
bit_vector_clear(&konst_18329);\
konst_18329.val.byte_array[0] = 9;\
__declare_static_bit_vector(EQ_u4_u1_18330,1);\
__declare_static_bit_vector(konst_18332,1);\
bit_vector_clear(&konst_18332);\
__declare_static_bit_vector(MUX_18333,1);\
__declare_static_bit_vector(OR_u1_u1_18334,1);\
__declare_static_bit_vector(konst_18336,4);\
bit_vector_clear(&konst_18336);\
konst_18336.val.byte_array[0] = 10;\
__declare_static_bit_vector(EQ_u4_u1_18337,1);\
__declare_static_bit_vector(OR_u1_u1_18340,1);\
__declare_static_bit_vector(konst_18341,1);\
bit_vector_clear(&konst_18341);\
__declare_static_bit_vector(MUX_18342,1);\
__declare_static_bit_vector(konst_18344,4);\
bit_vector_clear(&konst_18344);\
konst_18344.val.byte_array[0] = 11;\
__declare_static_bit_vector(EQ_u4_u1_18345,1);\
__declare_static_bit_vector(OR_u1_u1_18348,1);\
__declare_static_bit_vector(konst_18349,1);\
bit_vector_clear(&konst_18349);\
__declare_static_bit_vector(MUX_18350,1);\
__declare_static_bit_vector(OR_u1_u1_18351,1);\
__declare_static_bit_vector(OR_u1_u1_18352,1);\
__declare_static_bit_vector(konst_18354,4);\
bit_vector_clear(&konst_18354);\
konst_18354.val.byte_array[0] = 12;\
__declare_static_bit_vector(EQ_u4_u1_18355,1);\
__declare_static_bit_vector(NOT_u1_u1_18357,1);\
__declare_static_bit_vector(konst_18358,1);\
bit_vector_clear(&konst_18358);\
__declare_static_bit_vector(MUX_18359,1);\
__declare_static_bit_vector(konst_18361,4);\
bit_vector_clear(&konst_18361);\
konst_18361.val.byte_array[0] = 13;\
__declare_static_bit_vector(EQ_u4_u1_18362,1);\
__declare_static_bit_vector(OR_u1_u1_18365,1);\
__declare_static_bit_vector(konst_18366,1);\
bit_vector_clear(&konst_18366);\
__declare_static_bit_vector(MUX_18367,1);\
__declare_static_bit_vector(OR_u1_u1_18368,1);\
__declare_static_bit_vector(konst_18370,4);\
bit_vector_clear(&konst_18370);\
konst_18370.val.byte_array[0] = 14;\
__declare_static_bit_vector(EQ_u4_u1_18371,1);\
__declare_static_bit_vector(NOT_u1_u1_18373,1);\
__declare_static_bit_vector(konst_18374,1);\
bit_vector_clear(&konst_18374);\
__declare_static_bit_vector(MUX_18375,1);\
__declare_static_bit_vector(konst_18377,4);\
bit_vector_clear(&konst_18377);\
konst_18377.val.byte_array[0] = 15;\
__declare_static_bit_vector(EQ_u4_u1_18378,1);\
__declare_static_bit_vector(NOT_u1_u1_18380,1);\
__declare_static_bit_vector(konst_18381,1);\
bit_vector_clear(&konst_18381);\
__declare_static_bit_vector(MUX_18382,1);\
__declare_static_bit_vector(OR_u1_u1_18383,1);\
__declare_static_bit_vector(OR_u1_u1_18384,1);\
__declare_static_bit_vector(OR_u1_u1_18385,1);\
__declare_static_bit_vector(OR_u1_u1_18386,1);\
bit_vector_clear(&konst_18261);\
konst_18261.val.byte_array[0] = 8;\
bit_vector_equal(0, &(br_cond), &(konst_18261), &(EQ_u4_u1_18262));\
if (has_undefined_bit(&EQ_u4_u1_18262)) {fprintf(stderr, "Error: variable EQ_u4_u1_18262 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18262));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18262)){bit_vector_cast_to_bit_vector(0, &(MUX_18265), &(ONE_1));\
}else {bit_vector_clear(&konst_18264);\
bit_vector_cast_to_bit_vector(0, &(MUX_18265), &(konst_18264));\
}bit_vector_clear(&konst_18267);\
bit_vector_equal(0, &(br_cond), &(konst_18267), &(EQ_u4_u1_18268));\
if (has_undefined_bit(&EQ_u4_u1_18268)) {fprintf(stderr, "Error: variable EQ_u4_u1_18268 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18268));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18268)){bit_vector_cast_to_bit_vector(0, &(MUX_18271), &(ZERO_1));\
}else {bit_vector_clear(&konst_18270);\
bit_vector_cast_to_bit_vector(0, &(MUX_18271), &(konst_18270));\
}bit_vector_or(&(MUX_18265), &(MUX_18271), &(OR_u1_u1_18272));\
bit_vector_clear(&konst_18274);\
konst_18274.val.byte_array[0] = 7;\
bit_vector_equal(0, &(br_cond), &(konst_18274), &(EQ_u4_u1_18275));\
if (has_undefined_bit(&EQ_u4_u1_18275)) {fprintf(stderr, "Error: variable EQ_u4_u1_18275 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18275));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18275)){bit_vector_cast_to_bit_vector(0, &(MUX_18278), &(U));\
}else {bit_vector_clear(&konst_18277);\
bit_vector_cast_to_bit_vector(0, &(MUX_18278), &(konst_18277));\
}bit_vector_clear(&konst_18280);\
konst_18280.val.byte_array[0] = 6;\
bit_vector_equal(0, &(br_cond), &(konst_18280), &(EQ_u4_u1_18281));\
if (has_undefined_bit(&EQ_u4_u1_18281)) {fprintf(stderr, "Error: variable EQ_u4_u1_18281 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18281));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18281)){bit_vector_cast_to_bit_vector(0, &(MUX_18284), &(G));\
}else {bit_vector_clear(&konst_18283);\
bit_vector_cast_to_bit_vector(0, &(MUX_18284), &(konst_18283));\
}bit_vector_or(&(MUX_18278), &(MUX_18284), &(OR_u1_u1_18285));\
bit_vector_or(&(OR_u1_u1_18272), &(OR_u1_u1_18285), &(OR_u1_u1_18286));\
bit_vector_clear(&konst_18288);\
konst_18288.val.byte_array[0] = 5;\
bit_vector_equal(0, &(br_cond), &(konst_18288), &(EQ_u4_u1_18289));\
if (has_undefined_bit(&EQ_u4_u1_18289)) {fprintf(stderr, "Error: variable EQ_u4_u1_18289 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18289));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18289)){bit_vector_or(&(G), &(U), &(OR_u1_u1_18292));\
bit_vector_cast_to_bit_vector(0, &(MUX_18294), &(OR_u1_u1_18292));\
}else {bit_vector_clear(&konst_18293);\
bit_vector_cast_to_bit_vector(0, &(MUX_18294), &(konst_18293));\
}bit_vector_clear(&konst_18296);\
konst_18296.val.byte_array[0] = 4;\
bit_vector_equal(0, &(br_cond), &(konst_18296), &(EQ_u4_u1_18297));\
if (has_undefined_bit(&EQ_u4_u1_18297)) {fprintf(stderr, "Error: variable EQ_u4_u1_18297 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18297));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18297)){bit_vector_cast_to_bit_vector(0, &(MUX_18300), &(L));\
}else {bit_vector_clear(&konst_18299);\
bit_vector_cast_to_bit_vector(0, &(MUX_18300), &(konst_18299));\
}bit_vector_or(&(MUX_18294), &(MUX_18300), &(OR_u1_u1_18301));\
bit_vector_clear(&konst_18303);\
konst_18303.val.byte_array[0] = 3;\
bit_vector_equal(0, &(br_cond), &(konst_18303), &(EQ_u4_u1_18304));\
if (has_undefined_bit(&EQ_u4_u1_18304)) {fprintf(stderr, "Error: variable EQ_u4_u1_18304 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18304));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18304)){bit_vector_or(&(L), &(U), &(OR_u1_u1_18307));\
bit_vector_cast_to_bit_vector(0, &(MUX_18309), &(OR_u1_u1_18307));\
}else {bit_vector_clear(&konst_18308);\
bit_vector_cast_to_bit_vector(0, &(MUX_18309), &(konst_18308));\
}bit_vector_clear(&konst_18311);\
konst_18311.val.byte_array[0] = 2;\
bit_vector_equal(0, &(br_cond), &(konst_18311), &(EQ_u4_u1_18312));\
if (has_undefined_bit(&EQ_u4_u1_18312)) {fprintf(stderr, "Error: variable EQ_u4_u1_18312 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18312));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18312)){bit_vector_or(&(L), &(G), &(OR_u1_u1_18315));\
bit_vector_cast_to_bit_vector(0, &(MUX_18317), &(OR_u1_u1_18315));\
}else {bit_vector_clear(&konst_18316);\
bit_vector_cast_to_bit_vector(0, &(MUX_18317), &(konst_18316));\
}bit_vector_or(&(MUX_18309), &(MUX_18317), &(OR_u1_u1_18318));\
bit_vector_or(&(OR_u1_u1_18301), &(OR_u1_u1_18318), &(OR_u1_u1_18319));\
bit_vector_or(&(OR_u1_u1_18286), &(OR_u1_u1_18319), &(OR_u1_u1_18320));\
bit_vector_clear(&konst_18322);\
konst_18322.val.byte_array[0] = 1;\
bit_vector_equal(0, &(br_cond), &(konst_18322), &(EQ_u4_u1_18323));\
if (has_undefined_bit(&EQ_u4_u1_18323)) {fprintf(stderr, "Error: variable EQ_u4_u1_18323 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18323));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18323)){bit_vector_not( &(E), &(NOT_u1_u1_18325));\
bit_vector_cast_to_bit_vector(0, &(MUX_18327), &(NOT_u1_u1_18325));\
}else {bit_vector_clear(&konst_18326);\
bit_vector_cast_to_bit_vector(0, &(MUX_18327), &(konst_18326));\
}bit_vector_clear(&konst_18329);\
konst_18329.val.byte_array[0] = 9;\
bit_vector_equal(0, &(br_cond), &(konst_18329), &(EQ_u4_u1_18330));\
if (has_undefined_bit(&EQ_u4_u1_18330)) {fprintf(stderr, "Error: variable EQ_u4_u1_18330 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18330));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18330)){bit_vector_cast_to_bit_vector(0, &(MUX_18333), &(E));\
}else {bit_vector_clear(&konst_18332);\
bit_vector_cast_to_bit_vector(0, &(MUX_18333), &(konst_18332));\
}bit_vector_or(&(MUX_18327), &(MUX_18333), &(OR_u1_u1_18334));\
bit_vector_clear(&konst_18336);\
konst_18336.val.byte_array[0] = 10;\
bit_vector_equal(0, &(br_cond), &(konst_18336), &(EQ_u4_u1_18337));\
if (has_undefined_bit(&EQ_u4_u1_18337)) {fprintf(stderr, "Error: variable EQ_u4_u1_18337 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18337));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18337)){bit_vector_or(&(E), &(U), &(OR_u1_u1_18340));\
bit_vector_cast_to_bit_vector(0, &(MUX_18342), &(OR_u1_u1_18340));\
}else {bit_vector_clear(&konst_18341);\
bit_vector_cast_to_bit_vector(0, &(MUX_18342), &(konst_18341));\
}bit_vector_clear(&konst_18344);\
konst_18344.val.byte_array[0] = 11;\
bit_vector_equal(0, &(br_cond), &(konst_18344), &(EQ_u4_u1_18345));\
if (has_undefined_bit(&EQ_u4_u1_18345)) {fprintf(stderr, "Error: variable EQ_u4_u1_18345 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18345));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18345)){bit_vector_or(&(G), &(E), &(OR_u1_u1_18348));\
bit_vector_cast_to_bit_vector(0, &(MUX_18350), &(OR_u1_u1_18348));\
}else {bit_vector_clear(&konst_18349);\
bit_vector_cast_to_bit_vector(0, &(MUX_18350), &(konst_18349));\
}bit_vector_or(&(MUX_18342), &(MUX_18350), &(OR_u1_u1_18351));\
bit_vector_or(&(OR_u1_u1_18334), &(OR_u1_u1_18351), &(OR_u1_u1_18352));\
bit_vector_clear(&konst_18354);\
konst_18354.val.byte_array[0] = 12;\
bit_vector_equal(0, &(br_cond), &(konst_18354), &(EQ_u4_u1_18355));\
if (has_undefined_bit(&EQ_u4_u1_18355)) {fprintf(stderr, "Error: variable EQ_u4_u1_18355 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18355));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18355)){bit_vector_not( &(L), &(NOT_u1_u1_18357));\
bit_vector_cast_to_bit_vector(0, &(MUX_18359), &(NOT_u1_u1_18357));\
}else {bit_vector_clear(&konst_18358);\
bit_vector_cast_to_bit_vector(0, &(MUX_18359), &(konst_18358));\
}bit_vector_clear(&konst_18361);\
konst_18361.val.byte_array[0] = 13;\
bit_vector_equal(0, &(br_cond), &(konst_18361), &(EQ_u4_u1_18362));\
if (has_undefined_bit(&EQ_u4_u1_18362)) {fprintf(stderr, "Error: variable EQ_u4_u1_18362 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18362));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18362)){bit_vector_or(&(L), &(E), &(OR_u1_u1_18365));\
bit_vector_cast_to_bit_vector(0, &(MUX_18367), &(OR_u1_u1_18365));\
}else {bit_vector_clear(&konst_18366);\
bit_vector_cast_to_bit_vector(0, &(MUX_18367), &(konst_18366));\
}bit_vector_or(&(MUX_18359), &(MUX_18367), &(OR_u1_u1_18368));\
bit_vector_clear(&konst_18370);\
konst_18370.val.byte_array[0] = 14;\
bit_vector_equal(0, &(br_cond), &(konst_18370), &(EQ_u4_u1_18371));\
if (has_undefined_bit(&EQ_u4_u1_18371)) {fprintf(stderr, "Error: variable EQ_u4_u1_18371 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18371));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18371)){bit_vector_not( &(G), &(NOT_u1_u1_18373));\
bit_vector_cast_to_bit_vector(0, &(MUX_18375), &(NOT_u1_u1_18373));\
}else {bit_vector_clear(&konst_18374);\
bit_vector_cast_to_bit_vector(0, &(MUX_18375), &(konst_18374));\
}bit_vector_clear(&konst_18377);\
konst_18377.val.byte_array[0] = 15;\
bit_vector_equal(0, &(br_cond), &(konst_18377), &(EQ_u4_u1_18378));\
if (has_undefined_bit(&EQ_u4_u1_18378)) {fprintf(stderr, "Error: variable EQ_u4_u1_18378 has undefined value (%s) at test point.\n", to_string(&EQ_u4_u1_18378));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u4_u1_18378)){bit_vector_not( &(U), &(NOT_u1_u1_18380));\
bit_vector_cast_to_bit_vector(0, &(MUX_18382), &(NOT_u1_u1_18380));\
}else {bit_vector_clear(&konst_18381);\
bit_vector_cast_to_bit_vector(0, &(MUX_18382), &(konst_18381));\
}bit_vector_or(&(MUX_18375), &(MUX_18382), &(OR_u1_u1_18383));\
bit_vector_or(&(OR_u1_u1_18368), &(OR_u1_u1_18383), &(OR_u1_u1_18384));\
bit_vector_or(&(OR_u1_u1_18352), &(OR_u1_u1_18384), &(OR_u1_u1_18385));\
bit_vector_or(&(OR_u1_u1_18320), &(OR_u1_u1_18385), &(OR_u1_u1_18386));\
bit_vector_cast_to_bit_vector(0, &(br_taken_raw), &(OR_u1_u1_18386));\
;

#define fpunit_exec_exec__execute_fbfcc_assign_stmt_18392_c_macro_ __declare_static_bit_vector(konst_18390,4);\
bit_vector_clear(&konst_18390);\
konst_18390.val.byte_array[0] = 8;\
__declare_static_bit_vector(EQ_u4_u1_18391,1);\
bit_vector_clear(&konst_18390);\
konst_18390.val.byte_array[0] = 8;\
bit_vector_equal(0, &(br_cond), &(konst_18390), &(EQ_u4_u1_18391));\
bit_vector_cast_to_bit_vector(0, &(branch_always), &(EQ_u4_u1_18391));\
;

#define fpunit_exec_exec__execute_fbfcc_assign_stmt_18400_c_macro_ __declare_static_bit_vector(AND_u1_u1_18397,1);\
__declare_static_bit_vector(MUX_18399,1);\
if (has_undefined_bit(&br_taken_raw)) {fprintf(stderr, "Error: variable br_taken_raw has undefined value (%s) at test point.\n", to_string(&br_taken_raw));assert(0);} \
if(bit_vector_to_uint64(0, &br_taken_raw)){bit_vector_and(&(branch_always), &(annul_flag), &(AND_u1_u1_18397));\
bit_vector_cast_to_bit_vector(0, &(MUX_18399), &(AND_u1_u1_18397));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_18399), &(annul_flag));\
}bit_vector_cast_to_bit_vector(0, &(annul_next), &(MUX_18399));\
;

#define fpunit_exec_exec__execute_fbfcc_assign_stmt_18403_c_macro_ bit_vector_cast_to_bit_vector(0, &(br_taken), &(br_taken_raw));\
;

#define fpunit_exec_exec__execute_fbfcc_stmt_18406_c_macro_ uint32_t fpunit_exec_exec__execute_fbfcc_stmt_18406_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__execute_fbfcc_stmt_18406_c_macro___print_counter,"execute_fbcc_out_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__execute_fbfcc_stmt_18406_c_macro___print_counter,"br_taken");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(br_taken)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__execute_fbfcc_stmt_18406_c_macro___print_counter,"annul_next");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(annul_next)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__execute_fbfcc_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pbr_taken)), &(br_taken));\
bit_vector_cast_to_bit_vector(0, &((*__pannul_next)), &(annul_next));\
;

#define fpunit_exec_exec__expDiffDouble_inner_inarg_prep_macro__ __declare_static_bit_vector(uf1_d,64);\
bit_vector_cast_to_bit_vector(0, &(uf1_d), &((*__puf1_d)));\
__declare_static_bit_vector(uf2_d,64);\
bit_vector_cast_to_bit_vector(0, &(uf2_d), &((*__puf2_d)));\
__declare_static_bit_vector(exp_a_greater_than_exp_b_d,1);\
__declare_static_bit_vector(exp_a_equal_exp_b_d,1);\
__declare_static_bit_vector(exp_ab_d,13);\
__declare_static_bit_vector(ea,11);\
__declare_static_bit_vector(eb,11);\
__declare_static_bit_vector(eab,11);\
__declare_static_bit_vector(eba,11);\

#define fpunit_exec_exec__expDiffDouble_assign_stmt_10154_c_macro_ __declare_static_bit_vector(slice_10153,11);\
bit_vector_slice(&(uf1_d), &(slice_10153), 52);\
bit_vector_cast_to_bit_vector(0, &(ea), &(slice_10153));\
;

#define fpunit_exec_exec__expDiffDouble_assign_stmt_10158_c_macro_ __declare_static_bit_vector(slice_10157,11);\
bit_vector_slice(&(uf2_d), &(slice_10157), 52);\
bit_vector_cast_to_bit_vector(0, &(eb), &(slice_10157));\
;

#define fpunit_exec_exec__expDiffDouble_call_stmt_10163_c_macro_ _fpunit_exec_exec_compare11_( &(ea),  &(eb), &(exp_a_greater_than_exp_b_d), &(exp_a_equal_exp_b_d));\
;

#define fpunit_exec_exec__expDiffDouble_assign_stmt_10168_c_macro_ __declare_static_bit_vector(SUB_u11_u11_10167,11);\
bit_vector_minus( &(ea), &(eb), &(SUB_u11_u11_10167));\
bit_vector_cast_to_bit_vector(0, &(eab), &(SUB_u11_u11_10167));\
;

#define fpunit_exec_exec__expDiffDouble_assign_stmt_10173_c_macro_ __declare_static_bit_vector(SUB_u11_u11_10172,11);\
bit_vector_minus( &(eb), &(ea), &(SUB_u11_u11_10172));\
bit_vector_cast_to_bit_vector(0, &(eba), &(SUB_u11_u11_10172));\
;

#define fpunit_exec_exec__expDiffDouble_assign_stmt_10180_c_macro_ __declare_static_bit_vector(MUX_10178,11);\
__declare_static_bit_vector(type_cast_10179,13);\
if (has_undefined_bit(&exp_a_greater_than_exp_b_d)) {fprintf(stderr, "Error: variable exp_a_greater_than_exp_b_d has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_exp_b_d));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_exp_b_d)){bit_vector_cast_to_bit_vector(0, &(MUX_10178), &(eab));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10178), &(eba));\
}bit_vector_bitcast_to_bit_vector( &(type_cast_10179), &(MUX_10178));\
bit_vector_cast_to_bit_vector(1, &(exp_ab_d), &(type_cast_10179));\
;

#define fpunit_exec_exec__expDiffDouble_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pexp_a_greater_than_exp_b_d)), &(exp_a_greater_than_exp_b_d));\
bit_vector_cast_to_bit_vector(0, &((*__pexp_a_equal_exp_b_d)), &(exp_a_equal_exp_b_d));\
bit_vector_cast_to_bit_vector(1, &((*__pexp_ab_d)), &(exp_ab_d));\
;

#define fpunit_exec_exec__expDiffSingle_inner_inarg_prep_macro__ __declare_static_bit_vector(uf1_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &((*__puf1_s)));\
__declare_static_bit_vector(uf2_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf2_s), &((*__puf2_s)));\
__declare_static_bit_vector(exp_a_greater_than_exp_b_s,1);\
__declare_static_bit_vector(exp_a_equal_exp_b_s,1);\
__declare_static_bit_vector(exp_ab_s,13);\
__declare_static_bit_vector(ea,8);\
__declare_static_bit_vector(eb,8);\
__declare_static_bit_vector(eab,8);\
__declare_static_bit_vector(eba,8);\

#define fpunit_exec_exec__expDiffSingle_assign_stmt_10191_c_macro_ __declare_static_bit_vector(slice_10190,8);\
bit_vector_slice(&(uf1_s), &(slice_10190), 23);\
bit_vector_cast_to_bit_vector(0, &(ea), &(slice_10190));\
;

#define fpunit_exec_exec__expDiffSingle_assign_stmt_10195_c_macro_ __declare_static_bit_vector(slice_10194,8);\
bit_vector_slice(&(uf2_s), &(slice_10194), 23);\
bit_vector_cast_to_bit_vector(0, &(eb), &(slice_10194));\
;

#define fpunit_exec_exec__expDiffSingle_call_stmt_10200_c_macro_ _fpunit_exec_exec_compare8_( &(ea),  &(eb), &(exp_a_greater_than_exp_b_s), &(exp_a_equal_exp_b_s));\
;

#define fpunit_exec_exec__expDiffSingle_assign_stmt_10205_c_macro_ __declare_static_bit_vector(SUB_u8_u8_10204,8);\
bit_vector_minus( &(ea), &(eb), &(SUB_u8_u8_10204));\
bit_vector_cast_to_bit_vector(0, &(eab), &(SUB_u8_u8_10204));\
;

#define fpunit_exec_exec__expDiffSingle_assign_stmt_10210_c_macro_ __declare_static_bit_vector(SUB_u8_u8_10209,8);\
bit_vector_minus( &(eb), &(ea), &(SUB_u8_u8_10209));\
bit_vector_cast_to_bit_vector(0, &(eba), &(SUB_u8_u8_10209));\
;

#define fpunit_exec_exec__expDiffSingle_assign_stmt_10217_c_macro_ __declare_static_bit_vector(MUX_10215,8);\
__declare_static_bit_vector(type_cast_10216,13);\
if (has_undefined_bit(&exp_a_greater_than_exp_b_s)) {fprintf(stderr, "Error: variable exp_a_greater_than_exp_b_s has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_exp_b_s));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_exp_b_s)){bit_vector_cast_to_bit_vector(0, &(MUX_10215), &(eab));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10215), &(eba));\
}bit_vector_bitcast_to_bit_vector( &(type_cast_10216), &(MUX_10215));\
bit_vector_cast_to_bit_vector(1, &(exp_ab_s), &(type_cast_10216));\
;

#define fpunit_exec_exec__expDiffSingle_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pexp_a_greater_than_exp_b_s)), &(exp_a_greater_than_exp_b_s));\
bit_vector_cast_to_bit_vector(0, &((*__pexp_a_equal_exp_b_s)), &(exp_a_equal_exp_b_s));\
bit_vector_cast_to_bit_vector(1, &((*__pexp_ab_s)), &(exp_ab_s));\
;

#define fpunit_exec_exec__fadd16_wrap_inner_inarg_prep_macro__ __declare_static_bit_vector(f1,16);\
bit_vector_cast_to_bit_vector(0, &(f1), &((*__pf1)));\
__declare_static_bit_vector(f2,16);\
bit_vector_cast_to_bit_vector(0, &(f2), &((*__pf2)));\
__declare_static_bit_vector(result,16);\

#define fpunit_exec_exec__fadd16_wrap_call_stmt_18416_c_macro_ _fpunit_exec_exec_faddsub16_( &(f1),  &(f2),  &(ZERO_1), &(result));\
;

#define fpunit_exec_exec__fadd16_wrap_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__fadd16_wrap_outer_arg_decl_macro__ __declare_static_bit_vector(__f1, 16);\
bit_vector_assign_uint64(0, &__f1, f1);\
__declare_static_bit_vector(__f2, 16);\
bit_vector_assign_uint64(0, &__f2, f2);\
__declare_static_bit_vector(__result, 16);\
;

#define fpunit_exec_exec__fadd16_wrap_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__faddsub16_inner_inarg_prep_macro__ __declare_static_bit_vector(f1,16);\
bit_vector_cast_to_bit_vector(0, &(f1), &((*__pf1)));\
__declare_static_bit_vector(f2,16);\
bit_vector_cast_to_bit_vector(0, &(f2), &((*__pf2)));\
__declare_static_bit_vector(sub,1);\
bit_vector_cast_to_bit_vector(0, &(sub), &((*__psub)));\
__declare_static_bit_vector(result,16);\
__declare_static_bit_vector(ctr,1);\
bit_vector_clear(&ctr);\
static char fpunit_exec_exec_faddsub16_init_objects_flag = 1;\
if (fpunit_exec_exec_faddsub16_init_objects_flag) {\
fpunit_exec_exec_faddsub16_init_objects_flag= 0;\
init_static_bit_vector(&(ctr), 1);\
bit_vector_clear(&ctr);\
 }\
__declare_static_bit_vector(f2c,16);\
__declare_static_bit_vector(f2_actual,16);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f2_zero,1);\
__declare_static_bit_vector(f2_normal,1);\
__declare_static_bit_vector(f2_nan,1);\
__declare_static_bit_vector(f2_inf,1);\
__declare_static_bit_vector(sign_f1,1);\
__declare_static_bit_vector(f1_exp,5);\
__declare_static_bit_vector(f1_fraction,10);\
__declare_static_bit_vector(sign_f2,1);\
__declare_static_bit_vector(f2_exp,5);\
__declare_static_bit_vector(f2_fraction,10);\
__declare_static_bit_vector(f1_frac,11);\
__declare_static_bit_vector(f2_frac,11);\
__declare_static_bit_vector(exp_a,7);\
__declare_static_bit_vector(exp_b,7);\
__declare_static_bit_vector(exp_a_minus_b,7);\
__declare_static_bit_vector(exp_b_minus_a,7);\
__declare_static_bit_vector(exp_a_greater_than_b,1);\
__declare_static_bit_vector(exp_a_equal_exp_b,1);\
__declare_static_bit_vector(exp_ab,7);\
__declare_static_bit_vector(mantissa_a_pre_shift,13);\
__declare_static_bit_vector(mantissa_b_pre_shift,13);\
__declare_static_bit_vector(to_be_shifted,13);\
__declare_static_bit_vector(shifted_output,13);\
__declare_static_bit_vector(mantissa_a_post_shift,13);\
__declare_static_bit_vector(mantissa_b_post_shift,13);\
__declare_static_bit_vector(exponent_post_align,7);\
__declare_static_bit_vector(a_frac_ge_b_frac,1);\
__declare_static_bit_vector(need_to_take_twos_complement_a,1);\
__declare_static_bit_vector(need_to_take_twos_complement_b,1);\
__declare_static_bit_vector(carry_in,1);\
__declare_static_bit_vector(mantissa_operand_a_ext,14);\
__declare_static_bit_vector(mantissa_operand_b_ext,14);\
__declare_static_bit_vector(mantissa_added_ext,14);\
__declare_static_bit_vector(need_to_shift,1);\
__declare_static_bit_vector(mantissa_out_shifted,11);\
__declare_static_bit_vector(mantissa_out_unshifted,11);\
__declare_static_bit_vector(sign_result,1);\
__declare_static_bit_vector(mantissa_non_normalized,12);\
__declare_static_bit_vector(position_of_one,4);\
__declare_static_bit_vector(one_found,1);\
__declare_static_bit_vector(left_shift_amount,5);\
__declare_static_bit_vector(final_mantissa_aligned_16,16);\
__declare_static_bit_vector(final_mantissa,10);\
__declare_static_bit_vector(left_shift_amount_E,7);\
__declare_static_bit_vector(final_exponent_without_bias,7);\
__declare_static_bit_vector(final_exponent,5);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(underflow,1);\
__declare_static_bit_vector(non_zero_result,16);\
__declare_static_bit_vector(result_normal,16);\
__declare_static_bit_vector(result_abnormal,16);\
__declare_static_bit_vector(abnormal_flag,1);\

#define fpunit_exec_exec__faddsub16_call_stmt_13541_c_macro_ _fpunit_exec_exec_negateVal_( &(f2), &(f2c));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13547_c_macro_ __declare_static_bit_vector(MUX_13546,16);\
if (has_undefined_bit(&sub)) {fprintf(stderr, "Error: variable sub has undefined value (%s) at test point.\n", to_string(&sub));assert(0);} \
if(bit_vector_to_uint64(0, &sub)){bit_vector_cast_to_bit_vector(0, &(MUX_13546), &(f2c));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13546), &(f2));\
}bit_vector_cast_to_bit_vector(0, &(f2_actual), &(MUX_13546));\
;

#define fpunit_exec_exec__faddsub16_call_stmt_13553_c_macro_ _fpunit_exec_exec_classifyFp16_( &(f1), &(f1_zero), &(f1_normal), &(f1_nan), &(f1_inf));\
;

#define fpunit_exec_exec__faddsub16_call_stmt_13559_c_macro_ _fpunit_exec_exec_classifyFp16_( &(f2_actual), &(f2_zero), &(f2_normal), &(f2_nan), &(f2_inf));\
;

#define fpunit_exec_exec__faddsub16_call_stmt_13564_c_macro_ _fpunit_exec_exec_splitFp16_( &(f1), &(sign_f1), &(f1_exp), &(f1_fraction));\
;

#define fpunit_exec_exec__faddsub16_call_stmt_13569_c_macro_ _fpunit_exec_exec_splitFp16_( &(f2_actual), &(sign_f2), &(f2_exp), &(f2_fraction));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13574_c_macro_ __declare_static_bit_vector(CONCAT_u1_u11_13573,11);\
bit_vector_concatenate( &(ONE_1), &(f1_fraction), &(CONCAT_u1_u11_13573));\
bit_vector_cast_to_bit_vector(0, &(f1_frac), &(CONCAT_u1_u11_13573));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13579_c_macro_ __declare_static_bit_vector(CONCAT_u1_u11_13578,11);\
bit_vector_concatenate( &(ONE_1), &(f2_fraction), &(CONCAT_u1_u11_13578));\
bit_vector_cast_to_bit_vector(0, &(f2_frac), &(CONCAT_u1_u11_13578));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13585_c_macro_ __declare_static_bit_vector(type_cast_13582,7);\
__declare_static_bit_vector(konst_13583,7);\
bit_vector_clear(&konst_13583);\
konst_13583.val.byte_array[0] = 15;\
__declare_static_bit_vector(SUB_i7_i7_13584,7);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13582), &(f1_exp));\
bit_vector_clear(&konst_13583);\
konst_13583.val.byte_array[0] = 15;\
bit_vector_minus( &(type_cast_13582), &(konst_13583), &(SUB_i7_i7_13584));\
bit_vector_cast_to_bit_vector(1, &(exp_a), &(SUB_i7_i7_13584));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13591_c_macro_ __declare_static_bit_vector(type_cast_13588,7);\
__declare_static_bit_vector(konst_13589,7);\
bit_vector_clear(&konst_13589);\
konst_13589.val.byte_array[0] = 15;\
__declare_static_bit_vector(SUB_i7_i7_13590,7);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13588), &(f2_exp));\
bit_vector_clear(&konst_13589);\
konst_13589.val.byte_array[0] = 15;\
bit_vector_minus( &(type_cast_13588), &(konst_13589), &(SUB_i7_i7_13590));\
bit_vector_cast_to_bit_vector(1, &(exp_b), &(SUB_i7_i7_13590));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13596_c_macro_ __declare_static_bit_vector(SUB_i7_i7_13595,7);\
bit_vector_minus( &(exp_a), &(exp_b), &(SUB_i7_i7_13595));\
bit_vector_cast_to_bit_vector(1, &(exp_a_minus_b), &(SUB_i7_i7_13595));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13601_c_macro_ __declare_static_bit_vector(SUB_i7_i7_13600,7);\
bit_vector_minus( &(exp_b), &(exp_a), &(SUB_i7_i7_13600));\
bit_vector_cast_to_bit_vector(1, &(exp_b_minus_a), &(SUB_i7_i7_13600));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13606_c_macro_ __declare_static_bit_vector(SGT_i7_u1_13605,1);\
bit_vector_greater(1, &(exp_a), &(exp_b), &(SGT_i7_u1_13605));\
bit_vector_cast_to_bit_vector(0, &(exp_a_greater_than_b), &(SGT_i7_u1_13605));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13611_c_macro_ __declare_static_bit_vector(EQ_i7_u1_13610,1);\
bit_vector_equal(1, &(exp_a), &(exp_b), &(EQ_i7_u1_13610));\
bit_vector_cast_to_bit_vector(0, &(exp_a_equal_exp_b), &(EQ_i7_u1_13610));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13617_c_macro_ __declare_static_bit_vector(MUX_13616,7);\
if (has_undefined_bit(&exp_a_greater_than_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_b)){bit_vector_cast_to_bit_vector(1, &(MUX_13616), &(exp_a_minus_b));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_13616), &(exp_b_minus_a));\
}bit_vector_cast_to_bit_vector(1, &(exp_ab), &(MUX_13616));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13625_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_13621,12);\
__declare_static_bit_vector(konst_13622,1);\
bit_vector_clear(&konst_13622);\
__declare_static_bit_vector(type_cast_13623,1);\
bit_vector_clear(&type_cast_13623);\
__declare_static_bit_vector(CONCAT_u12_u13_13624,13);\
bit_vector_concatenate( &(ZERO_1), &(f1_frac), &(CONCAT_u1_u12_13621));\
bit_vector_clear(&konst_13622);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13623), &(konst_13622));\
bit_vector_concatenate( &(CONCAT_u1_u12_13621), &(type_cast_13623), &(CONCAT_u12_u13_13624));\
bit_vector_cast_to_bit_vector(0, &(mantissa_a_pre_shift), &(CONCAT_u12_u13_13624));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13633_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_13629,12);\
__declare_static_bit_vector(konst_13630,1);\
bit_vector_clear(&konst_13630);\
__declare_static_bit_vector(type_cast_13631,1);\
bit_vector_clear(&type_cast_13631);\
__declare_static_bit_vector(CONCAT_u12_u13_13632,13);\
bit_vector_concatenate( &(ZERO_1), &(f2_frac), &(CONCAT_u1_u12_13629));\
bit_vector_clear(&konst_13630);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13631), &(konst_13630));\
bit_vector_concatenate( &(CONCAT_u1_u12_13629), &(type_cast_13631), &(CONCAT_u12_u13_13632));\
bit_vector_cast_to_bit_vector(0, &(mantissa_b_pre_shift), &(CONCAT_u12_u13_13632));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13639_c_macro_ __declare_static_bit_vector(MUX_13638,13);\
if (has_undefined_bit(&exp_a_greater_than_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_b)){bit_vector_cast_to_bit_vector(0, &(MUX_13638), &(mantissa_b_pre_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13638), &(mantissa_a_pre_shift));\
}bit_vector_cast_to_bit_vector(0, &(to_be_shifted), &(MUX_13638));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13645_c_macro_ __declare_static_bit_vector(type_cast_13643,13);\
__declare_static_bit_vector(LSHR_u13_u13_13644,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13643), &(exp_ab));\
bit_vector_shift_right(0, &(to_be_shifted), &(type_cast_13643), &(LSHR_u13_u13_13644));\
bit_vector_cast_to_bit_vector(0, &(shifted_output), &(LSHR_u13_u13_13644));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13653_c_macro_ __declare_static_bit_vector(OR_u1_u1_13649,1);\
__declare_static_bit_vector(MUX_13652,13);\
bit_vector_or(&(exp_a_greater_than_b), &(exp_a_equal_exp_b), &(OR_u1_u1_13649));\
if (has_undefined_bit(&OR_u1_u1_13649)) {fprintf(stderr, "Error: variable OR_u1_u1_13649 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_13649));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_13649)){bit_vector_cast_to_bit_vector(0, &(MUX_13652), &(mantissa_a_pre_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13652), &(shifted_output));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_a_post_shift), &(MUX_13652));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13659_c_macro_ __declare_static_bit_vector(MUX_13658,13);\
if (has_undefined_bit(&exp_a_greater_than_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_b)){bit_vector_cast_to_bit_vector(0, &(MUX_13658), &(shifted_output));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13658), &(mantissa_b_pre_shift));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_b_post_shift), &(MUX_13658));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13665_c_macro_ __declare_static_bit_vector(MUX_13664,7);\
if (has_undefined_bit(&exp_a_greater_than_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_b)){bit_vector_cast_to_bit_vector(1, &(MUX_13664), &(exp_a));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_13664), &(exp_b));\
}bit_vector_cast_to_bit_vector(1, &(exponent_post_align), &(MUX_13664));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13670_c_macro_ __declare_static_bit_vector(UGE_u13_u1_13669,1);\
bit_vector_greater_equal(0, &(mantissa_a_post_shift), &(mantissa_b_post_shift), &(UGE_u13_u1_13669));\
bit_vector_cast_to_bit_vector(0, &(a_frac_ge_b_frac), &(UGE_u13_u1_13669));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13687_c_macro_ __declare_static_bit_vector(NOT_u1_u1_13674,1);\
__declare_static_bit_vector(AND_u1_u1_13675,1);\
__declare_static_bit_vector(NOT_u1_u1_13677,1);\
__declare_static_bit_vector(AND_u1_u1_13678,1);\
__declare_static_bit_vector(NOT_u1_u1_13680,1);\
__declare_static_bit_vector(AND_u1_u1_13682,1);\
__declare_static_bit_vector(NOT_u1_u1_13684,1);\
__declare_static_bit_vector(AND_u1_u1_13685,1);\
__declare_static_bit_vector(OR_u1_u1_13686,1);\
bit_vector_not( &(sign_f2), &(NOT_u1_u1_13674));\
bit_vector_and(&(sign_f1), &(NOT_u1_u1_13674), &(AND_u1_u1_13675));\
bit_vector_not( &(a_frac_ge_b_frac), &(NOT_u1_u1_13677));\
bit_vector_and(&(AND_u1_u1_13675), &(NOT_u1_u1_13677), &(AND_u1_u1_13678));\
bit_vector_not( &(sign_f1), &(NOT_u1_u1_13680));\
bit_vector_and(&(NOT_u1_u1_13680), &(sign_f2), &(AND_u1_u1_13682));\
bit_vector_not( &(a_frac_ge_b_frac), &(NOT_u1_u1_13684));\
bit_vector_and(&(AND_u1_u1_13682), &(NOT_u1_u1_13684), &(AND_u1_u1_13685));\
bit_vector_or(&(AND_u1_u1_13678), &(AND_u1_u1_13685), &(OR_u1_u1_13686));\
bit_vector_cast_to_bit_vector(0, &(need_to_take_twos_complement_a), &(OR_u1_u1_13686));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13702_c_macro_ __declare_static_bit_vector(NOT_u1_u1_13691,1);\
__declare_static_bit_vector(AND_u1_u1_13692,1);\
__declare_static_bit_vector(AND_u1_u1_13694,1);\
__declare_static_bit_vector(NOT_u1_u1_13696,1);\
__declare_static_bit_vector(AND_u1_u1_13698,1);\
__declare_static_bit_vector(AND_u1_u1_13700,1);\
__declare_static_bit_vector(OR_u1_u1_13701,1);\
bit_vector_not( &(sign_f1), &(NOT_u1_u1_13691));\
bit_vector_and(&(sign_f2), &(NOT_u1_u1_13691), &(AND_u1_u1_13692));\
bit_vector_and(&(AND_u1_u1_13692), &(a_frac_ge_b_frac), &(AND_u1_u1_13694));\
bit_vector_not( &(sign_f2), &(NOT_u1_u1_13696));\
bit_vector_and(&(NOT_u1_u1_13696), &(sign_f1), &(AND_u1_u1_13698));\
bit_vector_and(&(AND_u1_u1_13698), &(a_frac_ge_b_frac), &(AND_u1_u1_13700));\
bit_vector_or(&(AND_u1_u1_13694), &(AND_u1_u1_13700), &(OR_u1_u1_13701));\
bit_vector_cast_to_bit_vector(0, &(need_to_take_twos_complement_b), &(OR_u1_u1_13701));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13707_c_macro_ __declare_static_bit_vector(OR_u1_u1_13706,1);\
bit_vector_or(&(need_to_take_twos_complement_a), &(need_to_take_twos_complement_b), &(OR_u1_u1_13706));\
bit_vector_cast_to_bit_vector(0, &(carry_in), &(OR_u1_u1_13706));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13716_c_macro_ __declare_static_bit_vector(NOT_u13_u13_13711,13);\
__declare_static_bit_vector(MUX_13713,13);\
__declare_static_bit_vector(CONCAT_u13_u14_13715,14);\
if (has_undefined_bit(&need_to_take_twos_complement_a)) {fprintf(stderr, "Error: variable need_to_take_twos_complement_a has undefined value (%s) at test point.\n", to_string(&need_to_take_twos_complement_a));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_take_twos_complement_a)){bit_vector_not( &(mantissa_a_post_shift), &(NOT_u13_u13_13711));\
bit_vector_cast_to_bit_vector(0, &(MUX_13713), &(NOT_u13_u13_13711));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13713), &(mantissa_a_post_shift));\
}bit_vector_concatenate( &(MUX_13713), &(carry_in), &(CONCAT_u13_u14_13715));\
bit_vector_cast_to_bit_vector(0, &(mantissa_operand_a_ext), &(CONCAT_u13_u14_13715));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13725_c_macro_ __declare_static_bit_vector(NOT_u13_u13_13720,13);\
__declare_static_bit_vector(MUX_13722,13);\
__declare_static_bit_vector(CONCAT_u13_u14_13724,14);\
if (has_undefined_bit(&need_to_take_twos_complement_b)) {fprintf(stderr, "Error: variable need_to_take_twos_complement_b has undefined value (%s) at test point.\n", to_string(&need_to_take_twos_complement_b));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_take_twos_complement_b)){bit_vector_not( &(mantissa_b_post_shift), &(NOT_u13_u13_13720));\
bit_vector_cast_to_bit_vector(0, &(MUX_13722), &(NOT_u13_u13_13720));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13722), &(mantissa_b_post_shift));\
}bit_vector_concatenate( &(MUX_13722), &(carry_in), &(CONCAT_u13_u14_13724));\
bit_vector_cast_to_bit_vector(0, &(mantissa_operand_b_ext), &(CONCAT_u13_u14_13724));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13730_c_macro_ __declare_static_bit_vector(ADD_u14_u14_13729,14);\
bit_vector_plus( &(mantissa_operand_a_ext), &(mantissa_operand_b_ext), &(ADD_u14_u14_13729));\
bit_vector_cast_to_bit_vector(0, &(mantissa_added_ext), &(ADD_u14_u14_13729));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13745_c_macro_ __declare_static_bit_vector(AND_u1_u1_13734,1);\
__declare_static_bit_vector(NOT_u1_u1_13736,1);\
__declare_static_bit_vector(NOT_u1_u1_13738,1);\
__declare_static_bit_vector(AND_u1_u1_13739,1);\
__declare_static_bit_vector(OR_u1_u1_13740,1);\
__declare_static_bit_vector(konst_13742,14);\
bit_vector_clear(&konst_13742);\
konst_13742.val.byte_array[0] = 13;\
__declare_static_bit_vector(BITSEL_u14_u1_13743,1);\
__declare_static_bit_vector(AND_u1_u1_13744,1);\
bit_vector_and(&(sign_f1), &(sign_f2), &(AND_u1_u1_13734));\
bit_vector_not( &(sign_f1), &(NOT_u1_u1_13736));\
bit_vector_not( &(sign_f2), &(NOT_u1_u1_13738));\
bit_vector_and(&(NOT_u1_u1_13736), &(NOT_u1_u1_13738), &(AND_u1_u1_13739));\
bit_vector_or(&(AND_u1_u1_13734), &(AND_u1_u1_13739), &(OR_u1_u1_13740));\
bit_vector_clear(&konst_13742);\
konst_13742.val.byte_array[0] = 13;\
bit_vector_bitsel( &(mantissa_added_ext), &(konst_13742), &(BITSEL_u14_u1_13743));\
bit_vector_and(&(OR_u1_u1_13740), &(BITSEL_u14_u1_13743), &(AND_u1_u1_13744));\
bit_vector_cast_to_bit_vector(0, &(need_to_shift), &(AND_u1_u1_13744));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13749_c_macro_ __declare_static_bit_vector(slice_13748,11);\
bit_vector_slice(&(mantissa_added_ext), &(slice_13748), 3);\
bit_vector_cast_to_bit_vector(0, &(mantissa_out_shifted), &(slice_13748));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13753_c_macro_ __declare_static_bit_vector(slice_13752,11);\
bit_vector_slice(&(mantissa_added_ext), &(slice_13752), 2);\
bit_vector_cast_to_bit_vector(0, &(mantissa_out_unshifted), &(slice_13752));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13773_c_macro_ __declare_static_bit_vector(AND_u1_u1_13757,1);\
__declare_static_bit_vector(NOT_u1_u1_13760,1);\
__declare_static_bit_vector(AND_u1_u1_13761,1);\
__declare_static_bit_vector(AND_u1_u1_13763,1);\
__declare_static_bit_vector(OR_u1_u1_13764,1);\
__declare_static_bit_vector(NOT_u1_u1_13766,1);\
__declare_static_bit_vector(AND_u1_u1_13768,1);\
__declare_static_bit_vector(NOT_u1_u1_13770,1);\
__declare_static_bit_vector(AND_u1_u1_13771,1);\
__declare_static_bit_vector(OR_u1_u1_13772,1);\
bit_vector_and(&(sign_f1), &(sign_f2), &(AND_u1_u1_13757));\
bit_vector_not( &(sign_f2), &(NOT_u1_u1_13760));\
bit_vector_and(&(sign_f1), &(NOT_u1_u1_13760), &(AND_u1_u1_13761));\
bit_vector_and(&(AND_u1_u1_13761), &(a_frac_ge_b_frac), &(AND_u1_u1_13763));\
bit_vector_or(&(AND_u1_u1_13757), &(AND_u1_u1_13763), &(OR_u1_u1_13764));\
bit_vector_not( &(sign_f1), &(NOT_u1_u1_13766));\
bit_vector_and(&(NOT_u1_u1_13766), &(sign_f2), &(AND_u1_u1_13768));\
bit_vector_not( &(a_frac_ge_b_frac), &(NOT_u1_u1_13770));\
bit_vector_and(&(AND_u1_u1_13768), &(NOT_u1_u1_13770), &(AND_u1_u1_13771));\
bit_vector_or(&(OR_u1_u1_13764), &(AND_u1_u1_13771), &(OR_u1_u1_13772));\
bit_vector_cast_to_bit_vector(0, &(sign_result), &(OR_u1_u1_13772));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13783_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_13778,12);\
__declare_static_bit_vector(CONCAT_u1_u12_13781,12);\
__declare_static_bit_vector(MUX_13782,12);\
if (has_undefined_bit(&need_to_shift)) {fprintf(stderr, "Error: variable need_to_shift has undefined value (%s) at test point.\n", to_string(&need_to_shift));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_shift)){bit_vector_concatenate( &(ZERO_1), &(mantissa_out_shifted), &(CONCAT_u1_u12_13778));\
bit_vector_cast_to_bit_vector(0, &(MUX_13782), &(CONCAT_u1_u12_13778));\
}else {bit_vector_concatenate( &(ZERO_1), &(mantissa_out_unshifted), &(CONCAT_u1_u12_13781));\
bit_vector_cast_to_bit_vector(0, &(MUX_13782), &(CONCAT_u1_u12_13781));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_non_normalized), &(MUX_13782));\
;

#define fpunit_exec_exec__faddsub16_call_stmt_13788_c_macro_ __declare_static_bit_vector(type_cast_13785,16);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13785), &(mantissa_non_normalized));\
_fpunit_exec_exec_find_left_16_( &(type_cast_13785), &(position_of_one), &(one_found));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13794_c_macro_ __declare_static_bit_vector(konst_13790,5);\
bit_vector_clear(&konst_13790);\
konst_13790.val.byte_array[0] = 10;\
__declare_static_bit_vector(type_cast_13792,5);\
__declare_static_bit_vector(SUB_u5_u5_13793,5);\
bit_vector_clear(&konst_13790);\
konst_13790.val.byte_array[0] = 10;\
bit_vector_bitcast_to_bit_vector( &(type_cast_13792), &(position_of_one));\
bit_vector_minus( &(konst_13790), &(type_cast_13792), &(SUB_u5_u5_13793));\
bit_vector_cast_to_bit_vector(0, &(left_shift_amount), &(SUB_u5_u5_13793));\
;

#define fpunit_exec_exec__faddsub16_call_stmt_13799_c_macro_ __declare_static_bit_vector(type_cast_13796,16);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13796), &(mantissa_non_normalized));\
_fpunit_exec_exec_i16_sll_( &(type_cast_13796),  &(left_shift_amount), &(final_mantissa_aligned_16));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13803_c_macro_ __declare_static_bit_vector(slice_13802,10);\
bit_vector_slice(&(final_mantissa_aligned_16), &(slice_13802), 0);\
bit_vector_cast_to_bit_vector(0, &(final_mantissa), &(slice_13802));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13807_c_macro_ __declare_static_bit_vector(type_cast_13806,7);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13806), &(left_shift_amount));\
bit_vector_cast_to_bit_vector(1, &(left_shift_amount_E), &(type_cast_13806));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13820_c_macro_ __declare_static_bit_vector(konst_13812,7);\
bit_vector_clear(&konst_13812);\
__declare_static_bit_vector(MUX_13813,7);\
__declare_static_bit_vector(SUB_i7_i7_13814,7);\
__declare_static_bit_vector(konst_13816,7);\
bit_vector_clear(&konst_13816);\
konst_13816.val.byte_array[0] = 1;\
__declare_static_bit_vector(konst_13817,7);\
bit_vector_clear(&konst_13817);\
__declare_static_bit_vector(MUX_13818,7);\
__declare_static_bit_vector(ADD_i7_i7_13819,7);\
if (has_undefined_bit(&one_found)) {fprintf(stderr, "Error: variable one_found has undefined value (%s) at test point.\n", to_string(&one_found));assert(0);} \
if(bit_vector_to_uint64(0, &one_found)){bit_vector_cast_to_bit_vector(1, &(MUX_13813), &(left_shift_amount_E));\
}else {bit_vector_clear(&konst_13812);\
bit_vector_cast_to_bit_vector(1, &(MUX_13813), &(konst_13812));\
}bit_vector_minus( &(exponent_post_align), &(MUX_13813), &(SUB_i7_i7_13814));\
if (has_undefined_bit(&need_to_shift)) {fprintf(stderr, "Error: variable need_to_shift has undefined value (%s) at test point.\n", to_string(&need_to_shift));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_shift)){bit_vector_clear(&konst_13816);\
konst_13816.val.byte_array[0] = 1;\
bit_vector_cast_to_bit_vector(1, &(MUX_13818), &(konst_13816));\
}else {bit_vector_clear(&konst_13817);\
bit_vector_cast_to_bit_vector(1, &(MUX_13818), &(konst_13817));\
}bit_vector_plus( &(SUB_i7_i7_13814), &(MUX_13818), &(ADD_i7_i7_13819));\
bit_vector_cast_to_bit_vector(1, &(final_exponent_without_bias), &(ADD_i7_i7_13819));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13826_c_macro_ __declare_static_bit_vector(konst_13823,7);\
bit_vector_clear(&konst_13823);\
konst_13823.val.byte_array[0] = 15;\
__declare_static_bit_vector(ADD_i7_i7_13824,7);\
__declare_static_bit_vector(type_cast_13825,5);\
bit_vector_clear(&konst_13823);\
konst_13823.val.byte_array[0] = 15;\
bit_vector_plus( &(final_exponent_without_bias), &(konst_13823), &(ADD_i7_i7_13824));\
bit_vector_bitcast_to_bit_vector( &(type_cast_13825), &(ADD_i7_i7_13824));\
bit_vector_cast_to_bit_vector(0, &(final_exponent), &(type_cast_13825));\
;

#define fpunit_exec_exec__faddsub16_call_stmt_13830_c_macro_ _fpunit_exec_exec_check_fh_exponent_overflow_( &(final_exponent_without_bias), &(overflow), &(underflow));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13837_c_macro_ __declare_static_bit_vector(CONCAT_u1_u6_13834,6);\
__declare_static_bit_vector(CONCAT_u6_u16_13836,16);\
bit_vector_concatenate( &(sign_result), &(final_exponent), &(CONCAT_u1_u6_13834));\
bit_vector_concatenate( &(CONCAT_u1_u6_13834), &(final_mantissa), &(CONCAT_u6_u16_13836));\
bit_vector_cast_to_bit_vector(0, &(non_zero_result), &(CONCAT_u6_u16_13836));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13843_c_macro_ __declare_static_bit_vector(konst_13841,16);\
bit_vector_clear(&konst_13841);\
__declare_static_bit_vector(MUX_13842,16);\
if (has_undefined_bit(&one_found)) {fprintf(stderr, "Error: variable one_found has undefined value (%s) at test point.\n", to_string(&one_found));assert(0);} \
if(bit_vector_to_uint64(0, &one_found)){bit_vector_cast_to_bit_vector(0, &(MUX_13842), &(non_zero_result));\
}else {bit_vector_clear(&konst_13841);\
bit_vector_cast_to_bit_vector(0, &(MUX_13842), &(konst_13841));\
}bit_vector_cast_to_bit_vector(0, &(result_normal), &(MUX_13842));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13906_c_macro_ __declare_static_bit_vector(OR_u1_u1_13847,1);\
__declare_static_bit_vector(call_getHalfNan_expr_13849,16);\
__declare_static_bit_vector(konst_13850,16);\
bit_vector_clear(&konst_13850);\
__declare_static_bit_vector(MUX_13851,16);\
__declare_static_bit_vector(AND_u1_u1_13855,1);\
__declare_static_bit_vector(OR_u1_u1_13856,1);\
__declare_static_bit_vector(call_getHalfZero_expr_13858,16);\
__declare_static_bit_vector(konst_13859,16);\
bit_vector_clear(&konst_13859);\
__declare_static_bit_vector(MUX_13860,16);\
__declare_static_bit_vector(OR_u16_u16_13861,16);\
__declare_static_bit_vector(AND_u1_u1_13864,1);\
__declare_static_bit_vector(EQ_u1_u1_13867,1);\
__declare_static_bit_vector(AND_u1_u1_13868,1);\
__declare_static_bit_vector(OR_u1_u1_13870,1);\
__declare_static_bit_vector(call_getHalfInf_expr_13872,16);\
__declare_static_bit_vector(konst_13873,16);\
bit_vector_clear(&konst_13873);\
__declare_static_bit_vector(MUX_13874,16);\
__declare_static_bit_vector(OR_u16_u16_13875,16);\
__declare_static_bit_vector(AND_u1_u1_13878,1);\
__declare_static_bit_vector(NEQ_u1_u1_13881,1);\
__declare_static_bit_vector(AND_u1_u1_13882,1);\
__declare_static_bit_vector(call_getHalfNan_expr_13884,16);\
__declare_static_bit_vector(konst_13885,16);\
bit_vector_clear(&konst_13885);\
__declare_static_bit_vector(MUX_13886,16);\
__declare_static_bit_vector(AND_u1_u1_13889,1);\
__declare_static_bit_vector(call_getHalfInf_expr_13891,16);\
__declare_static_bit_vector(konst_13892,16);\
bit_vector_clear(&konst_13892);\
__declare_static_bit_vector(MUX_13893,16);\
__declare_static_bit_vector(OR_u16_u16_13894,16);\
__declare_static_bit_vector(AND_u1_u1_13897,1);\
__declare_static_bit_vector(XOR_u1_u1_13900,1);\
__declare_static_bit_vector(call_getHalfInf_expr_13901,16);\
__declare_static_bit_vector(konst_13902,16);\
bit_vector_clear(&konst_13902);\
__declare_static_bit_vector(MUX_13903,16);\
__declare_static_bit_vector(OR_u16_u16_13904,16);\
__declare_static_bit_vector(OR_u16_u16_13905,16);\
bit_vector_or(&(f1_nan), &(f2_nan), &(OR_u1_u1_13847));\
if (has_undefined_bit(&OR_u1_u1_13847)) {fprintf(stderr, "Error: variable OR_u1_u1_13847 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_13847));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_13847)){_fpunit_exec_exec_getHalfNan_( &(ZERO_1), &(call_getHalfNan_expr_13849));\
bit_vector_cast_to_bit_vector(0, &(MUX_13851), &(call_getHalfNan_expr_13849));\
}else {bit_vector_clear(&konst_13850);\
bit_vector_cast_to_bit_vector(0, &(MUX_13851), &(konst_13850));\
}bit_vector_and(&(f1_zero), &(f2_zero), &(AND_u1_u1_13855));\
bit_vector_or(&(underflow), &(AND_u1_u1_13855), &(OR_u1_u1_13856));\
if (has_undefined_bit(&OR_u1_u1_13856)) {fprintf(stderr, "Error: variable OR_u1_u1_13856 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_13856));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_13856)){_fpunit_exec_exec_getHalfZero_( &(ZERO_1), &(call_getHalfZero_expr_13858));\
bit_vector_cast_to_bit_vector(0, &(MUX_13860), &(call_getHalfZero_expr_13858));\
}else {bit_vector_clear(&konst_13859);\
bit_vector_cast_to_bit_vector(0, &(MUX_13860), &(konst_13859));\
}bit_vector_or(&(MUX_13851), &(MUX_13860), &(OR_u16_u16_13861));\
bit_vector_and(&(f1_inf), &(f2_inf), &(AND_u1_u1_13864));\
bit_vector_equal(0, &(sign_f1), &(sign_f2), &(EQ_u1_u1_13867));\
bit_vector_and(&(AND_u1_u1_13864), &(EQ_u1_u1_13867), &(AND_u1_u1_13868));\
bit_vector_or(&(AND_u1_u1_13868), &(overflow), &(OR_u1_u1_13870));\
if (has_undefined_bit(&OR_u1_u1_13870)) {fprintf(stderr, "Error: variable OR_u1_u1_13870 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_13870));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_13870)){_fpunit_exec_exec_getHalfInf_( &(sign_f1), &(call_getHalfInf_expr_13872));\
bit_vector_cast_to_bit_vector(0, &(MUX_13874), &(call_getHalfInf_expr_13872));\
}else {bit_vector_clear(&konst_13873);\
bit_vector_cast_to_bit_vector(0, &(MUX_13874), &(konst_13873));\
}bit_vector_or(&(OR_u16_u16_13861), &(MUX_13874), &(OR_u16_u16_13875));\
bit_vector_and(&(f1_inf), &(f2_inf), &(AND_u1_u1_13878));\
bit_vector_not_equal(0, &(sign_f1), &(sign_f2), &NEQ_u1_u1_13881);\
bit_vector_and(&(AND_u1_u1_13878), &(NEQ_u1_u1_13881), &(AND_u1_u1_13882));\
if (has_undefined_bit(&AND_u1_u1_13882)) {fprintf(stderr, "Error: variable AND_u1_u1_13882 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_13882));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_13882)){_fpunit_exec_exec_getHalfNan_( &(ZERO_1), &(call_getHalfNan_expr_13884));\
bit_vector_cast_to_bit_vector(0, &(MUX_13886), &(call_getHalfNan_expr_13884));\
}else {bit_vector_clear(&konst_13885);\
bit_vector_cast_to_bit_vector(0, &(MUX_13886), &(konst_13885));\
}bit_vector_and(&(f1_inf), &(f2_zero), &(AND_u1_u1_13889));\
if (has_undefined_bit(&AND_u1_u1_13889)) {fprintf(stderr, "Error: variable AND_u1_u1_13889 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_13889));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_13889)){_fpunit_exec_exec_getHalfInf_( &(sign_f1), &(call_getHalfInf_expr_13891));\
bit_vector_cast_to_bit_vector(0, &(MUX_13893), &(call_getHalfInf_expr_13891));\
}else {bit_vector_clear(&konst_13892);\
bit_vector_cast_to_bit_vector(0, &(MUX_13893), &(konst_13892));\
}bit_vector_or(&(MUX_13886), &(MUX_13893), &(OR_u16_u16_13894));\
bit_vector_and(&(f1_zero), &(f2_inf), &(AND_u1_u1_13897));\
if (has_undefined_bit(&AND_u1_u1_13897)) {fprintf(stderr, "Error: variable AND_u1_u1_13897 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_13897));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_13897)){bit_vector_xor(&(sign_f1), &(sub), &(XOR_u1_u1_13900));\
_fpunit_exec_exec_getHalfInf_( &(XOR_u1_u1_13900), &(call_getHalfInf_expr_13901));\
bit_vector_cast_to_bit_vector(0, &(MUX_13903), &(call_getHalfInf_expr_13901));\
}else {bit_vector_clear(&konst_13902);\
bit_vector_cast_to_bit_vector(0, &(MUX_13903), &(konst_13902));\
}bit_vector_or(&(OR_u16_u16_13894), &(MUX_13903), &(OR_u16_u16_13904));\
bit_vector_or(&(OR_u16_u16_13875), &(OR_u16_u16_13904), &(OR_u16_u16_13905));\
bit_vector_cast_to_bit_vector(0, &(result_abnormal), &(OR_u16_u16_13905));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13923_c_macro_ __declare_static_bit_vector(OR_u1_u1_13910,1);\
__declare_static_bit_vector(OR_u1_u1_13913,1);\
__declare_static_bit_vector(OR_u1_u1_13914,1);\
__declare_static_bit_vector(OR_u1_u1_13917,1);\
__declare_static_bit_vector(AND_u1_u1_13920,1);\
__declare_static_bit_vector(OR_u1_u1_13921,1);\
__declare_static_bit_vector(OR_u1_u1_13922,1);\
bit_vector_or(&(f1_inf), &(f2_inf), &(OR_u1_u1_13910));\
bit_vector_or(&(f1_nan), &(f2_nan), &(OR_u1_u1_13913));\
bit_vector_or(&(OR_u1_u1_13910), &(OR_u1_u1_13913), &(OR_u1_u1_13914));\
bit_vector_or(&(overflow), &(underflow), &(OR_u1_u1_13917));\
bit_vector_and(&(f1_zero), &(f2_zero), &(AND_u1_u1_13920));\
bit_vector_or(&(OR_u1_u1_13917), &(AND_u1_u1_13920), &(OR_u1_u1_13921));\
bit_vector_or(&(OR_u1_u1_13914), &(OR_u1_u1_13921), &(OR_u1_u1_13922));\
bit_vector_cast_to_bit_vector(0, &(abnormal_flag), &(OR_u1_u1_13922));\
;

#define fpunit_exec_exec__faddsub16_assign_stmt_13929_c_macro_ __declare_static_bit_vector(MUX_13928,16);\
if (has_undefined_bit(&abnormal_flag)) {fprintf(stderr, "Error: variable abnormal_flag has undefined value (%s) at test point.\n", to_string(&abnormal_flag));assert(0);} \
if(bit_vector_to_uint64(0, &abnormal_flag)){bit_vector_cast_to_bit_vector(0, &(MUX_13928), &(result_abnormal));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13928), &(result_normal));\
}bit_vector_cast_to_bit_vector(0, &(result), &(MUX_13928));\
;

#define fpunit_exec_exec__faddsub16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__fdtoi_op_inner_inarg_prep_macro__ static double X;\
X = (*__pX);\
__declare_static_bit_vector(Y,32);\

#define fpunit_exec_exec__fdtoi_op_assign_stmt_15300_c_macro_ __declare_static_bit_vector(type_cast_15299,32);\
double_cast_to_bit_vector(1,  &(type_cast_15299), &(X));\
bit_vector_cast_to_bit_vector(1, &(Y), &(type_cast_15299));\
;

#define fpunit_exec_exec__fdtoi_op_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(1, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__fdtoi_op_outer_arg_decl_macro__ double __X = X;\
__declare_static_bit_vector(__Y, 32);\
;

#define fpunit_exec_exec__fdtoi_op_outer_op_xfer_macro__  *Y =  bit_vector_to_uint64(1, &__Y);\
;

#define fpunit_exec_exec__fdtoi_wrap_inner_inarg_prep_macro__ static double X;\
X = (*__pX);\
__declare_static_bit_vector(Y,32);\

#define fpunit_exec_exec__fdtoi_wrap_call_stmt_18423_c_macro_ _fpunit_exec_exec_fdtoi_op_( &(X), &(Y));\
;

#define fpunit_exec_exec__fdtoi_wrap_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(1, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__fdtoi_wrap_outer_arg_decl_macro__ double __X = X;\
__declare_static_bit_vector(__Y, 32);\
;

#define fpunit_exec_exec__fdtoi_wrap_outer_op_xfer_macro__  *Y =  bit_vector_to_uint64(1, &__Y);\
;

#define fpunit_exec_exec__fdtos_wrap_inner_inarg_prep_macro__ static double X;\
X = (*__pX);\
static float RESULT;\
__declare_static_bit_vector(needs_denorm,1);\
__declare_static_bit_vector(extn_result,81);\
__declare_static_bit_vector(s_result_fast,32);\
__declare_static_bit_vector(s_result_slow,32);\

#define fpunit_exec_exec__fdtos_wrap_call_stmt_18431_c_macro_ _fpunit_exec_exec_DoubleToSingle_( &(X), &(needs_denorm), &(extn_result));\
;

#define fpunit_exec_exec__fdtos_wrap_call_stmt_18434_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_result), &(s_result_fast));\
;

#define fpunit_exec_exec__fdtos_wrap_call_stmt_18438_c_macro_ if (has_undefined_bit(&needs_denorm)) {fprintf(stderr, "Error: variable needs_denorm has undefined value (%s) at test point.\n", to_string(&needs_denorm));assert(0);} \
if (bit_vector_to_uint64(0, &needs_denorm)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_result), &(s_result_slow));\
}\
;

#define fpunit_exec_exec__fdtos_wrap_assign_stmt_18445_c_macro_ __declare_static_bit_vector(MUX_18443,32);\
static float type_cast_18444;\
if (has_undefined_bit(&needs_denorm)) {fprintf(stderr, "Error: variable needs_denorm has undefined value (%s) at test point.\n", to_string(&needs_denorm));assert(0);} \
if(bit_vector_to_uint64(0, &needs_denorm)){bit_vector_cast_to_bit_vector(0, &(MUX_18443), &(s_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_18443), &(s_result_fast));\
}bit_vector_bitcast_to_float( &(type_cast_18444),  &(MUX_18443));\
RESULT = type_cast_18444;\
;

#define fpunit_exec_exec__fdtos_wrap_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fdtos_wrap_outer_arg_decl_macro__ double __X = X;\
;

#define fpunit_exec_exec__fdtos_wrap_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__find_left_16_inner_inarg_prep_macro__ __declare_static_bit_vector(fp_16,16);\
bit_vector_cast_to_bit_vector(0, &(fp_16), &((*__pfp_16)));\
__declare_static_bit_vector(position,4);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(fp_8_upper,8);\
__declare_static_bit_vector(fp_8_lower,8);\
__declare_static_bit_vector(fp_8_upper_index,3);\
__declare_static_bit_vector(found_upper,1);\
__declare_static_bit_vector(fp_8_lower_index,3);\
__declare_static_bit_vector(found_lower,1);\

#define fpunit_exec_exec__find_left_16_assign_stmt_3090_c_macro_ __declare_static_bit_vector(slice_3089,8);\
bit_vector_slice(&(fp_16), &(slice_3089), 8);\
bit_vector_cast_to_bit_vector(0, &(fp_8_upper), &(slice_3089));\
;

#define fpunit_exec_exec__find_left_16_assign_stmt_3094_c_macro_ __declare_static_bit_vector(slice_3093,8);\
bit_vector_slice(&(fp_16), &(slice_3093), 0);\
bit_vector_cast_to_bit_vector(0, &(fp_8_lower), &(slice_3093));\
;

#define fpunit_exec_exec__find_left_16_call_stmt_3098_c_macro_ _fpunit_exec_exec_find_left_8_( &(fp_8_upper), &(fp_8_upper_index), &(found_upper));\
;

#define fpunit_exec_exec__find_left_16_call_stmt_3102_c_macro_ _fpunit_exec_exec_find_left_8_( &(fp_8_lower), &(fp_8_lower_index), &(found_lower));\
;

#define fpunit_exec_exec__find_left_16_assign_stmt_3115_c_macro_ __declare_static_bit_vector(CONCAT_u1_u4_3107,4);\
__declare_static_bit_vector(CONCAT_u1_u4_3111,4);\
__declare_static_bit_vector(MUX_3113,4);\
__declare_static_bit_vector(MUX_3114,4);\
if (has_undefined_bit(&found_upper)) {fprintf(stderr, "Error: variable found_upper has undefined value (%s) at test point.\n", to_string(&found_upper));assert(0);} \
if(bit_vector_to_uint64(0, &found_upper)){bit_vector_concatenate( &(ONE_1), &(fp_8_upper_index), &(CONCAT_u1_u4_3107));\
bit_vector_cast_to_bit_vector(0, &(MUX_3114), &(CONCAT_u1_u4_3107));\
}else {if (has_undefined_bit(&found_lower)) {fprintf(stderr, "Error: variable found_lower has undefined value (%s) at test point.\n", to_string(&found_lower));assert(0);} \
if(bit_vector_to_uint64(0, &found_lower)){bit_vector_concatenate( &(ZERO_1), &(fp_8_lower_index), &(CONCAT_u1_u4_3111));\
bit_vector_cast_to_bit_vector(0, &(MUX_3113), &(CONCAT_u1_u4_3111));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3113), &(ZERO_4));\
}bit_vector_cast_to_bit_vector(0, &(MUX_3114), &(MUX_3113));\
}bit_vector_cast_to_bit_vector(0, &(position), &(MUX_3114));\
;

#define fpunit_exec_exec__find_left_16_assign_stmt_3120_c_macro_ __declare_static_bit_vector(OR_u1_u1_3119,1);\
bit_vector_or(&(found_upper), &(found_lower), &(OR_u1_u1_3119));\
bit_vector_cast_to_bit_vector(0, &(found), &(OR_u1_u1_3119));\
;

#define fpunit_exec_exec__find_left_16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pposition)), &(position));\
bit_vector_cast_to_bit_vector(0, &((*__pfound)), &(found));\
;

#define fpunit_exec_exec__find_left_24_inner_inarg_prep_macro__ __declare_static_bit_vector(fp_24,24);\
bit_vector_cast_to_bit_vector(0, &(fp_24), &((*__pfp_24)));\
__declare_static_bit_vector(position,5);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(fp_2,8);\
__declare_static_bit_vector(fp_1,8);\
__declare_static_bit_vector(fp_0,8);\
__declare_static_bit_vector(pos_2,3);\
__declare_static_bit_vector(found_2,1);\
__declare_static_bit_vector(pos_1,3);\
__declare_static_bit_vector(found_1,1);\
__declare_static_bit_vector(pos_0,3);\
__declare_static_bit_vector(found_0,1);\

#define fpunit_exec_exec__find_left_24_assign_stmt_1732_c_macro_ __declare_static_bit_vector(slice_1731,8);\
bit_vector_slice(&(fp_24), &(slice_1731), 16);\
bit_vector_cast_to_bit_vector(0, &(fp_2), &(slice_1731));\
;

#define fpunit_exec_exec__find_left_24_assign_stmt_1736_c_macro_ __declare_static_bit_vector(slice_1735,8);\
bit_vector_slice(&(fp_24), &(slice_1735), 8);\
bit_vector_cast_to_bit_vector(0, &(fp_1), &(slice_1735));\
;

#define fpunit_exec_exec__find_left_24_assign_stmt_1740_c_macro_ __declare_static_bit_vector(slice_1739,8);\
bit_vector_slice(&(fp_24), &(slice_1739), 0);\
bit_vector_cast_to_bit_vector(0, &(fp_0), &(slice_1739));\
;

#define fpunit_exec_exec__find_left_24_call_stmt_1744_c_macro_ _fpunit_exec_exec_find_left_8_( &(fp_2), &(pos_2), &(found_2));\
;

#define fpunit_exec_exec__find_left_24_call_stmt_1748_c_macro_ _fpunit_exec_exec_find_left_8_( &(fp_1), &(pos_1), &(found_1));\
;

#define fpunit_exec_exec__find_left_24_call_stmt_1752_c_macro_ _fpunit_exec_exec_find_left_8_( &(fp_0), &(pos_0), &(found_0));\
;

#define fpunit_exec_exec__find_left_24_assign_stmt_1759_c_macro_ __declare_static_bit_vector(OR_u1_u1_1756,1);\
__declare_static_bit_vector(OR_u1_u1_1758,1);\
bit_vector_or(&(found_2), &(found_1), &(OR_u1_u1_1756));\
bit_vector_or(&(OR_u1_u1_1756), &(found_0), &(OR_u1_u1_1758));\
bit_vector_cast_to_bit_vector(0, &(found), &(OR_u1_u1_1758));\
;

#define fpunit_exec_exec__find_left_24_assign_stmt_1783_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_1764,2);\
bit_vector_clear(&CONCAT_u1_u2_1764);\
CONCAT_u1_u2_1764.val.byte_array[0] = 2;\
__declare_static_bit_vector(CONCAT_u2_u5_1766,5);\
__declare_static_bit_vector(CONCAT_u1_u2_1770,2);\
bit_vector_clear(&CONCAT_u1_u2_1770);\
CONCAT_u1_u2_1770.val.byte_array[0] = 1;\
__declare_static_bit_vector(CONCAT_u2_u5_1772,5);\
__declare_static_bit_vector(CONCAT_u1_u2_1776,2);\
bit_vector_clear(&CONCAT_u1_u2_1776);\
__declare_static_bit_vector(CONCAT_u2_u5_1778,5);\
__declare_static_bit_vector(konst_1779,5);\
bit_vector_clear(&konst_1779);\
__declare_static_bit_vector(MUX_1780,5);\
__declare_static_bit_vector(MUX_1781,5);\
__declare_static_bit_vector(MUX_1782,5);\
if (has_undefined_bit(&found_2)) {fprintf(stderr, "Error: variable found_2 has undefined value (%s) at test point.\n", to_string(&found_2));assert(0);} \
if(bit_vector_to_uint64(0, &found_2)){bit_vector_concatenate( &(ONE_1), &(ZERO_1), &(CONCAT_u1_u2_1764));\
bit_vector_concatenate( &(CONCAT_u1_u2_1764), &(pos_2), &(CONCAT_u2_u5_1766));\
bit_vector_cast_to_bit_vector(0, &(MUX_1782), &(CONCAT_u2_u5_1766));\
}else {if (has_undefined_bit(&found_1)) {fprintf(stderr, "Error: variable found_1 has undefined value (%s) at test point.\n", to_string(&found_1));assert(0);} \
if(bit_vector_to_uint64(0, &found_1)){bit_vector_concatenate( &(ZERO_1), &(ONE_1), &(CONCAT_u1_u2_1770));\
bit_vector_concatenate( &(CONCAT_u1_u2_1770), &(pos_1), &(CONCAT_u2_u5_1772));\
bit_vector_cast_to_bit_vector(0, &(MUX_1781), &(CONCAT_u2_u5_1772));\
}else {if (has_undefined_bit(&found_0)) {fprintf(stderr, "Error: variable found_0 has undefined value (%s) at test point.\n", to_string(&found_0));assert(0);} \
if(bit_vector_to_uint64(0, &found_0)){bit_vector_concatenate( &(ZERO_1), &(ZERO_1), &(CONCAT_u1_u2_1776));\
bit_vector_concatenate( &(CONCAT_u1_u2_1776), &(pos_0), &(CONCAT_u2_u5_1778));\
bit_vector_cast_to_bit_vector(0, &(MUX_1780), &(CONCAT_u2_u5_1778));\
}else {bit_vector_clear(&konst_1779);\
bit_vector_cast_to_bit_vector(0, &(MUX_1780), &(konst_1779));\
}bit_vector_cast_to_bit_vector(0, &(MUX_1781), &(MUX_1780));\
}bit_vector_cast_to_bit_vector(0, &(MUX_1782), &(MUX_1781));\
}bit_vector_cast_to_bit_vector(0, &(position), &(MUX_1782));\
;

#define fpunit_exec_exec__find_left_24_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pposition)), &(position));\
bit_vector_cast_to_bit_vector(0, &((*__pfound)), &(found));\
;

#define fpunit_exec_exec__find_left_32_inner_inarg_prep_macro__ __declare_static_bit_vector(fp_32,32);\
bit_vector_cast_to_bit_vector(0, &(fp_32), &((*__pfp_32)));\
__declare_static_bit_vector(position,5);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(fp_16_upper,16);\
__declare_static_bit_vector(fp_16_lower,16);\
__declare_static_bit_vector(fp_16_upper_index,4);\
__declare_static_bit_vector(found_upper,1);\
__declare_static_bit_vector(fp_16_lower_index,4);\
__declare_static_bit_vector(found_lower,1);\

#define fpunit_exec_exec__find_left_32_assign_stmt_3129_c_macro_ __declare_static_bit_vector(slice_3128,16);\
bit_vector_slice(&(fp_32), &(slice_3128), 16);\
bit_vector_cast_to_bit_vector(0, &(fp_16_upper), &(slice_3128));\
;

#define fpunit_exec_exec__find_left_32_assign_stmt_3133_c_macro_ __declare_static_bit_vector(slice_3132,16);\
bit_vector_slice(&(fp_32), &(slice_3132), 0);\
bit_vector_cast_to_bit_vector(0, &(fp_16_lower), &(slice_3132));\
;

#define fpunit_exec_exec__find_left_32_call_stmt_3137_c_macro_ _fpunit_exec_exec_find_left_16_( &(fp_16_upper), &(fp_16_upper_index), &(found_upper));\
;

#define fpunit_exec_exec__find_left_32_call_stmt_3141_c_macro_ _fpunit_exec_exec_find_left_16_( &(fp_16_lower), &(fp_16_lower_index), &(found_lower));\
;

#define fpunit_exec_exec__find_left_32_assign_stmt_3154_c_macro_ __declare_static_bit_vector(CONCAT_u1_u5_3146,5);\
__declare_static_bit_vector(CONCAT_u1_u5_3150,5);\
__declare_static_bit_vector(MUX_3152,5);\
__declare_static_bit_vector(MUX_3153,5);\
if (has_undefined_bit(&found_upper)) {fprintf(stderr, "Error: variable found_upper has undefined value (%s) at test point.\n", to_string(&found_upper));assert(0);} \
if(bit_vector_to_uint64(0, &found_upper)){bit_vector_concatenate( &(ONE_1), &(fp_16_upper_index), &(CONCAT_u1_u5_3146));\
bit_vector_cast_to_bit_vector(0, &(MUX_3153), &(CONCAT_u1_u5_3146));\
}else {if (has_undefined_bit(&found_lower)) {fprintf(stderr, "Error: variable found_lower has undefined value (%s) at test point.\n", to_string(&found_lower));assert(0);} \
if(bit_vector_to_uint64(0, &found_lower)){bit_vector_concatenate( &(ZERO_1), &(fp_16_lower_index), &(CONCAT_u1_u5_3150));\
bit_vector_cast_to_bit_vector(0, &(MUX_3152), &(CONCAT_u1_u5_3150));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3152), &(ZERO_5));\
}bit_vector_cast_to_bit_vector(0, &(MUX_3153), &(MUX_3152));\
}bit_vector_cast_to_bit_vector(0, &(position), &(MUX_3153));\
;

#define fpunit_exec_exec__find_left_32_assign_stmt_3159_c_macro_ __declare_static_bit_vector(OR_u1_u1_3158,1);\
bit_vector_or(&(found_upper), &(found_lower), &(OR_u1_u1_3158));\
bit_vector_cast_to_bit_vector(0, &(found), &(OR_u1_u1_3158));\
;

#define fpunit_exec_exec__find_left_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pposition)), &(position));\
bit_vector_cast_to_bit_vector(0, &((*__pfound)), &(found));\
;

#define fpunit_exec_exec__find_left_4_inner_inarg_prep_macro__ __declare_static_bit_vector(fp_4,4);\
bit_vector_cast_to_bit_vector(0, &(fp_4), &((*__pfp_4)));\
__declare_static_bit_vector(position,2);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(x3,1);\
__declare_static_bit_vector(x2,1);\
__declare_static_bit_vector(x1,1);\
__declare_static_bit_vector(x0,1);\
__declare_static_bit_vector(y1,1);\
__declare_static_bit_vector(y0,1);\

#define fpunit_exec_exec__find_left_4_assign_stmt_1645_c_macro_ __declare_static_bit_vector(slice_1644,1);\
bit_vector_slice(&(fp_4), &(slice_1644), 3);\
bit_vector_cast_to_bit_vector(0, &(x3), &(slice_1644));\
;

#define fpunit_exec_exec__find_left_4_assign_stmt_1649_c_macro_ __declare_static_bit_vector(slice_1648,1);\
bit_vector_slice(&(fp_4), &(slice_1648), 2);\
bit_vector_cast_to_bit_vector(0, &(x2), &(slice_1648));\
;

#define fpunit_exec_exec__find_left_4_assign_stmt_1653_c_macro_ __declare_static_bit_vector(slice_1652,1);\
bit_vector_slice(&(fp_4), &(slice_1652), 1);\
bit_vector_cast_to_bit_vector(0, &(x1), &(slice_1652));\
;

#define fpunit_exec_exec__find_left_4_assign_stmt_1657_c_macro_ __declare_static_bit_vector(slice_1656,1);\
bit_vector_slice(&(fp_4), &(slice_1656), 0);\
bit_vector_cast_to_bit_vector(0, &(x0), &(slice_1656));\
;

#define fpunit_exec_exec__find_left_4_assign_stmt_1666_c_macro_ __declare_static_bit_vector(OR_u1_u1_1661,1);\
__declare_static_bit_vector(OR_u1_u1_1664,1);\
__declare_static_bit_vector(OR_u1_u1_1665,1);\
bit_vector_or(&(x3), &(x2), &(OR_u1_u1_1661));\
bit_vector_or(&(x1), &(x0), &(OR_u1_u1_1664));\
bit_vector_or(&(OR_u1_u1_1661), &(OR_u1_u1_1664), &(OR_u1_u1_1665));\
bit_vector_cast_to_bit_vector(0, &(found), &(OR_u1_u1_1665));\
;

#define fpunit_exec_exec__find_left_4_assign_stmt_1671_c_macro_ __declare_static_bit_vector(OR_u1_u1_1670,1);\
bit_vector_or(&(x3), &(x2), &(OR_u1_u1_1670));\
bit_vector_cast_to_bit_vector(0, &(y1), &(OR_u1_u1_1670));\
;

#define fpunit_exec_exec__find_left_4_assign_stmt_1679_c_macro_ __declare_static_bit_vector(NOT_u1_u1_1676,1);\
__declare_static_bit_vector(AND_u1_u1_1677,1);\
__declare_static_bit_vector(OR_u1_u1_1678,1);\
bit_vector_not( &(x2), &(NOT_u1_u1_1676));\
bit_vector_and(&(x1), &(NOT_u1_u1_1676), &(AND_u1_u1_1677));\
bit_vector_or(&(x3), &(AND_u1_u1_1677), &(OR_u1_u1_1678));\
bit_vector_cast_to_bit_vector(0, &(y0), &(OR_u1_u1_1678));\
;

#define fpunit_exec_exec__find_left_4_assign_stmt_1684_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_1683,2);\
bit_vector_concatenate( &(y1), &(y0), &(CONCAT_u1_u2_1683));\
bit_vector_cast_to_bit_vector(0, &(position), &(CONCAT_u1_u2_1683));\
;

#define fpunit_exec_exec__find_left_4_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pposition)), &(position));\
bit_vector_cast_to_bit_vector(0, &((*__pfound)), &(found));\
;

#define fpunit_exec_exec__find_left_53_inner_inarg_prep_macro__ __declare_static_bit_vector(fp_53,53);\
bit_vector_cast_to_bit_vector(0, &(fp_53), &((*__pfp_53)));\
__declare_static_bit_vector(position,6);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(fp_3,1);\
__declare_static_bit_vector(fp_2,4);\
__declare_static_bit_vector(fp_1,24);\
__declare_static_bit_vector(fp_0,24);\
__declare_static_bit_vector(pos_2,2);\
__declare_static_bit_vector(found_2,1);\
__declare_static_bit_vector(pos_1,5);\
__declare_static_bit_vector(found_1,1);\
__declare_static_bit_vector(pos_0,5);\
__declare_static_bit_vector(found_0,1);\

#define fpunit_exec_exec__find_left_53_assign_stmt_1792_c_macro_ __declare_static_bit_vector(slice_1791,1);\
bit_vector_slice(&(fp_53), &(slice_1791), 52);\
bit_vector_cast_to_bit_vector(0, &(fp_3), &(slice_1791));\
;

#define fpunit_exec_exec__find_left_53_assign_stmt_1796_c_macro_ __declare_static_bit_vector(slice_1795,4);\
bit_vector_slice(&(fp_53), &(slice_1795), 48);\
bit_vector_cast_to_bit_vector(0, &(fp_2), &(slice_1795));\
;

#define fpunit_exec_exec__find_left_53_assign_stmt_1800_c_macro_ __declare_static_bit_vector(slice_1799,24);\
bit_vector_slice(&(fp_53), &(slice_1799), 24);\
bit_vector_cast_to_bit_vector(0, &(fp_1), &(slice_1799));\
;

#define fpunit_exec_exec__find_left_53_assign_stmt_1804_c_macro_ __declare_static_bit_vector(slice_1803,24);\
bit_vector_slice(&(fp_53), &(slice_1803), 0);\
bit_vector_cast_to_bit_vector(0, &(fp_0), &(slice_1803));\
;

#define fpunit_exec_exec__find_left_53_call_stmt_1808_c_macro_ _fpunit_exec_exec_find_left_4_( &(fp_2), &(pos_2), &(found_2));\
;

#define fpunit_exec_exec__find_left_53_call_stmt_1812_c_macro_ _fpunit_exec_exec_find_left_24_( &(fp_1), &(pos_1), &(found_1));\
;

#define fpunit_exec_exec__find_left_53_call_stmt_1816_c_macro_ _fpunit_exec_exec_find_left_24_( &(fp_0), &(pos_0), &(found_0));\
;

#define fpunit_exec_exec__find_left_53_assign_stmt_1825_c_macro_ __declare_static_bit_vector(OR_u1_u1_1820,1);\
__declare_static_bit_vector(OR_u1_u1_1823,1);\
__declare_static_bit_vector(OR_u1_u1_1824,1);\
bit_vector_or(&(fp_3), &(found_2), &(OR_u1_u1_1820));\
bit_vector_or(&(found_1), &(found_0), &(OR_u1_u1_1823));\
bit_vector_or(&(OR_u1_u1_1820), &(OR_u1_u1_1823), &(OR_u1_u1_1824));\
bit_vector_cast_to_bit_vector(0, &(found), &(OR_u1_u1_1824));\
;

#define fpunit_exec_exec__find_left_53_assign_stmt_1847_c_macro_ __declare_static_bit_vector(konst_1828,6);\
bit_vector_clear(&konst_1828);\
konst_1828.val.byte_array[0] = 52;\
__declare_static_bit_vector(type_cast_1831,6);\
__declare_static_bit_vector(konst_1832,6);\
bit_vector_clear(&konst_1832);\
konst_1832.val.byte_array[0] = 48;\
__declare_static_bit_vector(ADD_u6_u6_1833,6);\
__declare_static_bit_vector(type_cast_1836,6);\
__declare_static_bit_vector(konst_1837,6);\
bit_vector_clear(&konst_1837);\
konst_1837.val.byte_array[0] = 24;\
__declare_static_bit_vector(ADD_u6_u6_1838,6);\
__declare_static_bit_vector(type_cast_1841,6);\
__declare_static_bit_vector(konst_1842,6);\
bit_vector_clear(&konst_1842);\
__declare_static_bit_vector(MUX_1843,6);\
__declare_static_bit_vector(MUX_1844,6);\
__declare_static_bit_vector(MUX_1845,6);\
__declare_static_bit_vector(MUX_1846,6);\
if (has_undefined_bit(&fp_3)) {fprintf(stderr, "Error: variable fp_3 has undefined value (%s) at test point.\n", to_string(&fp_3));assert(0);} \
if(bit_vector_to_uint64(0, &fp_3)){bit_vector_clear(&konst_1828);\
konst_1828.val.byte_array[0] = 52;\
bit_vector_cast_to_bit_vector(0, &(MUX_1846), &(konst_1828));\
}else {if (has_undefined_bit(&found_2)) {fprintf(stderr, "Error: variable found_2 has undefined value (%s) at test point.\n", to_string(&found_2));assert(0);} \
if(bit_vector_to_uint64(0, &found_2)){bit_vector_bitcast_to_bit_vector( &(type_cast_1831), &(pos_2));\
bit_vector_clear(&konst_1832);\
konst_1832.val.byte_array[0] = 48;\
bit_vector_plus( &(type_cast_1831), &(konst_1832), &(ADD_u6_u6_1833));\
bit_vector_cast_to_bit_vector(0, &(MUX_1845), &(ADD_u6_u6_1833));\
}else {if (has_undefined_bit(&found_1)) {fprintf(stderr, "Error: variable found_1 has undefined value (%s) at test point.\n", to_string(&found_1));assert(0);} \
if(bit_vector_to_uint64(0, &found_1)){bit_vector_bitcast_to_bit_vector( &(type_cast_1836), &(pos_1));\
bit_vector_clear(&konst_1837);\
konst_1837.val.byte_array[0] = 24;\
bit_vector_plus( &(type_cast_1836), &(konst_1837), &(ADD_u6_u6_1838));\
bit_vector_cast_to_bit_vector(0, &(MUX_1844), &(ADD_u6_u6_1838));\
}else {if (has_undefined_bit(&found_0)) {fprintf(stderr, "Error: variable found_0 has undefined value (%s) at test point.\n", to_string(&found_0));assert(0);} \
if(bit_vector_to_uint64(0, &found_0)){bit_vector_bitcast_to_bit_vector( &(type_cast_1841), &(pos_0));\
bit_vector_cast_to_bit_vector(0, &(MUX_1843), &(type_cast_1841));\
}else {bit_vector_clear(&konst_1842);\
bit_vector_cast_to_bit_vector(0, &(MUX_1843), &(konst_1842));\
}bit_vector_cast_to_bit_vector(0, &(MUX_1844), &(MUX_1843));\
}bit_vector_cast_to_bit_vector(0, &(MUX_1845), &(MUX_1844));\
}bit_vector_cast_to_bit_vector(0, &(MUX_1846), &(MUX_1845));\
}bit_vector_cast_to_bit_vector(0, &(position), &(MUX_1846));\
;

#define fpunit_exec_exec__find_left_53_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pposition)), &(position));\
bit_vector_cast_to_bit_vector(0, &((*__pfound)), &(found));\
;

#define fpunit_exec_exec__find_left_8_inner_inarg_prep_macro__ __declare_static_bit_vector(fp_8,8);\
bit_vector_cast_to_bit_vector(0, &(fp_8), &((*__pfp_8)));\
__declare_static_bit_vector(position,3);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(fp_4_upper,4);\
__declare_static_bit_vector(fp_4_lower,4);\
__declare_static_bit_vector(fp_4_upper_index,2);\
__declare_static_bit_vector(found_upper,1);\
__declare_static_bit_vector(fp_4_lower_index,2);\
__declare_static_bit_vector(found_lower,1);\

#define fpunit_exec_exec__find_left_8_assign_stmt_1693_c_macro_ __declare_static_bit_vector(slice_1692,4);\
bit_vector_slice(&(fp_8), &(slice_1692), 4);\
bit_vector_cast_to_bit_vector(0, &(fp_4_upper), &(slice_1692));\
;

#define fpunit_exec_exec__find_left_8_assign_stmt_1697_c_macro_ __declare_static_bit_vector(slice_1696,4);\
bit_vector_slice(&(fp_8), &(slice_1696), 0);\
bit_vector_cast_to_bit_vector(0, &(fp_4_lower), &(slice_1696));\
;

#define fpunit_exec_exec__find_left_8_call_stmt_1701_c_macro_ _fpunit_exec_exec_find_left_4_( &(fp_4_upper), &(fp_4_upper_index), &(found_upper));\
;

#define fpunit_exec_exec__find_left_8_call_stmt_1705_c_macro_ _fpunit_exec_exec_find_left_4_( &(fp_4_lower), &(fp_4_lower_index), &(found_lower));\
;

#define fpunit_exec_exec__find_left_8_assign_stmt_1718_c_macro_ __declare_static_bit_vector(CONCAT_u1_u3_1710,3);\
__declare_static_bit_vector(CONCAT_u1_u3_1714,3);\
__declare_static_bit_vector(MUX_1716,3);\
__declare_static_bit_vector(MUX_1717,3);\
if (has_undefined_bit(&found_upper)) {fprintf(stderr, "Error: variable found_upper has undefined value (%s) at test point.\n", to_string(&found_upper));assert(0);} \
if(bit_vector_to_uint64(0, &found_upper)){bit_vector_concatenate( &(ONE_1), &(fp_4_upper_index), &(CONCAT_u1_u3_1710));\
bit_vector_cast_to_bit_vector(0, &(MUX_1717), &(CONCAT_u1_u3_1710));\
}else {if (has_undefined_bit(&found_lower)) {fprintf(stderr, "Error: variable found_lower has undefined value (%s) at test point.\n", to_string(&found_lower));assert(0);} \
if(bit_vector_to_uint64(0, &found_lower)){bit_vector_concatenate( &(ZERO_1), &(fp_4_lower_index), &(CONCAT_u1_u3_1714));\
bit_vector_cast_to_bit_vector(0, &(MUX_1716), &(CONCAT_u1_u3_1714));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_1716), &(ZERO_3));\
}bit_vector_cast_to_bit_vector(0, &(MUX_1717), &(MUX_1716));\
}bit_vector_cast_to_bit_vector(0, &(position), &(MUX_1717));\
;

#define fpunit_exec_exec__find_left_8_assign_stmt_1723_c_macro_ __declare_static_bit_vector(OR_u1_u1_1722,1);\
bit_vector_or(&(found_upper), &(found_lower), &(OR_u1_u1_1722));\
bit_vector_cast_to_bit_vector(0, &(found), &(OR_u1_u1_1722));\
;

#define fpunit_exec_exec__find_left_8_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pposition)), &(position));\
bit_vector_cast_to_bit_vector(0, &((*__pfound)), &(found));\
;

#define fpunit_exec_exec__find_leftmost_35_inner_inarg_prep_macro__ __declare_static_bit_vector(fp_35,35);\
bit_vector_cast_to_bit_vector(0, &(fp_35), &((*__pfp_35)));\
__declare_static_bit_vector(position,6);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(fp_3_upper,3);\
__declare_static_bit_vector(fp_34,1);\
__declare_static_bit_vector(fp_33,1);\
__declare_static_bit_vector(found_upper,1);\
__declare_static_bit_vector(fp_upper_index,6);\
__declare_static_bit_vector(fp_32_lower,32);\
__declare_static_bit_vector(fp_32_lower_index,5);\
__declare_static_bit_vector(found_lower,1);\

#define fpunit_exec_exec__find_leftmost_35_assign_stmt_11339_c_macro_ __declare_static_bit_vector(slice_11338,3);\
bit_vector_slice(&(fp_35), &(slice_11338), 32);\
bit_vector_cast_to_bit_vector(0, &(fp_3_upper), &(slice_11338));\
;

#define fpunit_exec_exec__find_leftmost_35_assign_stmt_11343_c_macro_ __declare_static_bit_vector(slice_11342,1);\
bit_vector_slice(&(fp_3_upper), &(slice_11342), 2);\
bit_vector_cast_to_bit_vector(0, &(fp_34), &(slice_11342));\
;

#define fpunit_exec_exec__find_leftmost_35_assign_stmt_11347_c_macro_ __declare_static_bit_vector(slice_11346,1);\
bit_vector_slice(&(fp_3_upper), &(slice_11346), 1);\
bit_vector_cast_to_bit_vector(0, &(fp_33), &(slice_11346));\
;

#define fpunit_exec_exec__find_leftmost_35_assign_stmt_11352_c_macro_ __declare_static_bit_vector(konst_11350,3);\
bit_vector_clear(&konst_11350);\
__declare_static_bit_vector(NEQ_u3_u1_11351,1);\
bit_vector_clear(&konst_11350);\
bit_vector_not_equal(0, &(fp_3_upper), &(konst_11350), &NEQ_u3_u1_11351);\
bit_vector_cast_to_bit_vector(0, &(found_upper), &(NEQ_u3_u1_11351));\
;

#define fpunit_exec_exec__find_leftmost_35_assign_stmt_11364_c_macro_ __declare_static_bit_vector(konst_11355,6);\
bit_vector_clear(&konst_11355);\
konst_11355.val.byte_array[0] = 34;\
__declare_static_bit_vector(type_cast_11356,6);\
bit_vector_clear(&type_cast_11356);\
type_cast_11356.val.byte_array[0] = 34;\
__declare_static_bit_vector(konst_11358,6);\
bit_vector_clear(&konst_11358);\
konst_11358.val.byte_array[0] = 33;\
__declare_static_bit_vector(type_cast_11359,6);\
bit_vector_clear(&type_cast_11359);\
type_cast_11359.val.byte_array[0] = 33;\
__declare_static_bit_vector(konst_11360,6);\
bit_vector_clear(&konst_11360);\
konst_11360.val.byte_array[0] = 32;\
__declare_static_bit_vector(type_cast_11361,6);\
bit_vector_clear(&type_cast_11361);\
type_cast_11361.val.byte_array[0] = 32;\
__declare_static_bit_vector(MUX_11362,6);\
__declare_static_bit_vector(MUX_11363,6);\
if (has_undefined_bit(&fp_34)) {fprintf(stderr, "Error: variable fp_34 has undefined value (%s) at test point.\n", to_string(&fp_34));assert(0);} \
if(bit_vector_to_uint64(0, &fp_34)){bit_vector_clear(&konst_11355);\
konst_11355.val.byte_array[0] = 34;\
bit_vector_bitcast_to_bit_vector( &(type_cast_11356), &(konst_11355));\
bit_vector_cast_to_bit_vector(0, &(MUX_11363), &(type_cast_11356));\
}else {if (has_undefined_bit(&fp_33)) {fprintf(stderr, "Error: variable fp_33 has undefined value (%s) at test point.\n", to_string(&fp_33));assert(0);} \
if(bit_vector_to_uint64(0, &fp_33)){bit_vector_clear(&konst_11358);\
konst_11358.val.byte_array[0] = 33;\
bit_vector_bitcast_to_bit_vector( &(type_cast_11359), &(konst_11358));\
bit_vector_cast_to_bit_vector(0, &(MUX_11362), &(type_cast_11359));\
}else {bit_vector_clear(&konst_11360);\
konst_11360.val.byte_array[0] = 32;\
bit_vector_bitcast_to_bit_vector( &(type_cast_11361), &(konst_11360));\
bit_vector_cast_to_bit_vector(0, &(MUX_11362), &(type_cast_11361));\
}bit_vector_cast_to_bit_vector(0, &(MUX_11363), &(MUX_11362));\
}bit_vector_cast_to_bit_vector(0, &(fp_upper_index), &(MUX_11363));\
;

#define fpunit_exec_exec__find_leftmost_35_assign_stmt_11368_c_macro_ __declare_static_bit_vector(slice_11367,32);\
bit_vector_slice(&(fp_35), &(slice_11367), 0);\
bit_vector_cast_to_bit_vector(0, &(fp_32_lower), &(slice_11367));\
;

#define fpunit_exec_exec__find_leftmost_35_call_stmt_11372_c_macro_ _fpunit_exec_exec_find_left_32_( &(fp_32_lower), &(fp_32_lower_index), &(found_lower));\
;

#define fpunit_exec_exec__find_leftmost_35_assign_stmt_11383_c_macro_ __declare_static_bit_vector(CONCAT_u1_u6_11379,6);\
__declare_static_bit_vector(MUX_11381,6);\
__declare_static_bit_vector(MUX_11382,6);\
if (has_undefined_bit(&found_upper)) {fprintf(stderr, "Error: variable found_upper has undefined value (%s) at test point.\n", to_string(&found_upper));assert(0);} \
if(bit_vector_to_uint64(0, &found_upper)){bit_vector_cast_to_bit_vector(0, &(MUX_11382), &(fp_upper_index));\
}else {if (has_undefined_bit(&found_lower)) {fprintf(stderr, "Error: variable found_lower has undefined value (%s) at test point.\n", to_string(&found_lower));assert(0);} \
if(bit_vector_to_uint64(0, &found_lower)){bit_vector_concatenate( &(ZERO_1), &(fp_32_lower_index), &(CONCAT_u1_u6_11379));\
bit_vector_cast_to_bit_vector(0, &(MUX_11381), &(CONCAT_u1_u6_11379));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11381), &(ZERO_6));\
}bit_vector_cast_to_bit_vector(0, &(MUX_11382), &(MUX_11381));\
}bit_vector_cast_to_bit_vector(0, &(position), &(MUX_11382));\
;

#define fpunit_exec_exec__find_leftmost_35_assign_stmt_11388_c_macro_ __declare_static_bit_vector(OR_u1_u1_11387,1);\
bit_vector_or(&(found_upper), &(found_lower), &(OR_u1_u1_11387));\
bit_vector_cast_to_bit_vector(0, &(found), &(OR_u1_u1_11387));\
;

#define fpunit_exec_exec__find_leftmost_35_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pposition)), &(position));\
bit_vector_cast_to_bit_vector(0, &((*__pfound)), &(found));\
;

#define fpunit_exec_exec__find_leftmost_64_inner_inarg_prep_macro__ __declare_static_bit_vector(fp_64,64);\
bit_vector_cast_to_bit_vector(0, &(fp_64), &((*__pfp_64)));\
__declare_static_bit_vector(position,6);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(fp_32_upper,32);\
__declare_static_bit_vector(fp_32_lower,32);\
__declare_static_bit_vector(fp_32_upper_index,5);\
__declare_static_bit_vector(found_upper,1);\
__declare_static_bit_vector(fp_32_lower_index,5);\
__declare_static_bit_vector(found_lower,1);\

#define fpunit_exec_exec__find_leftmost_64_assign_stmt_3168_c_macro_ __declare_static_bit_vector(slice_3167,32);\
bit_vector_slice(&(fp_64), &(slice_3167), 32);\
bit_vector_cast_to_bit_vector(0, &(fp_32_upper), &(slice_3167));\
;

#define fpunit_exec_exec__find_leftmost_64_assign_stmt_3172_c_macro_ __declare_static_bit_vector(slice_3171,32);\
bit_vector_slice(&(fp_64), &(slice_3171), 0);\
bit_vector_cast_to_bit_vector(0, &(fp_32_lower), &(slice_3171));\
;

#define fpunit_exec_exec__find_leftmost_64_call_stmt_3176_c_macro_ _fpunit_exec_exec_find_left_32_( &(fp_32_upper), &(fp_32_upper_index), &(found_upper));\
;

#define fpunit_exec_exec__find_leftmost_64_call_stmt_3180_c_macro_ _fpunit_exec_exec_find_left_32_( &(fp_32_lower), &(fp_32_lower_index), &(found_lower));\
;

#define fpunit_exec_exec__find_leftmost_64_assign_stmt_3193_c_macro_ __declare_static_bit_vector(CONCAT_u1_u6_3185,6);\
__declare_static_bit_vector(CONCAT_u1_u6_3189,6);\
__declare_static_bit_vector(MUX_3191,6);\
__declare_static_bit_vector(MUX_3192,6);\
if (has_undefined_bit(&found_upper)) {fprintf(stderr, "Error: variable found_upper has undefined value (%s) at test point.\n", to_string(&found_upper));assert(0);} \
if(bit_vector_to_uint64(0, &found_upper)){bit_vector_concatenate( &(ONE_1), &(fp_32_upper_index), &(CONCAT_u1_u6_3185));\
bit_vector_cast_to_bit_vector(0, &(MUX_3192), &(CONCAT_u1_u6_3185));\
}else {if (has_undefined_bit(&found_lower)) {fprintf(stderr, "Error: variable found_lower has undefined value (%s) at test point.\n", to_string(&found_lower));assert(0);} \
if(bit_vector_to_uint64(0, &found_lower)){bit_vector_concatenate( &(ZERO_1), &(fp_32_lower_index), &(CONCAT_u1_u6_3189));\
bit_vector_cast_to_bit_vector(0, &(MUX_3191), &(CONCAT_u1_u6_3189));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3191), &(ZERO_6));\
}bit_vector_cast_to_bit_vector(0, &(MUX_3192), &(MUX_3191));\
}bit_vector_cast_to_bit_vector(0, &(position), &(MUX_3192));\
;

#define fpunit_exec_exec__find_leftmost_64_assign_stmt_3198_c_macro_ __declare_static_bit_vector(OR_u1_u1_3197,1);\
bit_vector_or(&(found_upper), &(found_lower), &(OR_u1_u1_3197));\
bit_vector_cast_to_bit_vector(0, &(found), &(OR_u1_u1_3197));\
;

#define fpunit_exec_exec__find_leftmost_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pposition)), &(position));\
bit_vector_cast_to_bit_vector(0, &((*__pfound)), &(found));\
;

#define fpunit_exec_exec__fitod64_inner_inarg_prep_macro__ __declare_static_bit_vector(X,32);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
static double Y;\
__declare_static_bit_vector(S,1);\
__declare_static_bit_vector(notX,32);\
__declare_static_bit_vector(twosComplX,32);\
__declare_static_bit_vector(iX,32);\
__declare_static_bit_vector(idx_raw,5);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(exponent,11);\
__declare_static_bit_vector(ls_amount,6);\
__declare_static_bit_vector(ix_shifted,32);\
__declare_static_bit_vector(mantissa,52);\
__declare_static_bit_vector(uY,64);\

#define fpunit_exec_exec__fitod64_assign_stmt_13383_c_macro_ __declare_static_bit_vector(konst_13381,32);\
bit_vector_clear(&konst_13381);\
konst_13381.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_13382,1);\
bit_vector_clear(&konst_13381);\
konst_13381.val.byte_array[0] = 31;\
bit_vector_bitsel( &(X), &(konst_13381), &(BITSEL_u32_u1_13382));\
bit_vector_cast_to_bit_vector(0, &(S), &(BITSEL_u32_u1_13382));\
;

#define fpunit_exec_exec__fitod64_assign_stmt_13387_c_macro_ __declare_static_bit_vector(NOT_u32_u32_13386,32);\
bit_vector_not( &(X), &(NOT_u32_u32_13386));\
bit_vector_cast_to_bit_vector(0, &(notX), &(NOT_u32_u32_13386));\
;

#define fpunit_exec_exec__fitod64_call_stmt_13390_c_macro_ _fpunit_exec_exec_increment_32_( &(notX), &(twosComplX));\
;

#define fpunit_exec_exec__fitod64_assign_stmt_13396_c_macro_ __declare_static_bit_vector(MUX_13395,32);\
if (has_undefined_bit(&S)) {fprintf(stderr, "Error: variable S has undefined value (%s) at test point.\n", to_string(&S));assert(0);} \
if(bit_vector_to_uint64(0, &S)){bit_vector_cast_to_bit_vector(0, &(MUX_13395), &(twosComplX));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13395), &(X));\
}bit_vector_cast_to_bit_vector(0, &(iX), &(MUX_13395));\
;

#define fpunit_exec_exec__fitod64_call_stmt_13400_c_macro_ _fpunit_exec_exec_find_left_32_( &(iX), &(idx_raw), &(found));\
;

#define fpunit_exec_exec__fitod64_assign_stmt_13409_c_macro_ __declare_static_bit_vector(NOT_u10_u10_13404,10);\
bit_vector_clear(&NOT_u10_u10_13404);\
NOT_u10_u10_13404.val.byte_array[0] = 255;\
NOT_u10_u10_13404.val.byte_array[1] = 255;\
__declare_static_bit_vector(CONCAT_u1_u11_13405,11);\
bit_vector_clear(&CONCAT_u1_u11_13405);\
CONCAT_u1_u11_13405.val.byte_array[0] = 255;\
CONCAT_u1_u11_13405.val.byte_array[1] = 3;\
__declare_static_bit_vector(type_cast_13407,11);\
__declare_static_bit_vector(ADD_u11_u11_13408,11);\
bit_vector_not( &(ZERO_10), &(NOT_u10_u10_13404));\
bit_vector_concatenate( &(ZERO_1), &(NOT_u10_u10_13404), &(CONCAT_u1_u11_13405));\
bit_vector_bitcast_to_bit_vector( &(type_cast_13407), &(idx_raw));\
bit_vector_plus( &(CONCAT_u1_u11_13405), &(type_cast_13407), &(ADD_u11_u11_13408));\
bit_vector_cast_to_bit_vector(0, &(exponent), &(ADD_u11_u11_13408));\
;

#define fpunit_exec_exec__fitod64_assign_stmt_13415_c_macro_ __declare_static_bit_vector(konst_13411,6);\
bit_vector_clear(&konst_13411);\
konst_13411.val.byte_array[0] = 32;\
__declare_static_bit_vector(type_cast_13413,6);\
__declare_static_bit_vector(SUB_u6_u6_13414,6);\
bit_vector_clear(&konst_13411);\
konst_13411.val.byte_array[0] = 32;\
bit_vector_bitcast_to_bit_vector( &(type_cast_13413), &(idx_raw));\
bit_vector_minus( &(konst_13411), &(type_cast_13413), &(SUB_u6_u6_13414));\
bit_vector_cast_to_bit_vector(0, &(ls_amount), &(SUB_u6_u6_13414));\
;

#define fpunit_exec_exec__fitod64_call_stmt_13419_c_macro_ _fpunit_exec_exec_i32_sll_( &(iX),  &(ls_amount), &(ix_shifted));\
;

#define fpunit_exec_exec__fitod64_assign_stmt_13424_c_macro_ __declare_static_bit_vector(CONCAT_u32_u52_13423,52);\
bit_vector_concatenate( &(ix_shifted), &(ZERO_20), &(CONCAT_u32_u52_13423));\
bit_vector_cast_to_bit_vector(0, &(mantissa), &(CONCAT_u32_u52_13423));\
;

#define fpunit_exec_exec__fitod64_assign_stmt_13434_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_13429,12);\
__declare_static_bit_vector(CONCAT_u12_u64_13431,64);\
__declare_static_bit_vector(MUX_13433,64);\
if (has_undefined_bit(&found)) {fprintf(stderr, "Error: variable found has undefined value (%s) at test point.\n", to_string(&found));assert(0);} \
if(bit_vector_to_uint64(0, &found)){bit_vector_concatenate( &(S), &(exponent), &(CONCAT_u1_u12_13429));\
bit_vector_concatenate( &(CONCAT_u1_u12_13429), &(mantissa), &(CONCAT_u12_u64_13431));\
bit_vector_cast_to_bit_vector(0, &(MUX_13433), &(CONCAT_u12_u64_13431));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13433), &(ZERO_64));\
}bit_vector_cast_to_bit_vector(0, &(uY), &(MUX_13433));\
;

#define fpunit_exec_exec__fitod64_assign_stmt_13438_c_macro_ static double type_cast_13437;\
bit_vector_bitcast_to_double( &(type_cast_13437),  &(uY));\
Y = type_cast_13437;\
;

#define fpunit_exec_exec__fitod64_inner_outarg_prep_macro__ (*__pY) = Y;\
;

#define fpunit_exec_exec__fitod64_outer_arg_decl_macro__ __declare_static_bit_vector(__X, 32);\
bit_vector_assign_uint64(0, &__X, X);\
;

#define fpunit_exec_exec__fitod64_outer_op_xfer_macro__  *Y = __Y;\
;

#define fpunit_exec_exec__fitod64_wrap_inner_inarg_prep_macro__ __declare_static_bit_vector(X,32);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
static double Y;\
static double uY;\

#define fpunit_exec_exec__fitod64_wrap_call_stmt_18452_c_macro_ _fpunit_exec_exec_fitod64_( &(X), &(uY));\
;

#define fpunit_exec_exec__fitod64_wrap_assign_stmt_18455_c_macro_ Y = uY;\
;

#define fpunit_exec_exec__fitod64_wrap_inner_outarg_prep_macro__ (*__pY) = Y;\
;

#define fpunit_exec_exec__fitod64_wrap_outer_arg_decl_macro__ __declare_static_bit_vector(__X, 32);\
bit_vector_assign_uint64(0, &__X, X);\
;

#define fpunit_exec_exec__fitod64_wrap_outer_op_xfer_macro__  *Y = __Y;\
;

#define fpunit_exec_exec__fitos32_wrap_inner_inarg_prep_macro__ __declare_static_bit_vector(X,32);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
static float Y;\
static double dY;\
__declare_static_bit_vector(denorm_dY,1);\
__declare_static_bit_vector(extn_dY,81);\
__declare_static_bit_vector(rY,32);\
__declare_static_bit_vector(nrY,32);\

#define fpunit_exec_exec__fitos32_wrap_call_stmt_18462_c_macro_ _fpunit_exec_exec_fitod64_( &(X), &(dY));\
;

#define fpunit_exec_exec__fitos32_wrap_call_stmt_18466_c_macro_ _fpunit_exec_exec_DoubleToSingle_( &(dY), &(denorm_dY), &(extn_dY));\
;

#define fpunit_exec_exec__fitos32_wrap_call_stmt_18469_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_dY), &(rY));\
;

#define fpunit_exec_exec__fitos32_wrap_call_stmt_18473_c_macro_ if (has_undefined_bit(&denorm_dY)) {fprintf(stderr, "Error: variable denorm_dY has undefined value (%s) at test point.\n", to_string(&denorm_dY));assert(0);} \
if (bit_vector_to_uint64(0, &denorm_dY)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_dY), &(nrY));\
}\
;

#define fpunit_exec_exec__fitos32_wrap_assign_stmt_18480_c_macro_ __declare_static_bit_vector(MUX_18478,32);\
static float type_cast_18479;\
if (has_undefined_bit(&denorm_dY)) {fprintf(stderr, "Error: variable denorm_dY has undefined value (%s) at test point.\n", to_string(&denorm_dY));assert(0);} \
if(bit_vector_to_uint64(0, &denorm_dY)){bit_vector_cast_to_bit_vector(0, &(MUX_18478), &(nrY));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_18478), &(rY));\
}bit_vector_bitcast_to_float( &(type_cast_18479),  &(MUX_18478));\
Y = type_cast_18479;\
;

#define fpunit_exec_exec__fitos32_wrap_inner_outarg_prep_macro__ (*__pY) = Y;\
;

#define fpunit_exec_exec__fitos32_wrap_outer_arg_decl_macro__ __declare_static_bit_vector(__X, 32);\
bit_vector_assign_uint64(0, &__X, X);\
;

#define fpunit_exec_exec__fitos32_wrap_outer_op_xfer_macro__  *Y = __Y;\
;

#define fpunit_exec_exec__fmul16_inner_inarg_prep_macro__ __declare_static_bit_vector(f1,16);\
bit_vector_cast_to_bit_vector(0, &(f1), &((*__pf1)));\
__declare_static_bit_vector(f2,16);\
bit_vector_cast_to_bit_vector(0, &(f2), &((*__pf2)));\
__declare_static_bit_vector(result,16);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f2_zero,1);\
__declare_static_bit_vector(f2_normal,1);\
__declare_static_bit_vector(f2_nan,1);\
__declare_static_bit_vector(f2_inf,1);\
__declare_static_bit_vector(sign_f1,1);\
__declare_static_bit_vector(f1_exp_biased,5);\
__declare_static_bit_vector(f1_fraction,10);\
__declare_static_bit_vector(exp_a,7);\
__declare_static_bit_vector(sign_f2,1);\
__declare_static_bit_vector(f2_exp_biased,5);\
__declare_static_bit_vector(f2_fraction,10);\
__declare_static_bit_vector(exp_b,7);\
__declare_static_bit_vector(exp_ab,7);\
__declare_static_bit_vector(sign_result,1);\
__declare_static_bit_vector(f1_frac,11);\
__declare_static_bit_vector(f2_frac,11);\
__declare_static_bit_vector(frac_result_ext,22);\
__declare_static_bit_vector(shift_by_one,1);\
__declare_static_bit_vector(frac_result,10);\
__declare_static_bit_vector(adjusted_exponent,7);\
__declare_static_bit_vector(exponent_result,5);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(underflow,1);\

#define fpunit_exec_exec__fmul16_call_stmt_13940_c_macro_ _fpunit_exec_exec_classifyFp16_( &(f1), &(f1_zero), &(f1_normal), &(f1_nan), &(f1_inf));\
;

#define fpunit_exec_exec__fmul16_call_stmt_13946_c_macro_ _fpunit_exec_exec_classifyFp16_( &(f2), &(f2_zero), &(f2_normal), &(f2_nan), &(f2_inf));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13950_c_macro_ __declare_static_bit_vector(slice_13949,1);\
bit_vector_slice(&(f1), &(slice_13949), 15);\
bit_vector_cast_to_bit_vector(0, &(sign_f1), &(slice_13949));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13954_c_macro_ __declare_static_bit_vector(slice_13953,5);\
bit_vector_slice(&(f1), &(slice_13953), 10);\
bit_vector_cast_to_bit_vector(0, &(f1_exp_biased), &(slice_13953));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13958_c_macro_ __declare_static_bit_vector(slice_13957,10);\
bit_vector_slice(&(f1), &(slice_13957), 0);\
bit_vector_cast_to_bit_vector(0, &(f1_fraction), &(slice_13957));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13964_c_macro_ __declare_static_bit_vector(type_cast_13961,7);\
__declare_static_bit_vector(konst_13962,7);\
bit_vector_clear(&konst_13962);\
konst_13962.val.byte_array[0] = 15;\
__declare_static_bit_vector(SUB_i7_i7_13963,7);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13961), &(f1_exp_biased));\
bit_vector_clear(&konst_13962);\
konst_13962.val.byte_array[0] = 15;\
bit_vector_minus( &(type_cast_13961), &(konst_13962), &(SUB_i7_i7_13963));\
bit_vector_cast_to_bit_vector(1, &(exp_a), &(SUB_i7_i7_13963));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13968_c_macro_ __declare_static_bit_vector(slice_13967,1);\
bit_vector_slice(&(f2), &(slice_13967), 15);\
bit_vector_cast_to_bit_vector(0, &(sign_f2), &(slice_13967));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13972_c_macro_ __declare_static_bit_vector(slice_13971,5);\
bit_vector_slice(&(f2), &(slice_13971), 10);\
bit_vector_cast_to_bit_vector(0, &(f2_exp_biased), &(slice_13971));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13976_c_macro_ __declare_static_bit_vector(slice_13975,10);\
bit_vector_slice(&(f2), &(slice_13975), 0);\
bit_vector_cast_to_bit_vector(0, &(f2_fraction), &(slice_13975));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13982_c_macro_ __declare_static_bit_vector(type_cast_13979,7);\
__declare_static_bit_vector(konst_13980,7);\
bit_vector_clear(&konst_13980);\
konst_13980.val.byte_array[0] = 15;\
__declare_static_bit_vector(SUB_i7_i7_13981,7);\
bit_vector_bitcast_to_bit_vector( &(type_cast_13979), &(f2_exp_biased));\
bit_vector_clear(&konst_13980);\
konst_13980.val.byte_array[0] = 15;\
bit_vector_minus( &(type_cast_13979), &(konst_13980), &(SUB_i7_i7_13981));\
bit_vector_cast_to_bit_vector(1, &(exp_b), &(SUB_i7_i7_13981));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13987_c_macro_ __declare_static_bit_vector(ADD_i7_i7_13986,7);\
bit_vector_plus( &(exp_a), &(exp_b), &(ADD_i7_i7_13986));\
bit_vector_cast_to_bit_vector(1, &(exp_ab), &(ADD_i7_i7_13986));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13992_c_macro_ __declare_static_bit_vector(XOR_u1_u1_13991,1);\
bit_vector_xor(&(sign_f1), &(sign_f2), &(XOR_u1_u1_13991));\
bit_vector_cast_to_bit_vector(0, &(sign_result), &(XOR_u1_u1_13991));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_13997_c_macro_ __declare_static_bit_vector(CONCAT_u1_u11_13996,11);\
bit_vector_concatenate( &(ONE_1), &(f1_fraction), &(CONCAT_u1_u11_13996));\
bit_vector_cast_to_bit_vector(0, &(f1_frac), &(CONCAT_u1_u11_13996));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_14002_c_macro_ __declare_static_bit_vector(CONCAT_u1_u11_14001,11);\
bit_vector_concatenate( &(ONE_1), &(f2_fraction), &(CONCAT_u1_u11_14001));\
bit_vector_cast_to_bit_vector(0, &(f2_frac), &(CONCAT_u1_u11_14001));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_14009_c_macro_ __declare_static_bit_vector(type_cast_14005,22);\
__declare_static_bit_vector(type_cast_14007,22);\
__declare_static_bit_vector(MUL_u22_u22_14008,22);\
bit_vector_bitcast_to_bit_vector( &(type_cast_14005), &(f1_frac));\
bit_vector_bitcast_to_bit_vector( &(type_cast_14007), &(f2_frac));\
bit_vector_mul( &(type_cast_14005), &(type_cast_14007), &(MUL_u22_u22_14008));\
bit_vector_cast_to_bit_vector(0, &(frac_result_ext), &(MUL_u22_u22_14008));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_14014_c_macro_ __declare_static_bit_vector(konst_14012,22);\
bit_vector_clear(&konst_14012);\
konst_14012.val.byte_array[0] = 21;\
__declare_static_bit_vector(BITSEL_u22_u1_14013,1);\
bit_vector_clear(&konst_14012);\
konst_14012.val.byte_array[0] = 21;\
bit_vector_bitsel( &(frac_result_ext), &(konst_14012), &(BITSEL_u22_u1_14013));\
bit_vector_cast_to_bit_vector(0, &(shift_by_one), &(BITSEL_u22_u1_14013));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_14022_c_macro_ __declare_static_bit_vector(slice_14018,10);\
__declare_static_bit_vector(slice_14020,10);\
__declare_static_bit_vector(MUX_14021,10);\
if (has_undefined_bit(&shift_by_one)) {fprintf(stderr, "Error: variable shift_by_one has undefined value (%s) at test point.\n", to_string(&shift_by_one));assert(0);} \
if(bit_vector_to_uint64(0, &shift_by_one)){bit_vector_slice(&(frac_result_ext), &(slice_14018), 11);\
bit_vector_cast_to_bit_vector(0, &(MUX_14021), &(slice_14018));\
}else {bit_vector_slice(&(frac_result_ext), &(slice_14020), 10);\
bit_vector_cast_to_bit_vector(0, &(MUX_14021), &(slice_14020));\
}bit_vector_cast_to_bit_vector(0, &(frac_result), &(MUX_14021));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_14030_c_macro_ __declare_static_bit_vector(konst_14026,7);\
bit_vector_clear(&konst_14026);\
konst_14026.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_i7_i7_14027,7);\
__declare_static_bit_vector(MUX_14029,7);\
if (has_undefined_bit(&shift_by_one)) {fprintf(stderr, "Error: variable shift_by_one has undefined value (%s) at test point.\n", to_string(&shift_by_one));assert(0);} \
if(bit_vector_to_uint64(0, &shift_by_one)){bit_vector_clear(&konst_14026);\
konst_14026.val.byte_array[0] = 1;\
bit_vector_plus( &(exp_ab), &(konst_14026), &(ADD_i7_i7_14027));\
bit_vector_cast_to_bit_vector(1, &(MUX_14029), &(ADD_i7_i7_14027));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_14029), &(exp_ab));\
}bit_vector_cast_to_bit_vector(1, &(adjusted_exponent), &(MUX_14029));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_14036_c_macro_ __declare_static_bit_vector(konst_14033,7);\
bit_vector_clear(&konst_14033);\
konst_14033.val.byte_array[0] = 15;\
__declare_static_bit_vector(ADD_i7_i7_14034,7);\
__declare_static_bit_vector(type_cast_14035,5);\
bit_vector_clear(&konst_14033);\
konst_14033.val.byte_array[0] = 15;\
bit_vector_plus( &(adjusted_exponent), &(konst_14033), &(ADD_i7_i7_14034));\
bit_vector_bitcast_to_bit_vector( &(type_cast_14035), &(ADD_i7_i7_14034));\
bit_vector_cast_to_bit_vector(0, &(exponent_result), &(type_cast_14035));\
;

#define fpunit_exec_exec__fmul16_call_stmt_14040_c_macro_ _fpunit_exec_exec_check_fh_exponent_overflow_( &(adjusted_exponent), &(overflow), &(underflow));\
;

#define fpunit_exec_exec__fmul16_assign_stmt_14067_c_macro_ __declare_static_bit_vector(OR_u1_u1_14044,1);\
__declare_static_bit_vector(OR_u1_u1_14046,1);\
__declare_static_bit_vector(call_getHalfInf_expr_14048,16);\
__declare_static_bit_vector(OR_u1_u1_14051,1);\
__declare_static_bit_vector(call_getHalfNan_expr_14053,16);\
__declare_static_bit_vector(OR_u1_u1_14056,1);\
__declare_static_bit_vector(call_getHalfZero_expr_14058,16);\
__declare_static_bit_vector(CONCAT_u1_u6_14061,6);\
__declare_static_bit_vector(CONCAT_u6_u16_14063,16);\
__declare_static_bit_vector(MUX_14064,16);\
__declare_static_bit_vector(MUX_14065,16);\
__declare_static_bit_vector(MUX_14066,16);\
bit_vector_or(&(f1_inf), &(f2_inf), &(OR_u1_u1_14044));\
bit_vector_or(&(OR_u1_u1_14044), &(overflow), &(OR_u1_u1_14046));\
if (has_undefined_bit(&OR_u1_u1_14046)) {fprintf(stderr, "Error: variable OR_u1_u1_14046 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_14046));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_14046)){_fpunit_exec_exec_getHalfInf_( &(sign_result), &(call_getHalfInf_expr_14048));\
bit_vector_cast_to_bit_vector(0, &(MUX_14066), &(call_getHalfInf_expr_14048));\
}else {bit_vector_or(&(f1_nan), &(f2_nan), &(OR_u1_u1_14051));\
if (has_undefined_bit(&OR_u1_u1_14051)) {fprintf(stderr, "Error: variable OR_u1_u1_14051 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_14051));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_14051)){_fpunit_exec_exec_getHalfNan_( &(sign_result), &(call_getHalfNan_expr_14053));\
bit_vector_cast_to_bit_vector(0, &(MUX_14065), &(call_getHalfNan_expr_14053));\
}else {bit_vector_or(&(f1_zero), &(underflow), &(OR_u1_u1_14056));\
if (has_undefined_bit(&OR_u1_u1_14056)) {fprintf(stderr, "Error: variable OR_u1_u1_14056 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_14056));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_14056)){_fpunit_exec_exec_getHalfZero_( &(sign_result), &(call_getHalfZero_expr_14058));\
bit_vector_cast_to_bit_vector(0, &(MUX_14064), &(call_getHalfZero_expr_14058));\
}else {bit_vector_concatenate( &(sign_result), &(exponent_result), &(CONCAT_u1_u6_14061));\
bit_vector_concatenate( &(CONCAT_u1_u6_14061), &(frac_result), &(CONCAT_u6_u16_14063));\
bit_vector_cast_to_bit_vector(0, &(MUX_14064), &(CONCAT_u6_u16_14063));\
}bit_vector_cast_to_bit_vector(0, &(MUX_14065), &(MUX_14064));\
}bit_vector_cast_to_bit_vector(0, &(MUX_14066), &(MUX_14065));\
}bit_vector_cast_to_bit_vector(0, &(result), &(MUX_14066));\
;

#define fpunit_exec_exec__fmul16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__fmul16_outer_arg_decl_macro__ __declare_static_bit_vector(__f1, 16);\
bit_vector_assign_uint64(0, &__f1, f1);\
__declare_static_bit_vector(__f2, 16);\
bit_vector_assign_uint64(0, &__f2, f2);\
__declare_static_bit_vector(__result, 16);\
;

#define fpunit_exec_exec__fmul16_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__fmul16_wrap_inner_inarg_prep_macro__ __declare_static_bit_vector(f1,16);\
bit_vector_cast_to_bit_vector(0, &(f1), &((*__pf1)));\
__declare_static_bit_vector(f2,16);\
bit_vector_cast_to_bit_vector(0, &(f2), &((*__pf2)));\
__declare_static_bit_vector(result,16);\

#define fpunit_exec_exec__fmul16_wrap_call_stmt_18489_c_macro_ _fpunit_exec_exec_fmul16_( &(f1),  &(f2), &(result));\
;

#define fpunit_exec_exec__fmul16_wrap_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__fmul16_wrap_outer_arg_decl_macro__ __declare_static_bit_vector(__f1, 16);\
bit_vector_assign_uint64(0, &__f1, f1);\
__declare_static_bit_vector(__f2, 16);\
bit_vector_assign_uint64(0, &__f2, f2);\
__declare_static_bit_vector(__result, 16);\
;

#define fpunit_exec_exec__fmul16_wrap_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__fnegs_64_inner_inarg_prep_macro__ static double f;\
f = (*__pf);\
static double nf;\
__declare_static_bit_vector(uf,64);\
__declare_static_bit_vector(nuf,64);\

#define fpunit_exec_exec__fnegs_64_assign_stmt_18497_c_macro_ __declare_static_bit_vector(type_cast_18496,64);\
double_bitcast_to_bit_vector( &(type_cast_18496), &(f));\
bit_vector_cast_to_bit_vector(0, &(uf), &(type_cast_18496));\
;

#define fpunit_exec_exec__fnegs_64_assign_stmt_18506_c_macro_ __declare_static_bit_vector(konst_18500,64);\
bit_vector_clear(&konst_18500);\
konst_18500.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_18501,1);\
__declare_static_bit_vector(NOT_u1_u1_18502,1);\
__declare_static_bit_vector(slice_18504,63);\
__declare_static_bit_vector(CONCAT_u1_u64_18505,64);\
bit_vector_clear(&konst_18500);\
konst_18500.val.byte_array[0] = 63;\
bit_vector_bitsel( &(uf), &(konst_18500), &(BITSEL_u64_u1_18501));\
bit_vector_not( &(BITSEL_u64_u1_18501), &(NOT_u1_u1_18502));\
bit_vector_slice(&(uf), &(slice_18504), 0);\
bit_vector_concatenate( &(NOT_u1_u1_18502), &(slice_18504), &(CONCAT_u1_u64_18505));\
bit_vector_cast_to_bit_vector(0, &(nuf), &(CONCAT_u1_u64_18505));\
;

#define fpunit_exec_exec__fnegs_64_assign_stmt_18510_c_macro_ static double type_cast_18509;\
bit_vector_bitcast_to_double( &(type_cast_18509),  &(nuf));\
nf = type_cast_18509;\
;

#define fpunit_exec_exec__fnegs_64_inner_outarg_prep_macro__ (*__pnf) = nf;\
;

#define fpunit_exec_exec__fnegs_64_outer_arg_decl_macro__ double __f = f;\
;

#define fpunit_exec_exec__fnegs_64_outer_op_xfer_macro__  *nf = __nf;\
;

#define fpunit_exec_exec__fpadd32_op_inner_inarg_prep_macro__ __declare_static_bit_vector(uf1_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &((*__puf1_s)));\
__declare_static_bit_vector(f1_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_s_class), &((*__pf1_s_class)));\
__declare_static_bit_vector(uf2_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf2_s), &((*__puf2_s)));\
__declare_static_bit_vector(f2_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f2_s_class), &((*__pf2_s_class)));\
__declare_static_bit_vector(needs_norm,1);\
__declare_static_bit_vector(extn_result,81);\
__declare_static_bit_vector(uf1_s_efp,67);\
__declare_static_bit_vector(uf2_s_efp,67);\
__declare_static_bit_vector(sign_uf1_d,1);\
__declare_static_bit_vector(f1_exp13_unbiased,13);\
__declare_static_bit_vector(f1_top_bit,1);\
__declare_static_bit_vector(f1_fraction,23);\
__declare_static_bit_vector(sign_uf2_d,1);\
__declare_static_bit_vector(f2_exp13_unbiased,13);\
__declare_static_bit_vector(f2_top_bit,1);\
__declare_static_bit_vector(f2_fraction,23);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_pos_inf,1);\
__declare_static_bit_vector(f1_neg_inf,1);\
__declare_static_bit_vector(f2_zero,1);\
__declare_static_bit_vector(f2_normal,1);\
__declare_static_bit_vector(f2_denormal,1);\
__declare_static_bit_vector(f2_nan,1);\
__declare_static_bit_vector(f2_inf,1);\
__declare_static_bit_vector(f2_pos_inf,1);\
__declare_static_bit_vector(f2_neg_inf,1);\
__declare_static_bit_vector(f1_frac,24);\
__declare_static_bit_vector(f2_frac,24);\
__declare_static_bit_vector(exp_a,13);\
__declare_static_bit_vector(exp_b,13);\
__declare_static_bit_vector(exp_a_greater_than_exp_b,1);\
__declare_static_bit_vector(exp_a_equal_exp_b,1);\
__declare_static_bit_vector(exp_ab,13);\
__declare_static_bit_vector(mantissa_a_pre_shift_35,35);\
__declare_static_bit_vector(mantissa_b_pre_shift_35,35);\
__declare_static_bit_vector(to_be_shifted_35,35);\
__declare_static_bit_vector(exp_ab_6,6);\
__declare_static_bit_vector(shifted_output_temp_35,35);\
__declare_static_bit_vector(sticky_temp,1);\
__declare_static_bit_vector(shifted_output_35,35);\
__declare_static_bit_vector(mantissa_a_post_shift_35,35);\
__declare_static_bit_vector(mantissa_b_post_shift_35,35);\
__declare_static_bit_vector(exponent_post_align,13);\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(a_frac_ge_b_frac,1);\
__declare_static_bit_vector(need_to_take_twos_complement_a,1);\
__declare_static_bit_vector(need_to_take_twos_complement_b,1);\
__declare_static_bit_vector(carry_in,1);\
__declare_static_bit_vector(mantissa_operand_a_35,35);\
__declare_static_bit_vector(mantissa_operand_b_35,35);\
__declare_static_bit_vector(mantissa_added_35,35);\
__declare_static_bit_vector(carry_out,1);\
__declare_static_bit_vector(sign_result,1);\
__declare_static_bit_vector(mantissa_out_35,35);\
__declare_static_bit_vector(need_to_shift,1);\
__declare_static_bit_vector(mantissa_out_shifted_34,34);\
__declare_static_bit_vector(mantissa_35_bits,35);\
__declare_static_bit_vector(position_of_one,6);\
__declare_static_bit_vector(one_found,1);\
__declare_static_bit_vector(left_shift_amount,6);\
__declare_static_bit_vector(add_result_zero,1);\
__declare_static_bit_vector(final_mantissa_aligned_35,35);\
__declare_static_bit_vector(final_mantissa_33_aligned,33);\
__declare_static_bit_vector(final_mantissa_62_aligned,62);\
__declare_static_bit_vector(exponent_correction,13);\
__declare_static_bit_vector(final_exponent_without_bias,13);\
__declare_static_bit_vector(SP_exp_overflow,1);\
__declare_static_bit_vector(SP_exp_underflow,1);\
__declare_static_bit_vector(underflow_SP,1);\
__declare_static_bit_vector(overflow_SP,1);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(condition_nan,1);\
__declare_static_bit_vector(condition_inf,1);\
__declare_static_bit_vector(condition_zero,1);\
__declare_static_bit_vector(underflow,1);\
__declare_static_bit_vector(SP_nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(SP_normalization_required,1);\
__declare_static_bit_vector(normalization_required,1);\
__declare_static_bit_vector(nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(exponent_to_be_passed,13);\
__declare_static_bit_vector(mantissa_to_be_passed,62);\
__declare_static_bit_vector(a_was_shifted,1);\
__declare_static_bit_vector(a_negative,1);\
__declare_static_bit_vector(b_was_shifted,1);\
__declare_static_bit_vector(b_negative,1);\
__declare_static_bit_vector(condition_to_pass_sticky_bit,1);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(apply_sticky_correction,1);\

#define fpunit_exec_exec__fpadd32_op_call_stmt_11471_c_macro_ _fpunit_exec_exec_SingleToExtendedFp_( &(uf1_s),  &(f1_s_class), &(uf1_s_efp));\
;

#define fpunit_exec_exec__fpadd32_op_call_stmt_11475_c_macro_ _fpunit_exec_exec_SingleToExtendedFp_( &(uf2_s),  &(f2_s_class), &(uf2_s_efp));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11479_c_macro_ __declare_static_bit_vector(slice_11478,1);\
bit_vector_slice(&(uf1_s_efp), &(slice_11478), 66);\
bit_vector_cast_to_bit_vector(0, &(sign_uf1_d), &(slice_11478));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11483_c_macro_ __declare_static_bit_vector(slice_11482,13);\
bit_vector_slice(&(uf1_s_efp), &(slice_11482), 53);\
bit_vector_cast_to_bit_vector(0, &(f1_exp13_unbiased), &(slice_11482));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11487_c_macro_ __declare_static_bit_vector(slice_11486,1);\
bit_vector_slice(&(uf1_s_efp), &(slice_11486), 52);\
bit_vector_cast_to_bit_vector(0, &(f1_top_bit), &(slice_11486));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11491_c_macro_ __declare_static_bit_vector(slice_11490,23);\
bit_vector_slice(&(uf1_s_efp), &(slice_11490), 29);\
bit_vector_cast_to_bit_vector(0, &(f1_fraction), &(slice_11490));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11495_c_macro_ __declare_static_bit_vector(slice_11494,1);\
bit_vector_slice(&(uf2_s_efp), &(slice_11494), 66);\
bit_vector_cast_to_bit_vector(0, &(sign_uf2_d), &(slice_11494));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11499_c_macro_ __declare_static_bit_vector(slice_11498,13);\
bit_vector_slice(&(uf2_s_efp), &(slice_11498), 53);\
bit_vector_cast_to_bit_vector(0, &(f2_exp13_unbiased), &(slice_11498));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11503_c_macro_ __declare_static_bit_vector(slice_11502,1);\
bit_vector_slice(&(uf2_s_efp), &(slice_11502), 52);\
bit_vector_cast_to_bit_vector(0, &(f2_top_bit), &(slice_11502));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11507_c_macro_ __declare_static_bit_vector(slice_11506,23);\
bit_vector_slice(&(uf2_s_efp), &(slice_11506), 29);\
bit_vector_cast_to_bit_vector(0, &(f2_fraction), &(slice_11506));\
;

#define fpunit_exec_exec__fpadd32_op_call_stmt_11518_c_macro_ __declare_static_bit_vector(konst_11510,10);\
bit_vector_clear(&konst_11510);\
bit_vector_clear(&konst_11510);\
_fpunit_exec_exec_classify_utility_( &(ONE_1),  &(f1_s_class),  &(konst_11510), &(f1_zero), &(f1_normal), &(f1_denormal), &(f1_nan), &(f1_inf), &(f1_pos_inf), &(f1_neg_inf));\
;

#define fpunit_exec_exec__fpadd32_op_call_stmt_11529_c_macro_ __declare_static_bit_vector(konst_11521,10);\
bit_vector_clear(&konst_11521);\
bit_vector_clear(&konst_11521);\
_fpunit_exec_exec_classify_utility_( &(ONE_1),  &(f2_s_class),  &(konst_11521), &(f2_zero), &(f2_normal), &(f2_denormal), &(f2_nan), &(f2_inf), &(f2_pos_inf), &(f2_neg_inf));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11534_c_macro_ __declare_static_bit_vector(CONCAT_u1_u24_11533,24);\
bit_vector_concatenate( &(f1_top_bit), &(f1_fraction), &(CONCAT_u1_u24_11533));\
bit_vector_cast_to_bit_vector(0, &(f1_frac), &(CONCAT_u1_u24_11533));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11539_c_macro_ __declare_static_bit_vector(CONCAT_u1_u24_11538,24);\
bit_vector_concatenate( &(f2_top_bit), &(f2_fraction), &(CONCAT_u1_u24_11538));\
bit_vector_cast_to_bit_vector(0, &(f2_frac), &(CONCAT_u1_u24_11538));\
;

#define fpunit_exec_exec__fpadd32_op_stmt_11542_c_macro_ uint32_t fpunit_exec_exec__fpadd32_op_stmt_11542_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd32_op_stmt_11542_c_macro___print_counter,"fpadd32_op_fractions");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11542_c_macro___print_counter,"f1_frac");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_frac)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11542_c_macro___print_counter,"f2_frac");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_frac)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11546_c_macro_ __declare_static_bit_vector(type_cast_11545,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_11545), &(f1_exp13_unbiased));\
bit_vector_cast_to_bit_vector(1, &(exp_a), &(type_cast_11545));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11550_c_macro_ __declare_static_bit_vector(type_cast_11549,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_11549), &(f2_exp13_unbiased));\
bit_vector_cast_to_bit_vector(1, &(exp_b), &(type_cast_11549));\
;

#define fpunit_exec_exec__fpadd32_op_call_stmt_11556_c_macro_ _fpunit_exec_exec_expDiffSingle_( &(uf1_s),  &(uf2_s), &(exp_a_greater_than_exp_b), &(exp_a_equal_exp_b), &(exp_ab));\
;

#define fpunit_exec_exec__fpadd32_op_stmt_11561_c_macro_ uint32_t fpunit_exec_exec__fpadd32_op_stmt_11561_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd32_op_stmt_11561_c_macro___print_counter,"fpadd32_op_exponents");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11561_c_macro___print_counter,"exp_a");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_a)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11561_c_macro___print_counter,"exp_b");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_b)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11561_c_macro___print_counter,"exp_a_greater_than_exp_b");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_a_greater_than_exp_b)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11561_c_macro___print_counter,"exp_a_equal_exp_b");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_a_equal_exp_b)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11568_c_macro_ __declare_static_bit_vector(CONCAT_u1_u25_11565,25);\
__declare_static_bit_vector(CONCAT_u25_u35_11567,35);\
bit_vector_concatenate( &(ZERO_1), &(f1_frac), &(CONCAT_u1_u25_11565));\
bit_vector_concatenate( &(CONCAT_u1_u25_11565), &(ZERO_10), &(CONCAT_u25_u35_11567));\
bit_vector_cast_to_bit_vector(0, &(mantissa_a_pre_shift_35), &(CONCAT_u25_u35_11567));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11575_c_macro_ __declare_static_bit_vector(CONCAT_u1_u25_11572,25);\
__declare_static_bit_vector(CONCAT_u25_u35_11574,35);\
bit_vector_concatenate( &(ZERO_1), &(f2_frac), &(CONCAT_u1_u25_11572));\
bit_vector_concatenate( &(CONCAT_u1_u25_11572), &(ZERO_10), &(CONCAT_u25_u35_11574));\
bit_vector_cast_to_bit_vector(0, &(mantissa_b_pre_shift_35), &(CONCAT_u25_u35_11574));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11581_c_macro_ __declare_static_bit_vector(MUX_11580,35);\
if (has_undefined_bit(&exp_a_greater_than_exp_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_exp_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_exp_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_exp_b)){bit_vector_cast_to_bit_vector(0, &(MUX_11580), &(mantissa_b_pre_shift_35));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11580), &(mantissa_a_pre_shift_35));\
}bit_vector_cast_to_bit_vector(0, &(to_be_shifted_35), &(MUX_11580));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11591_c_macro_ __declare_static_bit_vector(konst_11584,13);\
bit_vector_clear(&konst_11584);\
konst_11584.val.byte_array[0] = 35;\
__declare_static_bit_vector(SGT_i13_u1_11585,1);\
__declare_static_bit_vector(konst_11586,6);\
bit_vector_clear(&konst_11586);\
konst_11586.val.byte_array[0] = 35;\
__declare_static_bit_vector(type_cast_11587,6);\
bit_vector_clear(&type_cast_11587);\
type_cast_11587.val.byte_array[0] = 35;\
__declare_static_bit_vector(type_cast_11589,6);\
__declare_static_bit_vector(MUX_11590,6);\
bit_vector_clear(&konst_11584);\
konst_11584.val.byte_array[0] = 35;\
bit_vector_greater(1, &(exp_ab), &(konst_11584), &(SGT_i13_u1_11585));\
if (has_undefined_bit(&SGT_i13_u1_11585)) {fprintf(stderr, "Error: variable SGT_i13_u1_11585 has undefined value (%s) at test point.\n", to_string(&SGT_i13_u1_11585));assert(0);} \
if(bit_vector_to_uint64(0, &SGT_i13_u1_11585)){bit_vector_clear(&konst_11586);\
konst_11586.val.byte_array[0] = 35;\
bit_vector_bitcast_to_bit_vector( &(type_cast_11587), &(konst_11586));\
bit_vector_cast_to_bit_vector(0, &(MUX_11590), &(type_cast_11587));\
}else {bit_vector_bitcast_to_bit_vector( &(type_cast_11589), &(exp_ab));\
bit_vector_cast_to_bit_vector(0, &(MUX_11590), &(type_cast_11589));\
}bit_vector_cast_to_bit_vector(0, &(exp_ab_6), &(MUX_11590));\
;

#define fpunit_exec_exec__fpadd32_op_call_stmt_11596_c_macro_ _fpunit_exec_exec_u35_sr_special_( &(to_be_shifted_35),  &(exp_ab_6), &(shifted_output_temp_35), &(sticky_temp));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11604_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11599,1);\
__declare_static_bit_vector(konst_11601,35);\
bit_vector_clear(&konst_11601);\
__declare_static_bit_vector(type_cast_11602,35);\
bit_vector_clear(&type_cast_11602);\
__declare_static_bit_vector(MUX_11603,35);\
bit_vector_not( &(exp_a_equal_exp_b), &(NOT_u1_u1_11599));\
if (has_undefined_bit(&NOT_u1_u1_11599)) {fprintf(stderr, "Error: variable NOT_u1_u1_11599 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_11599));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_11599)){bit_vector_cast_to_bit_vector(0, &(MUX_11603), &(shifted_output_temp_35));\
}else {bit_vector_clear(&konst_11601);\
bit_vector_bitcast_to_bit_vector( &(type_cast_11602), &(konst_11601));\
bit_vector_cast_to_bit_vector(0, &(MUX_11603), &(type_cast_11602));\
}bit_vector_cast_to_bit_vector(0, &(shifted_output_35), &(MUX_11603));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11612_c_macro_ __declare_static_bit_vector(OR_u1_u1_11608,1);\
__declare_static_bit_vector(MUX_11611,35);\
bit_vector_or(&(exp_a_greater_than_exp_b), &(exp_a_equal_exp_b), &(OR_u1_u1_11608));\
if (has_undefined_bit(&OR_u1_u1_11608)) {fprintf(stderr, "Error: variable OR_u1_u1_11608 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_11608));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_11608)){bit_vector_cast_to_bit_vector(0, &(MUX_11611), &(mantissa_a_pre_shift_35));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11611), &(shifted_output_35));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_a_post_shift_35), &(MUX_11611));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11618_c_macro_ __declare_static_bit_vector(MUX_11617,35);\
if (has_undefined_bit(&exp_a_greater_than_exp_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_exp_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_exp_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_exp_b)){bit_vector_cast_to_bit_vector(0, &(MUX_11617), &(shifted_output_35));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11617), &(mantissa_b_pre_shift_35));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_b_post_shift_35), &(MUX_11617));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11624_c_macro_ __declare_static_bit_vector(MUX_11623,13);\
if (has_undefined_bit(&exp_a_greater_than_exp_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_exp_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_exp_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_exp_b)){bit_vector_cast_to_bit_vector(1, &(MUX_11623), &(exp_a));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_11623), &(exp_b));\
}bit_vector_cast_to_bit_vector(1, &(exponent_post_align), &(MUX_11623));\
;

#define fpunit_exec_exec__fpadd32_op_stmt_11628_c_macro_ uint32_t fpunit_exec_exec__fpadd32_op_stmt_11628_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd32_op_stmt_11628_c_macro___print_counter,"fpadd32_op_post_shift");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11628_c_macro___print_counter,"mantissa_a_post_shift_35");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_a_post_shift_35)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11628_c_macro___print_counter,"mantissa_b_post_shift_35");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_b_post_shift_35)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11628_c_macro___print_counter,"exponent_post_align");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exponent_post_align)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd32_op_call_stmt_11633_c_macro_ _fpunit_exec_exec_compare24_( &(f1_frac),  &(f2_frac), &(G), &(E));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11641_c_macro_ __declare_static_bit_vector(OR_u1_u1_11638,1);\
__declare_static_bit_vector(MUX_11640,1);\
if (has_undefined_bit(&exp_a_equal_exp_b)) {fprintf(stderr, "Error: variable exp_a_equal_exp_b has undefined value (%s) at test point.\n", to_string(&exp_a_equal_exp_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_equal_exp_b)){bit_vector_or(&(G), &(E), &(OR_u1_u1_11638));\
bit_vector_cast_to_bit_vector(0, &(MUX_11640), &(OR_u1_u1_11638));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11640), &(exp_a_greater_than_exp_b));\
}bit_vector_cast_to_bit_vector(0, &(a_frac_ge_b_frac), &(MUX_11640));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11658_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11645,1);\
__declare_static_bit_vector(AND_u1_u1_11646,1);\
__declare_static_bit_vector(NOT_u1_u1_11648,1);\
__declare_static_bit_vector(AND_u1_u1_11649,1);\
__declare_static_bit_vector(NOT_u1_u1_11651,1);\
__declare_static_bit_vector(AND_u1_u1_11653,1);\
__declare_static_bit_vector(NOT_u1_u1_11655,1);\
__declare_static_bit_vector(AND_u1_u1_11656,1);\
__declare_static_bit_vector(OR_u1_u1_11657,1);\
bit_vector_not( &(sign_uf2_d), &(NOT_u1_u1_11645));\
bit_vector_and(&(sign_uf1_d), &(NOT_u1_u1_11645), &(AND_u1_u1_11646));\
bit_vector_not( &(a_frac_ge_b_frac), &(NOT_u1_u1_11648));\
bit_vector_and(&(AND_u1_u1_11646), &(NOT_u1_u1_11648), &(AND_u1_u1_11649));\
bit_vector_not( &(sign_uf1_d), &(NOT_u1_u1_11651));\
bit_vector_and(&(NOT_u1_u1_11651), &(sign_uf2_d), &(AND_u1_u1_11653));\
bit_vector_not( &(a_frac_ge_b_frac), &(NOT_u1_u1_11655));\
bit_vector_and(&(AND_u1_u1_11653), &(NOT_u1_u1_11655), &(AND_u1_u1_11656));\
bit_vector_or(&(AND_u1_u1_11649), &(AND_u1_u1_11656), &(OR_u1_u1_11657));\
bit_vector_cast_to_bit_vector(0, &(need_to_take_twos_complement_a), &(OR_u1_u1_11657));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11673_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11662,1);\
__declare_static_bit_vector(AND_u1_u1_11663,1);\
__declare_static_bit_vector(AND_u1_u1_11665,1);\
__declare_static_bit_vector(NOT_u1_u1_11667,1);\
__declare_static_bit_vector(AND_u1_u1_11669,1);\
__declare_static_bit_vector(AND_u1_u1_11671,1);\
__declare_static_bit_vector(OR_u1_u1_11672,1);\
bit_vector_not( &(sign_uf1_d), &(NOT_u1_u1_11662));\
bit_vector_and(&(sign_uf2_d), &(NOT_u1_u1_11662), &(AND_u1_u1_11663));\
bit_vector_and(&(AND_u1_u1_11663), &(a_frac_ge_b_frac), &(AND_u1_u1_11665));\
bit_vector_not( &(sign_uf2_d), &(NOT_u1_u1_11667));\
bit_vector_and(&(NOT_u1_u1_11667), &(sign_uf1_d), &(AND_u1_u1_11669));\
bit_vector_and(&(AND_u1_u1_11669), &(a_frac_ge_b_frac), &(AND_u1_u1_11671));\
bit_vector_or(&(AND_u1_u1_11665), &(AND_u1_u1_11671), &(OR_u1_u1_11672));\
bit_vector_cast_to_bit_vector(0, &(need_to_take_twos_complement_b), &(OR_u1_u1_11672));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11678_c_macro_ __declare_static_bit_vector(OR_u1_u1_11677,1);\
bit_vector_or(&(need_to_take_twos_complement_a), &(need_to_take_twos_complement_b), &(OR_u1_u1_11677));\
bit_vector_cast_to_bit_vector(0, &(carry_in), &(OR_u1_u1_11677));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11685_c_macro_ __declare_static_bit_vector(NOT_u35_u35_11682,35);\
__declare_static_bit_vector(MUX_11684,35);\
if (has_undefined_bit(&need_to_take_twos_complement_a)) {fprintf(stderr, "Error: variable need_to_take_twos_complement_a has undefined value (%s) at test point.\n", to_string(&need_to_take_twos_complement_a));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_take_twos_complement_a)){bit_vector_not( &(mantissa_a_post_shift_35), &(NOT_u35_u35_11682));\
bit_vector_cast_to_bit_vector(0, &(MUX_11684), &(NOT_u35_u35_11682));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11684), &(mantissa_a_post_shift_35));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_operand_a_35), &(MUX_11684));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11692_c_macro_ __declare_static_bit_vector(NOT_u35_u35_11689,35);\
__declare_static_bit_vector(MUX_11691,35);\
if (has_undefined_bit(&need_to_take_twos_complement_b)) {fprintf(stderr, "Error: variable need_to_take_twos_complement_b has undefined value (%s) at test point.\n", to_string(&need_to_take_twos_complement_b));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_take_twos_complement_b)){bit_vector_not( &(mantissa_b_post_shift_35), &(NOT_u35_u35_11689));\
bit_vector_cast_to_bit_vector(0, &(MUX_11691), &(NOT_u35_u35_11689));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11691), &(mantissa_b_post_shift_35));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_operand_b_35), &(MUX_11691));\
;

#define fpunit_exec_exec__fpadd32_op_call_stmt_11698_c_macro_ _fpunit_exec_exec_adder_35_with_carry_( &(mantissa_operand_a_35),  &(mantissa_operand_b_35),  &(carry_in), &(mantissa_added_35), &(carry_out));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11718_c_macro_ __declare_static_bit_vector(AND_u1_u1_11702,1);\
__declare_static_bit_vector(NOT_u1_u1_11705,1);\
__declare_static_bit_vector(AND_u1_u1_11706,1);\
__declare_static_bit_vector(AND_u1_u1_11708,1);\
__declare_static_bit_vector(OR_u1_u1_11709,1);\
__declare_static_bit_vector(NOT_u1_u1_11711,1);\
__declare_static_bit_vector(AND_u1_u1_11713,1);\
__declare_static_bit_vector(NOT_u1_u1_11715,1);\
__declare_static_bit_vector(AND_u1_u1_11716,1);\
__declare_static_bit_vector(OR_u1_u1_11717,1);\
bit_vector_and(&(sign_uf1_d), &(sign_uf2_d), &(AND_u1_u1_11702));\
bit_vector_not( &(sign_uf2_d), &(NOT_u1_u1_11705));\
bit_vector_and(&(sign_uf1_d), &(NOT_u1_u1_11705), &(AND_u1_u1_11706));\
bit_vector_and(&(AND_u1_u1_11706), &(a_frac_ge_b_frac), &(AND_u1_u1_11708));\
bit_vector_or(&(AND_u1_u1_11702), &(AND_u1_u1_11708), &(OR_u1_u1_11709));\
bit_vector_not( &(sign_uf1_d), &(NOT_u1_u1_11711));\
bit_vector_and(&(NOT_u1_u1_11711), &(sign_uf2_d), &(AND_u1_u1_11713));\
bit_vector_not( &(a_frac_ge_b_frac), &(NOT_u1_u1_11715));\
bit_vector_and(&(AND_u1_u1_11713), &(NOT_u1_u1_11715), &(AND_u1_u1_11716));\
bit_vector_or(&(OR_u1_u1_11709), &(AND_u1_u1_11716), &(OR_u1_u1_11717));\
bit_vector_cast_to_bit_vector(0, &(sign_result), &(OR_u1_u1_11717));\
;

#define fpunit_exec_exec__fpadd32_op_stmt_11725_c_macro_ uint32_t fpunit_exec_exec__fpadd32_op_stmt_11725_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd32_op_stmt_11725_c_macro___print_counter,"fpadd32_op_mantissa_added");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11725_c_macro___print_counter,"mantissa_operand_a_35");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_operand_a_35)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11725_c_macro___print_counter,"mantissa_operand_b_35");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_operand_b_35)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11725_c_macro___print_counter,"carry_in");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(carry_in)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11725_c_macro___print_counter,"mantissa_added_35");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_added_35)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11725_c_macro___print_counter,"carry_out");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(carry_out)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11725_c_macro___print_counter,"sign_result");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sign_result)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11728_c_macro_ bit_vector_cast_to_bit_vector(0, &(mantissa_out_35), &(mantissa_added_35));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11736_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11731,1);\
__declare_static_bit_vector(konst_11733,35);\
bit_vector_clear(&konst_11733);\
konst_11733.val.byte_array[0] = 34;\
__declare_static_bit_vector(BITSEL_u35_u1_11734,1);\
__declare_static_bit_vector(AND_u1_u1_11735,1);\
bit_vector_not( &(carry_in), &(NOT_u1_u1_11731));\
bit_vector_clear(&konst_11733);\
konst_11733.val.byte_array[0] = 34;\
bit_vector_bitsel( &(mantissa_out_35), &(konst_11733), &(BITSEL_u35_u1_11734));\
bit_vector_and(&(NOT_u1_u1_11731), &(BITSEL_u35_u1_11734), &(AND_u1_u1_11735));\
bit_vector_cast_to_bit_vector(0, &(need_to_shift), &(AND_u1_u1_11735));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11740_c_macro_ __declare_static_bit_vector(slice_11739,34);\
bit_vector_slice(&(mantissa_out_35), &(slice_11739), 1);\
bit_vector_cast_to_bit_vector(0, &(mantissa_out_shifted_34), &(slice_11739));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11751_c_macro_ __declare_static_bit_vector(CONCAT_u1_u35_11745,35);\
__declare_static_bit_vector(slice_11748,34);\
__declare_static_bit_vector(CONCAT_u1_u35_11749,35);\
__declare_static_bit_vector(MUX_11750,35);\
if (has_undefined_bit(&need_to_shift)) {fprintf(stderr, "Error: variable need_to_shift has undefined value (%s) at test point.\n", to_string(&need_to_shift));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_shift)){bit_vector_concatenate( &(ZERO_1), &(mantissa_out_shifted_34), &(CONCAT_u1_u35_11745));\
bit_vector_cast_to_bit_vector(0, &(MUX_11750), &(CONCAT_u1_u35_11745));\
}else {bit_vector_slice(&(mantissa_out_35), &(slice_11748), 0);\
bit_vector_concatenate( &(ZERO_1), &(slice_11748), &(CONCAT_u1_u35_11749));\
bit_vector_cast_to_bit_vector(0, &(MUX_11750), &(CONCAT_u1_u35_11749));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_35_bits), &(MUX_11750));\
;

#define fpunit_exec_exec__fpadd32_op_stmt_11753_c_macro_ uint32_t fpunit_exec_exec__fpadd32_op_stmt_11753_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd32_op_stmt_11753_c_macro___print_counter,"fpadd32_op_final_mantissa_35");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11753_c_macro___print_counter,"mantissa_35_bits");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_35_bits)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd32_op_call_stmt_11757_c_macro_ _fpunit_exec_exec_find_leftmost_35_( &(mantissa_35_bits), &(position_of_one), &(one_found));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11763_c_macro_ __declare_static_bit_vector(konst_11759,6);\
bit_vector_clear(&konst_11759);\
konst_11759.val.byte_array[0] = 33;\
__declare_static_bit_vector(SUB_u6_u6_11761,6);\
__declare_static_bit_vector(type_cast_11762,6);\
bit_vector_clear(&konst_11759);\
konst_11759.val.byte_array[0] = 33;\
bit_vector_minus( &(konst_11759), &(position_of_one), &(SUB_u6_u6_11761));\
bit_vector_bitcast_to_bit_vector( &(type_cast_11762), &(SUB_u6_u6_11761));\
bit_vector_cast_to_bit_vector(0, &(left_shift_amount), &(type_cast_11762));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11767_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11766,1);\
bit_vector_not( &(one_found), &(NOT_u1_u1_11766));\
bit_vector_cast_to_bit_vector(0, &(add_result_zero), &(NOT_u1_u1_11766));\
;

#define fpunit_exec_exec__fpadd32_op_call_stmt_11771_c_macro_ _fpunit_exec_exec_i35_sll_( &(mantissa_35_bits),  &(left_shift_amount), &(final_mantissa_aligned_35));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11775_c_macro_ __declare_static_bit_vector(slice_11774,33);\
bit_vector_slice(&(final_mantissa_aligned_35), &(slice_11774), 0);\
bit_vector_cast_to_bit_vector(0, &(final_mantissa_33_aligned), &(slice_11774));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11781_c_macro_ __declare_static_bit_vector(konst_11778,29);\
bit_vector_clear(&konst_11778);\
__declare_static_bit_vector(type_cast_11779,29);\
bit_vector_clear(&type_cast_11779);\
__declare_static_bit_vector(CONCAT_u33_u62_11780,62);\
bit_vector_clear(&konst_11778);\
bit_vector_bitcast_to_bit_vector( &(type_cast_11779), &(konst_11778));\
bit_vector_concatenate( &(final_mantissa_33_aligned), &(type_cast_11779), &(CONCAT_u33_u62_11780));\
bit_vector_cast_to_bit_vector(0, &(final_mantissa_62_aligned), &(CONCAT_u33_u62_11780));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11793_c_macro_ __declare_static_bit_vector(MUX_11786,13);\
__declare_static_bit_vector(type_cast_11789,13);\
__declare_static_bit_vector(konst_11790,13);\
bit_vector_clear(&konst_11790);\
__declare_static_bit_vector(MUX_11791,13);\
__declare_static_bit_vector(SUB_i13_i13_11792,13);\
if (has_undefined_bit(&need_to_shift)) {fprintf(stderr, "Error: variable need_to_shift has undefined value (%s) at test point.\n", to_string(&need_to_shift));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_shift)){bit_vector_cast_to_bit_vector(1, &(MUX_11786), &(exp_base_1));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_11786), &(exp_base_0));\
}if (has_undefined_bit(&one_found)) {fprintf(stderr, "Error: variable one_found has undefined value (%s) at test point.\n", to_string(&one_found));assert(0);} \
if(bit_vector_to_uint64(0, &one_found)){bit_vector_bitcast_to_bit_vector( &(type_cast_11789), &(left_shift_amount));\
bit_vector_cast_to_bit_vector(1, &(MUX_11791), &(type_cast_11789));\
}else {bit_vector_clear(&konst_11790);\
bit_vector_cast_to_bit_vector(1, &(MUX_11791), &(konst_11790));\
}bit_vector_minus( &(MUX_11786), &(MUX_11791), &(SUB_i13_i13_11792));\
bit_vector_cast_to_bit_vector(1, &(exponent_correction), &(SUB_i13_i13_11792));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11798_c_macro_ __declare_static_bit_vector(ADD_i13_i13_11797,13);\
bit_vector_plus( &(exponent_post_align), &(exponent_correction), &(ADD_i13_i13_11797));\
bit_vector_cast_to_bit_vector(1, &(final_exponent_without_bias), &(ADD_i13_i13_11797));\
;

#define fpunit_exec_exec__fpadd32_op_stmt_11802_c_macro_ uint32_t fpunit_exec_exec__fpadd32_op_stmt_11802_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd32_op_stmt_11802_c_macro___print_counter,"fpadd32_op_final_exponent_without_bias");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11802_c_macro___print_counter,"exponent_post_align");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exponent_post_align)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11802_c_macro___print_counter,"exponent_correction");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exponent_correction)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11802_c_macro___print_counter,"final_exponent_without_bias");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(final_exponent_without_bias)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11807_c_macro_ __declare_static_bit_vector(konst_11805,13);\
bit_vector_clear(&konst_11805);\
konst_11805.val.byte_array[0] = 127;\
__declare_static_bit_vector(SGT_i13_u1_11806,1);\
bit_vector_clear(&konst_11805);\
konst_11805.val.byte_array[0] = 127;\
bit_vector_greater(1, &(final_exponent_without_bias), &(konst_11805), &(SGT_i13_u1_11806));\
bit_vector_cast_to_bit_vector(0, &(SP_exp_overflow), &(SGT_i13_u1_11806));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11812_c_macro_ __declare_static_bit_vector(konst_11810,13);\
bit_vector_clear(&konst_11810);\
konst_11810.val.byte_array[0] = 130;\
konst_11810.val.byte_array[1] = 255;\
__declare_static_bit_vector(SLT_i13_u1_11811,1);\
bit_vector_clear(&konst_11810);\
konst_11810.val.byte_array[0] = 130;\
konst_11810.val.byte_array[1] = 255;\
bit_vector_less(1, &(final_exponent_without_bias), &(konst_11810), &(SLT_i13_u1_11811));\
bit_vector_cast_to_bit_vector(0, &(SP_exp_underflow), &(SLT_i13_u1_11811));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11818_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11816,1);\
__declare_static_bit_vector(AND_u1_u1_11817,1);\
bit_vector_not( &(add_result_zero), &(NOT_u1_u1_11816));\
bit_vector_and(&(SP_exp_underflow), &(NOT_u1_u1_11816), &(AND_u1_u1_11817));\
bit_vector_cast_to_bit_vector(0, &(underflow_SP), &(AND_u1_u1_11817));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11824_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11822,1);\
__declare_static_bit_vector(AND_u1_u1_11823,1);\
bit_vector_not( &(add_result_zero), &(NOT_u1_u1_11822));\
bit_vector_and(&(SP_exp_overflow), &(NOT_u1_u1_11822), &(AND_u1_u1_11823));\
bit_vector_cast_to_bit_vector(0, &(overflow_SP), &(AND_u1_u1_11823));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11827_c_macro_ bit_vector_cast_to_bit_vector(0, &(overflow), &(overflow_SP));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11840_c_macro_ __declare_static_bit_vector(OR_u1_u1_11831,1);\
__declare_static_bit_vector(AND_u1_u1_11834,1);\
__declare_static_bit_vector(AND_u1_u1_11837,1);\
__declare_static_bit_vector(OR_u1_u1_11838,1);\
__declare_static_bit_vector(OR_u1_u1_11839,1);\
bit_vector_or(&(f1_nan), &(f2_nan), &(OR_u1_u1_11831));\
bit_vector_and(&(f1_pos_inf), &(f2_neg_inf), &(AND_u1_u1_11834));\
bit_vector_and(&(f1_neg_inf), &(f2_pos_inf), &(AND_u1_u1_11837));\
bit_vector_or(&(AND_u1_u1_11834), &(AND_u1_u1_11837), &(OR_u1_u1_11838));\
bit_vector_or(&(OR_u1_u1_11831), &(OR_u1_u1_11838), &(OR_u1_u1_11839));\
bit_vector_cast_to_bit_vector(0, &(condition_nan), &(OR_u1_u1_11839));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11851_c_macro_ __declare_static_bit_vector(AND_u1_u1_11844,1);\
__declare_static_bit_vector(AND_u1_u1_11847,1);\
__declare_static_bit_vector(OR_u1_u1_11848,1);\
__declare_static_bit_vector(OR_u1_u1_11850,1);\
bit_vector_and(&(f1_pos_inf), &(f2_pos_inf), &(AND_u1_u1_11844));\
bit_vector_and(&(f1_neg_inf), &(f2_neg_inf), &(AND_u1_u1_11847));\
bit_vector_or(&(AND_u1_u1_11844), &(AND_u1_u1_11847), &(OR_u1_u1_11848));\
bit_vector_or(&(OR_u1_u1_11848), &(overflow), &(OR_u1_u1_11850));\
bit_vector_cast_to_bit_vector(0, &(condition_inf), &(OR_u1_u1_11850));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11858_c_macro_ __declare_static_bit_vector(AND_u1_u1_11855,1);\
__declare_static_bit_vector(OR_u1_u1_11857,1);\
bit_vector_and(&(f1_zero), &(f2_zero), &(AND_u1_u1_11855));\
bit_vector_or(&(AND_u1_u1_11855), &(add_result_zero), &(OR_u1_u1_11857));\
bit_vector_cast_to_bit_vector(0, &(condition_zero), &(OR_u1_u1_11857));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11864_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11861,1);\
__declare_static_bit_vector(AND_u1_u1_11863,1);\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_11861));\
bit_vector_and(&(NOT_u1_u1_11861), &(underflow_SP), &(AND_u1_u1_11863));\
bit_vector_cast_to_bit_vector(0, &(underflow), &(AND_u1_u1_11863));\
;

#define fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro_ uint32_t fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro___print_counter,"fpadd32_op_final_exceptions");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro___print_counter,"SP_exp_overflow");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(SP_exp_overflow)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro___print_counter,"SP_exp_underflow");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(SP_exp_underflow)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro___print_counter,"underflow_SP");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(underflow_SP)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro___print_counter,"overflow_SP");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(overflow_SP)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro___print_counter,"condition_nan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(condition_nan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro___print_counter,"condition_inf");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(condition_inf)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_11872_c_macro___print_counter,"condition_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(condition_zero)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11888_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11875,1);\
__declare_static_bit_vector(NOT_u1_u1_11877,1);\
__declare_static_bit_vector(AND_u1_u1_11878,1);\
__declare_static_bit_vector(NOT_u1_u1_11880,1);\
__declare_static_bit_vector(AND_u1_u1_11881,1);\
__declare_static_bit_vector(NOT_u1_u1_11883,1);\
__declare_static_bit_vector(NOT_u1_u1_11885,1);\
__declare_static_bit_vector(AND_u1_u1_11886,1);\
__declare_static_bit_vector(AND_u1_u1_11887,1);\
bit_vector_not( &(overflow), &(NOT_u1_u1_11875));\
bit_vector_not( &(underflow), &(NOT_u1_u1_11877));\
bit_vector_and(&(NOT_u1_u1_11875), &(NOT_u1_u1_11877), &(AND_u1_u1_11878));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_11880));\
bit_vector_and(&(AND_u1_u1_11878), &(NOT_u1_u1_11880), &(AND_u1_u1_11881));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_11883));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_11885));\
bit_vector_and(&(NOT_u1_u1_11883), &(NOT_u1_u1_11885), &(AND_u1_u1_11886));\
bit_vector_and(&(AND_u1_u1_11881), &(AND_u1_u1_11886), &(AND_u1_u1_11887));\
bit_vector_cast_to_bit_vector(0, &(SP_nothing_to_be_done_condition_normal), &(AND_u1_u1_11887));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11902_c_macro_ __declare_static_bit_vector(OR_u1_u1_11892,1);\
__declare_static_bit_vector(NOT_u1_u1_11894,1);\
__declare_static_bit_vector(AND_u1_u1_11895,1);\
__declare_static_bit_vector(NOT_u1_u1_11897,1);\
__declare_static_bit_vector(NOT_u1_u1_11899,1);\
__declare_static_bit_vector(AND_u1_u1_11900,1);\
__declare_static_bit_vector(AND_u1_u1_11901,1);\
bit_vector_or(&(overflow), &(underflow), &(OR_u1_u1_11892));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_11894));\
bit_vector_and(&(OR_u1_u1_11892), &(NOT_u1_u1_11894), &(AND_u1_u1_11895));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_11897));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_11899));\
bit_vector_and(&(NOT_u1_u1_11897), &(NOT_u1_u1_11899), &(AND_u1_u1_11900));\
bit_vector_and(&(AND_u1_u1_11895), &(AND_u1_u1_11900), &(AND_u1_u1_11901));\
bit_vector_cast_to_bit_vector(0, &(SP_normalization_required), &(AND_u1_u1_11901));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11905_c_macro_ bit_vector_cast_to_bit_vector(0, &(normalization_required), &(SP_normalization_required));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11908_c_macro_ bit_vector_cast_to_bit_vector(0, &(nothing_to_be_done_condition_normal), &(SP_nothing_to_be_done_condition_normal));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11935_c_macro_ __declare_static_bit_vector(konst_11912,13);\
bit_vector_clear(&konst_11912);\
__declare_static_bit_vector(MUX_11913,13);\
__declare_static_bit_vector(konst_11916,13);\
bit_vector_clear(&konst_11916);\
__declare_static_bit_vector(MUX_11917,13);\
__declare_static_bit_vector(OR_i13_i13_11918,13);\
__declare_static_bit_vector(type_cast_11921,13);\
bit_vector_clear(&type_cast_11921);\
__declare_static_bit_vector(konst_11922,13);\
bit_vector_clear(&konst_11922);\
__declare_static_bit_vector(MUX_11923,13);\
__declare_static_bit_vector(OR_i13_i13_11924,13);\
__declare_static_bit_vector(konst_11927,13);\
bit_vector_clear(&konst_11927);\
__declare_static_bit_vector(MUX_11928,13);\
__declare_static_bit_vector(konst_11931,13);\
bit_vector_clear(&konst_11931);\
__declare_static_bit_vector(MUX_11932,13);\
__declare_static_bit_vector(OR_i13_i13_11933,13);\
__declare_static_bit_vector(OR_i13_i13_11934,13);\
if (has_undefined_bit(&condition_nan)) {fprintf(stderr, "Error: variable condition_nan has undefined value (%s) at test point.\n", to_string(&condition_nan));assert(0);} \
if(bit_vector_to_uint64(0, &condition_nan)){bit_vector_cast_to_bit_vector(1, &(MUX_11913), &(ALL_ONE_13));\
}else {bit_vector_clear(&konst_11912);\
bit_vector_cast_to_bit_vector(1, &(MUX_11913), &(konst_11912));\
}if (has_undefined_bit(&condition_inf)) {fprintf(stderr, "Error: variable condition_inf has undefined value (%s) at test point.\n", to_string(&condition_inf));assert(0);} \
if(bit_vector_to_uint64(0, &condition_inf)){bit_vector_cast_to_bit_vector(1, &(MUX_11917), &(ALL_ONE_13));\
}else {bit_vector_clear(&konst_11916);\
bit_vector_cast_to_bit_vector(1, &(MUX_11917), &(konst_11916));\
}bit_vector_or(&(MUX_11913), &(MUX_11917), &(OR_i13_i13_11918));\
if (has_undefined_bit(&condition_zero)) {fprintf(stderr, "Error: variable condition_zero has undefined value (%s) at test point.\n", to_string(&condition_zero));assert(0);} \
if(bit_vector_to_uint64(0, &condition_zero)){bit_vector_bitcast_to_bit_vector( &(type_cast_11921), &(ZERO_13));\
bit_vector_cast_to_bit_vector(1, &(MUX_11923), &(type_cast_11921));\
}else {bit_vector_clear(&konst_11922);\
bit_vector_cast_to_bit_vector(1, &(MUX_11923), &(konst_11922));\
}bit_vector_or(&(OR_i13_i13_11918), &(MUX_11923), &(OR_i13_i13_11924));\
if (has_undefined_bit(&nothing_to_be_done_condition_normal)) {fprintf(stderr, "Error: variable nothing_to_be_done_condition_normal has undefined value (%s) at test point.\n", to_string(&nothing_to_be_done_condition_normal));assert(0);} \
if(bit_vector_to_uint64(0, &nothing_to_be_done_condition_normal)){bit_vector_cast_to_bit_vector(1, &(MUX_11928), &(final_exponent_without_bias));\
}else {bit_vector_clear(&konst_11927);\
bit_vector_cast_to_bit_vector(1, &(MUX_11928), &(konst_11927));\
}if (has_undefined_bit(&normalization_required)) {fprintf(stderr, "Error: variable normalization_required has undefined value (%s) at test point.\n", to_string(&normalization_required));assert(0);} \
if(bit_vector_to_uint64(0, &normalization_required)){bit_vector_cast_to_bit_vector(1, &(MUX_11932), &(final_exponent_without_bias));\
}else {bit_vector_clear(&konst_11931);\
bit_vector_cast_to_bit_vector(1, &(MUX_11932), &(konst_11931));\
}bit_vector_or(&(MUX_11928), &(MUX_11932), &(OR_i13_i13_11933));\
bit_vector_or(&(OR_i13_i13_11924), &(OR_i13_i13_11933), &(OR_i13_i13_11934));\
bit_vector_cast_to_bit_vector(1, &(exponent_to_be_passed), &(OR_i13_i13_11934));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11957_c_macro_ __declare_static_bit_vector(CONCAT_u1_u62_11940,62);\
bit_vector_clear(&CONCAT_u1_u62_11940);\
CONCAT_u1_u62_11940.val.byte_array[7] = 32;\
__declare_static_bit_vector(konst_11941,62);\
bit_vector_clear(&konst_11941);\
__declare_static_bit_vector(MUX_11942,62);\
__declare_static_bit_vector(OR_u1_u1_11945,1);\
__declare_static_bit_vector(konst_11947,62);\
bit_vector_clear(&konst_11947);\
__declare_static_bit_vector(MUX_11948,62);\
__declare_static_bit_vector(OR_u62_u62_11949,62);\
__declare_static_bit_vector(OR_u1_u1_11952,1);\
__declare_static_bit_vector(konst_11954,62);\
bit_vector_clear(&konst_11954);\
__declare_static_bit_vector(MUX_11955,62);\
__declare_static_bit_vector(OR_u62_u62_11956,62);\
if (has_undefined_bit(&condition_nan)) {fprintf(stderr, "Error: variable condition_nan has undefined value (%s) at test point.\n", to_string(&condition_nan));assert(0);} \
if(bit_vector_to_uint64(0, &condition_nan)){bit_vector_concatenate( &(ONE_1), &(ZERO_61), &(CONCAT_u1_u62_11940));\
bit_vector_cast_to_bit_vector(0, &(MUX_11942), &(CONCAT_u1_u62_11940));\
}else {bit_vector_clear(&konst_11941);\
bit_vector_cast_to_bit_vector(0, &(MUX_11942), &(konst_11941));\
}bit_vector_or(&(condition_inf), &(condition_zero), &(OR_u1_u1_11945));\
if (has_undefined_bit(&OR_u1_u1_11945)) {fprintf(stderr, "Error: variable OR_u1_u1_11945 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_11945));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_11945)){bit_vector_cast_to_bit_vector(0, &(MUX_11948), &(ZERO_62));\
}else {bit_vector_clear(&konst_11947);\
bit_vector_cast_to_bit_vector(0, &(MUX_11948), &(konst_11947));\
}bit_vector_or(&(MUX_11942), &(MUX_11948), &(OR_u62_u62_11949));\
bit_vector_or(&(nothing_to_be_done_condition_normal), &(normalization_required), &(OR_u1_u1_11952));\
if (has_undefined_bit(&OR_u1_u1_11952)) {fprintf(stderr, "Error: variable OR_u1_u1_11952 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_11952));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_11952)){bit_vector_cast_to_bit_vector(0, &(MUX_11955), &(final_mantissa_62_aligned));\
}else {bit_vector_clear(&konst_11954);\
bit_vector_cast_to_bit_vector(0, &(MUX_11955), &(konst_11954));\
}bit_vector_or(&(OR_u62_u62_11949), &(MUX_11955), &(OR_u62_u62_11956));\
bit_vector_cast_to_bit_vector(0, &(mantissa_to_be_passed), &(OR_u62_u62_11956));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11961_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11960,1);\
bit_vector_not( &(exp_a_greater_than_exp_b), &(NOT_u1_u1_11960));\
bit_vector_cast_to_bit_vector(0, &(a_was_shifted), &(NOT_u1_u1_11960));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11964_c_macro_ bit_vector_cast_to_bit_vector(0, &(a_negative), &(need_to_take_twos_complement_a));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11967_c_macro_ bit_vector_cast_to_bit_vector(0, &(b_was_shifted), &(exp_a_greater_than_exp_b));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11970_c_macro_ bit_vector_cast_to_bit_vector(0, &(b_negative), &(need_to_take_twos_complement_b));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_11999_c_macro_ __declare_static_bit_vector(AND_u1_u1_11974,1);\
__declare_static_bit_vector(AND_u1_u1_11976,1);\
__declare_static_bit_vector(NOT_u1_u1_11979,1);\
__declare_static_bit_vector(AND_u1_u1_11980,1);\
__declare_static_bit_vector(NOT_u1_u1_11982,1);\
__declare_static_bit_vector(AND_u1_u1_11983,1);\
__declare_static_bit_vector(OR_u1_u1_11984,1);\
__declare_static_bit_vector(AND_u1_u1_11987,1);\
__declare_static_bit_vector(AND_u1_u1_11989,1);\
__declare_static_bit_vector(NOT_u1_u1_11992,1);\
__declare_static_bit_vector(AND_u1_u1_11993,1);\
__declare_static_bit_vector(NOT_u1_u1_11995,1);\
__declare_static_bit_vector(AND_u1_u1_11996,1);\
__declare_static_bit_vector(OR_u1_u1_11997,1);\
__declare_static_bit_vector(OR_u1_u1_11998,1);\
bit_vector_and(&(a_was_shifted), &(a_negative), &(AND_u1_u1_11974));\
bit_vector_and(&(AND_u1_u1_11974), &(b_negative), &(AND_u1_u1_11976));\
bit_vector_not( &(a_negative), &(NOT_u1_u1_11979));\
bit_vector_and(&(a_was_shifted), &(NOT_u1_u1_11979), &(AND_u1_u1_11980));\
bit_vector_not( &(b_negative), &(NOT_u1_u1_11982));\
bit_vector_and(&(AND_u1_u1_11980), &(NOT_u1_u1_11982), &(AND_u1_u1_11983));\
bit_vector_or(&(AND_u1_u1_11976), &(AND_u1_u1_11983), &(OR_u1_u1_11984));\
bit_vector_and(&(b_was_shifted), &(a_negative), &(AND_u1_u1_11987));\
bit_vector_and(&(AND_u1_u1_11987), &(b_negative), &(AND_u1_u1_11989));\
bit_vector_not( &(a_negative), &(NOT_u1_u1_11992));\
bit_vector_and(&(b_was_shifted), &(NOT_u1_u1_11992), &(AND_u1_u1_11993));\
bit_vector_not( &(b_negative), &(NOT_u1_u1_11995));\
bit_vector_and(&(AND_u1_u1_11993), &(NOT_u1_u1_11995), &(AND_u1_u1_11996));\
bit_vector_or(&(AND_u1_u1_11989), &(AND_u1_u1_11996), &(OR_u1_u1_11997));\
bit_vector_or(&(OR_u1_u1_11984), &(OR_u1_u1_11997), &(OR_u1_u1_11998));\
bit_vector_cast_to_bit_vector(0, &(condition_to_pass_sticky_bit), &(OR_u1_u1_11998));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_12013_c_macro_ __declare_static_bit_vector(AND_u1_u1_12003,1);\
__declare_static_bit_vector(NOT_u1_u1_12005,1);\
__declare_static_bit_vector(AND_u1_u1_12006,1);\
__declare_static_bit_vector(NOT_u1_u1_12008,1);\
__declare_static_bit_vector(NOT_u1_u1_12010,1);\
__declare_static_bit_vector(AND_u1_u1_12011,1);\
__declare_static_bit_vector(AND_u1_u1_12012,1);\
bit_vector_and(&(sticky_temp), &(condition_to_pass_sticky_bit), &(AND_u1_u1_12003));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_12005));\
bit_vector_and(&(AND_u1_u1_12003), &(NOT_u1_u1_12005), &(AND_u1_u1_12006));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_12008));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_12010));\
bit_vector_and(&(NOT_u1_u1_12008), &(NOT_u1_u1_12010), &(AND_u1_u1_12011));\
bit_vector_and(&(AND_u1_u1_12006), &(AND_u1_u1_12011), &(AND_u1_u1_12012));\
bit_vector_cast_to_bit_vector(0, &(sticky), &(AND_u1_u1_12012));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_12024_c_macro_ __declare_static_bit_vector(AND_u1_u1_12018,1);\
__declare_static_bit_vector(AND_u1_u1_12021,1);\
__declare_static_bit_vector(OR_u1_u1_12022,1);\
__declare_static_bit_vector(AND_u1_u1_12023,1);\
bit_vector_and(&(a_was_shifted), &(a_negative), &(AND_u1_u1_12018));\
bit_vector_and(&(b_was_shifted), &(b_negative), &(AND_u1_u1_12021));\
bit_vector_or(&(AND_u1_u1_12018), &(AND_u1_u1_12021), &(OR_u1_u1_12022));\
bit_vector_and(&(sticky_temp), &(OR_u1_u1_12022), &(AND_u1_u1_12023));\
bit_vector_cast_to_bit_vector(0, &(apply_sticky_correction), &(AND_u1_u1_12023));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_12036_c_macro_ __declare_static_bit_vector(NOT_u1_u1_12028,1);\
__declare_static_bit_vector(AND_u1_u1_12029,1);\
__declare_static_bit_vector(NOT_u1_u1_12031,1);\
__declare_static_bit_vector(NOT_u1_u1_12033,1);\
__declare_static_bit_vector(AND_u1_u1_12034,1);\
__declare_static_bit_vector(AND_u1_u1_12035,1);\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_12028));\
bit_vector_and(&(normalization_required), &(NOT_u1_u1_12028), &(AND_u1_u1_12029));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_12031));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_12033));\
bit_vector_and(&(NOT_u1_u1_12031), &(NOT_u1_u1_12033), &(AND_u1_u1_12034));\
bit_vector_and(&(AND_u1_u1_12029), &(AND_u1_u1_12034), &(AND_u1_u1_12035));\
bit_vector_cast_to_bit_vector(0, &(needs_norm), &(AND_u1_u1_12035));\
;

#define fpunit_exec_exec__fpadd32_op_assign_stmt_12054_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_12040,2);\
__declare_static_bit_vector(CONCAT_u1_u2_12043,2);\
__declare_static_bit_vector(CONCAT_u2_u4_12044,4);\
__declare_static_bit_vector(CONCAT_u1_u2_12047,2);\
__declare_static_bit_vector(type_cast_12049,13);\
__declare_static_bit_vector(CONCAT_u13_u75_12051,75);\
__declare_static_bit_vector(CONCAT_u2_u77_12052,77);\
__declare_static_bit_vector(CONCAT_u4_u81_12053,81);\
bit_vector_concatenate( &(sticky), &(apply_sticky_correction), &(CONCAT_u1_u2_12040));\
bit_vector_concatenate( &(sign_result), &(condition_nan), &(CONCAT_u1_u2_12043));\
bit_vector_concatenate( &(CONCAT_u1_u2_12040), &(CONCAT_u1_u2_12043), &(CONCAT_u2_u4_12044));\
bit_vector_concatenate( &(condition_inf), &(condition_zero), &(CONCAT_u1_u2_12047));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12049), &(exponent_to_be_passed));\
bit_vector_concatenate( &(type_cast_12049), &(mantissa_to_be_passed), &(CONCAT_u13_u75_12051));\
bit_vector_concatenate( &(CONCAT_u1_u2_12047), &(CONCAT_u13_u75_12051), &(CONCAT_u2_u77_12052));\
bit_vector_concatenate( &(CONCAT_u2_u4_12044), &(CONCAT_u2_u77_12052), &(CONCAT_u4_u81_12053));\
bit_vector_cast_to_bit_vector(0, &(extn_result), &(CONCAT_u4_u81_12053));\
;

#define fpunit_exec_exec__fpadd32_op_stmt_12057_c_macro_ uint32_t fpunit_exec_exec__fpadd32_op_stmt_12057_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd32_op_stmt_12057_c_macro___print_counter,"fpadd32_op_final_results");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_12057_c_macro___print_counter,"exponent_to_be_passed");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exponent_to_be_passed)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd32_op_stmt_12057_c_macro___print_counter,"mantissa_to_be_passed");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_to_be_passed)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd32_op_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pneeds_norm)), &(needs_norm));\
bit_vector_cast_to_bit_vector(0, &((*__pextn_result)), &(extn_result));\
;

#define fpunit_exec_exec__fpadd32_wrap_inner_inarg_prep_macro__ static float X;\
X = (*__pX);\
static float Y;\
Y = (*__pY);\
static float RESULT;\
__declare_static_bit_vector(xpn,1);\
__declare_static_bit_vector(xnn,1);\
__declare_static_bit_vector(xpd,1);\
__declare_static_bit_vector(xnd,1);\
__declare_static_bit_vector(xqnan,1);\
__declare_static_bit_vector(xsnan,1);\
__declare_static_bit_vector(xpi,1);\
__declare_static_bit_vector(xni,1);\
__declare_static_bit_vector(xpz,1);\
__declare_static_bit_vector(xnz,1);\
__declare_static_bit_vector(x_class,10);\
__declare_static_bit_vector(ypn,1);\
__declare_static_bit_vector(ynn,1);\
__declare_static_bit_vector(ypd,1);\
__declare_static_bit_vector(ynd,1);\
__declare_static_bit_vector(yqnan,1);\
__declare_static_bit_vector(ysnan,1);\
__declare_static_bit_vector(ypi,1);\
__declare_static_bit_vector(yni,1);\
__declare_static_bit_vector(ypz,1);\
__declare_static_bit_vector(ynz,1);\
__declare_static_bit_vector(y_class,10);\
__declare_static_bit_vector(denormalize_flag_add,1);\
__declare_static_bit_vector(extn_result_add,81);\
__declare_static_bit_vector(adds_result_fast,32);\
__declare_static_bit_vector(adds_result_slow,32);\

#define fpunit_exec_exec__fpadd32_wrap_call_stmt_18527_c_macro_ _fpunit_exec_exec_classFp32_( &(X), &(xpn), &(xnn), &(xpd), &(xnd), &(xqnan), &(xsnan), &(xpi), &(xni), &(xpz), &(xnz));\
;

#define fpunit_exec_exec__fpadd32_wrap_assign_stmt_18548_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18531,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18533,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18536,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18537,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18540,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18542,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18545,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18546,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18547,10);\
bit_vector_concatenate( &(xpn), &(xnn), &(CONCAT_u1_u2_18531));\
bit_vector_concatenate( &(CONCAT_u1_u2_18531), &(xpd), &(CONCAT_u2_u3_18533));\
bit_vector_concatenate( &(xnd), &(xqnan), &(CONCAT_u1_u2_18536));\
bit_vector_concatenate( &(CONCAT_u2_u3_18533), &(CONCAT_u1_u2_18536), &(CONCAT_u3_u5_18537));\
bit_vector_concatenate( &(xsnan), &(xpi), &(CONCAT_u1_u2_18540));\
bit_vector_concatenate( &(CONCAT_u1_u2_18540), &(xni), &(CONCAT_u2_u3_18542));\
bit_vector_concatenate( &(xpz), &(xnz), &(CONCAT_u1_u2_18545));\
bit_vector_concatenate( &(CONCAT_u2_u3_18542), &(CONCAT_u1_u2_18545), &(CONCAT_u3_u5_18546));\
bit_vector_concatenate( &(CONCAT_u3_u5_18537), &(CONCAT_u3_u5_18546), &(CONCAT_u5_u10_18547));\
bit_vector_cast_to_bit_vector(0, &(x_class), &(CONCAT_u5_u10_18547));\
;

#define fpunit_exec_exec__fpadd32_wrap_call_stmt_18560_c_macro_ _fpunit_exec_exec_classFp32_( &(Y), &(ypn), &(ynn), &(ypd), &(ynd), &(yqnan), &(ysnan), &(ypi), &(yni), &(ypz), &(ynz));\
;

#define fpunit_exec_exec__fpadd32_wrap_assign_stmt_18581_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18564,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18566,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18569,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18570,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18573,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18575,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18578,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18579,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18580,10);\
bit_vector_concatenate( &(ypn), &(ynn), &(CONCAT_u1_u2_18564));\
bit_vector_concatenate( &(CONCAT_u1_u2_18564), &(ypd), &(CONCAT_u2_u3_18566));\
bit_vector_concatenate( &(ynd), &(yqnan), &(CONCAT_u1_u2_18569));\
bit_vector_concatenate( &(CONCAT_u2_u3_18566), &(CONCAT_u1_u2_18569), &(CONCAT_u3_u5_18570));\
bit_vector_concatenate( &(ysnan), &(ypi), &(CONCAT_u1_u2_18573));\
bit_vector_concatenate( &(CONCAT_u1_u2_18573), &(yni), &(CONCAT_u2_u3_18575));\
bit_vector_concatenate( &(ypz), &(ynz), &(CONCAT_u1_u2_18578));\
bit_vector_concatenate( &(CONCAT_u2_u3_18575), &(CONCAT_u1_u2_18578), &(CONCAT_u3_u5_18579));\
bit_vector_concatenate( &(CONCAT_u3_u5_18570), &(CONCAT_u3_u5_18579), &(CONCAT_u5_u10_18580));\
bit_vector_cast_to_bit_vector(0, &(y_class), &(CONCAT_u5_u10_18580));\
;

#define fpunit_exec_exec__fpadd32_wrap_call_stmt_18596_c_macro_ __declare_static_bit_vector(type_cast_18585,32);\
__declare_static_bit_vector(type_cast_18588,32);\
__declare_static_bit_vector(konst_18590,64);\
bit_vector_clear(&konst_18590);\
__declare_static_bit_vector(konst_18591,10);\
bit_vector_clear(&konst_18591);\
__declare_static_bit_vector(konst_18592,64);\
bit_vector_clear(&konst_18592);\
__declare_static_bit_vector(konst_18593,10);\
bit_vector_clear(&konst_18593);\
float_bitcast_to_bit_vector( &(type_cast_18585), &(X));\
float_bitcast_to_bit_vector( &(type_cast_18588), &(Y));\
bit_vector_clear(&konst_18590);\
bit_vector_clear(&konst_18591);\
bit_vector_clear(&konst_18592);\
bit_vector_clear(&konst_18593);\
_fpunit_exec_exec_fpadd64_op_( &(ONE_1),  &(ZERO_1),  &(type_cast_18585),  &(x_class),  &(type_cast_18588),  &(y_class),  &(konst_18590),  &(konst_18591),  &(konst_18592),  &(konst_18593), &(denormalize_flag_add), &(extn_result_add));\
;

#define fpunit_exec_exec__fpadd32_wrap_call_stmt_18599_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_result_add), &(adds_result_fast));\
;

#define fpunit_exec_exec__fpadd32_wrap_call_stmt_18603_c_macro_ if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_add)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_result_add), &(adds_result_slow));\
}\
;

#define fpunit_exec_exec__fpadd32_wrap_assign_stmt_18610_c_macro_ __declare_static_bit_vector(MUX_18608,32);\
static float type_cast_18609;\
if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_add)){bit_vector_cast_to_bit_vector(0, &(MUX_18608), &(adds_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_18608), &(adds_result_fast));\
}bit_vector_bitcast_to_float( &(type_cast_18609),  &(MUX_18608));\
RESULT = type_cast_18609;\
;

#define fpunit_exec_exec__fpadd32_wrap_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fpadd32_wrap_outer_arg_decl_macro__ float __X = X;\
float __Y = Y;\
;

#define fpunit_exec_exec__fpadd32_wrap_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fpadd32_wrap_new_inner_inarg_prep_macro__ static float X;\
X = (*__pX);\
static float Y;\
Y = (*__pY);\
static float RESULT;\
__declare_static_bit_vector(xpn,1);\
__declare_static_bit_vector(xnn,1);\
__declare_static_bit_vector(xpd,1);\
__declare_static_bit_vector(xnd,1);\
__declare_static_bit_vector(xqnan,1);\
__declare_static_bit_vector(xsnan,1);\
__declare_static_bit_vector(xpi,1);\
__declare_static_bit_vector(xni,1);\
__declare_static_bit_vector(xpz,1);\
__declare_static_bit_vector(xnz,1);\
__declare_static_bit_vector(x_class,10);\
__declare_static_bit_vector(ypn,1);\
__declare_static_bit_vector(ynn,1);\
__declare_static_bit_vector(ypd,1);\
__declare_static_bit_vector(ynd,1);\
__declare_static_bit_vector(yqnan,1);\
__declare_static_bit_vector(ysnan,1);\
__declare_static_bit_vector(ypi,1);\
__declare_static_bit_vector(yni,1);\
__declare_static_bit_vector(ypz,1);\
__declare_static_bit_vector(ynz,1);\
__declare_static_bit_vector(y_class,10);\
__declare_static_bit_vector(denormalize_flag_add,1);\
__declare_static_bit_vector(extn_result_add,81);\
__declare_static_bit_vector(adds_result_fast,32);\
__declare_static_bit_vector(adds_result_slow,32);\

#define fpunit_exec_exec__fpadd32_wrap_new_call_stmt_18627_c_macro_ _fpunit_exec_exec_classFp32_( &(X), &(xpn), &(xnn), &(xpd), &(xnd), &(xqnan), &(xsnan), &(xpi), &(xni), &(xpz), &(xnz));\
;

#define fpunit_exec_exec__fpadd32_wrap_new_assign_stmt_18648_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18631,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18633,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18636,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18637,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18640,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18642,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18645,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18646,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18647,10);\
bit_vector_concatenate( &(xpn), &(xnn), &(CONCAT_u1_u2_18631));\
bit_vector_concatenate( &(CONCAT_u1_u2_18631), &(xpd), &(CONCAT_u2_u3_18633));\
bit_vector_concatenate( &(xnd), &(xqnan), &(CONCAT_u1_u2_18636));\
bit_vector_concatenate( &(CONCAT_u2_u3_18633), &(CONCAT_u1_u2_18636), &(CONCAT_u3_u5_18637));\
bit_vector_concatenate( &(xsnan), &(xpi), &(CONCAT_u1_u2_18640));\
bit_vector_concatenate( &(CONCAT_u1_u2_18640), &(xni), &(CONCAT_u2_u3_18642));\
bit_vector_concatenate( &(xpz), &(xnz), &(CONCAT_u1_u2_18645));\
bit_vector_concatenate( &(CONCAT_u2_u3_18642), &(CONCAT_u1_u2_18645), &(CONCAT_u3_u5_18646));\
bit_vector_concatenate( &(CONCAT_u3_u5_18637), &(CONCAT_u3_u5_18646), &(CONCAT_u5_u10_18647));\
bit_vector_cast_to_bit_vector(0, &(x_class), &(CONCAT_u5_u10_18647));\
;

#define fpunit_exec_exec__fpadd32_wrap_new_call_stmt_18660_c_macro_ _fpunit_exec_exec_classFp32_( &(Y), &(ypn), &(ynn), &(ypd), &(ynd), &(yqnan), &(ysnan), &(ypi), &(yni), &(ypz), &(ynz));\
;

#define fpunit_exec_exec__fpadd32_wrap_new_assign_stmt_18681_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18664,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18666,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18669,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18670,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18673,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18675,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18678,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18679,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18680,10);\
bit_vector_concatenate( &(ypn), &(ynn), &(CONCAT_u1_u2_18664));\
bit_vector_concatenate( &(CONCAT_u1_u2_18664), &(ypd), &(CONCAT_u2_u3_18666));\
bit_vector_concatenate( &(ynd), &(yqnan), &(CONCAT_u1_u2_18669));\
bit_vector_concatenate( &(CONCAT_u2_u3_18666), &(CONCAT_u1_u2_18669), &(CONCAT_u3_u5_18670));\
bit_vector_concatenate( &(ysnan), &(ypi), &(CONCAT_u1_u2_18673));\
bit_vector_concatenate( &(CONCAT_u1_u2_18673), &(yni), &(CONCAT_u2_u3_18675));\
bit_vector_concatenate( &(ypz), &(ynz), &(CONCAT_u1_u2_18678));\
bit_vector_concatenate( &(CONCAT_u2_u3_18675), &(CONCAT_u1_u2_18678), &(CONCAT_u3_u5_18679));\
bit_vector_concatenate( &(CONCAT_u3_u5_18670), &(CONCAT_u3_u5_18679), &(CONCAT_u5_u10_18680));\
bit_vector_cast_to_bit_vector(0, &(y_class), &(CONCAT_u5_u10_18680));\
;

#define fpunit_exec_exec__fpadd32_wrap_new_call_stmt_18690_c_macro_ __declare_static_bit_vector(type_cast_18683,32);\
__declare_static_bit_vector(type_cast_18686,32);\
float_bitcast_to_bit_vector( &(type_cast_18683), &(X));\
float_bitcast_to_bit_vector( &(type_cast_18686), &(Y));\
_fpunit_exec_exec_fpadd32_op_( &(type_cast_18683),  &(x_class),  &(type_cast_18686),  &(y_class), &(denormalize_flag_add), &(extn_result_add));\
;

#define fpunit_exec_exec__fpadd32_wrap_new_call_stmt_18693_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_result_add), &(adds_result_fast));\
;

#define fpunit_exec_exec__fpadd32_wrap_new_call_stmt_18697_c_macro_ if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_add)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_result_add), &(adds_result_slow));\
}\
;

#define fpunit_exec_exec__fpadd32_wrap_new_assign_stmt_18704_c_macro_ __declare_static_bit_vector(MUX_18702,32);\
static float type_cast_18703;\
if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_add)){bit_vector_cast_to_bit_vector(0, &(MUX_18702), &(adds_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_18702), &(adds_result_fast));\
}bit_vector_bitcast_to_float( &(type_cast_18703),  &(MUX_18702));\
RESULT = type_cast_18703;\
;

#define fpunit_exec_exec__fpadd32_wrap_new_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fpadd32_wrap_new_outer_arg_decl_macro__ float __X = X;\
float __Y = Y;\
;

#define fpunit_exec_exec__fpadd32_wrap_new_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fpadd64_op_inner_inarg_prep_macro__ __declare_static_bit_vector(use_single_precision_inputs,1);\
bit_vector_cast_to_bit_vector(0, &(use_single_precision_inputs), &((*__puse_single_precision_inputs)));\
__declare_static_bit_vector(double_precision_outputs,1);\
bit_vector_cast_to_bit_vector(0, &(double_precision_outputs), &((*__pdouble_precision_outputs)));\
__declare_static_bit_vector(uf1_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &((*__puf1_s)));\
__declare_static_bit_vector(f1_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_s_class), &((*__pf1_s_class)));\
__declare_static_bit_vector(uf2_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf2_s), &((*__puf2_s)));\
__declare_static_bit_vector(f2_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f2_s_class), &((*__pf2_s_class)));\
__declare_static_bit_vector(uf1_d_i,64);\
bit_vector_cast_to_bit_vector(0, &(uf1_d_i), &((*__puf1_d_i)));\
__declare_static_bit_vector(f1_d_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_d_class), &((*__pf1_d_class)));\
__declare_static_bit_vector(uf2_d_i,64);\
bit_vector_cast_to_bit_vector(0, &(uf2_d_i), &((*__puf2_d_i)));\
__declare_static_bit_vector(f2_d_class,10);\
bit_vector_cast_to_bit_vector(0, &(f2_d_class), &((*__pf2_d_class)));\
__declare_static_bit_vector(needs_norm,1);\
__declare_static_bit_vector(extn_result,81);\
__declare_static_bit_vector(uf1_s_efp,67);\
__declare_static_bit_vector(uf2_s_efp,67);\
__declare_static_bit_vector(uf1_d_i_efp,67);\
__declare_static_bit_vector(uf2_d_i_efp,67);\
__declare_static_bit_vector(uf1_d_efp,67);\
__declare_static_bit_vector(uf2_d_efp,67);\
__declare_static_bit_vector(sign_uf1_d,1);\
__declare_static_bit_vector(f1_exp13_unbiased,13);\
__declare_static_bit_vector(f1_top_bit,1);\
__declare_static_bit_vector(f1_fraction,52);\
__declare_static_bit_vector(sign_uf2_d,1);\
__declare_static_bit_vector(f2_exp13_unbiased,13);\
__declare_static_bit_vector(f2_top_bit,1);\
__declare_static_bit_vector(f2_fraction,52);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_pos_inf,1);\
__declare_static_bit_vector(f1_neg_inf,1);\
__declare_static_bit_vector(f2_zero,1);\
__declare_static_bit_vector(f2_normal,1);\
__declare_static_bit_vector(f2_denormal,1);\
__declare_static_bit_vector(f2_nan,1);\
__declare_static_bit_vector(f2_inf,1);\
__declare_static_bit_vector(f2_pos_inf,1);\
__declare_static_bit_vector(f2_neg_inf,1);\
__declare_static_bit_vector(f1_frac,53);\
__declare_static_bit_vector(f2_frac,53);\
__declare_static_bit_vector(exp_a,13);\
__declare_static_bit_vector(exp_b,13);\
__declare_static_bit_vector(exp_a_greater_than_exp_b_d,1);\
__declare_static_bit_vector(exp_a_equal_exp_b_d,1);\
__declare_static_bit_vector(exp_ab_d,13);\
__declare_static_bit_vector(exp_a_greater_than_exp_b_s,1);\
__declare_static_bit_vector(exp_a_equal_exp_b_s,1);\
__declare_static_bit_vector(exp_ab_s,13);\
__declare_static_bit_vector(exp_ab,13);\
__declare_static_bit_vector(exp_a_greater_than_exp_b,1);\
__declare_static_bit_vector(exp_a_equal_exp_b,1);\
__declare_static_bit_vector(mantissa_a_pre_shift,64);\
__declare_static_bit_vector(mantissa_b_pre_shift,64);\
__declare_static_bit_vector(to_be_shifted,64);\
__declare_static_bit_vector(exp_ab_7,7);\
__declare_static_bit_vector(shifted_output,64);\
__declare_static_bit_vector(sticky_temp,1);\
__declare_static_bit_vector(mantissa_a_pre_shift_d,64);\
__declare_static_bit_vector(mantissa_b_pre_shift_d,64);\
__declare_static_bit_vector(mantissa_a_post_shift,64);\
__declare_static_bit_vector(mantissa_b_post_shift,64);\
__declare_static_bit_vector(exponent_post_align,13);\
__declare_static_bit_vector(G,1);\
__declare_static_bit_vector(E,1);\
__declare_static_bit_vector(a_frac_ge_b_frac,1);\
__declare_static_bit_vector(a_frac_gt_b_frac,1);\
__declare_static_bit_vector(need_to_take_twos_complement_a,1);\
__declare_static_bit_vector(need_to_take_twos_complement_b,1);\
__declare_static_bit_vector(a_was_shifted,1);\
__declare_static_bit_vector(a_negative,1);\
__declare_static_bit_vector(b_was_shifted,1);\
__declare_static_bit_vector(b_negative,1);\
__declare_static_bit_vector(apply_sticky_correction,1);\
__declare_static_bit_vector(carry_in,1);\
__declare_static_bit_vector(mantissa_operand_a,64);\
__declare_static_bit_vector(mantissa_operand_b,64);\
__declare_static_bit_vector(mantissa_added,64);\
__declare_static_bit_vector(carry_out,1);\
__declare_static_bit_vector(sign_result,1);\
__declare_static_bit_vector(mantissa_out,64);\
__declare_static_bit_vector(need_to_shift,1);\
__declare_static_bit_vector(mantissa_out_shifted,63);\
__declare_static_bit_vector(mantissa_64_bits,64);\
__declare_static_bit_vector(position_of_one,6);\
__declare_static_bit_vector(one_found,1);\
__declare_static_bit_vector(left_shift_amount,6);\
__declare_static_bit_vector(add_result_zero,1);\
__declare_static_bit_vector(final_mantissa_aligned,64);\
__declare_static_bit_vector(final_mantissa_62_aligned,62);\
__declare_static_bit_vector(exponent_correction,13);\
__declare_static_bit_vector(final_exponent_without_bias,13);\
__declare_static_bit_vector(DP_exp_overflow,1);\
__declare_static_bit_vector(DP_exp_underflow,1);\
__declare_static_bit_vector(SP_exp_overflow,1);\
__declare_static_bit_vector(SP_exp_underflow,1);\
__declare_static_bit_vector(underflow_SP,1);\
__declare_static_bit_vector(underflow_DP,1);\
__declare_static_bit_vector(overflow_SP,1);\
__declare_static_bit_vector(overflow_DP,1);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(condition_nan,1);\
__declare_static_bit_vector(condition_inf,1);\
__declare_static_bit_vector(condition_zero,1);\
__declare_static_bit_vector(underflow,1);\
__declare_static_bit_vector(SP_nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(SP_normalization_required,1);\
__declare_static_bit_vector(DP_nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(DP_normalization_required,1);\
__declare_static_bit_vector(normalization_required,1);\
__declare_static_bit_vector(nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(exponent_to_be_passed,13);\
__declare_static_bit_vector(mantissa_to_be_passed,62);\
__declare_static_bit_vector(condition_to_pass_sticky_bit,1);\
__declare_static_bit_vector(sticky,1);\

#define fpunit_exec_exec__fpadd64_op_call_stmt_10469_c_macro_ _fpunit_exec_exec_SingleToExtendedFp_( &(uf1_s),  &(f1_s_class), &(uf1_s_efp));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10473_c_macro_ _fpunit_exec_exec_SingleToExtendedFp_( &(uf2_s),  &(f2_s_class), &(uf2_s_efp));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10477_c_macro_ _fpunit_exec_exec_DoubleToExtendedFp_( &(uf1_d_i),  &(f1_d_class), &(uf1_d_i_efp));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10481_c_macro_ _fpunit_exec_exec_DoubleToExtendedFp_( &(uf2_d_i),  &(f2_d_class), &(uf2_d_i_efp));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10487_c_macro_ __declare_static_bit_vector(MUX_10486,67);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(0, &(MUX_10486), &(uf1_s_efp));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10486), &(uf1_d_i_efp));\
}bit_vector_cast_to_bit_vector(0, &(uf1_d_efp), &(MUX_10486));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10493_c_macro_ __declare_static_bit_vector(MUX_10492,67);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(0, &(MUX_10492), &(uf2_s_efp));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10492), &(uf2_d_i_efp));\
}bit_vector_cast_to_bit_vector(0, &(uf2_d_efp), &(MUX_10492));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10497_c_macro_ __declare_static_bit_vector(slice_10496,1);\
bit_vector_slice(&(uf1_d_efp), &(slice_10496), 66);\
bit_vector_cast_to_bit_vector(0, &(sign_uf1_d), &(slice_10496));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10501_c_macro_ __declare_static_bit_vector(slice_10500,13);\
bit_vector_slice(&(uf1_d_efp), &(slice_10500), 53);\
bit_vector_cast_to_bit_vector(0, &(f1_exp13_unbiased), &(slice_10500));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10505_c_macro_ __declare_static_bit_vector(slice_10504,1);\
bit_vector_slice(&(uf1_d_efp), &(slice_10504), 52);\
bit_vector_cast_to_bit_vector(0, &(f1_top_bit), &(slice_10504));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10509_c_macro_ __declare_static_bit_vector(slice_10508,52);\
bit_vector_slice(&(uf1_d_efp), &(slice_10508), 0);\
bit_vector_cast_to_bit_vector(0, &(f1_fraction), &(slice_10508));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10513_c_macro_ __declare_static_bit_vector(slice_10512,1);\
bit_vector_slice(&(uf2_d_efp), &(slice_10512), 66);\
bit_vector_cast_to_bit_vector(0, &(sign_uf2_d), &(slice_10512));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10517_c_macro_ __declare_static_bit_vector(slice_10516,13);\
bit_vector_slice(&(uf2_d_efp), &(slice_10516), 53);\
bit_vector_cast_to_bit_vector(0, &(f2_exp13_unbiased), &(slice_10516));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10521_c_macro_ __declare_static_bit_vector(slice_10520,1);\
bit_vector_slice(&(uf2_d_efp), &(slice_10520), 52);\
bit_vector_cast_to_bit_vector(0, &(f2_top_bit), &(slice_10520));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10525_c_macro_ __declare_static_bit_vector(slice_10524,52);\
bit_vector_slice(&(uf2_d_efp), &(slice_10524), 0);\
bit_vector_cast_to_bit_vector(0, &(f2_fraction), &(slice_10524));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10536_c_macro_ _fpunit_exec_exec_classify_utility_( &(use_single_precision_inputs),  &(f1_s_class),  &(f1_d_class), &(f1_zero), &(f1_normal), &(f1_denormal), &(f1_nan), &(f1_inf), &(f1_pos_inf), &(f1_neg_inf));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10547_c_macro_ _fpunit_exec_exec_classify_utility_( &(use_single_precision_inputs),  &(f2_s_class),  &(f2_d_class), &(f2_zero), &(f2_normal), &(f2_denormal), &(f2_nan), &(f2_inf), &(f2_pos_inf), &(f2_neg_inf));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10552_c_macro_ __declare_static_bit_vector(CONCAT_u1_u53_10551,53);\
bit_vector_concatenate( &(f1_top_bit), &(f1_fraction), &(CONCAT_u1_u53_10551));\
bit_vector_cast_to_bit_vector(0, &(f1_frac), &(CONCAT_u1_u53_10551));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10557_c_macro_ __declare_static_bit_vector(CONCAT_u1_u53_10556,53);\
bit_vector_concatenate( &(f2_top_bit), &(f2_fraction), &(CONCAT_u1_u53_10556));\
bit_vector_cast_to_bit_vector(0, &(f2_frac), &(CONCAT_u1_u53_10556));\
;

#define fpunit_exec_exec__fpadd64_op_stmt_10560_c_macro_ uint32_t fpunit_exec_exec__fpadd64_op_stmt_10560_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd64_op_stmt_10560_c_macro___print_counter,"fpadd64_op_fractions");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10560_c_macro___print_counter,"f1_frac");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_frac)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10560_c_macro___print_counter,"f2_frac");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_frac)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10564_c_macro_ __declare_static_bit_vector(type_cast_10563,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_10563), &(f1_exp13_unbiased));\
bit_vector_cast_to_bit_vector(1, &(exp_a), &(type_cast_10563));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10568_c_macro_ __declare_static_bit_vector(type_cast_10567,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_10567), &(f2_exp13_unbiased));\
bit_vector_cast_to_bit_vector(1, &(exp_b), &(type_cast_10567));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10574_c_macro_ _fpunit_exec_exec_expDiffDouble_( &(uf1_d_i),  &(uf2_d_i), &(exp_a_greater_than_exp_b_d), &(exp_a_equal_exp_b_d), &(exp_ab_d));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10580_c_macro_ _fpunit_exec_exec_expDiffSingle_( &(uf1_s),  &(uf2_s), &(exp_a_greater_than_exp_b_s), &(exp_a_equal_exp_b_s), &(exp_ab_s));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10586_c_macro_ __declare_static_bit_vector(MUX_10585,13);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(1, &(MUX_10585), &(exp_ab_s));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_10585), &(exp_ab_d));\
}bit_vector_cast_to_bit_vector(1, &(exp_ab), &(MUX_10585));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10592_c_macro_ __declare_static_bit_vector(MUX_10591,1);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(0, &(MUX_10591), &(exp_a_greater_than_exp_b_s));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10591), &(exp_a_greater_than_exp_b_d));\
}bit_vector_cast_to_bit_vector(0, &(exp_a_greater_than_exp_b), &(MUX_10591));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10598_c_macro_ __declare_static_bit_vector(MUX_10597,1);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(0, &(MUX_10597), &(exp_a_equal_exp_b_s));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10597), &(exp_a_equal_exp_b_d));\
}bit_vector_cast_to_bit_vector(0, &(exp_a_equal_exp_b), &(MUX_10597));\
;

#define fpunit_exec_exec__fpadd64_op_stmt_10604_c_macro_ uint32_t fpunit_exec_exec__fpadd64_op_stmt_10604_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd64_op_stmt_10604_c_macro___print_counter,"fpadd64_op_exponents");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10604_c_macro___print_counter,"exp_a");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_a)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10604_c_macro___print_counter,"exp_b");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_b)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10604_c_macro___print_counter,"exp_a_greater_than_exp_b");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_a_greater_than_exp_b)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10604_c_macro___print_counter,"exp_a_equal_exp_b");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_a_equal_exp_b)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10604_c_macro___print_counter,"exp_ab");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exp_ab)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10611_c_macro_ __declare_static_bit_vector(CONCAT_u1_u54_10608,54);\
__declare_static_bit_vector(CONCAT_u54_u64_10610,64);\
bit_vector_concatenate( &(ZERO_1), &(f1_frac), &(CONCAT_u1_u54_10608));\
bit_vector_concatenate( &(CONCAT_u1_u54_10608), &(ZERO_10), &(CONCAT_u54_u64_10610));\
bit_vector_cast_to_bit_vector(0, &(mantissa_a_pre_shift), &(CONCAT_u54_u64_10610));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10618_c_macro_ __declare_static_bit_vector(CONCAT_u1_u54_10615,54);\
__declare_static_bit_vector(CONCAT_u54_u64_10617,64);\
bit_vector_concatenate( &(ZERO_1), &(f2_frac), &(CONCAT_u1_u54_10615));\
bit_vector_concatenate( &(CONCAT_u1_u54_10615), &(ZERO_10), &(CONCAT_u54_u64_10617));\
bit_vector_cast_to_bit_vector(0, &(mantissa_b_pre_shift), &(CONCAT_u54_u64_10617));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10624_c_macro_ __declare_static_bit_vector(MUX_10623,64);\
if (has_undefined_bit(&exp_a_greater_than_exp_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_exp_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_exp_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_exp_b)){bit_vector_cast_to_bit_vector(0, &(MUX_10623), &(mantissa_b_pre_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10623), &(mantissa_a_pre_shift));\
}bit_vector_cast_to_bit_vector(0, &(to_be_shifted), &(MUX_10623));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10634_c_macro_ __declare_static_bit_vector(konst_10627,13);\
bit_vector_clear(&konst_10627);\
konst_10627.val.byte_array[0] = 64;\
__declare_static_bit_vector(SGT_i13_u1_10628,1);\
__declare_static_bit_vector(konst_10629,7);\
bit_vector_clear(&konst_10629);\
konst_10629.val.byte_array[0] = 64;\
__declare_static_bit_vector(type_cast_10630,7);\
bit_vector_clear(&type_cast_10630);\
type_cast_10630.val.byte_array[0] = 64;\
__declare_static_bit_vector(type_cast_10632,7);\
__declare_static_bit_vector(MUX_10633,7);\
bit_vector_clear(&konst_10627);\
konst_10627.val.byte_array[0] = 64;\
bit_vector_greater(1, &(exp_ab), &(konst_10627), &(SGT_i13_u1_10628));\
if (has_undefined_bit(&SGT_i13_u1_10628)) {fprintf(stderr, "Error: variable SGT_i13_u1_10628 has undefined value (%s) at test point.\n", to_string(&SGT_i13_u1_10628));assert(0);} \
if(bit_vector_to_uint64(0, &SGT_i13_u1_10628)){bit_vector_clear(&konst_10629);\
konst_10629.val.byte_array[0] = 64;\
bit_vector_bitcast_to_bit_vector( &(type_cast_10630), &(konst_10629));\
bit_vector_cast_to_bit_vector(0, &(MUX_10633), &(type_cast_10630));\
}else {bit_vector_bitcast_to_bit_vector( &(type_cast_10632), &(exp_ab));\
bit_vector_cast_to_bit_vector(0, &(MUX_10633), &(type_cast_10632));\
}bit_vector_cast_to_bit_vector(0, &(exp_ab_7), &(MUX_10633));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10639_c_macro_ _fpunit_exec_exec_u64_sr_special_( &(to_be_shifted),  &(exp_ab_7), &(shifted_output), &(sticky_temp));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10646_c_macro_ __declare_static_bit_vector(CONCAT_u1_u54_10643,54);\
__declare_static_bit_vector(CONCAT_u54_u64_10645,64);\
bit_vector_concatenate( &(ZERO_1), &(f1_frac), &(CONCAT_u1_u54_10643));\
bit_vector_concatenate( &(CONCAT_u1_u54_10643), &(ZERO_10), &(CONCAT_u54_u64_10645));\
bit_vector_cast_to_bit_vector(0, &(mantissa_a_pre_shift_d), &(CONCAT_u54_u64_10645));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10653_c_macro_ __declare_static_bit_vector(CONCAT_u1_u54_10650,54);\
__declare_static_bit_vector(CONCAT_u54_u64_10652,64);\
bit_vector_concatenate( &(ZERO_1), &(f2_frac), &(CONCAT_u1_u54_10650));\
bit_vector_concatenate( &(CONCAT_u1_u54_10650), &(ZERO_10), &(CONCAT_u54_u64_10652));\
bit_vector_cast_to_bit_vector(0, &(mantissa_b_pre_shift_d), &(CONCAT_u54_u64_10652));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10661_c_macro_ __declare_static_bit_vector(OR_u1_u1_10657,1);\
__declare_static_bit_vector(MUX_10660,64);\
bit_vector_or(&(exp_a_greater_than_exp_b), &(exp_a_equal_exp_b), &(OR_u1_u1_10657));\
if (has_undefined_bit(&OR_u1_u1_10657)) {fprintf(stderr, "Error: variable OR_u1_u1_10657 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_10657));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_10657)){bit_vector_cast_to_bit_vector(0, &(MUX_10660), &(mantissa_a_pre_shift_d));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10660), &(shifted_output));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_a_post_shift), &(MUX_10660));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10667_c_macro_ __declare_static_bit_vector(MUX_10666,64);\
if (has_undefined_bit(&exp_a_greater_than_exp_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_exp_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_exp_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_exp_b)){bit_vector_cast_to_bit_vector(0, &(MUX_10666), &(shifted_output));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10666), &(mantissa_b_pre_shift_d));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_b_post_shift), &(MUX_10666));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10673_c_macro_ __declare_static_bit_vector(MUX_10672,13);\
if (has_undefined_bit(&exp_a_greater_than_exp_b)) {fprintf(stderr, "Error: variable exp_a_greater_than_exp_b has undefined value (%s) at test point.\n", to_string(&exp_a_greater_than_exp_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_greater_than_exp_b)){bit_vector_cast_to_bit_vector(1, &(MUX_10672), &(exp_a));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_10672), &(exp_b));\
}bit_vector_cast_to_bit_vector(1, &(exponent_post_align), &(MUX_10672));\
;

#define fpunit_exec_exec__fpadd64_op_stmt_10677_c_macro_ uint32_t fpunit_exec_exec__fpadd64_op_stmt_10677_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd64_op_stmt_10677_c_macro___print_counter,"fpadd64_op_post_shift");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10677_c_macro___print_counter,"mantissa_a_post_shift");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_a_post_shift)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10677_c_macro___print_counter,"mantissa_b_post_shift");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_b_post_shift)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10677_c_macro___print_counter,"exponent_post_align");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exponent_post_align)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10682_c_macro_ _fpunit_exec_exec_compare53_( &(f1_frac),  &(f2_frac), &(G), &(E));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10690_c_macro_ __declare_static_bit_vector(OR_u1_u1_10687,1);\
__declare_static_bit_vector(MUX_10689,1);\
if (has_undefined_bit(&exp_a_equal_exp_b)) {fprintf(stderr, "Error: variable exp_a_equal_exp_b has undefined value (%s) at test point.\n", to_string(&exp_a_equal_exp_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_equal_exp_b)){bit_vector_or(&(G), &(E), &(OR_u1_u1_10687));\
bit_vector_cast_to_bit_vector(0, &(MUX_10689), &(OR_u1_u1_10687));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10689), &(exp_a_greater_than_exp_b));\
}bit_vector_cast_to_bit_vector(0, &(a_frac_ge_b_frac), &(MUX_10689));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10696_c_macro_ __declare_static_bit_vector(MUX_10695,1);\
if (has_undefined_bit(&exp_a_equal_exp_b)) {fprintf(stderr, "Error: variable exp_a_equal_exp_b has undefined value (%s) at test point.\n", to_string(&exp_a_equal_exp_b));assert(0);} \
if(bit_vector_to_uint64(0, &exp_a_equal_exp_b)){bit_vector_cast_to_bit_vector(0, &(MUX_10695), &(G));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10695), &(exp_a_greater_than_exp_b));\
}bit_vector_cast_to_bit_vector(0, &(a_frac_gt_b_frac), &(MUX_10695));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10713_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10700,1);\
__declare_static_bit_vector(AND_u1_u1_10701,1);\
__declare_static_bit_vector(NOT_u1_u1_10703,1);\
__declare_static_bit_vector(AND_u1_u1_10704,1);\
__declare_static_bit_vector(NOT_u1_u1_10706,1);\
__declare_static_bit_vector(AND_u1_u1_10708,1);\
__declare_static_bit_vector(NOT_u1_u1_10710,1);\
__declare_static_bit_vector(AND_u1_u1_10711,1);\
__declare_static_bit_vector(OR_u1_u1_10712,1);\
bit_vector_not( &(sign_uf2_d), &(NOT_u1_u1_10700));\
bit_vector_and(&(sign_uf1_d), &(NOT_u1_u1_10700), &(AND_u1_u1_10701));\
bit_vector_not( &(a_frac_ge_b_frac), &(NOT_u1_u1_10703));\
bit_vector_and(&(AND_u1_u1_10701), &(NOT_u1_u1_10703), &(AND_u1_u1_10704));\
bit_vector_not( &(sign_uf1_d), &(NOT_u1_u1_10706));\
bit_vector_and(&(NOT_u1_u1_10706), &(sign_uf2_d), &(AND_u1_u1_10708));\
bit_vector_not( &(a_frac_ge_b_frac), &(NOT_u1_u1_10710));\
bit_vector_and(&(AND_u1_u1_10708), &(NOT_u1_u1_10710), &(AND_u1_u1_10711));\
bit_vector_or(&(AND_u1_u1_10704), &(AND_u1_u1_10711), &(OR_u1_u1_10712));\
bit_vector_cast_to_bit_vector(0, &(need_to_take_twos_complement_a), &(OR_u1_u1_10712));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10728_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10717,1);\
__declare_static_bit_vector(AND_u1_u1_10718,1);\
__declare_static_bit_vector(AND_u1_u1_10720,1);\
__declare_static_bit_vector(NOT_u1_u1_10722,1);\
__declare_static_bit_vector(AND_u1_u1_10724,1);\
__declare_static_bit_vector(AND_u1_u1_10726,1);\
__declare_static_bit_vector(OR_u1_u1_10727,1);\
bit_vector_not( &(sign_uf1_d), &(NOT_u1_u1_10717));\
bit_vector_and(&(sign_uf2_d), &(NOT_u1_u1_10717), &(AND_u1_u1_10718));\
bit_vector_and(&(AND_u1_u1_10718), &(a_frac_ge_b_frac), &(AND_u1_u1_10720));\
bit_vector_not( &(sign_uf2_d), &(NOT_u1_u1_10722));\
bit_vector_and(&(NOT_u1_u1_10722), &(sign_uf1_d), &(AND_u1_u1_10724));\
bit_vector_and(&(AND_u1_u1_10724), &(a_frac_ge_b_frac), &(AND_u1_u1_10726));\
bit_vector_or(&(AND_u1_u1_10720), &(AND_u1_u1_10726), &(OR_u1_u1_10727));\
bit_vector_cast_to_bit_vector(0, &(need_to_take_twos_complement_b), &(OR_u1_u1_10727));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10732_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10731,1);\
bit_vector_not( &(exp_a_greater_than_exp_b), &(NOT_u1_u1_10731));\
bit_vector_cast_to_bit_vector(0, &(a_was_shifted), &(NOT_u1_u1_10731));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10735_c_macro_ bit_vector_cast_to_bit_vector(0, &(a_negative), &(need_to_take_twos_complement_a));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10738_c_macro_ bit_vector_cast_to_bit_vector(0, &(b_was_shifted), &(exp_a_greater_than_exp_b));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10741_c_macro_ bit_vector_cast_to_bit_vector(0, &(b_negative), &(need_to_take_twos_complement_b));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10752_c_macro_ __declare_static_bit_vector(AND_u1_u1_10746,1);\
__declare_static_bit_vector(AND_u1_u1_10749,1);\
__declare_static_bit_vector(OR_u1_u1_10750,1);\
__declare_static_bit_vector(AND_u1_u1_10751,1);\
bit_vector_and(&(a_was_shifted), &(a_negative), &(AND_u1_u1_10746));\
bit_vector_and(&(b_was_shifted), &(b_negative), &(AND_u1_u1_10749));\
bit_vector_or(&(AND_u1_u1_10746), &(AND_u1_u1_10749), &(OR_u1_u1_10750));\
bit_vector_and(&(sticky_temp), &(OR_u1_u1_10750), &(AND_u1_u1_10751));\
bit_vector_cast_to_bit_vector(0, &(apply_sticky_correction), &(AND_u1_u1_10751));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10757_c_macro_ __declare_static_bit_vector(OR_u1_u1_10756,1);\
bit_vector_or(&(need_to_take_twos_complement_a), &(need_to_take_twos_complement_b), &(OR_u1_u1_10756));\
bit_vector_cast_to_bit_vector(0, &(carry_in), &(OR_u1_u1_10756));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10764_c_macro_ __declare_static_bit_vector(NOT_u64_u64_10761,64);\
__declare_static_bit_vector(MUX_10763,64);\
if (has_undefined_bit(&need_to_take_twos_complement_a)) {fprintf(stderr, "Error: variable need_to_take_twos_complement_a has undefined value (%s) at test point.\n", to_string(&need_to_take_twos_complement_a));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_take_twos_complement_a)){bit_vector_not( &(mantissa_a_post_shift), &(NOT_u64_u64_10761));\
bit_vector_cast_to_bit_vector(0, &(MUX_10763), &(NOT_u64_u64_10761));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10763), &(mantissa_a_post_shift));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_operand_a), &(MUX_10763));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10771_c_macro_ __declare_static_bit_vector(NOT_u64_u64_10768,64);\
__declare_static_bit_vector(MUX_10770,64);\
if (has_undefined_bit(&need_to_take_twos_complement_b)) {fprintf(stderr, "Error: variable need_to_take_twos_complement_b has undefined value (%s) at test point.\n", to_string(&need_to_take_twos_complement_b));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_take_twos_complement_b)){bit_vector_not( &(mantissa_b_post_shift), &(NOT_u64_u64_10768));\
bit_vector_cast_to_bit_vector(0, &(MUX_10770), &(NOT_u64_u64_10768));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10770), &(mantissa_b_post_shift));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_operand_b), &(MUX_10770));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10777_c_macro_ _fpunit_exec_exec_adder_64_with_carry_( &(mantissa_operand_a),  &(mantissa_operand_b),  &(carry_in), &(mantissa_added), &(carry_out));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10797_c_macro_ __declare_static_bit_vector(AND_u1_u1_10781,1);\
__declare_static_bit_vector(NOT_u1_u1_10784,1);\
__declare_static_bit_vector(AND_u1_u1_10785,1);\
__declare_static_bit_vector(AND_u1_u1_10787,1);\
__declare_static_bit_vector(OR_u1_u1_10788,1);\
__declare_static_bit_vector(NOT_u1_u1_10790,1);\
__declare_static_bit_vector(AND_u1_u1_10792,1);\
__declare_static_bit_vector(NOT_u1_u1_10794,1);\
__declare_static_bit_vector(AND_u1_u1_10795,1);\
__declare_static_bit_vector(OR_u1_u1_10796,1);\
bit_vector_and(&(sign_uf1_d), &(sign_uf2_d), &(AND_u1_u1_10781));\
bit_vector_not( &(sign_uf2_d), &(NOT_u1_u1_10784));\
bit_vector_and(&(sign_uf1_d), &(NOT_u1_u1_10784), &(AND_u1_u1_10785));\
bit_vector_and(&(AND_u1_u1_10785), &(a_frac_gt_b_frac), &(AND_u1_u1_10787));\
bit_vector_or(&(AND_u1_u1_10781), &(AND_u1_u1_10787), &(OR_u1_u1_10788));\
bit_vector_not( &(sign_uf1_d), &(NOT_u1_u1_10790));\
bit_vector_and(&(NOT_u1_u1_10790), &(sign_uf2_d), &(AND_u1_u1_10792));\
bit_vector_not( &(a_frac_ge_b_frac), &(NOT_u1_u1_10794));\
bit_vector_and(&(AND_u1_u1_10792), &(NOT_u1_u1_10794), &(AND_u1_u1_10795));\
bit_vector_or(&(OR_u1_u1_10788), &(AND_u1_u1_10795), &(OR_u1_u1_10796));\
bit_vector_cast_to_bit_vector(0, &(sign_result), &(OR_u1_u1_10796));\
;

#define fpunit_exec_exec__fpadd64_op_stmt_10804_c_macro_ uint32_t fpunit_exec_exec__fpadd64_op_stmt_10804_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd64_op_stmt_10804_c_macro___print_counter,"fpadd64_op_mantissa_added");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10804_c_macro___print_counter,"mantissa_operand_a");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_operand_a)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10804_c_macro___print_counter,"mantissa_operand_b");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_operand_b)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10804_c_macro___print_counter,"carry_in");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(carry_in)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10804_c_macro___print_counter,"mantissa_added");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_added)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10804_c_macro___print_counter,"carry_out");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(carry_out)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10804_c_macro___print_counter,"sign_result");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sign_result)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10807_c_macro_ bit_vector_cast_to_bit_vector(0, &(mantissa_out), &(mantissa_added));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10815_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10810,1);\
__declare_static_bit_vector(konst_10812,64);\
bit_vector_clear(&konst_10812);\
konst_10812.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_10813,1);\
__declare_static_bit_vector(AND_u1_u1_10814,1);\
bit_vector_not( &(carry_in), &(NOT_u1_u1_10810));\
bit_vector_clear(&konst_10812);\
konst_10812.val.byte_array[0] = 63;\
bit_vector_bitsel( &(mantissa_out), &(konst_10812), &(BITSEL_u64_u1_10813));\
bit_vector_and(&(NOT_u1_u1_10810), &(BITSEL_u64_u1_10813), &(AND_u1_u1_10814));\
bit_vector_cast_to_bit_vector(0, &(need_to_shift), &(AND_u1_u1_10814));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10819_c_macro_ __declare_static_bit_vector(slice_10818,63);\
bit_vector_slice(&(mantissa_out), &(slice_10818), 1);\
bit_vector_cast_to_bit_vector(0, &(mantissa_out_shifted), &(slice_10818));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10830_c_macro_ __declare_static_bit_vector(CONCAT_u1_u64_10824,64);\
__declare_static_bit_vector(slice_10827,63);\
__declare_static_bit_vector(CONCAT_u1_u64_10828,64);\
__declare_static_bit_vector(MUX_10829,64);\
if (has_undefined_bit(&need_to_shift)) {fprintf(stderr, "Error: variable need_to_shift has undefined value (%s) at test point.\n", to_string(&need_to_shift));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_shift)){bit_vector_concatenate( &(ZERO_1), &(mantissa_out_shifted), &(CONCAT_u1_u64_10824));\
bit_vector_cast_to_bit_vector(0, &(MUX_10829), &(CONCAT_u1_u64_10824));\
}else {bit_vector_slice(&(mantissa_out), &(slice_10827), 0);\
bit_vector_concatenate( &(ZERO_1), &(slice_10827), &(CONCAT_u1_u64_10828));\
bit_vector_cast_to_bit_vector(0, &(MUX_10829), &(CONCAT_u1_u64_10828));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_64_bits), &(MUX_10829));\
;

#define fpunit_exec_exec__fpadd64_op_stmt_10832_c_macro_ uint32_t fpunit_exec_exec__fpadd64_op_stmt_10832_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd64_op_stmt_10832_c_macro___print_counter,"fpadd64_op_final_mantissa_64");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10832_c_macro___print_counter,"mantissa_64_bits");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_64_bits)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10836_c_macro_ _fpunit_exec_exec_find_leftmost_64_( &(mantissa_64_bits), &(position_of_one), &(one_found));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10842_c_macro_ __declare_static_bit_vector(konst_10838,6);\
bit_vector_clear(&konst_10838);\
konst_10838.val.byte_array[0] = 62;\
__declare_static_bit_vector(SUB_u6_u6_10840,6);\
__declare_static_bit_vector(type_cast_10841,6);\
bit_vector_clear(&konst_10838);\
konst_10838.val.byte_array[0] = 62;\
bit_vector_minus( &(konst_10838), &(position_of_one), &(SUB_u6_u6_10840));\
bit_vector_bitcast_to_bit_vector( &(type_cast_10841), &(SUB_u6_u6_10840));\
bit_vector_cast_to_bit_vector(0, &(left_shift_amount), &(type_cast_10841));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10846_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10845,1);\
bit_vector_not( &(one_found), &(NOT_u1_u1_10845));\
bit_vector_cast_to_bit_vector(0, &(add_result_zero), &(NOT_u1_u1_10845));\
;

#define fpunit_exec_exec__fpadd64_op_call_stmt_10850_c_macro_ _fpunit_exec_exec_i64_sll_( &(mantissa_64_bits),  &(left_shift_amount), &(final_mantissa_aligned));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10854_c_macro_ __declare_static_bit_vector(slice_10853,62);\
bit_vector_slice(&(final_mantissa_aligned), &(slice_10853), 0);\
bit_vector_cast_to_bit_vector(0, &(final_mantissa_62_aligned), &(slice_10853));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10866_c_macro_ __declare_static_bit_vector(MUX_10859,13);\
__declare_static_bit_vector(type_cast_10862,13);\
__declare_static_bit_vector(konst_10863,13);\
bit_vector_clear(&konst_10863);\
__declare_static_bit_vector(MUX_10864,13);\
__declare_static_bit_vector(SUB_i13_i13_10865,13);\
if (has_undefined_bit(&need_to_shift)) {fprintf(stderr, "Error: variable need_to_shift has undefined value (%s) at test point.\n", to_string(&need_to_shift));assert(0);} \
if(bit_vector_to_uint64(0, &need_to_shift)){bit_vector_cast_to_bit_vector(1, &(MUX_10859), &(exp_base_1));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_10859), &(exp_base_0));\
}if (has_undefined_bit(&one_found)) {fprintf(stderr, "Error: variable one_found has undefined value (%s) at test point.\n", to_string(&one_found));assert(0);} \
if(bit_vector_to_uint64(0, &one_found)){bit_vector_bitcast_to_bit_vector( &(type_cast_10862), &(left_shift_amount));\
bit_vector_cast_to_bit_vector(1, &(MUX_10864), &(type_cast_10862));\
}else {bit_vector_clear(&konst_10863);\
bit_vector_cast_to_bit_vector(1, &(MUX_10864), &(konst_10863));\
}bit_vector_minus( &(MUX_10859), &(MUX_10864), &(SUB_i13_i13_10865));\
bit_vector_cast_to_bit_vector(1, &(exponent_correction), &(SUB_i13_i13_10865));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10871_c_macro_ __declare_static_bit_vector(ADD_i13_i13_10870,13);\
bit_vector_plus( &(exponent_post_align), &(exponent_correction), &(ADD_i13_i13_10870));\
bit_vector_cast_to_bit_vector(1, &(final_exponent_without_bias), &(ADD_i13_i13_10870));\
;

#define fpunit_exec_exec__fpadd64_op_stmt_10875_c_macro_ uint32_t fpunit_exec_exec__fpadd64_op_stmt_10875_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd64_op_stmt_10875_c_macro___print_counter,"fpadd64_op_final_exponent_without_bias");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10875_c_macro___print_counter,"exponent_post_align");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exponent_post_align)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10875_c_macro___print_counter,"exponent_correction");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exponent_correction)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10875_c_macro___print_counter,"final_exponent_without_bias");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(final_exponent_without_bias)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10880_c_macro_ __declare_static_bit_vector(konst_10878,13);\
bit_vector_clear(&konst_10878);\
konst_10878.val.byte_array[0] = 255;\
konst_10878.val.byte_array[1] = 3;\
__declare_static_bit_vector(SGT_i13_u1_10879,1);\
bit_vector_clear(&konst_10878);\
konst_10878.val.byte_array[0] = 255;\
konst_10878.val.byte_array[1] = 3;\
bit_vector_greater(1, &(final_exponent_without_bias), &(konst_10878), &(SGT_i13_u1_10879));\
bit_vector_cast_to_bit_vector(0, &(DP_exp_overflow), &(SGT_i13_u1_10879));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10885_c_macro_ __declare_static_bit_vector(konst_10883,13);\
bit_vector_clear(&konst_10883);\
konst_10883.val.byte_array[0] = 2;\
konst_10883.val.byte_array[1] = 252;\
__declare_static_bit_vector(SLT_i13_u1_10884,1);\
bit_vector_clear(&konst_10883);\
konst_10883.val.byte_array[0] = 2;\
konst_10883.val.byte_array[1] = 252;\
bit_vector_less(1, &(final_exponent_without_bias), &(konst_10883), &(SLT_i13_u1_10884));\
bit_vector_cast_to_bit_vector(0, &(DP_exp_underflow), &(SLT_i13_u1_10884));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10890_c_macro_ __declare_static_bit_vector(konst_10888,13);\
bit_vector_clear(&konst_10888);\
konst_10888.val.byte_array[0] = 127;\
__declare_static_bit_vector(SGT_i13_u1_10889,1);\
bit_vector_clear(&konst_10888);\
konst_10888.val.byte_array[0] = 127;\
bit_vector_greater(1, &(final_exponent_without_bias), &(konst_10888), &(SGT_i13_u1_10889));\
bit_vector_cast_to_bit_vector(0, &(SP_exp_overflow), &(SGT_i13_u1_10889));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10895_c_macro_ __declare_static_bit_vector(konst_10893,13);\
bit_vector_clear(&konst_10893);\
konst_10893.val.byte_array[0] = 130;\
konst_10893.val.byte_array[1] = 255;\
__declare_static_bit_vector(SLT_i13_u1_10894,1);\
bit_vector_clear(&konst_10893);\
konst_10893.val.byte_array[0] = 130;\
konst_10893.val.byte_array[1] = 255;\
bit_vector_less(1, &(final_exponent_without_bias), &(konst_10893), &(SLT_i13_u1_10894));\
bit_vector_cast_to_bit_vector(0, &(SP_exp_underflow), &(SLT_i13_u1_10894));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10901_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10899,1);\
__declare_static_bit_vector(AND_u1_u1_10900,1);\
bit_vector_not( &(add_result_zero), &(NOT_u1_u1_10899));\
bit_vector_and(&(SP_exp_underflow), &(NOT_u1_u1_10899), &(AND_u1_u1_10900));\
bit_vector_cast_to_bit_vector(0, &(underflow_SP), &(AND_u1_u1_10900));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10907_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10905,1);\
__declare_static_bit_vector(AND_u1_u1_10906,1);\
bit_vector_not( &(add_result_zero), &(NOT_u1_u1_10905));\
bit_vector_and(&(DP_exp_underflow), &(NOT_u1_u1_10905), &(AND_u1_u1_10906));\
bit_vector_cast_to_bit_vector(0, &(underflow_DP), &(AND_u1_u1_10906));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10913_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10911,1);\
__declare_static_bit_vector(AND_u1_u1_10912,1);\
bit_vector_not( &(add_result_zero), &(NOT_u1_u1_10911));\
bit_vector_and(&(SP_exp_overflow), &(NOT_u1_u1_10911), &(AND_u1_u1_10912));\
bit_vector_cast_to_bit_vector(0, &(overflow_SP), &(AND_u1_u1_10912));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10919_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10917,1);\
__declare_static_bit_vector(AND_u1_u1_10918,1);\
bit_vector_not( &(add_result_zero), &(NOT_u1_u1_10917));\
bit_vector_and(&(DP_exp_overflow), &(NOT_u1_u1_10917), &(AND_u1_u1_10918));\
bit_vector_cast_to_bit_vector(0, &(overflow_DP), &(AND_u1_u1_10918));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10925_c_macro_ __declare_static_bit_vector(MUX_10924,1);\
if (has_undefined_bit(&double_precision_outputs)) {fprintf(stderr, "Error: variable double_precision_outputs has undefined value (%s) at test point.\n", to_string(&double_precision_outputs));assert(0);} \
if(bit_vector_to_uint64(0, &double_precision_outputs)){bit_vector_cast_to_bit_vector(0, &(MUX_10924), &(overflow_DP));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10924), &(overflow_SP));\
}bit_vector_cast_to_bit_vector(0, &(overflow), &(MUX_10924));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10938_c_macro_ __declare_static_bit_vector(OR_u1_u1_10929,1);\
__declare_static_bit_vector(AND_u1_u1_10932,1);\
__declare_static_bit_vector(AND_u1_u1_10935,1);\
__declare_static_bit_vector(OR_u1_u1_10936,1);\
__declare_static_bit_vector(OR_u1_u1_10937,1);\
bit_vector_or(&(f1_nan), &(f2_nan), &(OR_u1_u1_10929));\
bit_vector_and(&(f1_pos_inf), &(f2_neg_inf), &(AND_u1_u1_10932));\
bit_vector_and(&(f1_neg_inf), &(f2_pos_inf), &(AND_u1_u1_10935));\
bit_vector_or(&(AND_u1_u1_10932), &(AND_u1_u1_10935), &(OR_u1_u1_10936));\
bit_vector_or(&(OR_u1_u1_10929), &(OR_u1_u1_10936), &(OR_u1_u1_10937));\
bit_vector_cast_to_bit_vector(0, &(condition_nan), &(OR_u1_u1_10937));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10949_c_macro_ __declare_static_bit_vector(AND_u1_u1_10942,1);\
__declare_static_bit_vector(AND_u1_u1_10945,1);\
__declare_static_bit_vector(OR_u1_u1_10946,1);\
__declare_static_bit_vector(OR_u1_u1_10948,1);\
bit_vector_and(&(f1_pos_inf), &(f2_pos_inf), &(AND_u1_u1_10942));\
bit_vector_and(&(f1_neg_inf), &(f2_neg_inf), &(AND_u1_u1_10945));\
bit_vector_or(&(AND_u1_u1_10942), &(AND_u1_u1_10945), &(OR_u1_u1_10946));\
bit_vector_or(&(OR_u1_u1_10946), &(overflow), &(OR_u1_u1_10948));\
bit_vector_cast_to_bit_vector(0, &(condition_inf), &(OR_u1_u1_10948));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10956_c_macro_ __declare_static_bit_vector(AND_u1_u1_10953,1);\
__declare_static_bit_vector(OR_u1_u1_10955,1);\
bit_vector_and(&(f1_zero), &(f2_zero), &(AND_u1_u1_10953));\
bit_vector_or(&(AND_u1_u1_10953), &(add_result_zero), &(OR_u1_u1_10955));\
bit_vector_cast_to_bit_vector(0, &(condition_zero), &(OR_u1_u1_10955));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10965_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10959,1);\
__declare_static_bit_vector(MUX_10963,1);\
__declare_static_bit_vector(AND_u1_u1_10964,1);\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_10959));\
if (has_undefined_bit(&double_precision_outputs)) {fprintf(stderr, "Error: variable double_precision_outputs has undefined value (%s) at test point.\n", to_string(&double_precision_outputs));assert(0);} \
if(bit_vector_to_uint64(0, &double_precision_outputs)){bit_vector_cast_to_bit_vector(0, &(MUX_10963), &(underflow_DP));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10963), &(underflow_SP));\
}bit_vector_and(&(NOT_u1_u1_10959), &(MUX_10963), &(AND_u1_u1_10964));\
bit_vector_cast_to_bit_vector(0, &(underflow), &(AND_u1_u1_10964));\
;

#define fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro_ uint32_t fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"fpadd64_op_final_exceptions");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"DP_exp_overflow");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(DP_exp_overflow)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"DP_exp_underflow");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(DP_exp_underflow)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"SP_exp_overflow");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(SP_exp_overflow)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"SP_exp_underflow");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(SP_exp_underflow)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"underflow_SP");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(underflow_SP)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"underflow_DP");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(underflow_DP)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"overflow_SP");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(overflow_SP)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"overflow_DP");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(overflow_DP)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"condition_nan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(condition_nan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"condition_inf");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(condition_inf)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_10977_c_macro___print_counter,"condition_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(condition_zero)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_10993_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10980,1);\
__declare_static_bit_vector(NOT_u1_u1_10982,1);\
__declare_static_bit_vector(AND_u1_u1_10983,1);\
__declare_static_bit_vector(NOT_u1_u1_10985,1);\
__declare_static_bit_vector(AND_u1_u1_10986,1);\
__declare_static_bit_vector(NOT_u1_u1_10988,1);\
__declare_static_bit_vector(NOT_u1_u1_10990,1);\
__declare_static_bit_vector(AND_u1_u1_10991,1);\
__declare_static_bit_vector(AND_u1_u1_10992,1);\
bit_vector_not( &(overflow), &(NOT_u1_u1_10980));\
bit_vector_not( &(underflow), &(NOT_u1_u1_10982));\
bit_vector_and(&(NOT_u1_u1_10980), &(NOT_u1_u1_10982), &(AND_u1_u1_10983));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_10985));\
bit_vector_and(&(AND_u1_u1_10983), &(NOT_u1_u1_10985), &(AND_u1_u1_10986));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_10988));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_10990));\
bit_vector_and(&(NOT_u1_u1_10988), &(NOT_u1_u1_10990), &(AND_u1_u1_10991));\
bit_vector_and(&(AND_u1_u1_10986), &(AND_u1_u1_10991), &(AND_u1_u1_10992));\
bit_vector_cast_to_bit_vector(0, &(SP_nothing_to_be_done_condition_normal), &(AND_u1_u1_10992));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11007_c_macro_ __declare_static_bit_vector(OR_u1_u1_10997,1);\
__declare_static_bit_vector(NOT_u1_u1_10999,1);\
__declare_static_bit_vector(AND_u1_u1_11000,1);\
__declare_static_bit_vector(NOT_u1_u1_11002,1);\
__declare_static_bit_vector(NOT_u1_u1_11004,1);\
__declare_static_bit_vector(AND_u1_u1_11005,1);\
__declare_static_bit_vector(AND_u1_u1_11006,1);\
bit_vector_or(&(overflow), &(underflow), &(OR_u1_u1_10997));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_10999));\
bit_vector_and(&(OR_u1_u1_10997), &(NOT_u1_u1_10999), &(AND_u1_u1_11000));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_11002));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_11004));\
bit_vector_and(&(NOT_u1_u1_11002), &(NOT_u1_u1_11004), &(AND_u1_u1_11005));\
bit_vector_and(&(AND_u1_u1_11000), &(AND_u1_u1_11005), &(AND_u1_u1_11006));\
bit_vector_cast_to_bit_vector(0, &(SP_normalization_required), &(AND_u1_u1_11006));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11023_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11010,1);\
__declare_static_bit_vector(NOT_u1_u1_11012,1);\
__declare_static_bit_vector(AND_u1_u1_11013,1);\
__declare_static_bit_vector(NOT_u1_u1_11015,1);\
__declare_static_bit_vector(AND_u1_u1_11016,1);\
__declare_static_bit_vector(NOT_u1_u1_11018,1);\
__declare_static_bit_vector(NOT_u1_u1_11020,1);\
__declare_static_bit_vector(AND_u1_u1_11021,1);\
__declare_static_bit_vector(AND_u1_u1_11022,1);\
bit_vector_not( &(overflow), &(NOT_u1_u1_11010));\
bit_vector_not( &(underflow), &(NOT_u1_u1_11012));\
bit_vector_and(&(NOT_u1_u1_11010), &(NOT_u1_u1_11012), &(AND_u1_u1_11013));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_11015));\
bit_vector_and(&(AND_u1_u1_11013), &(NOT_u1_u1_11015), &(AND_u1_u1_11016));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_11018));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_11020));\
bit_vector_and(&(NOT_u1_u1_11018), &(NOT_u1_u1_11020), &(AND_u1_u1_11021));\
bit_vector_and(&(AND_u1_u1_11016), &(AND_u1_u1_11021), &(AND_u1_u1_11022));\
bit_vector_cast_to_bit_vector(0, &(DP_nothing_to_be_done_condition_normal), &(AND_u1_u1_11022));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11037_c_macro_ __declare_static_bit_vector(OR_u1_u1_11027,1);\
__declare_static_bit_vector(NOT_u1_u1_11029,1);\
__declare_static_bit_vector(AND_u1_u1_11030,1);\
__declare_static_bit_vector(NOT_u1_u1_11032,1);\
__declare_static_bit_vector(NOT_u1_u1_11034,1);\
__declare_static_bit_vector(AND_u1_u1_11035,1);\
__declare_static_bit_vector(AND_u1_u1_11036,1);\
bit_vector_or(&(overflow), &(underflow), &(OR_u1_u1_11027));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_11029));\
bit_vector_and(&(OR_u1_u1_11027), &(NOT_u1_u1_11029), &(AND_u1_u1_11030));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_11032));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_11034));\
bit_vector_and(&(NOT_u1_u1_11032), &(NOT_u1_u1_11034), &(AND_u1_u1_11035));\
bit_vector_and(&(AND_u1_u1_11030), &(AND_u1_u1_11035), &(AND_u1_u1_11036));\
bit_vector_cast_to_bit_vector(0, &(DP_normalization_required), &(AND_u1_u1_11036));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11043_c_macro_ __declare_static_bit_vector(MUX_11042,1);\
if (has_undefined_bit(&double_precision_outputs)) {fprintf(stderr, "Error: variable double_precision_outputs has undefined value (%s) at test point.\n", to_string(&double_precision_outputs));assert(0);} \
if(bit_vector_to_uint64(0, &double_precision_outputs)){bit_vector_cast_to_bit_vector(0, &(MUX_11042), &(DP_normalization_required));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11042), &(SP_normalization_required));\
}bit_vector_cast_to_bit_vector(0, &(normalization_required), &(MUX_11042));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11049_c_macro_ __declare_static_bit_vector(MUX_11048,1);\
if (has_undefined_bit(&double_precision_outputs)) {fprintf(stderr, "Error: variable double_precision_outputs has undefined value (%s) at test point.\n", to_string(&double_precision_outputs));assert(0);} \
if(bit_vector_to_uint64(0, &double_precision_outputs)){bit_vector_cast_to_bit_vector(0, &(MUX_11048), &(DP_nothing_to_be_done_condition_normal));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11048), &(SP_nothing_to_be_done_condition_normal));\
}bit_vector_cast_to_bit_vector(0, &(nothing_to_be_done_condition_normal), &(MUX_11048));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11076_c_macro_ __declare_static_bit_vector(konst_11053,13);\
bit_vector_clear(&konst_11053);\
__declare_static_bit_vector(MUX_11054,13);\
__declare_static_bit_vector(konst_11057,13);\
bit_vector_clear(&konst_11057);\
__declare_static_bit_vector(MUX_11058,13);\
__declare_static_bit_vector(OR_i13_i13_11059,13);\
__declare_static_bit_vector(type_cast_11062,13);\
bit_vector_clear(&type_cast_11062);\
__declare_static_bit_vector(konst_11063,13);\
bit_vector_clear(&konst_11063);\
__declare_static_bit_vector(MUX_11064,13);\
__declare_static_bit_vector(OR_i13_i13_11065,13);\
__declare_static_bit_vector(konst_11068,13);\
bit_vector_clear(&konst_11068);\
__declare_static_bit_vector(MUX_11069,13);\
__declare_static_bit_vector(konst_11072,13);\
bit_vector_clear(&konst_11072);\
__declare_static_bit_vector(MUX_11073,13);\
__declare_static_bit_vector(OR_i13_i13_11074,13);\
__declare_static_bit_vector(OR_i13_i13_11075,13);\
if (has_undefined_bit(&condition_nan)) {fprintf(stderr, "Error: variable condition_nan has undefined value (%s) at test point.\n", to_string(&condition_nan));assert(0);} \
if(bit_vector_to_uint64(0, &condition_nan)){bit_vector_cast_to_bit_vector(1, &(MUX_11054), &(ALL_ONE_13));\
}else {bit_vector_clear(&konst_11053);\
bit_vector_cast_to_bit_vector(1, &(MUX_11054), &(konst_11053));\
}if (has_undefined_bit(&condition_inf)) {fprintf(stderr, "Error: variable condition_inf has undefined value (%s) at test point.\n", to_string(&condition_inf));assert(0);} \
if(bit_vector_to_uint64(0, &condition_inf)){bit_vector_cast_to_bit_vector(1, &(MUX_11058), &(ALL_ONE_13));\
}else {bit_vector_clear(&konst_11057);\
bit_vector_cast_to_bit_vector(1, &(MUX_11058), &(konst_11057));\
}bit_vector_or(&(MUX_11054), &(MUX_11058), &(OR_i13_i13_11059));\
if (has_undefined_bit(&condition_zero)) {fprintf(stderr, "Error: variable condition_zero has undefined value (%s) at test point.\n", to_string(&condition_zero));assert(0);} \
if(bit_vector_to_uint64(0, &condition_zero)){bit_vector_bitcast_to_bit_vector( &(type_cast_11062), &(ZERO_13));\
bit_vector_cast_to_bit_vector(1, &(MUX_11064), &(type_cast_11062));\
}else {bit_vector_clear(&konst_11063);\
bit_vector_cast_to_bit_vector(1, &(MUX_11064), &(konst_11063));\
}bit_vector_or(&(OR_i13_i13_11059), &(MUX_11064), &(OR_i13_i13_11065));\
if (has_undefined_bit(&nothing_to_be_done_condition_normal)) {fprintf(stderr, "Error: variable nothing_to_be_done_condition_normal has undefined value (%s) at test point.\n", to_string(&nothing_to_be_done_condition_normal));assert(0);} \
if(bit_vector_to_uint64(0, &nothing_to_be_done_condition_normal)){bit_vector_cast_to_bit_vector(1, &(MUX_11069), &(final_exponent_without_bias));\
}else {bit_vector_clear(&konst_11068);\
bit_vector_cast_to_bit_vector(1, &(MUX_11069), &(konst_11068));\
}if (has_undefined_bit(&normalization_required)) {fprintf(stderr, "Error: variable normalization_required has undefined value (%s) at test point.\n", to_string(&normalization_required));assert(0);} \
if(bit_vector_to_uint64(0, &normalization_required)){bit_vector_cast_to_bit_vector(1, &(MUX_11073), &(final_exponent_without_bias));\
}else {bit_vector_clear(&konst_11072);\
bit_vector_cast_to_bit_vector(1, &(MUX_11073), &(konst_11072));\
}bit_vector_or(&(MUX_11069), &(MUX_11073), &(OR_i13_i13_11074));\
bit_vector_or(&(OR_i13_i13_11065), &(OR_i13_i13_11074), &(OR_i13_i13_11075));\
bit_vector_cast_to_bit_vector(1, &(exponent_to_be_passed), &(OR_i13_i13_11075));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11098_c_macro_ __declare_static_bit_vector(CONCAT_u1_u62_11081,62);\
bit_vector_clear(&CONCAT_u1_u62_11081);\
CONCAT_u1_u62_11081.val.byte_array[7] = 32;\
__declare_static_bit_vector(konst_11082,62);\
bit_vector_clear(&konst_11082);\
__declare_static_bit_vector(MUX_11083,62);\
__declare_static_bit_vector(OR_u1_u1_11086,1);\
__declare_static_bit_vector(konst_11088,62);\
bit_vector_clear(&konst_11088);\
__declare_static_bit_vector(MUX_11089,62);\
__declare_static_bit_vector(OR_u62_u62_11090,62);\
__declare_static_bit_vector(OR_u1_u1_11093,1);\
__declare_static_bit_vector(konst_11095,62);\
bit_vector_clear(&konst_11095);\
__declare_static_bit_vector(MUX_11096,62);\
__declare_static_bit_vector(OR_u62_u62_11097,62);\
if (has_undefined_bit(&condition_nan)) {fprintf(stderr, "Error: variable condition_nan has undefined value (%s) at test point.\n", to_string(&condition_nan));assert(0);} \
if(bit_vector_to_uint64(0, &condition_nan)){bit_vector_concatenate( &(ONE_1), &(ZERO_61), &(CONCAT_u1_u62_11081));\
bit_vector_cast_to_bit_vector(0, &(MUX_11083), &(CONCAT_u1_u62_11081));\
}else {bit_vector_clear(&konst_11082);\
bit_vector_cast_to_bit_vector(0, &(MUX_11083), &(konst_11082));\
}bit_vector_or(&(condition_inf), &(condition_zero), &(OR_u1_u1_11086));\
if (has_undefined_bit(&OR_u1_u1_11086)) {fprintf(stderr, "Error: variable OR_u1_u1_11086 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_11086));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_11086)){bit_vector_cast_to_bit_vector(0, &(MUX_11089), &(ZERO_62));\
}else {bit_vector_clear(&konst_11088);\
bit_vector_cast_to_bit_vector(0, &(MUX_11089), &(konst_11088));\
}bit_vector_or(&(MUX_11083), &(MUX_11089), &(OR_u62_u62_11090));\
bit_vector_or(&(nothing_to_be_done_condition_normal), &(normalization_required), &(OR_u1_u1_11093));\
if (has_undefined_bit(&OR_u1_u1_11093)) {fprintf(stderr, "Error: variable OR_u1_u1_11093 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_11093));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_11093)){bit_vector_cast_to_bit_vector(0, &(MUX_11096), &(final_mantissa_62_aligned));\
}else {bit_vector_clear(&konst_11095);\
bit_vector_cast_to_bit_vector(0, &(MUX_11096), &(konst_11095));\
}bit_vector_or(&(OR_u62_u62_11090), &(MUX_11096), &(OR_u62_u62_11097));\
bit_vector_cast_to_bit_vector(0, &(mantissa_to_be_passed), &(OR_u62_u62_11097));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11127_c_macro_ __declare_static_bit_vector(AND_u1_u1_11102,1);\
__declare_static_bit_vector(AND_u1_u1_11104,1);\
__declare_static_bit_vector(NOT_u1_u1_11107,1);\
__declare_static_bit_vector(AND_u1_u1_11108,1);\
__declare_static_bit_vector(NOT_u1_u1_11110,1);\
__declare_static_bit_vector(AND_u1_u1_11111,1);\
__declare_static_bit_vector(OR_u1_u1_11112,1);\
__declare_static_bit_vector(AND_u1_u1_11115,1);\
__declare_static_bit_vector(AND_u1_u1_11117,1);\
__declare_static_bit_vector(NOT_u1_u1_11120,1);\
__declare_static_bit_vector(AND_u1_u1_11121,1);\
__declare_static_bit_vector(NOT_u1_u1_11123,1);\
__declare_static_bit_vector(AND_u1_u1_11124,1);\
__declare_static_bit_vector(OR_u1_u1_11125,1);\
__declare_static_bit_vector(OR_u1_u1_11126,1);\
bit_vector_and(&(a_was_shifted), &(a_negative), &(AND_u1_u1_11102));\
bit_vector_and(&(AND_u1_u1_11102), &(b_negative), &(AND_u1_u1_11104));\
bit_vector_not( &(a_negative), &(NOT_u1_u1_11107));\
bit_vector_and(&(a_was_shifted), &(NOT_u1_u1_11107), &(AND_u1_u1_11108));\
bit_vector_not( &(b_negative), &(NOT_u1_u1_11110));\
bit_vector_and(&(AND_u1_u1_11108), &(NOT_u1_u1_11110), &(AND_u1_u1_11111));\
bit_vector_or(&(AND_u1_u1_11104), &(AND_u1_u1_11111), &(OR_u1_u1_11112));\
bit_vector_and(&(b_was_shifted), &(a_negative), &(AND_u1_u1_11115));\
bit_vector_and(&(AND_u1_u1_11115), &(b_negative), &(AND_u1_u1_11117));\
bit_vector_not( &(a_negative), &(NOT_u1_u1_11120));\
bit_vector_and(&(b_was_shifted), &(NOT_u1_u1_11120), &(AND_u1_u1_11121));\
bit_vector_not( &(b_negative), &(NOT_u1_u1_11123));\
bit_vector_and(&(AND_u1_u1_11121), &(NOT_u1_u1_11123), &(AND_u1_u1_11124));\
bit_vector_or(&(AND_u1_u1_11117), &(AND_u1_u1_11124), &(OR_u1_u1_11125));\
bit_vector_or(&(OR_u1_u1_11112), &(OR_u1_u1_11125), &(OR_u1_u1_11126));\
bit_vector_cast_to_bit_vector(0, &(condition_to_pass_sticky_bit), &(OR_u1_u1_11126));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11141_c_macro_ __declare_static_bit_vector(AND_u1_u1_11131,1);\
__declare_static_bit_vector(NOT_u1_u1_11133,1);\
__declare_static_bit_vector(AND_u1_u1_11134,1);\
__declare_static_bit_vector(NOT_u1_u1_11136,1);\
__declare_static_bit_vector(NOT_u1_u1_11138,1);\
__declare_static_bit_vector(AND_u1_u1_11139,1);\
__declare_static_bit_vector(AND_u1_u1_11140,1);\
bit_vector_and(&(sticky_temp), &(condition_to_pass_sticky_bit), &(AND_u1_u1_11131));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_11133));\
bit_vector_and(&(AND_u1_u1_11131), &(NOT_u1_u1_11133), &(AND_u1_u1_11134));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_11136));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_11138));\
bit_vector_and(&(NOT_u1_u1_11136), &(NOT_u1_u1_11138), &(AND_u1_u1_11139));\
bit_vector_and(&(AND_u1_u1_11134), &(AND_u1_u1_11139), &(AND_u1_u1_11140));\
bit_vector_cast_to_bit_vector(0, &(sticky), &(AND_u1_u1_11140));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11153_c_macro_ __declare_static_bit_vector(NOT_u1_u1_11145,1);\
__declare_static_bit_vector(AND_u1_u1_11146,1);\
__declare_static_bit_vector(NOT_u1_u1_11148,1);\
__declare_static_bit_vector(NOT_u1_u1_11150,1);\
__declare_static_bit_vector(AND_u1_u1_11151,1);\
__declare_static_bit_vector(AND_u1_u1_11152,1);\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_11145));\
bit_vector_and(&(normalization_required), &(NOT_u1_u1_11145), &(AND_u1_u1_11146));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_11148));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_11150));\
bit_vector_and(&(NOT_u1_u1_11148), &(NOT_u1_u1_11150), &(AND_u1_u1_11151));\
bit_vector_and(&(AND_u1_u1_11146), &(AND_u1_u1_11151), &(AND_u1_u1_11152));\
bit_vector_cast_to_bit_vector(0, &(needs_norm), &(AND_u1_u1_11152));\
;

#define fpunit_exec_exec__fpadd64_op_assign_stmt_11171_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_11157,2);\
__declare_static_bit_vector(CONCAT_u1_u2_11160,2);\
__declare_static_bit_vector(CONCAT_u2_u4_11161,4);\
__declare_static_bit_vector(CONCAT_u1_u2_11164,2);\
__declare_static_bit_vector(type_cast_11166,13);\
__declare_static_bit_vector(CONCAT_u13_u75_11168,75);\
__declare_static_bit_vector(CONCAT_u2_u77_11169,77);\
__declare_static_bit_vector(CONCAT_u4_u81_11170,81);\
bit_vector_concatenate( &(sticky), &(apply_sticky_correction), &(CONCAT_u1_u2_11157));\
bit_vector_concatenate( &(sign_result), &(condition_nan), &(CONCAT_u1_u2_11160));\
bit_vector_concatenate( &(CONCAT_u1_u2_11157), &(CONCAT_u1_u2_11160), &(CONCAT_u2_u4_11161));\
bit_vector_concatenate( &(condition_inf), &(condition_zero), &(CONCAT_u1_u2_11164));\
bit_vector_bitcast_to_bit_vector( &(type_cast_11166), &(exponent_to_be_passed));\
bit_vector_concatenate( &(type_cast_11166), &(mantissa_to_be_passed), &(CONCAT_u13_u75_11168));\
bit_vector_concatenate( &(CONCAT_u1_u2_11164), &(CONCAT_u13_u75_11168), &(CONCAT_u2_u77_11169));\
bit_vector_concatenate( &(CONCAT_u2_u4_11161), &(CONCAT_u2_u77_11169), &(CONCAT_u4_u81_11170));\
bit_vector_cast_to_bit_vector(0, &(extn_result), &(CONCAT_u4_u81_11170));\
;

#define fpunit_exec_exec__fpadd64_op_stmt_11174_c_macro_ uint32_t fpunit_exec_exec__fpadd64_op_stmt_11174_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpadd64_op_stmt_11174_c_macro___print_counter,"fpadd64_op_final_results");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_11174_c_macro___print_counter,"exponent_to_be_passed");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(exponent_to_be_passed)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpadd64_op_stmt_11174_c_macro___print_counter,"mantissa_to_be_passed");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_to_be_passed)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpadd64_op_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pneeds_norm)), &(needs_norm));\
bit_vector_cast_to_bit_vector(0, &((*__pextn_result)), &(extn_result));\
;

#define fpunit_exec_exec__fpadd64_wrap_inner_inarg_prep_macro__ static double X;\
X = (*__pX);\
static double Y;\
Y = (*__pY);\
static double RESULT;\
__declare_static_bit_vector(xpn,1);\
__declare_static_bit_vector(xnn,1);\
__declare_static_bit_vector(xpd,1);\
__declare_static_bit_vector(xnd,1);\
__declare_static_bit_vector(xqnan,1);\
__declare_static_bit_vector(xsnan,1);\
__declare_static_bit_vector(xpi,1);\
__declare_static_bit_vector(xni,1);\
__declare_static_bit_vector(xpz,1);\
__declare_static_bit_vector(xnz,1);\
__declare_static_bit_vector(x_class,10);\
__declare_static_bit_vector(ypn,1);\
__declare_static_bit_vector(ynn,1);\
__declare_static_bit_vector(ypd,1);\
__declare_static_bit_vector(ynd,1);\
__declare_static_bit_vector(yqnan,1);\
__declare_static_bit_vector(ysnan,1);\
__declare_static_bit_vector(ypi,1);\
__declare_static_bit_vector(yni,1);\
__declare_static_bit_vector(ypz,1);\
__declare_static_bit_vector(ynz,1);\
__declare_static_bit_vector(y_class,10);\
__declare_static_bit_vector(denormalize_flag_add,1);\
__declare_static_bit_vector(extn_result_add,81);\
__declare_static_bit_vector(addd_result_fast,64);\
__declare_static_bit_vector(addd_result_slow,64);\

#define fpunit_exec_exec__fpadd64_wrap_call_stmt_18721_c_macro_ _fpunit_exec_exec_classFp64_( &(X), &(xpn), &(xnn), &(xpd), &(xnd), &(xqnan), &(xsnan), &(xpi), &(xni), &(xpz), &(xnz));\
;

#define fpunit_exec_exec__fpadd64_wrap_assign_stmt_18742_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18725,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18727,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18730,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18731,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18734,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18736,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18739,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18740,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18741,10);\
bit_vector_concatenate( &(xpn), &(xnn), &(CONCAT_u1_u2_18725));\
bit_vector_concatenate( &(CONCAT_u1_u2_18725), &(xpd), &(CONCAT_u2_u3_18727));\
bit_vector_concatenate( &(xnd), &(xqnan), &(CONCAT_u1_u2_18730));\
bit_vector_concatenate( &(CONCAT_u2_u3_18727), &(CONCAT_u1_u2_18730), &(CONCAT_u3_u5_18731));\
bit_vector_concatenate( &(xsnan), &(xpi), &(CONCAT_u1_u2_18734));\
bit_vector_concatenate( &(CONCAT_u1_u2_18734), &(xni), &(CONCAT_u2_u3_18736));\
bit_vector_concatenate( &(xpz), &(xnz), &(CONCAT_u1_u2_18739));\
bit_vector_concatenate( &(CONCAT_u2_u3_18736), &(CONCAT_u1_u2_18739), &(CONCAT_u3_u5_18740));\
bit_vector_concatenate( &(CONCAT_u3_u5_18731), &(CONCAT_u3_u5_18740), &(CONCAT_u5_u10_18741));\
bit_vector_cast_to_bit_vector(0, &(x_class), &(CONCAT_u5_u10_18741));\
;

#define fpunit_exec_exec__fpadd64_wrap_call_stmt_18754_c_macro_ _fpunit_exec_exec_classFp64_( &(Y), &(ypn), &(ynn), &(ypd), &(ynd), &(yqnan), &(ysnan), &(ypi), &(yni), &(ypz), &(ynz));\
;

#define fpunit_exec_exec__fpadd64_wrap_assign_stmt_18775_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18758,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18760,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18763,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18764,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18767,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18769,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18772,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18773,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18774,10);\
bit_vector_concatenate( &(ypn), &(ynn), &(CONCAT_u1_u2_18758));\
bit_vector_concatenate( &(CONCAT_u1_u2_18758), &(ypd), &(CONCAT_u2_u3_18760));\
bit_vector_concatenate( &(ynd), &(yqnan), &(CONCAT_u1_u2_18763));\
bit_vector_concatenate( &(CONCAT_u2_u3_18760), &(CONCAT_u1_u2_18763), &(CONCAT_u3_u5_18764));\
bit_vector_concatenate( &(ysnan), &(ypi), &(CONCAT_u1_u2_18767));\
bit_vector_concatenate( &(CONCAT_u1_u2_18767), &(yni), &(CONCAT_u2_u3_18769));\
bit_vector_concatenate( &(ypz), &(ynz), &(CONCAT_u1_u2_18772));\
bit_vector_concatenate( &(CONCAT_u2_u3_18769), &(CONCAT_u1_u2_18772), &(CONCAT_u3_u5_18773));\
bit_vector_concatenate( &(CONCAT_u3_u5_18764), &(CONCAT_u3_u5_18773), &(CONCAT_u5_u10_18774));\
bit_vector_cast_to_bit_vector(0, &(y_class), &(CONCAT_u5_u10_18774));\
;

#define fpunit_exec_exec__fpadd64_wrap_call_stmt_18790_c_macro_ __declare_static_bit_vector(konst_18778,32);\
bit_vector_clear(&konst_18778);\
__declare_static_bit_vector(konst_18779,10);\
bit_vector_clear(&konst_18779);\
__declare_static_bit_vector(konst_18780,32);\
bit_vector_clear(&konst_18780);\
__declare_static_bit_vector(konst_18781,10);\
bit_vector_clear(&konst_18781);\
__declare_static_bit_vector(type_cast_18783,64);\
__declare_static_bit_vector(type_cast_18786,64);\
bit_vector_clear(&konst_18778);\
bit_vector_clear(&konst_18779);\
bit_vector_clear(&konst_18780);\
bit_vector_clear(&konst_18781);\
double_bitcast_to_bit_vector( &(type_cast_18783), &(X));\
double_bitcast_to_bit_vector( &(type_cast_18786), &(Y));\
_fpunit_exec_exec_fpadd64_op_( &(ZERO_1),  &(ONE_1),  &(konst_18778),  &(konst_18779),  &(konst_18780),  &(konst_18781),  &(type_cast_18783),  &(x_class),  &(type_cast_18786),  &(y_class), &(denormalize_flag_add), &(extn_result_add));\
;

#define fpunit_exec_exec__fpadd64_wrap_call_stmt_18793_c_macro_ _fpunit_exec_exec_round_fp_64_( &(extn_result_add), &(addd_result_fast));\
;

#define fpunit_exec_exec__fpadd64_wrap_call_stmt_18797_c_macro_ if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_add)) {\
_fpunit_exec_exec_denormalize_fp_64_( &(extn_result_add), &(addd_result_slow));\
}\
;

#define fpunit_exec_exec__fpadd64_wrap_assign_stmt_18804_c_macro_ __declare_static_bit_vector(MUX_18802,64);\
static double type_cast_18803;\
if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_add)){bit_vector_cast_to_bit_vector(0, &(MUX_18802), &(addd_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_18802), &(addd_result_fast));\
}bit_vector_bitcast_to_double( &(type_cast_18803),  &(MUX_18802));\
RESULT = type_cast_18803;\
;

#define fpunit_exec_exec__fpadd64_wrap_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fpadd64_wrap_outer_arg_decl_macro__ double __X = X;\
double __Y = Y;\
;

#define fpunit_exec_exec__fpadd64_wrap_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fpcmp32_inner_inarg_prep_macro__ static float a;\
a = (*__pa);\
static float b;\
b = (*__pb);\
__declare_static_bit_vector(e_flag,1);\
bit_vector_cast_to_bit_vector(0, &(e_flag), &((*__pe_flag)));\
__declare_static_bit_vector(cmp_flags,2);\

#define fpunit_exec_exec__fpcmp32_assign_stmt_15288_c_macro_ __declare_static_bit_vector(EQ_f32_u1_15263,1);\
__declare_static_bit_vector(konst_15264,2);\
bit_vector_clear(&konst_15264);\
__declare_static_bit_vector(konst_15265,2);\
bit_vector_clear(&konst_15265);\
__declare_static_bit_vector(MUX_15266,2);\
__declare_static_bit_vector(SLT_f32_u1_15269,1);\
__declare_static_bit_vector(konst_15270,2);\
bit_vector_clear(&konst_15270);\
konst_15270.val.byte_array[0] = 1;\
__declare_static_bit_vector(konst_15271,2);\
bit_vector_clear(&konst_15271);\
__declare_static_bit_vector(MUX_15272,2);\
__declare_static_bit_vector(OR_u2_u2_15273,2);\
__declare_static_bit_vector(SGT_f32_u1_15276,1);\
__declare_static_bit_vector(konst_15277,2);\
bit_vector_clear(&konst_15277);\
konst_15277.val.byte_array[0] = 2;\
__declare_static_bit_vector(konst_15278,2);\
bit_vector_clear(&konst_15278);\
__declare_static_bit_vector(MUX_15279,2);\
__declare_static_bit_vector(UNORDERED_f32_u1_15282,1);\
__declare_static_bit_vector(konst_15283,2);\
bit_vector_clear(&konst_15283);\
konst_15283.val.byte_array[0] = 3;\
__declare_static_bit_vector(konst_15284,2);\
bit_vector_clear(&konst_15284);\
__declare_static_bit_vector(MUX_15285,2);\
__declare_static_bit_vector(OR_u2_u2_15286,2);\
__declare_static_bit_vector(OR_u2_u2_15287,2);\
bit_vector_assign_uint64(0, &(EQ_f32_u1_15263), (a == b));\
if (has_undefined_bit(&EQ_f32_u1_15263)) {fprintf(stderr, "Error: variable EQ_f32_u1_15263 has undefined value (%s) at test point.\n", to_string(&EQ_f32_u1_15263));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_f32_u1_15263)){bit_vector_clear(&konst_15264);\
bit_vector_cast_to_bit_vector(0, &(MUX_15266), &(konst_15264));\
}else {bit_vector_clear(&konst_15265);\
bit_vector_cast_to_bit_vector(0, &(MUX_15266), &(konst_15265));\
}bit_vector_assign_uint64(0, &(SLT_f32_u1_15269), (a < b));\
if (has_undefined_bit(&SLT_f32_u1_15269)) {fprintf(stderr, "Error: variable SLT_f32_u1_15269 has undefined value (%s) at test point.\n", to_string(&SLT_f32_u1_15269));assert(0);} \
if(bit_vector_to_uint64(0, &SLT_f32_u1_15269)){bit_vector_clear(&konst_15270);\
konst_15270.val.byte_array[0] = 1;\
bit_vector_cast_to_bit_vector(0, &(MUX_15272), &(konst_15270));\
}else {bit_vector_clear(&konst_15271);\
bit_vector_cast_to_bit_vector(0, &(MUX_15272), &(konst_15271));\
}bit_vector_or(&(MUX_15266), &(MUX_15272), &(OR_u2_u2_15273));\
bit_vector_assign_uint64(0, &(SGT_f32_u1_15276), (a > b));\
if (has_undefined_bit(&SGT_f32_u1_15276)) {fprintf(stderr, "Error: variable SGT_f32_u1_15276 has undefined value (%s) at test point.\n", to_string(&SGT_f32_u1_15276));assert(0);} \
if(bit_vector_to_uint64(0, &SGT_f32_u1_15276)){bit_vector_clear(&konst_15277);\
konst_15277.val.byte_array[0] = 2;\
bit_vector_cast_to_bit_vector(0, &(MUX_15279), &(konst_15277));\
}else {bit_vector_clear(&konst_15278);\
bit_vector_cast_to_bit_vector(0, &(MUX_15279), &(konst_15278));\
}if(fp32_unordered(a,b)) bit_vector_set(&(UNORDERED_f32_u1_15282)); else bit_vector_clear(&(UNORDERED_f32_u1_15282));\
if (has_undefined_bit(&UNORDERED_f32_u1_15282)) {fprintf(stderr, "Error: variable UNORDERED_f32_u1_15282 has undefined value (%s) at test point.\n", to_string(&UNORDERED_f32_u1_15282));assert(0);} \
if(bit_vector_to_uint64(0, &UNORDERED_f32_u1_15282)){bit_vector_clear(&konst_15283);\
konst_15283.val.byte_array[0] = 3;\
bit_vector_cast_to_bit_vector(0, &(MUX_15285), &(konst_15283));\
}else {bit_vector_clear(&konst_15284);\
bit_vector_cast_to_bit_vector(0, &(MUX_15285), &(konst_15284));\
}bit_vector_or(&(MUX_15279), &(MUX_15285), &(OR_u2_u2_15286));\
bit_vector_or(&(OR_u2_u2_15273), &(OR_u2_u2_15286), &(OR_u2_u2_15287));\
bit_vector_cast_to_bit_vector(0, &(cmp_flags), &(OR_u2_u2_15287));\
;

#define fpunit_exec_exec__fpcmp32_stmt_15292_c_macro_ uint32_t fpunit_exec_exec__fpcmp32_stmt_15292_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpcmp32_stmt_15292_c_macro___print_counter,"fpcmp32_trace__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpcmp32_stmt_15292_c_macro___print_counter,"a");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",a);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpcmp32_stmt_15292_c_macro___print_counter,"b");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",b);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpcmp32_stmt_15292_c_macro___print_counter,"cmp_flags");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(cmp_flags)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpcmp32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pcmp_flags)), &(cmp_flags));\
;

#define fpunit_exec_exec__fpcmp64_inner_inarg_prep_macro__ static double a;\
a = (*__pa);\
static double b;\
b = (*__pb);\
__declare_static_bit_vector(e_flag,1);\
bit_vector_cast_to_bit_vector(0, &(e_flag), &((*__pe_flag)));\
__declare_static_bit_vector(cmp_flags,2);\

#define fpunit_exec_exec__fpcmp64_assign_stmt_16366_c_macro_ __declare_static_bit_vector(EQ_f64_u1_16341,1);\
__declare_static_bit_vector(konst_16342,2);\
bit_vector_clear(&konst_16342);\
__declare_static_bit_vector(konst_16343,2);\
bit_vector_clear(&konst_16343);\
__declare_static_bit_vector(MUX_16344,2);\
__declare_static_bit_vector(SLT_f64_u1_16347,1);\
__declare_static_bit_vector(konst_16348,2);\
bit_vector_clear(&konst_16348);\
konst_16348.val.byte_array[0] = 1;\
__declare_static_bit_vector(konst_16349,2);\
bit_vector_clear(&konst_16349);\
__declare_static_bit_vector(MUX_16350,2);\
__declare_static_bit_vector(OR_u2_u2_16351,2);\
__declare_static_bit_vector(SGT_f64_u1_16354,1);\
__declare_static_bit_vector(konst_16355,2);\
bit_vector_clear(&konst_16355);\
konst_16355.val.byte_array[0] = 2;\
__declare_static_bit_vector(konst_16356,2);\
bit_vector_clear(&konst_16356);\
__declare_static_bit_vector(MUX_16357,2);\
__declare_static_bit_vector(UNORDERED_f64_u1_16360,1);\
__declare_static_bit_vector(konst_16361,2);\
bit_vector_clear(&konst_16361);\
konst_16361.val.byte_array[0] = 3;\
__declare_static_bit_vector(konst_16362,2);\
bit_vector_clear(&konst_16362);\
__declare_static_bit_vector(MUX_16363,2);\
__declare_static_bit_vector(OR_u2_u2_16364,2);\
__declare_static_bit_vector(OR_u2_u2_16365,2);\
bit_vector_assign_uint64(0, &(EQ_f64_u1_16341), (a == b));\
if (has_undefined_bit(&EQ_f64_u1_16341)) {fprintf(stderr, "Error: variable EQ_f64_u1_16341 has undefined value (%s) at test point.\n", to_string(&EQ_f64_u1_16341));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_f64_u1_16341)){bit_vector_clear(&konst_16342);\
bit_vector_cast_to_bit_vector(0, &(MUX_16344), &(konst_16342));\
}else {bit_vector_clear(&konst_16343);\
bit_vector_cast_to_bit_vector(0, &(MUX_16344), &(konst_16343));\
}bit_vector_assign_uint64(0, &(SLT_f64_u1_16347), (a < b));\
if (has_undefined_bit(&SLT_f64_u1_16347)) {fprintf(stderr, "Error: variable SLT_f64_u1_16347 has undefined value (%s) at test point.\n", to_string(&SLT_f64_u1_16347));assert(0);} \
if(bit_vector_to_uint64(0, &SLT_f64_u1_16347)){bit_vector_clear(&konst_16348);\
konst_16348.val.byte_array[0] = 1;\
bit_vector_cast_to_bit_vector(0, &(MUX_16350), &(konst_16348));\
}else {bit_vector_clear(&konst_16349);\
bit_vector_cast_to_bit_vector(0, &(MUX_16350), &(konst_16349));\
}bit_vector_or(&(MUX_16344), &(MUX_16350), &(OR_u2_u2_16351));\
bit_vector_assign_uint64(0, &(SGT_f64_u1_16354), (a > b));\
if (has_undefined_bit(&SGT_f64_u1_16354)) {fprintf(stderr, "Error: variable SGT_f64_u1_16354 has undefined value (%s) at test point.\n", to_string(&SGT_f64_u1_16354));assert(0);} \
if(bit_vector_to_uint64(0, &SGT_f64_u1_16354)){bit_vector_clear(&konst_16355);\
konst_16355.val.byte_array[0] = 2;\
bit_vector_cast_to_bit_vector(0, &(MUX_16357), &(konst_16355));\
}else {bit_vector_clear(&konst_16356);\
bit_vector_cast_to_bit_vector(0, &(MUX_16357), &(konst_16356));\
}if(fp64_unordered(a,b)) bit_vector_set(&(UNORDERED_f64_u1_16360)); else bit_vector_clear(&(UNORDERED_f64_u1_16360));\
if (has_undefined_bit(&UNORDERED_f64_u1_16360)) {fprintf(stderr, "Error: variable UNORDERED_f64_u1_16360 has undefined value (%s) at test point.\n", to_string(&UNORDERED_f64_u1_16360));assert(0);} \
if(bit_vector_to_uint64(0, &UNORDERED_f64_u1_16360)){bit_vector_clear(&konst_16361);\
konst_16361.val.byte_array[0] = 3;\
bit_vector_cast_to_bit_vector(0, &(MUX_16363), &(konst_16361));\
}else {bit_vector_clear(&konst_16362);\
bit_vector_cast_to_bit_vector(0, &(MUX_16363), &(konst_16362));\
}bit_vector_or(&(MUX_16357), &(MUX_16363), &(OR_u2_u2_16364));\
bit_vector_or(&(OR_u2_u2_16351), &(OR_u2_u2_16364), &(OR_u2_u2_16365));\
bit_vector_cast_to_bit_vector(0, &(cmp_flags), &(OR_u2_u2_16365));\
;

#define fpunit_exec_exec__fpcmp64_stmt_16370_c_macro_ uint32_t fpunit_exec_exec__fpcmp64_stmt_16370_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__fpcmp64_stmt_16370_c_macro___print_counter,"fpcmp64_trace__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpcmp64_stmt_16370_c_macro___print_counter,"a");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",a);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpcmp64_stmt_16370_c_macro___print_counter,"b");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",b);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__fpcmp64_stmt_16370_c_macro___print_counter,"cmp_flags");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(cmp_flags)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpcmp64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pcmp_flags)), &(cmp_flags));\
;

#define fpunit_exec_exec__fpdivide32_inner_inarg_prep_macro__ static float f1_s;\
f1_s = (*__pf1_s);\
static float f2_s;\
f2_s = (*__pf2_s);\
static float f1BYf2;\
__declare_static_bit_vector(uf1_s,32);\
__declare_static_bit_vector(uf2_s,32);\
__declare_static_bit_vector(sign_uf1_s,1);\
__declare_static_bit_vector(sign_uf2_s,1);\
__declare_static_bit_vector(sign_result,1);\
__declare_static_bit_vector(f1_s_pos_normal,1);\
__declare_static_bit_vector(f1_s_neg_normal,1);\
__declare_static_bit_vector(f1_s_pos_denormal,1);\
__declare_static_bit_vector(f1_s_neg_denormal,1);\
__declare_static_bit_vector(f1_s_qnan,1);\
__declare_static_bit_vector(f1_s_snan,1);\
__declare_static_bit_vector(f1_s_pos_inf,1);\
__declare_static_bit_vector(f1_s_neg_inf,1);\
__declare_static_bit_vector(f1_s_pos_zero,1);\
__declare_static_bit_vector(f1_s_neg_zero,1);\
__declare_static_bit_vector(f2_s_pos_normal,1);\
__declare_static_bit_vector(f2_s_neg_normal,1);\
__declare_static_bit_vector(f2_s_pos_denormal,1);\
__declare_static_bit_vector(f2_s_neg_denormal,1);\
__declare_static_bit_vector(f2_s_qnan,1);\
__declare_static_bit_vector(f2_s_snan,1);\
__declare_static_bit_vector(f2_s_pos_inf,1);\
__declare_static_bit_vector(f2_s_neg_inf,1);\
__declare_static_bit_vector(f2_s_pos_zero,1);\
__declare_static_bit_vector(f2_s_neg_zero,1);\
__declare_static_bit_vector(f1_s_zero,1);\
__declare_static_bit_vector(f2_s_zero,1);\
__declare_static_bit_vector(f1_s_normal,1);\
__declare_static_bit_vector(f2_s_normal,1);\
__declare_static_bit_vector(f1_s_denormal,1);\
__declare_static_bit_vector(f2_s_denormal,1);\
__declare_static_bit_vector(f1_s_inf,1);\
__declare_static_bit_vector(f2_s_inf,1);\
__declare_static_bit_vector(f1_s_frac,24);\
__declare_static_bit_vector(f1_s_expon,10);\
__declare_static_bit_vector(f2_s_frac,24);\
__declare_static_bit_vector(f2_s_expon,10);\
__declare_static_bit_vector(f1_s_frac_norm,24);\
__declare_static_bit_vector(f1_s_expon_norm,10);\
__declare_static_bit_vector(f2_s_frac_norm,24);\
__declare_static_bit_vector(f2_s_expon_norm,10);\
__declare_static_bit_vector(f1_fraction,24);\
__declare_static_bit_vector(f2_fraction,24);\
__declare_static_bit_vector(f1_expon,10);\
__declare_static_bit_vector(f2_expon,10);\
__declare_static_bit_vector(expon_difference,10);\
__declare_static_bit_vector(quotient,29);\
__declare_static_bit_vector(quotient_MSB,1);\
__declare_static_bit_vector(mantissa_24_before_rounding,24);\
__declare_static_bit_vector(guard_bits_5,5);\
__declare_static_bit_vector(guard_bits_4,4);\
__declare_static_bit_vector(guard_5_up_round_condition,1);\
__declare_static_bit_vector(guard_4_up_round_condition,1);\
__declare_static_bit_vector(upround_the_mantissa,1);\
__declare_static_bit_vector(mantissa_24_incremented,24);\
__declare_static_bit_vector(mantissa_24_incr_top_bit,1);\
__declare_static_bit_vector(mantissa_23,23);\
__declare_static_bit_vector(exponent_adjustment,10);\
__declare_static_bit_vector(expon_bias,10);\
bit_vector_clear(&expon_bias);\
expon_bias.val.byte_array[0] = 127;\
__declare_static_bit_vector(exponent_before_round,10);\
__declare_static_bit_vector(exponent,10);\
__declare_static_bit_vector(exponent_unbiased,10);\
__declare_static_bit_vector(exponent_8,8);\
__declare_static_bit_vector(mantissa,23);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(underflow,1);\
__declare_static_bit_vector(qnan_condition,1);\
__declare_static_bit_vector(denorm_shift_amount,10);\
__declare_static_bit_vector(is_denormalizable,1);\
__declare_static_bit_vector(p,32);\
__declare_static_bit_vector(q,5);\
__declare_static_bit_vector(shifted,32);\
__declare_static_bit_vector(mantissa_denorm_final,23);\
__declare_static_bit_vector(result_denormal,32);\
__declare_static_bit_vector(result_normal,32);\
__declare_static_bit_vector(result_qnan,32);\
__declare_static_bit_vector(result_zero,32);\
__declare_static_bit_vector(result_infinity,32);\
__declare_static_bit_vector(underflow_not_denorm,1);\
__declare_static_bit_vector(zero_condition,1);\
__declare_static_bit_vector(inf_condition,1);\
__declare_static_bit_vector(normal_condition,1);\
__declare_static_bit_vector(result,32);\

#define fpunit_exec_exec__fpdivide32_assign_stmt_14440_c_macro_ __declare_static_bit_vector(type_cast_14439,32);\
float_bitcast_to_bit_vector( &(type_cast_14439), &(f1_s));\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &(type_cast_14439));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14444_c_macro_ __declare_static_bit_vector(type_cast_14443,32);\
float_bitcast_to_bit_vector( &(type_cast_14443), &(f2_s));\
bit_vector_cast_to_bit_vector(0, &(uf2_s), &(type_cast_14443));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14449_c_macro_ __declare_static_bit_vector(konst_14447,32);\
bit_vector_clear(&konst_14447);\
konst_14447.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_14448,1);\
bit_vector_clear(&konst_14447);\
konst_14447.val.byte_array[0] = 31;\
bit_vector_bitsel( &(uf1_s), &(konst_14447), &(BITSEL_u32_u1_14448));\
bit_vector_cast_to_bit_vector(0, &(sign_uf1_s), &(BITSEL_u32_u1_14448));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14454_c_macro_ __declare_static_bit_vector(konst_14452,32);\
bit_vector_clear(&konst_14452);\
konst_14452.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_14453,1);\
bit_vector_clear(&konst_14452);\
konst_14452.val.byte_array[0] = 31;\
bit_vector_bitsel( &(uf2_s), &(konst_14452), &(BITSEL_u32_u1_14453));\
bit_vector_cast_to_bit_vector(0, &(sign_uf2_s), &(BITSEL_u32_u1_14453));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14459_c_macro_ __declare_static_bit_vector(XOR_u1_u1_14458,1);\
bit_vector_xor(&(sign_uf1_s), &(sign_uf2_s), &(XOR_u1_u1_14458));\
bit_vector_cast_to_bit_vector(0, &(sign_result), &(XOR_u1_u1_14458));\
;

#define fpunit_exec_exec__fpdivide32_call_stmt_14471_c_macro_ _fpunit_exec_exec_classFp32_( &(f1_s), &(f1_s_pos_normal), &(f1_s_neg_normal), &(f1_s_pos_denormal), &(f1_s_neg_denormal), &(f1_s_qnan), &(f1_s_snan), &(f1_s_pos_inf), &(f1_s_neg_inf), &(f1_s_pos_zero), &(f1_s_neg_zero));\
;

#define fpunit_exec_exec__fpdivide32_call_stmt_14483_c_macro_ _fpunit_exec_exec_classFp32_( &(f2_s), &(f2_s_pos_normal), &(f2_s_neg_normal), &(f2_s_pos_denormal), &(f2_s_neg_denormal), &(f2_s_qnan), &(f2_s_snan), &(f2_s_pos_inf), &(f2_s_neg_inf), &(f2_s_pos_zero), &(f2_s_neg_zero));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14488_c_macro_ __declare_static_bit_vector(OR_u1_u1_14487,1);\
bit_vector_or(&(f1_s_pos_zero), &(f1_s_neg_zero), &(OR_u1_u1_14487));\
bit_vector_cast_to_bit_vector(0, &(f1_s_zero), &(OR_u1_u1_14487));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14493_c_macro_ __declare_static_bit_vector(OR_u1_u1_14492,1);\
bit_vector_or(&(f2_s_pos_zero), &(f2_s_neg_zero), &(OR_u1_u1_14492));\
bit_vector_cast_to_bit_vector(0, &(f2_s_zero), &(OR_u1_u1_14492));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14498_c_macro_ __declare_static_bit_vector(OR_u1_u1_14497,1);\
bit_vector_or(&(f1_s_pos_normal), &(f1_s_neg_normal), &(OR_u1_u1_14497));\
bit_vector_cast_to_bit_vector(0, &(f1_s_normal), &(OR_u1_u1_14497));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14503_c_macro_ __declare_static_bit_vector(OR_u1_u1_14502,1);\
bit_vector_or(&(f2_s_pos_normal), &(f2_s_neg_normal), &(OR_u1_u1_14502));\
bit_vector_cast_to_bit_vector(0, &(f2_s_normal), &(OR_u1_u1_14502));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14508_c_macro_ __declare_static_bit_vector(OR_u1_u1_14507,1);\
bit_vector_or(&(f1_s_pos_denormal), &(f1_s_neg_denormal), &(OR_u1_u1_14507));\
bit_vector_cast_to_bit_vector(0, &(f1_s_denormal), &(OR_u1_u1_14507));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14513_c_macro_ __declare_static_bit_vector(OR_u1_u1_14512,1);\
bit_vector_or(&(f2_s_pos_denormal), &(f2_s_neg_denormal), &(OR_u1_u1_14512));\
bit_vector_cast_to_bit_vector(0, &(f2_s_denormal), &(OR_u1_u1_14512));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14518_c_macro_ __declare_static_bit_vector(OR_u1_u1_14517,1);\
bit_vector_or(&(f1_s_pos_inf), &(f1_s_neg_inf), &(OR_u1_u1_14517));\
bit_vector_cast_to_bit_vector(0, &(f1_s_inf), &(OR_u1_u1_14517));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14523_c_macro_ __declare_static_bit_vector(OR_u1_u1_14522,1);\
bit_vector_or(&(f2_s_pos_inf), &(f2_s_neg_inf), &(OR_u1_u1_14522));\
bit_vector_cast_to_bit_vector(0, &(f2_s_inf), &(OR_u1_u1_14522));\
;

#define fpunit_exec_exec__fpdivide32_call_stmt_14534_c_macro_ _fpunit_exec_exec_break_number_32_( &(uf1_s),  &(f1_s_normal),  &(f1_s_denormal),  &(f1_s_qnan),  &(f1_s_snan),  &(f1_s_inf),  &(f1_s_zero),  &(DENORM), &(f1_s_frac), &(f1_s_expon));\
;

#define fpunit_exec_exec__fpdivide32_call_stmt_14545_c_macro_ _fpunit_exec_exec_break_number_32_( &(uf2_s),  &(f2_s_normal),  &(f2_s_denormal),  &(f2_s_qnan),  &(f2_s_snan),  &(f2_s_inf),  &(f2_s_zero),  &(DENORM), &(f2_s_frac), &(f2_s_expon));\
;

#define fpunit_exec_exec__fpdivide32_call_stmt_14551_c_macro_ if (has_undefined_bit(&f1_s_denormal)) {fprintf(stderr, "Error: variable f1_s_denormal has undefined value (%s) at test point.\n", to_string(&f1_s_denormal));assert(0);} \
if (bit_vector_to_uint64(0, &f1_s_denormal)) {\
_fpunit_exec_exec_normalize_32_( &(f1_s_frac),  &(f1_s_expon), &(f1_s_frac_norm), &(f1_s_expon_norm));\
}\
;

#define fpunit_exec_exec__fpdivide32_call_stmt_14557_c_macro_ if (has_undefined_bit(&f2_s_denormal)) {fprintf(stderr, "Error: variable f2_s_denormal has undefined value (%s) at test point.\n", to_string(&f2_s_denormal));assert(0);} \
if (bit_vector_to_uint64(0, &f2_s_denormal)) {\
_fpunit_exec_exec_normalize_32_( &(f2_s_frac),  &(f2_s_expon), &(f2_s_frac_norm), &(f2_s_expon_norm));\
}\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14563_c_macro_ __declare_static_bit_vector(MUX_14562,24);\
if (has_undefined_bit(&f1_s_denormal)) {fprintf(stderr, "Error: variable f1_s_denormal has undefined value (%s) at test point.\n", to_string(&f1_s_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_s_denormal)){bit_vector_cast_to_bit_vector(0, &(MUX_14562), &(f1_s_frac_norm));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14562), &(f1_s_frac));\
}bit_vector_cast_to_bit_vector(0, &(f1_fraction), &(MUX_14562));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14569_c_macro_ __declare_static_bit_vector(MUX_14568,24);\
if (has_undefined_bit(&f2_s_denormal)) {fprintf(stderr, "Error: variable f2_s_denormal has undefined value (%s) at test point.\n", to_string(&f2_s_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f2_s_denormal)){bit_vector_cast_to_bit_vector(0, &(MUX_14568), &(f2_s_frac_norm));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14568), &(f2_s_frac));\
}bit_vector_cast_to_bit_vector(0, &(f2_fraction), &(MUX_14568));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14575_c_macro_ __declare_static_bit_vector(MUX_14574,10);\
if (has_undefined_bit(&f1_s_denormal)) {fprintf(stderr, "Error: variable f1_s_denormal has undefined value (%s) at test point.\n", to_string(&f1_s_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_s_denormal)){bit_vector_cast_to_bit_vector(1, &(MUX_14574), &(f1_s_expon_norm));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_14574), &(f1_s_expon));\
}bit_vector_cast_to_bit_vector(1, &(f1_expon), &(MUX_14574));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14581_c_macro_ __declare_static_bit_vector(MUX_14580,10);\
if (has_undefined_bit(&f2_s_denormal)) {fprintf(stderr, "Error: variable f2_s_denormal has undefined value (%s) at test point.\n", to_string(&f2_s_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f2_s_denormal)){bit_vector_cast_to_bit_vector(1, &(MUX_14580), &(f2_s_expon_norm));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_14580), &(f2_s_expon));\
}bit_vector_cast_to_bit_vector(1, &(f2_expon), &(MUX_14580));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14586_c_macro_ __declare_static_bit_vector(SUB_i10_i10_14585,10);\
bit_vector_minus( &(f1_expon), &(f2_expon), &(SUB_i10_i10_14585));\
bit_vector_cast_to_bit_vector(1, &(expon_difference), &(SUB_i10_i10_14585));\
;

#define fpunit_exec_exec__fpdivide32_call_stmt_14590_c_macro_ _fpunit_exec_exec_short_divide_24_pipelined_optimised_( &(f1_fraction),  &(f2_fraction), &(quotient));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14595_c_macro_ __declare_static_bit_vector(konst_14593,29);\
bit_vector_clear(&konst_14593);\
konst_14593.val.byte_array[0] = 28;\
__declare_static_bit_vector(BITSEL_u29_u1_14594,1);\
bit_vector_clear(&konst_14593);\
konst_14593.val.byte_array[0] = 28;\
bit_vector_bitsel( &(quotient), &(konst_14593), &(BITSEL_u29_u1_14594));\
bit_vector_cast_to_bit_vector(0, &(quotient_MSB), &(BITSEL_u29_u1_14594));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14603_c_macro_ __declare_static_bit_vector(slice_14599,24);\
__declare_static_bit_vector(slice_14601,24);\
__declare_static_bit_vector(MUX_14602,24);\
if (has_undefined_bit(&quotient_MSB)) {fprintf(stderr, "Error: variable quotient_MSB has undefined value (%s) at test point.\n", to_string(&quotient_MSB));assert(0);} \
if(bit_vector_to_uint64(0, &quotient_MSB)){bit_vector_slice(&(quotient), &(slice_14599), 5);\
bit_vector_cast_to_bit_vector(0, &(MUX_14602), &(slice_14599));\
}else {bit_vector_slice(&(quotient), &(slice_14601), 4);\
bit_vector_cast_to_bit_vector(0, &(MUX_14602), &(slice_14601));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_24_before_rounding), &(MUX_14602));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14607_c_macro_ __declare_static_bit_vector(slice_14606,5);\
bit_vector_slice(&(quotient), &(slice_14606), 0);\
bit_vector_cast_to_bit_vector(0, &(guard_bits_5), &(slice_14606));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14611_c_macro_ __declare_static_bit_vector(slice_14610,4);\
bit_vector_slice(&(quotient), &(slice_14610), 0);\
bit_vector_cast_to_bit_vector(0, &(guard_bits_4), &(slice_14610));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14616_c_macro_ __declare_static_bit_vector(konst_14614,5);\
bit_vector_clear(&konst_14614);\
konst_14614.val.byte_array[0] = 16;\
__declare_static_bit_vector(UGE_u5_u1_14615,1);\
bit_vector_clear(&konst_14614);\
konst_14614.val.byte_array[0] = 16;\
bit_vector_greater_equal(0, &(guard_bits_5), &(konst_14614), &(UGE_u5_u1_14615));\
bit_vector_cast_to_bit_vector(0, &(guard_5_up_round_condition), &(UGE_u5_u1_14615));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14621_c_macro_ __declare_static_bit_vector(konst_14619,4);\
bit_vector_clear(&konst_14619);\
konst_14619.val.byte_array[0] = 8;\
__declare_static_bit_vector(UGE_u4_u1_14620,1);\
bit_vector_clear(&konst_14619);\
konst_14619.val.byte_array[0] = 8;\
bit_vector_greater_equal(0, &(guard_bits_4), &(konst_14619), &(UGE_u4_u1_14620));\
bit_vector_cast_to_bit_vector(0, &(guard_4_up_round_condition), &(UGE_u4_u1_14620));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14627_c_macro_ __declare_static_bit_vector(MUX_14626,1);\
if (has_undefined_bit(&quotient_MSB)) {fprintf(stderr, "Error: variable quotient_MSB has undefined value (%s) at test point.\n", to_string(&quotient_MSB));assert(0);} \
if(bit_vector_to_uint64(0, &quotient_MSB)){bit_vector_cast_to_bit_vector(0, &(MUX_14626), &(guard_5_up_round_condition));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14626), &(guard_4_up_round_condition));\
}bit_vector_cast_to_bit_vector(0, &(upround_the_mantissa), &(MUX_14626));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14632_c_macro_ __declare_static_bit_vector(konst_14630,24);\
bit_vector_clear(&konst_14630);\
konst_14630.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u24_u24_14631,24);\
bit_vector_clear(&konst_14630);\
konst_14630.val.byte_array[0] = 1;\
bit_vector_plus( &(mantissa_24_before_rounding), &(konst_14630), &(ADD_u24_u24_14631));\
bit_vector_cast_to_bit_vector(0, &(mantissa_24_incremented), &(ADD_u24_u24_14631));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14637_c_macro_ __declare_static_bit_vector(konst_14635,24);\
bit_vector_clear(&konst_14635);\
konst_14635.val.byte_array[0] = 23;\
__declare_static_bit_vector(BITSEL_u24_u1_14636,1);\
bit_vector_clear(&konst_14635);\
konst_14635.val.byte_array[0] = 23;\
bit_vector_bitsel( &(mantissa_24_incremented), &(konst_14635), &(BITSEL_u24_u1_14636));\
bit_vector_cast_to_bit_vector(0, &(mantissa_24_incr_top_bit), &(BITSEL_u24_u1_14636));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14648_c_macro_ __declare_static_bit_vector(slice_14642,23);\
__declare_static_bit_vector(MUX_14644,23);\
__declare_static_bit_vector(slice_14646,23);\
__declare_static_bit_vector(MUX_14647,23);\
if (has_undefined_bit(&upround_the_mantissa)) {fprintf(stderr, "Error: variable upround_the_mantissa has undefined value (%s) at test point.\n", to_string(&upround_the_mantissa));assert(0);} \
if(bit_vector_to_uint64(0, &upround_the_mantissa)){if (has_undefined_bit(&mantissa_24_incr_top_bit)) {fprintf(stderr, "Error: variable mantissa_24_incr_top_bit has undefined value (%s) at test point.\n", to_string(&mantissa_24_incr_top_bit));assert(0);} \
if(bit_vector_to_uint64(0, &mantissa_24_incr_top_bit)){bit_vector_slice(&(mantissa_24_incremented), &(slice_14642), 0);\
bit_vector_cast_to_bit_vector(0, &(MUX_14644), &(slice_14642));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14644), &(ZERO_23));\
}bit_vector_cast_to_bit_vector(0, &(MUX_14647), &(MUX_14644));\
}else {bit_vector_slice(&(mantissa_24_before_rounding), &(slice_14646), 0);\
bit_vector_cast_to_bit_vector(0, &(MUX_14647), &(slice_14646));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_23), &(MUX_14647));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14663_c_macro_ __declare_static_bit_vector(konst_14651,10);\
bit_vector_clear(&konst_14651);\
__declare_static_bit_vector(konst_14652,10);\
bit_vector_clear(&konst_14652);\
__declare_static_bit_vector(type_cast_14653,10);\
bit_vector_clear(&type_cast_14653);\
__declare_static_bit_vector(konst_14654,10);\
bit_vector_clear(&konst_14654);\
konst_14654.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_i10_i10_14655,10);\
bit_vector_clear(&SUB_i10_i10_14655);\
SUB_i10_i10_14655.val.byte_array[0] = 255;\
SUB_i10_i10_14655.val.byte_array[1] = 255;\
__declare_static_bit_vector(MUX_14656,10);\
__declare_static_bit_vector(konst_14658,10);\
bit_vector_clear(&konst_14658);\
__declare_static_bit_vector(konst_14659,10);\
bit_vector_clear(&konst_14659);\
konst_14659.val.byte_array[0] = 1;\
__declare_static_bit_vector(type_cast_14660,10);\
bit_vector_clear(&type_cast_14660);\
type_cast_14660.val.byte_array[0] = 1;\
__declare_static_bit_vector(MUX_14661,10);\
__declare_static_bit_vector(ADD_i10_i10_14662,10);\
if (has_undefined_bit(&quotient_MSB)) {fprintf(stderr, "Error: variable quotient_MSB has undefined value (%s) at test point.\n", to_string(&quotient_MSB));assert(0);} \
if(bit_vector_to_uint64(0, &quotient_MSB)){bit_vector_clear(&konst_14651);\
bit_vector_cast_to_bit_vector(1, &(MUX_14656), &(konst_14651));\
}else {bit_vector_clear(&konst_14652);\
bit_vector_bitcast_to_bit_vector( &(type_cast_14653), &(konst_14652));\
bit_vector_clear(&konst_14654);\
konst_14654.val.byte_array[0] = 1;\
bit_vector_minus( &(type_cast_14653), &(konst_14654), &(SUB_i10_i10_14655));\
bit_vector_cast_to_bit_vector(1, &(MUX_14656), &(SUB_i10_i10_14655));\
}if (has_undefined_bit(&mantissa_24_incr_top_bit)) {fprintf(stderr, "Error: variable mantissa_24_incr_top_bit has undefined value (%s) at test point.\n", to_string(&mantissa_24_incr_top_bit));assert(0);} \
if(bit_vector_to_uint64(0, &mantissa_24_incr_top_bit)){bit_vector_clear(&konst_14658);\
bit_vector_cast_to_bit_vector(1, &(MUX_14661), &(konst_14658));\
}else {bit_vector_clear(&konst_14659);\
konst_14659.val.byte_array[0] = 1;\
bit_vector_bitcast_to_bit_vector( &(type_cast_14660), &(konst_14659));\
bit_vector_cast_to_bit_vector(1, &(MUX_14661), &(type_cast_14660));\
}bit_vector_plus( &(MUX_14656), &(MUX_14661), &(ADD_i10_i10_14662));\
bit_vector_cast_to_bit_vector(1, &(exponent_adjustment), &(ADD_i10_i10_14662));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14666_c_macro_ bit_vector_cast_to_bit_vector(1, &(expon_bias), &(expbase_127));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14671_c_macro_ __declare_static_bit_vector(ADD_i10_i10_14670,10);\
bit_vector_plus( &(expon_difference), &(expon_bias), &(ADD_i10_i10_14670));\
bit_vector_cast_to_bit_vector(1, &(exponent_before_round), &(ADD_i10_i10_14670));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14676_c_macro_ __declare_static_bit_vector(ADD_i10_i10_14675,10);\
bit_vector_plus( &(exponent_before_round), &(exponent_adjustment), &(ADD_i10_i10_14675));\
bit_vector_cast_to_bit_vector(1, &(exponent), &(ADD_i10_i10_14675));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14681_c_macro_ __declare_static_bit_vector(SUB_i10_i10_14680,10);\
bit_vector_minus( &(exponent), &(expon_bias), &(SUB_i10_i10_14680));\
bit_vector_cast_to_bit_vector(1, &(exponent_unbiased), &(SUB_i10_i10_14680));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14685_c_macro_ __declare_static_bit_vector(type_cast_14684,8);\
bit_vector_bitcast_to_bit_vector( &(type_cast_14684), &(exponent));\
bit_vector_cast_to_bit_vector(0, &(exponent_8), &(type_cast_14684));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14688_c_macro_ bit_vector_cast_to_bit_vector(0, &(mantissa), &(mantissa_23));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14693_c_macro_ __declare_static_bit_vector(konst_14691,10);\
bit_vector_clear(&konst_14691);\
konst_14691.val.byte_array[0] = 127;\
__declare_static_bit_vector(SGT_i10_u1_14692,1);\
bit_vector_clear(&konst_14691);\
konst_14691.val.byte_array[0] = 127;\
bit_vector_greater(1, &(exponent_unbiased), &(konst_14691), &(SGT_i10_u1_14692));\
bit_vector_cast_to_bit_vector(0, &(overflow), &(SGT_i10_u1_14692));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14698_c_macro_ __declare_static_bit_vector(konst_14696,10);\
bit_vector_clear(&konst_14696);\
konst_14696.val.byte_array[0] = 130;\
konst_14696.val.byte_array[1] = 255;\
__declare_static_bit_vector(SLT_i10_u1_14697,1);\
bit_vector_clear(&konst_14696);\
konst_14696.val.byte_array[0] = 130;\
konst_14696.val.byte_array[1] = 255;\
bit_vector_less(1, &(exponent_unbiased), &(konst_14696), &(SLT_i10_u1_14697));\
bit_vector_cast_to_bit_vector(0, &(underflow), &(SLT_i10_u1_14697));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14723_c_macro_ __declare_static_bit_vector(OR_u1_u1_14702,1);\
__declare_static_bit_vector(OR_u1_u1_14706,1);\
__declare_static_bit_vector(OR_u1_u1_14708,1);\
__declare_static_bit_vector(AND_u1_u1_14709,1);\
__declare_static_bit_vector(OR_u1_u1_14710,1);\
__declare_static_bit_vector(OR_u1_u1_14714,1);\
__declare_static_bit_vector(OR_u1_u1_14716,1);\
__declare_static_bit_vector(AND_u1_u1_14717,1);\
__declare_static_bit_vector(OR_u1_u1_14719,1);\
__declare_static_bit_vector(OR_u1_u1_14721,1);\
__declare_static_bit_vector(OR_u1_u1_14722,1);\
bit_vector_or(&(f2_s_qnan), &(f2_s_snan), &(OR_u1_u1_14702));\
bit_vector_or(&(f1_s_inf), &(f1_s_snan), &(OR_u1_u1_14706));\
bit_vector_or(&(OR_u1_u1_14706), &(f1_s_qnan), &(OR_u1_u1_14708));\
bit_vector_and(&(f2_s_inf), &(OR_u1_u1_14708), &(AND_u1_u1_14709));\
bit_vector_or(&(OR_u1_u1_14702), &(AND_u1_u1_14709), &(OR_u1_u1_14710));\
bit_vector_or(&(f1_s_zero), &(f1_s_snan), &(OR_u1_u1_14714));\
bit_vector_or(&(OR_u1_u1_14714), &(f1_s_qnan), &(OR_u1_u1_14716));\
bit_vector_and(&(f2_s_zero), &(OR_u1_u1_14716), &(AND_u1_u1_14717));\
bit_vector_or(&(AND_u1_u1_14717), &(f1_s_qnan), &(OR_u1_u1_14719));\
bit_vector_or(&(OR_u1_u1_14719), &(f1_s_snan), &(OR_u1_u1_14721));\
bit_vector_or(&(OR_u1_u1_14710), &(OR_u1_u1_14721), &(OR_u1_u1_14722));\
bit_vector_cast_to_bit_vector(0, &(qnan_condition), &(OR_u1_u1_14722));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14730_c_macro_ __declare_static_bit_vector(konst_14725,10);\
bit_vector_clear(&konst_14725);\
__declare_static_bit_vector(konst_14726,10);\
bit_vector_clear(&konst_14726);\
konst_14726.val.byte_array[0] = 126;\
__declare_static_bit_vector(SUB_i10_i10_14727,10);\
bit_vector_clear(&SUB_i10_i10_14727);\
SUB_i10_i10_14727.val.byte_array[0] = 130;\
SUB_i10_i10_14727.val.byte_array[1] = 255;\
__declare_static_bit_vector(SUB_i10_i10_14729,10);\
bit_vector_clear(&konst_14725);\
bit_vector_clear(&konst_14726);\
konst_14726.val.byte_array[0] = 126;\
bit_vector_minus( &(konst_14725), &(konst_14726), &(SUB_i10_i10_14727));\
bit_vector_minus( &(SUB_i10_i10_14727), &(exponent_unbiased), &(SUB_i10_i10_14729));\
bit_vector_cast_to_bit_vector(1, &(denorm_shift_amount), &(SUB_i10_i10_14729));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14740_c_macro_ __declare_static_bit_vector(konst_14734,10);\
bit_vector_clear(&konst_14734);\
konst_14734.val.byte_array[0] = 24;\
__declare_static_bit_vector(SLE_i10_u1_14735,1);\
__declare_static_bit_vector(AND_u1_u1_14736,1);\
__declare_static_bit_vector(NOT_u1_u1_14738,1);\
__declare_static_bit_vector(AND_u1_u1_14739,1);\
bit_vector_clear(&konst_14734);\
konst_14734.val.byte_array[0] = 24;\
bit_vector_less_equal(1, &(denorm_shift_amount), &(konst_14734), &(SLE_i10_u1_14735));\
bit_vector_and(&(underflow), &(SLE_i10_u1_14735), &(AND_u1_u1_14736));\
bit_vector_not( &(qnan_condition), &(NOT_u1_u1_14738));\
bit_vector_and(&(AND_u1_u1_14736), &(NOT_u1_u1_14738), &(AND_u1_u1_14739));\
bit_vector_cast_to_bit_vector(0, &(is_denormalizable), &(AND_u1_u1_14739));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14747_c_macro_ __declare_static_bit_vector(CONCAT_u1_u24_14744,24);\
__declare_static_bit_vector(CONCAT_u24_u32_14746,32);\
bit_vector_concatenate( &(ONE_1), &(mantissa), &(CONCAT_u1_u24_14744));\
bit_vector_concatenate( &(CONCAT_u1_u24_14744), &(ZERO_8), &(CONCAT_u24_u32_14746));\
bit_vector_cast_to_bit_vector(0, &(p), &(CONCAT_u24_u32_14746));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14751_c_macro_ __declare_static_bit_vector(type_cast_14750,5);\
bit_vector_bitcast_to_bit_vector( &(type_cast_14750), &(denorm_shift_amount));\
bit_vector_cast_to_bit_vector(0, &(q), &(type_cast_14750));\
;

#define fpunit_exec_exec__fpdivide32_call_stmt_14755_c_macro_ _fpunit_exec_exec_i32_srl_( &(p),  &(q), &(shifted));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14759_c_macro_ __declare_static_bit_vector(slice_14758,23);\
bit_vector_slice(&(shifted), &(slice_14758), 8);\
bit_vector_cast_to_bit_vector(0, &(mantissa_denorm_final), &(slice_14758));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14766_c_macro_ __declare_static_bit_vector(CONCAT_u1_u9_14763,9);\
__declare_static_bit_vector(CONCAT_u9_u32_14765,32);\
bit_vector_concatenate( &(sign_result), &(ZERO_8), &(CONCAT_u1_u9_14763));\
bit_vector_concatenate( &(CONCAT_u1_u9_14763), &(mantissa_denorm_final), &(CONCAT_u9_u32_14765));\
bit_vector_cast_to_bit_vector(0, &(result_denormal), &(CONCAT_u9_u32_14765));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14773_c_macro_ __declare_static_bit_vector(CONCAT_u1_u9_14770,9);\
__declare_static_bit_vector(CONCAT_u9_u32_14772,32);\
bit_vector_concatenate( &(sign_result), &(exponent_8), &(CONCAT_u1_u9_14770));\
bit_vector_concatenate( &(CONCAT_u1_u9_14770), &(mantissa), &(CONCAT_u9_u32_14772));\
bit_vector_cast_to_bit_vector(0, &(result_normal), &(CONCAT_u9_u32_14772));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14782_c_macro_ __declare_static_bit_vector(CONCAT_u1_u9_14777,9);\
__declare_static_bit_vector(CONCAT_u1_u23_14780,23);\
bit_vector_clear(&CONCAT_u1_u23_14780);\
CONCAT_u1_u23_14780.val.byte_array[2] = 64;\
__declare_static_bit_vector(CONCAT_u9_u32_14781,32);\
bit_vector_concatenate( &(sign_result), &(ALL_ONE_8), &(CONCAT_u1_u9_14777));\
bit_vector_concatenate( &(ONE_1), &(ZERO_22), &(CONCAT_u1_u23_14780));\
bit_vector_concatenate( &(CONCAT_u1_u9_14777), &(CONCAT_u1_u23_14780), &(CONCAT_u9_u32_14781));\
bit_vector_cast_to_bit_vector(0, &(result_qnan), &(CONCAT_u9_u32_14781));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14787_c_macro_ __declare_static_bit_vector(CONCAT_u1_u32_14786,32);\
bit_vector_concatenate( &(sign_result), &(ZERO_31), &(CONCAT_u1_u32_14786));\
bit_vector_cast_to_bit_vector(0, &(result_zero), &(CONCAT_u1_u32_14786));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14794_c_macro_ __declare_static_bit_vector(CONCAT_u1_u9_14791,9);\
__declare_static_bit_vector(CONCAT_u9_u32_14793,32);\
bit_vector_concatenate( &(sign_result), &(ALL_ONE_8), &(CONCAT_u1_u9_14791));\
bit_vector_concatenate( &(CONCAT_u1_u9_14791), &(ZERO_23), &(CONCAT_u9_u32_14793));\
bit_vector_cast_to_bit_vector(0, &(result_infinity), &(CONCAT_u9_u32_14793));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14800_c_macro_ __declare_static_bit_vector(NOT_u1_u1_14798,1);\
__declare_static_bit_vector(AND_u1_u1_14799,1);\
bit_vector_not( &(is_denormalizable), &(NOT_u1_u1_14798));\
bit_vector_and(&(underflow), &(NOT_u1_u1_14798), &(AND_u1_u1_14799));\
bit_vector_cast_to_bit_vector(0, &(underflow_not_denorm), &(AND_u1_u1_14799));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14813_c_macro_ __declare_static_bit_vector(OR_u1_u1_14805,1);\
__declare_static_bit_vector(OR_u1_u1_14807,1);\
__declare_static_bit_vector(AND_u1_u1_14808,1);\
__declare_static_bit_vector(OR_u1_u1_14810,1);\
__declare_static_bit_vector(OR_u1_u1_14812,1);\
bit_vector_or(&(f1_s_zero), &(f1_s_qnan), &(OR_u1_u1_14805));\
bit_vector_or(&(OR_u1_u1_14805), &(f1_s_snan), &(OR_u1_u1_14807));\
bit_vector_and(&(f2_s_zero), &(OR_u1_u1_14807), &(AND_u1_u1_14808));\
bit_vector_or(&(AND_u1_u1_14808), &(f1_s_zero), &(OR_u1_u1_14810));\
bit_vector_or(&(OR_u1_u1_14810), &(underflow_not_denorm), &(OR_u1_u1_14812));\
bit_vector_cast_to_bit_vector(0, &(zero_condition), &(OR_u1_u1_14812));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14830_c_macro_ __declare_static_bit_vector(OR_u1_u1_14818,1);\
__declare_static_bit_vector(OR_u1_u1_14820,1);\
__declare_static_bit_vector(AND_u1_u1_14821,1);\
__declare_static_bit_vector(OR_u1_u1_14825,1);\
__declare_static_bit_vector(AND_u1_u1_14826,1);\
__declare_static_bit_vector(OR_u1_u1_14827,1);\
__declare_static_bit_vector(OR_u1_u1_14829,1);\
bit_vector_or(&(f1_s_normal), &(f1_s_denormal), &(OR_u1_u1_14818));\
bit_vector_or(&(OR_u1_u1_14818), &(f1_s_inf), &(OR_u1_u1_14820));\
bit_vector_and(&(f2_s_zero), &(OR_u1_u1_14820), &(AND_u1_u1_14821));\
bit_vector_or(&(f2_s_normal), &(f2_s_denormal), &(OR_u1_u1_14825));\
bit_vector_and(&(f1_s_inf), &(OR_u1_u1_14825), &(AND_u1_u1_14826));\
bit_vector_or(&(AND_u1_u1_14821), &(AND_u1_u1_14826), &(OR_u1_u1_14827));\
bit_vector_or(&(OR_u1_u1_14827), &(overflow), &(OR_u1_u1_14829));\
bit_vector_cast_to_bit_vector(0, &(inf_condition), &(OR_u1_u1_14829));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14845_c_macro_ __declare_static_bit_vector(OR_u1_u1_14834,1);\
__declare_static_bit_vector(OR_u1_u1_14837,1);\
__declare_static_bit_vector(AND_u1_u1_14838,1);\
__declare_static_bit_vector(NOT_u1_u1_14840,1);\
__declare_static_bit_vector(NOT_u1_u1_14842,1);\
__declare_static_bit_vector(AND_u1_u1_14843,1);\
__declare_static_bit_vector(AND_u1_u1_14844,1);\
bit_vector_or(&(f1_s_normal), &(f1_s_denormal), &(OR_u1_u1_14834));\
bit_vector_or(&(f2_s_normal), &(f2_s_denormal), &(OR_u1_u1_14837));\
bit_vector_and(&(OR_u1_u1_14834), &(OR_u1_u1_14837), &(AND_u1_u1_14838));\
bit_vector_not( &(overflow), &(NOT_u1_u1_14840));\
bit_vector_not( &(underflow), &(NOT_u1_u1_14842));\
bit_vector_and(&(NOT_u1_u1_14840), &(NOT_u1_u1_14842), &(AND_u1_u1_14843));\
bit_vector_and(&(AND_u1_u1_14838), &(AND_u1_u1_14843), &(AND_u1_u1_14844));\
bit_vector_cast_to_bit_vector(0, &(normal_condition), &(AND_u1_u1_14844));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14871_c_macro_ __declare_static_bit_vector(konst_14849,32);\
bit_vector_clear(&konst_14849);\
__declare_static_bit_vector(MUX_14850,32);\
__declare_static_bit_vector(konst_14853,32);\
bit_vector_clear(&konst_14853);\
__declare_static_bit_vector(MUX_14854,32);\
__declare_static_bit_vector(OR_u32_u32_14855,32);\
__declare_static_bit_vector(konst_14858,32);\
bit_vector_clear(&konst_14858);\
__declare_static_bit_vector(MUX_14859,32);\
__declare_static_bit_vector(OR_u32_u32_14860,32);\
__declare_static_bit_vector(konst_14863,32);\
bit_vector_clear(&konst_14863);\
__declare_static_bit_vector(MUX_14864,32);\
__declare_static_bit_vector(konst_14867,32);\
bit_vector_clear(&konst_14867);\
__declare_static_bit_vector(MUX_14868,32);\
__declare_static_bit_vector(OR_u32_u32_14869,32);\
__declare_static_bit_vector(OR_u32_u32_14870,32);\
if (has_undefined_bit(&zero_condition)) {fprintf(stderr, "Error: variable zero_condition has undefined value (%s) at test point.\n", to_string(&zero_condition));assert(0);} \
if(bit_vector_to_uint64(0, &zero_condition)){bit_vector_cast_to_bit_vector(0, &(MUX_14850), &(result_zero));\
}else {bit_vector_clear(&konst_14849);\
bit_vector_cast_to_bit_vector(0, &(MUX_14850), &(konst_14849));\
}if (has_undefined_bit(&qnan_condition)) {fprintf(stderr, "Error: variable qnan_condition has undefined value (%s) at test point.\n", to_string(&qnan_condition));assert(0);} \
if(bit_vector_to_uint64(0, &qnan_condition)){bit_vector_cast_to_bit_vector(0, &(MUX_14854), &(result_qnan));\
}else {bit_vector_clear(&konst_14853);\
bit_vector_cast_to_bit_vector(0, &(MUX_14854), &(konst_14853));\
}bit_vector_or(&(MUX_14850), &(MUX_14854), &(OR_u32_u32_14855));\
if (has_undefined_bit(&inf_condition)) {fprintf(stderr, "Error: variable inf_condition has undefined value (%s) at test point.\n", to_string(&inf_condition));assert(0);} \
if(bit_vector_to_uint64(0, &inf_condition)){bit_vector_cast_to_bit_vector(0, &(MUX_14859), &(result_infinity));\
}else {bit_vector_clear(&konst_14858);\
bit_vector_cast_to_bit_vector(0, &(MUX_14859), &(konst_14858));\
}bit_vector_or(&(OR_u32_u32_14855), &(MUX_14859), &(OR_u32_u32_14860));\
if (has_undefined_bit(&normal_condition)) {fprintf(stderr, "Error: variable normal_condition has undefined value (%s) at test point.\n", to_string(&normal_condition));assert(0);} \
if(bit_vector_to_uint64(0, &normal_condition)){bit_vector_cast_to_bit_vector(0, &(MUX_14864), &(result_normal));\
}else {bit_vector_clear(&konst_14863);\
bit_vector_cast_to_bit_vector(0, &(MUX_14864), &(konst_14863));\
}if (has_undefined_bit(&is_denormalizable)) {fprintf(stderr, "Error: variable is_denormalizable has undefined value (%s) at test point.\n", to_string(&is_denormalizable));assert(0);} \
if(bit_vector_to_uint64(0, &is_denormalizable)){bit_vector_cast_to_bit_vector(0, &(MUX_14868), &(result_denormal));\
}else {bit_vector_clear(&konst_14867);\
bit_vector_cast_to_bit_vector(0, &(MUX_14868), &(konst_14867));\
}bit_vector_or(&(MUX_14864), &(MUX_14868), &(OR_u32_u32_14869));\
bit_vector_or(&(OR_u32_u32_14860), &(OR_u32_u32_14869), &(OR_u32_u32_14870));\
bit_vector_cast_to_bit_vector(0, &(result), &(OR_u32_u32_14870));\
;

#define fpunit_exec_exec__fpdivide32_assign_stmt_14875_c_macro_ static float type_cast_14874;\
bit_vector_bitcast_to_float( &(type_cast_14874),  &(result));\
f1BYf2 = type_cast_14874;\
;

#define fpunit_exec_exec__fpdivide32_inner_outarg_prep_macro__ (*__pf1BYf2) = f1BYf2;\
;

#define fpunit_exec_exec__fpdivide32_outer_arg_decl_macro__ float __f1_s = f1_s;\
float __f2_s = f2_s;\
;

#define fpunit_exec_exec__fpdivide32_outer_op_xfer_macro__  *f1BYf2 = __f1BYf2;\
;

#define fpunit_exec_exec__fpdivide64_inner_inarg_prep_macro__ static double f1_d;\
f1_d = (*__pf1_d);\
static double f2_d;\
f2_d = (*__pf2_d);\
static double f1BYf2;\
__declare_static_bit_vector(uf1_d,64);\
__declare_static_bit_vector(uf2_d,64);\
__declare_static_bit_vector(sign_uf1_d,1);\
__declare_static_bit_vector(sign_uf2_d,1);\
__declare_static_bit_vector(sign_result,1);\
__declare_static_bit_vector(f1_d_pos_normal,1);\
__declare_static_bit_vector(f1_d_neg_normal,1);\
__declare_static_bit_vector(f1_d_pos_denormal,1);\
__declare_static_bit_vector(f1_d_neg_denormal,1);\
__declare_static_bit_vector(f1_d_qnan,1);\
__declare_static_bit_vector(f1_d_snan,1);\
__declare_static_bit_vector(f1_d_pos_inf,1);\
__declare_static_bit_vector(f1_d_neg_inf,1);\
__declare_static_bit_vector(f1_d_pos_zero,1);\
__declare_static_bit_vector(f1_d_neg_zero,1);\
__declare_static_bit_vector(f2_d_pos_normal,1);\
__declare_static_bit_vector(f2_d_neg_normal,1);\
__declare_static_bit_vector(f2_d_pos_denormal,1);\
__declare_static_bit_vector(f2_d_neg_denormal,1);\
__declare_static_bit_vector(f2_d_qnan,1);\
__declare_static_bit_vector(f2_d_snan,1);\
__declare_static_bit_vector(f2_d_pos_inf,1);\
__declare_static_bit_vector(f2_d_neg_inf,1);\
__declare_static_bit_vector(f2_d_pos_zero,1);\
__declare_static_bit_vector(f2_d_neg_zero,1);\
__declare_static_bit_vector(f1_d_zero,1);\
__declare_static_bit_vector(f2_d_zero,1);\
__declare_static_bit_vector(f1_d_normal,1);\
__declare_static_bit_vector(f2_d_normal,1);\
__declare_static_bit_vector(f1_d_denormal,1);\
__declare_static_bit_vector(f2_d_denormal,1);\
__declare_static_bit_vector(f1_d_inf,1);\
__declare_static_bit_vector(f2_d_inf,1);\
__declare_static_bit_vector(f1_d_frac,53);\
__declare_static_bit_vector(f1_d_expon,13);\
__declare_static_bit_vector(f2_d_frac,53);\
__declare_static_bit_vector(f2_d_expon,13);\
__declare_static_bit_vector(f1_d_frac_norm,53);\
__declare_static_bit_vector(f1_d_expon_norm,13);\
__declare_static_bit_vector(f2_d_frac_norm,53);\
__declare_static_bit_vector(f2_d_expon_norm,13);\
__declare_static_bit_vector(f1_fraction,53);\
__declare_static_bit_vector(f2_fraction,53);\
__declare_static_bit_vector(f1_expon,13);\
__declare_static_bit_vector(f2_expon,13);\
__declare_static_bit_vector(expon_difference,13);\
__declare_static_bit_vector(quotient,58);\
__declare_static_bit_vector(quotient_MSB,1);\
__declare_static_bit_vector(mantissa_53_before_rounding,53);\
__declare_static_bit_vector(guard_bits_5,5);\
__declare_static_bit_vector(guard_bits_4,4);\
__declare_static_bit_vector(guard_5_up_round_condition,1);\
__declare_static_bit_vector(guard_4_up_round_condition,1);\
__declare_static_bit_vector(upround_the_mantissa,1);\
__declare_static_bit_vector(mantissa_53_incremented,53);\
__declare_static_bit_vector(mantissa_53_incr_top_bit,1);\
__declare_static_bit_vector(mantissa_52,52);\
__declare_static_bit_vector(exponent_adjustment,13);\
__declare_static_bit_vector(expon_bias,13);\
bit_vector_clear(&expon_bias);\
expon_bias.val.byte_array[0] = 255;\
expon_bias.val.byte_array[1] = 3;\
__declare_static_bit_vector(exponent_before_round,13);\
__declare_static_bit_vector(exponent,13);\
__declare_static_bit_vector(exponent_unbiased,13);\
__declare_static_bit_vector(exponent_11,11);\
__declare_static_bit_vector(mantissa,52);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(underflow,1);\
__declare_static_bit_vector(qnan_condition,1);\
__declare_static_bit_vector(denorm_shift_amount,13);\
__declare_static_bit_vector(is_denormalizable,1);\
__declare_static_bit_vector(p,64);\
__declare_static_bit_vector(q,6);\
__declare_static_bit_vector(shifted,64);\
__declare_static_bit_vector(mantissa_denorm_final,52);\
__declare_static_bit_vector(result_denormal,64);\
__declare_static_bit_vector(result_normal,64);\
__declare_static_bit_vector(result_qnan,64);\
__declare_static_bit_vector(result_zero,64);\
__declare_static_bit_vector(result_infinity,64);\
__declare_static_bit_vector(underflow_not_denorm,1);\
__declare_static_bit_vector(zero_condition,1);\
__declare_static_bit_vector(inf_condition,1);\
__declare_static_bit_vector(normal_condition,1);\
__declare_static_bit_vector(result,64);\

#define fpunit_exec_exec__fpdivide64_assign_stmt_15517_c_macro_ __declare_static_bit_vector(type_cast_15516,64);\
double_bitcast_to_bit_vector( &(type_cast_15516), &(f1_d));\
bit_vector_cast_to_bit_vector(0, &(uf1_d), &(type_cast_15516));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15521_c_macro_ __declare_static_bit_vector(type_cast_15520,64);\
double_bitcast_to_bit_vector( &(type_cast_15520), &(f2_d));\
bit_vector_cast_to_bit_vector(0, &(uf2_d), &(type_cast_15520));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15526_c_macro_ __declare_static_bit_vector(konst_15524,64);\
bit_vector_clear(&konst_15524);\
konst_15524.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_15525,1);\
bit_vector_clear(&konst_15524);\
konst_15524.val.byte_array[0] = 63;\
bit_vector_bitsel( &(uf1_d), &(konst_15524), &(BITSEL_u64_u1_15525));\
bit_vector_cast_to_bit_vector(0, &(sign_uf1_d), &(BITSEL_u64_u1_15525));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15531_c_macro_ __declare_static_bit_vector(konst_15529,64);\
bit_vector_clear(&konst_15529);\
konst_15529.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_15530,1);\
bit_vector_clear(&konst_15529);\
konst_15529.val.byte_array[0] = 63;\
bit_vector_bitsel( &(uf2_d), &(konst_15529), &(BITSEL_u64_u1_15530));\
bit_vector_cast_to_bit_vector(0, &(sign_uf2_d), &(BITSEL_u64_u1_15530));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15536_c_macro_ __declare_static_bit_vector(XOR_u1_u1_15535,1);\
bit_vector_xor(&(sign_uf1_d), &(sign_uf2_d), &(XOR_u1_u1_15535));\
bit_vector_cast_to_bit_vector(0, &(sign_result), &(XOR_u1_u1_15535));\
;

#define fpunit_exec_exec__fpdivide64_call_stmt_15548_c_macro_ _fpunit_exec_exec_classFp64_( &(f1_d), &(f1_d_pos_normal), &(f1_d_neg_normal), &(f1_d_pos_denormal), &(f1_d_neg_denormal), &(f1_d_qnan), &(f1_d_snan), &(f1_d_pos_inf), &(f1_d_neg_inf), &(f1_d_pos_zero), &(f1_d_neg_zero));\
;

#define fpunit_exec_exec__fpdivide64_call_stmt_15560_c_macro_ _fpunit_exec_exec_classFp64_( &(f2_d), &(f2_d_pos_normal), &(f2_d_neg_normal), &(f2_d_pos_denormal), &(f2_d_neg_denormal), &(f2_d_qnan), &(f2_d_snan), &(f2_d_pos_inf), &(f2_d_neg_inf), &(f2_d_pos_zero), &(f2_d_neg_zero));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15565_c_macro_ __declare_static_bit_vector(OR_u1_u1_15564,1);\
bit_vector_or(&(f1_d_pos_zero), &(f1_d_neg_zero), &(OR_u1_u1_15564));\
bit_vector_cast_to_bit_vector(0, &(f1_d_zero), &(OR_u1_u1_15564));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15570_c_macro_ __declare_static_bit_vector(OR_u1_u1_15569,1);\
bit_vector_or(&(f2_d_pos_zero), &(f2_d_neg_zero), &(OR_u1_u1_15569));\
bit_vector_cast_to_bit_vector(0, &(f2_d_zero), &(OR_u1_u1_15569));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15575_c_macro_ __declare_static_bit_vector(OR_u1_u1_15574,1);\
bit_vector_or(&(f1_d_pos_normal), &(f1_d_neg_normal), &(OR_u1_u1_15574));\
bit_vector_cast_to_bit_vector(0, &(f1_d_normal), &(OR_u1_u1_15574));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15580_c_macro_ __declare_static_bit_vector(OR_u1_u1_15579,1);\
bit_vector_or(&(f2_d_pos_normal), &(f2_d_neg_normal), &(OR_u1_u1_15579));\
bit_vector_cast_to_bit_vector(0, &(f2_d_normal), &(OR_u1_u1_15579));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15585_c_macro_ __declare_static_bit_vector(OR_u1_u1_15584,1);\
bit_vector_or(&(f1_d_pos_denormal), &(f1_d_neg_denormal), &(OR_u1_u1_15584));\
bit_vector_cast_to_bit_vector(0, &(f1_d_denormal), &(OR_u1_u1_15584));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15590_c_macro_ __declare_static_bit_vector(OR_u1_u1_15589,1);\
bit_vector_or(&(f2_d_pos_denormal), &(f2_d_neg_denormal), &(OR_u1_u1_15589));\
bit_vector_cast_to_bit_vector(0, &(f2_d_denormal), &(OR_u1_u1_15589));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15595_c_macro_ __declare_static_bit_vector(OR_u1_u1_15594,1);\
bit_vector_or(&(f1_d_pos_inf), &(f1_d_neg_inf), &(OR_u1_u1_15594));\
bit_vector_cast_to_bit_vector(0, &(f1_d_inf), &(OR_u1_u1_15594));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15600_c_macro_ __declare_static_bit_vector(OR_u1_u1_15599,1);\
bit_vector_or(&(f2_d_pos_inf), &(f2_d_neg_inf), &(OR_u1_u1_15599));\
bit_vector_cast_to_bit_vector(0, &(f2_d_inf), &(OR_u1_u1_15599));\
;

#define fpunit_exec_exec__fpdivide64_call_stmt_15611_c_macro_ _fpunit_exec_exec_break_number_64_( &(uf1_d),  &(f1_d_normal),  &(f1_d_denormal),  &(f1_d_qnan),  &(f1_d_snan),  &(f1_d_inf),  &(f1_d_zero),  &(DENORM), &(f1_d_frac), &(f1_d_expon));\
;

#define fpunit_exec_exec__fpdivide64_call_stmt_15622_c_macro_ _fpunit_exec_exec_break_number_64_( &(uf2_d),  &(f2_d_normal),  &(f2_d_denormal),  &(f2_d_qnan),  &(f2_d_snan),  &(f2_d_inf),  &(f2_d_zero),  &(DENORM), &(f2_d_frac), &(f2_d_expon));\
;

#define fpunit_exec_exec__fpdivide64_call_stmt_15628_c_macro_ if (has_undefined_bit(&f1_d_denormal)) {fprintf(stderr, "Error: variable f1_d_denormal has undefined value (%s) at test point.\n", to_string(&f1_d_denormal));assert(0);} \
if (bit_vector_to_uint64(0, &f1_d_denormal)) {\
_fpunit_exec_exec_normalize_64_( &(f1_d_frac),  &(f1_d_expon), &(f1_d_frac_norm), &(f1_d_expon_norm));\
}\
;

#define fpunit_exec_exec__fpdivide64_call_stmt_15634_c_macro_ if (has_undefined_bit(&f2_d_denormal)) {fprintf(stderr, "Error: variable f2_d_denormal has undefined value (%s) at test point.\n", to_string(&f2_d_denormal));assert(0);} \
if (bit_vector_to_uint64(0, &f2_d_denormal)) {\
_fpunit_exec_exec_normalize_64_( &(f2_d_frac),  &(f2_d_expon), &(f2_d_frac_norm), &(f2_d_expon_norm));\
}\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15640_c_macro_ __declare_static_bit_vector(MUX_15639,53);\
if (has_undefined_bit(&f1_d_denormal)) {fprintf(stderr, "Error: variable f1_d_denormal has undefined value (%s) at test point.\n", to_string(&f1_d_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_d_denormal)){bit_vector_cast_to_bit_vector(0, &(MUX_15639), &(f1_d_frac_norm));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_15639), &(f1_d_frac));\
}bit_vector_cast_to_bit_vector(0, &(f1_fraction), &(MUX_15639));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15646_c_macro_ __declare_static_bit_vector(MUX_15645,53);\
if (has_undefined_bit(&f2_d_denormal)) {fprintf(stderr, "Error: variable f2_d_denormal has undefined value (%s) at test point.\n", to_string(&f2_d_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f2_d_denormal)){bit_vector_cast_to_bit_vector(0, &(MUX_15645), &(f2_d_frac_norm));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_15645), &(f2_d_frac));\
}bit_vector_cast_to_bit_vector(0, &(f2_fraction), &(MUX_15645));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15652_c_macro_ __declare_static_bit_vector(MUX_15651,13);\
if (has_undefined_bit(&f1_d_denormal)) {fprintf(stderr, "Error: variable f1_d_denormal has undefined value (%s) at test point.\n", to_string(&f1_d_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f1_d_denormal)){bit_vector_cast_to_bit_vector(1, &(MUX_15651), &(f1_d_expon_norm));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_15651), &(f1_d_expon));\
}bit_vector_cast_to_bit_vector(1, &(f1_expon), &(MUX_15651));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15658_c_macro_ __declare_static_bit_vector(MUX_15657,13);\
if (has_undefined_bit(&f2_d_denormal)) {fprintf(stderr, "Error: variable f2_d_denormal has undefined value (%s) at test point.\n", to_string(&f2_d_denormal));assert(0);} \
if(bit_vector_to_uint64(0, &f2_d_denormal)){bit_vector_cast_to_bit_vector(1, &(MUX_15657), &(f2_d_expon_norm));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_15657), &(f2_d_expon));\
}bit_vector_cast_to_bit_vector(1, &(f2_expon), &(MUX_15657));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15663_c_macro_ __declare_static_bit_vector(SUB_i13_i13_15662,13);\
bit_vector_minus( &(f1_expon), &(f2_expon), &(SUB_i13_i13_15662));\
bit_vector_cast_to_bit_vector(1, &(expon_difference), &(SUB_i13_i13_15662));\
;

#define fpunit_exec_exec__fpdivide64_call_stmt_15667_c_macro_ _fpunit_exec_exec_short_divide_53_pipelined_optimised_( &(f1_fraction),  &(f2_fraction), &(quotient));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15672_c_macro_ __declare_static_bit_vector(konst_15670,58);\
bit_vector_clear(&konst_15670);\
konst_15670.val.byte_array[0] = 57;\
__declare_static_bit_vector(BITSEL_u58_u1_15671,1);\
bit_vector_clear(&konst_15670);\
konst_15670.val.byte_array[0] = 57;\
bit_vector_bitsel( &(quotient), &(konst_15670), &(BITSEL_u58_u1_15671));\
bit_vector_cast_to_bit_vector(0, &(quotient_MSB), &(BITSEL_u58_u1_15671));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15680_c_macro_ __declare_static_bit_vector(slice_15676,53);\
__declare_static_bit_vector(slice_15678,53);\
__declare_static_bit_vector(MUX_15679,53);\
if (has_undefined_bit(&quotient_MSB)) {fprintf(stderr, "Error: variable quotient_MSB has undefined value (%s) at test point.\n", to_string(&quotient_MSB));assert(0);} \
if(bit_vector_to_uint64(0, &quotient_MSB)){bit_vector_slice(&(quotient), &(slice_15676), 5);\
bit_vector_cast_to_bit_vector(0, &(MUX_15679), &(slice_15676));\
}else {bit_vector_slice(&(quotient), &(slice_15678), 4);\
bit_vector_cast_to_bit_vector(0, &(MUX_15679), &(slice_15678));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_53_before_rounding), &(MUX_15679));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15684_c_macro_ __declare_static_bit_vector(slice_15683,5);\
bit_vector_slice(&(quotient), &(slice_15683), 0);\
bit_vector_cast_to_bit_vector(0, &(guard_bits_5), &(slice_15683));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15688_c_macro_ __declare_static_bit_vector(slice_15687,4);\
bit_vector_slice(&(quotient), &(slice_15687), 0);\
bit_vector_cast_to_bit_vector(0, &(guard_bits_4), &(slice_15687));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15693_c_macro_ __declare_static_bit_vector(konst_15691,5);\
bit_vector_clear(&konst_15691);\
konst_15691.val.byte_array[0] = 16;\
__declare_static_bit_vector(UGE_u5_u1_15692,1);\
bit_vector_clear(&konst_15691);\
konst_15691.val.byte_array[0] = 16;\
bit_vector_greater_equal(0, &(guard_bits_5), &(konst_15691), &(UGE_u5_u1_15692));\
bit_vector_cast_to_bit_vector(0, &(guard_5_up_round_condition), &(UGE_u5_u1_15692));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15698_c_macro_ __declare_static_bit_vector(konst_15696,4);\
bit_vector_clear(&konst_15696);\
konst_15696.val.byte_array[0] = 8;\
__declare_static_bit_vector(UGE_u4_u1_15697,1);\
bit_vector_clear(&konst_15696);\
konst_15696.val.byte_array[0] = 8;\
bit_vector_greater_equal(0, &(guard_bits_4), &(konst_15696), &(UGE_u4_u1_15697));\
bit_vector_cast_to_bit_vector(0, &(guard_4_up_round_condition), &(UGE_u4_u1_15697));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15704_c_macro_ __declare_static_bit_vector(MUX_15703,1);\
if (has_undefined_bit(&quotient_MSB)) {fprintf(stderr, "Error: variable quotient_MSB has undefined value (%s) at test point.\n", to_string(&quotient_MSB));assert(0);} \
if(bit_vector_to_uint64(0, &quotient_MSB)){bit_vector_cast_to_bit_vector(0, &(MUX_15703), &(guard_5_up_round_condition));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_15703), &(guard_4_up_round_condition));\
}bit_vector_cast_to_bit_vector(0, &(upround_the_mantissa), &(MUX_15703));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15709_c_macro_ __declare_static_bit_vector(konst_15707,53);\
bit_vector_clear(&konst_15707);\
konst_15707.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u53_u53_15708,53);\
bit_vector_clear(&konst_15707);\
konst_15707.val.byte_array[0] = 1;\
bit_vector_plus( &(mantissa_53_before_rounding), &(konst_15707), &(ADD_u53_u53_15708));\
bit_vector_cast_to_bit_vector(0, &(mantissa_53_incremented), &(ADD_u53_u53_15708));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15714_c_macro_ __declare_static_bit_vector(konst_15712,53);\
bit_vector_clear(&konst_15712);\
konst_15712.val.byte_array[0] = 52;\
__declare_static_bit_vector(BITSEL_u53_u1_15713,1);\
bit_vector_clear(&konst_15712);\
konst_15712.val.byte_array[0] = 52;\
bit_vector_bitsel( &(mantissa_53_incremented), &(konst_15712), &(BITSEL_u53_u1_15713));\
bit_vector_cast_to_bit_vector(0, &(mantissa_53_incr_top_bit), &(BITSEL_u53_u1_15713));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15725_c_macro_ __declare_static_bit_vector(slice_15719,52);\
__declare_static_bit_vector(MUX_15721,52);\
__declare_static_bit_vector(slice_15723,52);\
__declare_static_bit_vector(MUX_15724,52);\
if (has_undefined_bit(&upround_the_mantissa)) {fprintf(stderr, "Error: variable upround_the_mantissa has undefined value (%s) at test point.\n", to_string(&upround_the_mantissa));assert(0);} \
if(bit_vector_to_uint64(0, &upround_the_mantissa)){if (has_undefined_bit(&mantissa_53_incr_top_bit)) {fprintf(stderr, "Error: variable mantissa_53_incr_top_bit has undefined value (%s) at test point.\n", to_string(&mantissa_53_incr_top_bit));assert(0);} \
if(bit_vector_to_uint64(0, &mantissa_53_incr_top_bit)){bit_vector_slice(&(mantissa_53_incremented), &(slice_15719), 0);\
bit_vector_cast_to_bit_vector(0, &(MUX_15721), &(slice_15719));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_15721), &(ZERO_52));\
}bit_vector_cast_to_bit_vector(0, &(MUX_15724), &(MUX_15721));\
}else {bit_vector_slice(&(mantissa_53_before_rounding), &(slice_15723), 0);\
bit_vector_cast_to_bit_vector(0, &(MUX_15724), &(slice_15723));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_52), &(MUX_15724));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15740_c_macro_ __declare_static_bit_vector(konst_15728,13);\
bit_vector_clear(&konst_15728);\
__declare_static_bit_vector(konst_15729,13);\
bit_vector_clear(&konst_15729);\
__declare_static_bit_vector(type_cast_15730,13);\
bit_vector_clear(&type_cast_15730);\
__declare_static_bit_vector(konst_15731,13);\
bit_vector_clear(&konst_15731);\
konst_15731.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_i13_i13_15732,13);\
bit_vector_clear(&SUB_i13_i13_15732);\
SUB_i13_i13_15732.val.byte_array[0] = 255;\
SUB_i13_i13_15732.val.byte_array[1] = 255;\
__declare_static_bit_vector(MUX_15733,13);\
__declare_static_bit_vector(konst_15735,13);\
bit_vector_clear(&konst_15735);\
__declare_static_bit_vector(konst_15736,13);\
bit_vector_clear(&konst_15736);\
konst_15736.val.byte_array[0] = 1;\
__declare_static_bit_vector(type_cast_15737,13);\
bit_vector_clear(&type_cast_15737);\
type_cast_15737.val.byte_array[0] = 1;\
__declare_static_bit_vector(MUX_15738,13);\
__declare_static_bit_vector(ADD_i13_i13_15739,13);\
if (has_undefined_bit(&quotient_MSB)) {fprintf(stderr, "Error: variable quotient_MSB has undefined value (%s) at test point.\n", to_string(&quotient_MSB));assert(0);} \
if(bit_vector_to_uint64(0, &quotient_MSB)){bit_vector_clear(&konst_15728);\
bit_vector_cast_to_bit_vector(1, &(MUX_15733), &(konst_15728));\
}else {bit_vector_clear(&konst_15729);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15730), &(konst_15729));\
bit_vector_clear(&konst_15731);\
konst_15731.val.byte_array[0] = 1;\
bit_vector_minus( &(type_cast_15730), &(konst_15731), &(SUB_i13_i13_15732));\
bit_vector_cast_to_bit_vector(1, &(MUX_15733), &(SUB_i13_i13_15732));\
}if (has_undefined_bit(&mantissa_53_incr_top_bit)) {fprintf(stderr, "Error: variable mantissa_53_incr_top_bit has undefined value (%s) at test point.\n", to_string(&mantissa_53_incr_top_bit));assert(0);} \
if(bit_vector_to_uint64(0, &mantissa_53_incr_top_bit)){bit_vector_clear(&konst_15735);\
bit_vector_cast_to_bit_vector(1, &(MUX_15738), &(konst_15735));\
}else {bit_vector_clear(&konst_15736);\
konst_15736.val.byte_array[0] = 1;\
bit_vector_bitcast_to_bit_vector( &(type_cast_15737), &(konst_15736));\
bit_vector_cast_to_bit_vector(1, &(MUX_15738), &(type_cast_15737));\
}bit_vector_plus( &(MUX_15733), &(MUX_15738), &(ADD_i13_i13_15739));\
bit_vector_cast_to_bit_vector(1, &(exponent_adjustment), &(ADD_i13_i13_15739));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15743_c_macro_ bit_vector_cast_to_bit_vector(1, &(expon_bias), &(expbase_1023));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15748_c_macro_ __declare_static_bit_vector(ADD_i13_i13_15747,13);\
bit_vector_plus( &(expon_difference), &(expon_bias), &(ADD_i13_i13_15747));\
bit_vector_cast_to_bit_vector(1, &(exponent_before_round), &(ADD_i13_i13_15747));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15753_c_macro_ __declare_static_bit_vector(ADD_i13_i13_15752,13);\
bit_vector_plus( &(exponent_before_round), &(exponent_adjustment), &(ADD_i13_i13_15752));\
bit_vector_cast_to_bit_vector(1, &(exponent), &(ADD_i13_i13_15752));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15758_c_macro_ __declare_static_bit_vector(SUB_i13_i13_15757,13);\
bit_vector_minus( &(exponent), &(expon_bias), &(SUB_i13_i13_15757));\
bit_vector_cast_to_bit_vector(1, &(exponent_unbiased), &(SUB_i13_i13_15757));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15762_c_macro_ __declare_static_bit_vector(type_cast_15761,11);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15761), &(exponent));\
bit_vector_cast_to_bit_vector(0, &(exponent_11), &(type_cast_15761));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15765_c_macro_ bit_vector_cast_to_bit_vector(0, &(mantissa), &(mantissa_52));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15770_c_macro_ __declare_static_bit_vector(konst_15768,13);\
bit_vector_clear(&konst_15768);\
konst_15768.val.byte_array[0] = 255;\
konst_15768.val.byte_array[1] = 3;\
__declare_static_bit_vector(SGT_i13_u1_15769,1);\
bit_vector_clear(&konst_15768);\
konst_15768.val.byte_array[0] = 255;\
konst_15768.val.byte_array[1] = 3;\
bit_vector_greater(1, &(exponent_unbiased), &(konst_15768), &(SGT_i13_u1_15769));\
bit_vector_cast_to_bit_vector(0, &(overflow), &(SGT_i13_u1_15769));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15775_c_macro_ __declare_static_bit_vector(konst_15773,13);\
bit_vector_clear(&konst_15773);\
konst_15773.val.byte_array[0] = 2;\
konst_15773.val.byte_array[1] = 252;\
__declare_static_bit_vector(SLT_i13_u1_15774,1);\
bit_vector_clear(&konst_15773);\
konst_15773.val.byte_array[0] = 2;\
konst_15773.val.byte_array[1] = 252;\
bit_vector_less(1, &(exponent_unbiased), &(konst_15773), &(SLT_i13_u1_15774));\
bit_vector_cast_to_bit_vector(0, &(underflow), &(SLT_i13_u1_15774));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15800_c_macro_ __declare_static_bit_vector(OR_u1_u1_15779,1);\
__declare_static_bit_vector(OR_u1_u1_15783,1);\
__declare_static_bit_vector(OR_u1_u1_15785,1);\
__declare_static_bit_vector(AND_u1_u1_15786,1);\
__declare_static_bit_vector(OR_u1_u1_15787,1);\
__declare_static_bit_vector(OR_u1_u1_15791,1);\
__declare_static_bit_vector(OR_u1_u1_15793,1);\
__declare_static_bit_vector(AND_u1_u1_15794,1);\
__declare_static_bit_vector(OR_u1_u1_15796,1);\
__declare_static_bit_vector(OR_u1_u1_15798,1);\
__declare_static_bit_vector(OR_u1_u1_15799,1);\
bit_vector_or(&(f2_d_qnan), &(f2_d_snan), &(OR_u1_u1_15779));\
bit_vector_or(&(f1_d_inf), &(f1_d_snan), &(OR_u1_u1_15783));\
bit_vector_or(&(OR_u1_u1_15783), &(f1_d_qnan), &(OR_u1_u1_15785));\
bit_vector_and(&(f2_d_inf), &(OR_u1_u1_15785), &(AND_u1_u1_15786));\
bit_vector_or(&(OR_u1_u1_15779), &(AND_u1_u1_15786), &(OR_u1_u1_15787));\
bit_vector_or(&(f1_d_zero), &(f1_d_snan), &(OR_u1_u1_15791));\
bit_vector_or(&(OR_u1_u1_15791), &(f1_d_qnan), &(OR_u1_u1_15793));\
bit_vector_and(&(f2_d_zero), &(OR_u1_u1_15793), &(AND_u1_u1_15794));\
bit_vector_or(&(AND_u1_u1_15794), &(f1_d_qnan), &(OR_u1_u1_15796));\
bit_vector_or(&(OR_u1_u1_15796), &(f1_d_snan), &(OR_u1_u1_15798));\
bit_vector_or(&(OR_u1_u1_15787), &(OR_u1_u1_15798), &(OR_u1_u1_15799));\
bit_vector_cast_to_bit_vector(0, &(qnan_condition), &(OR_u1_u1_15799));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15807_c_macro_ __declare_static_bit_vector(konst_15802,13);\
bit_vector_clear(&konst_15802);\
__declare_static_bit_vector(konst_15803,13);\
bit_vector_clear(&konst_15803);\
konst_15803.val.byte_array[0] = 254;\
konst_15803.val.byte_array[1] = 3;\
__declare_static_bit_vector(SUB_i13_i13_15804,13);\
bit_vector_clear(&SUB_i13_i13_15804);\
SUB_i13_i13_15804.val.byte_array[0] = 2;\
SUB_i13_i13_15804.val.byte_array[1] = 252;\
__declare_static_bit_vector(SUB_i13_i13_15806,13);\
bit_vector_clear(&konst_15802);\
bit_vector_clear(&konst_15803);\
konst_15803.val.byte_array[0] = 254;\
konst_15803.val.byte_array[1] = 3;\
bit_vector_minus( &(konst_15802), &(konst_15803), &(SUB_i13_i13_15804));\
bit_vector_minus( &(SUB_i13_i13_15804), &(exponent_unbiased), &(SUB_i13_i13_15806));\
bit_vector_cast_to_bit_vector(1, &(denorm_shift_amount), &(SUB_i13_i13_15806));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15817_c_macro_ __declare_static_bit_vector(konst_15811,13);\
bit_vector_clear(&konst_15811);\
konst_15811.val.byte_array[0] = 52;\
__declare_static_bit_vector(SLE_i13_u1_15812,1);\
__declare_static_bit_vector(AND_u1_u1_15813,1);\
__declare_static_bit_vector(NOT_u1_u1_15815,1);\
__declare_static_bit_vector(AND_u1_u1_15816,1);\
bit_vector_clear(&konst_15811);\
konst_15811.val.byte_array[0] = 52;\
bit_vector_less_equal(1, &(denorm_shift_amount), &(konst_15811), &(SLE_i13_u1_15812));\
bit_vector_and(&(underflow), &(SLE_i13_u1_15812), &(AND_u1_u1_15813));\
bit_vector_not( &(qnan_condition), &(NOT_u1_u1_15815));\
bit_vector_and(&(AND_u1_u1_15813), &(NOT_u1_u1_15815), &(AND_u1_u1_15816));\
bit_vector_cast_to_bit_vector(0, &(is_denormalizable), &(AND_u1_u1_15816));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15824_c_macro_ __declare_static_bit_vector(CONCAT_u1_u53_15821,53);\
__declare_static_bit_vector(CONCAT_u53_u64_15823,64);\
bit_vector_concatenate( &(ONE_1), &(mantissa), &(CONCAT_u1_u53_15821));\
bit_vector_concatenate( &(CONCAT_u1_u53_15821), &(ZERO_11), &(CONCAT_u53_u64_15823));\
bit_vector_cast_to_bit_vector(0, &(p), &(CONCAT_u53_u64_15823));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15828_c_macro_ __declare_static_bit_vector(type_cast_15827,6);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15827), &(denorm_shift_amount));\
bit_vector_cast_to_bit_vector(0, &(q), &(type_cast_15827));\
;

#define fpunit_exec_exec__fpdivide64_call_stmt_15832_c_macro_ _fpunit_exec_exec_i64_srl_( &(p),  &(q), &(shifted));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15836_c_macro_ __declare_static_bit_vector(slice_15835,52);\
bit_vector_slice(&(shifted), &(slice_15835), 11);\
bit_vector_cast_to_bit_vector(0, &(mantissa_denorm_final), &(slice_15835));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15843_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_15840,12);\
__declare_static_bit_vector(CONCAT_u12_u64_15842,64);\
bit_vector_concatenate( &(sign_result), &(ZERO_11), &(CONCAT_u1_u12_15840));\
bit_vector_concatenate( &(CONCAT_u1_u12_15840), &(mantissa_denorm_final), &(CONCAT_u12_u64_15842));\
bit_vector_cast_to_bit_vector(0, &(result_denormal), &(CONCAT_u12_u64_15842));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15850_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_15847,12);\
__declare_static_bit_vector(CONCAT_u12_u64_15849,64);\
bit_vector_concatenate( &(sign_result), &(exponent_11), &(CONCAT_u1_u12_15847));\
bit_vector_concatenate( &(CONCAT_u1_u12_15847), &(mantissa), &(CONCAT_u12_u64_15849));\
bit_vector_cast_to_bit_vector(0, &(result_normal), &(CONCAT_u12_u64_15849));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15859_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_15854,12);\
__declare_static_bit_vector(CONCAT_u1_u52_15857,52);\
bit_vector_clear(&CONCAT_u1_u52_15857);\
CONCAT_u1_u52_15857.val.byte_array[6] = 8;\
__declare_static_bit_vector(CONCAT_u12_u64_15858,64);\
bit_vector_concatenate( &(sign_result), &(ALL_ONE_11), &(CONCAT_u1_u12_15854));\
bit_vector_concatenate( &(ONE_1), &(ZERO_51), &(CONCAT_u1_u52_15857));\
bit_vector_concatenate( &(CONCAT_u1_u12_15854), &(CONCAT_u1_u52_15857), &(CONCAT_u12_u64_15858));\
bit_vector_cast_to_bit_vector(0, &(result_qnan), &(CONCAT_u12_u64_15858));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15864_c_macro_ __declare_static_bit_vector(CONCAT_u1_u64_15863,64);\
bit_vector_concatenate( &(sign_result), &(ZERO_63), &(CONCAT_u1_u64_15863));\
bit_vector_cast_to_bit_vector(0, &(result_zero), &(CONCAT_u1_u64_15863));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15871_c_macro_ __declare_static_bit_vector(CONCAT_u1_u12_15868,12);\
__declare_static_bit_vector(CONCAT_u12_u64_15870,64);\
bit_vector_concatenate( &(sign_result), &(ALL_ONE_11), &(CONCAT_u1_u12_15868));\
bit_vector_concatenate( &(CONCAT_u1_u12_15868), &(ZERO_52), &(CONCAT_u12_u64_15870));\
bit_vector_cast_to_bit_vector(0, &(result_infinity), &(CONCAT_u12_u64_15870));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15877_c_macro_ __declare_static_bit_vector(NOT_u1_u1_15875,1);\
__declare_static_bit_vector(AND_u1_u1_15876,1);\
bit_vector_not( &(is_denormalizable), &(NOT_u1_u1_15875));\
bit_vector_and(&(underflow), &(NOT_u1_u1_15875), &(AND_u1_u1_15876));\
bit_vector_cast_to_bit_vector(0, &(underflow_not_denorm), &(AND_u1_u1_15876));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15890_c_macro_ __declare_static_bit_vector(OR_u1_u1_15882,1);\
__declare_static_bit_vector(OR_u1_u1_15884,1);\
__declare_static_bit_vector(AND_u1_u1_15885,1);\
__declare_static_bit_vector(OR_u1_u1_15887,1);\
__declare_static_bit_vector(OR_u1_u1_15889,1);\
bit_vector_or(&(f1_d_zero), &(f1_d_qnan), &(OR_u1_u1_15882));\
bit_vector_or(&(OR_u1_u1_15882), &(f1_d_snan), &(OR_u1_u1_15884));\
bit_vector_and(&(f2_d_zero), &(OR_u1_u1_15884), &(AND_u1_u1_15885));\
bit_vector_or(&(AND_u1_u1_15885), &(f1_d_zero), &(OR_u1_u1_15887));\
bit_vector_or(&(OR_u1_u1_15887), &(underflow_not_denorm), &(OR_u1_u1_15889));\
bit_vector_cast_to_bit_vector(0, &(zero_condition), &(OR_u1_u1_15889));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15907_c_macro_ __declare_static_bit_vector(OR_u1_u1_15895,1);\
__declare_static_bit_vector(OR_u1_u1_15897,1);\
__declare_static_bit_vector(AND_u1_u1_15898,1);\
__declare_static_bit_vector(OR_u1_u1_15902,1);\
__declare_static_bit_vector(AND_u1_u1_15903,1);\
__declare_static_bit_vector(OR_u1_u1_15904,1);\
__declare_static_bit_vector(OR_u1_u1_15906,1);\
bit_vector_or(&(f1_d_normal), &(f1_d_denormal), &(OR_u1_u1_15895));\
bit_vector_or(&(OR_u1_u1_15895), &(f1_d_inf), &(OR_u1_u1_15897));\
bit_vector_and(&(f2_d_zero), &(OR_u1_u1_15897), &(AND_u1_u1_15898));\
bit_vector_or(&(f2_d_normal), &(f2_d_denormal), &(OR_u1_u1_15902));\
bit_vector_and(&(f1_d_inf), &(OR_u1_u1_15902), &(AND_u1_u1_15903));\
bit_vector_or(&(AND_u1_u1_15898), &(AND_u1_u1_15903), &(OR_u1_u1_15904));\
bit_vector_or(&(OR_u1_u1_15904), &(overflow), &(OR_u1_u1_15906));\
bit_vector_cast_to_bit_vector(0, &(inf_condition), &(OR_u1_u1_15906));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15922_c_macro_ __declare_static_bit_vector(OR_u1_u1_15911,1);\
__declare_static_bit_vector(OR_u1_u1_15914,1);\
__declare_static_bit_vector(AND_u1_u1_15915,1);\
__declare_static_bit_vector(NOT_u1_u1_15917,1);\
__declare_static_bit_vector(NOT_u1_u1_15919,1);\
__declare_static_bit_vector(AND_u1_u1_15920,1);\
__declare_static_bit_vector(AND_u1_u1_15921,1);\
bit_vector_or(&(f1_d_normal), &(f1_d_denormal), &(OR_u1_u1_15911));\
bit_vector_or(&(f2_d_normal), &(f2_d_denormal), &(OR_u1_u1_15914));\
bit_vector_and(&(OR_u1_u1_15911), &(OR_u1_u1_15914), &(AND_u1_u1_15915));\
bit_vector_not( &(overflow), &(NOT_u1_u1_15917));\
bit_vector_not( &(underflow), &(NOT_u1_u1_15919));\
bit_vector_and(&(NOT_u1_u1_15917), &(NOT_u1_u1_15919), &(AND_u1_u1_15920));\
bit_vector_and(&(AND_u1_u1_15915), &(AND_u1_u1_15920), &(AND_u1_u1_15921));\
bit_vector_cast_to_bit_vector(0, &(normal_condition), &(AND_u1_u1_15921));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15948_c_macro_ __declare_static_bit_vector(konst_15926,64);\
bit_vector_clear(&konst_15926);\
__declare_static_bit_vector(MUX_15927,64);\
__declare_static_bit_vector(konst_15930,64);\
bit_vector_clear(&konst_15930);\
__declare_static_bit_vector(MUX_15931,64);\
__declare_static_bit_vector(OR_u64_u64_15932,64);\
__declare_static_bit_vector(konst_15935,64);\
bit_vector_clear(&konst_15935);\
__declare_static_bit_vector(MUX_15936,64);\
__declare_static_bit_vector(OR_u64_u64_15937,64);\
__declare_static_bit_vector(konst_15940,64);\
bit_vector_clear(&konst_15940);\
__declare_static_bit_vector(MUX_15941,64);\
__declare_static_bit_vector(konst_15944,64);\
bit_vector_clear(&konst_15944);\
__declare_static_bit_vector(MUX_15945,64);\
__declare_static_bit_vector(OR_u64_u64_15946,64);\
__declare_static_bit_vector(OR_u64_u64_15947,64);\
if (has_undefined_bit(&zero_condition)) {fprintf(stderr, "Error: variable zero_condition has undefined value (%s) at test point.\n", to_string(&zero_condition));assert(0);} \
if(bit_vector_to_uint64(0, &zero_condition)){bit_vector_cast_to_bit_vector(0, &(MUX_15927), &(result_zero));\
}else {bit_vector_clear(&konst_15926);\
bit_vector_cast_to_bit_vector(0, &(MUX_15927), &(konst_15926));\
}if (has_undefined_bit(&qnan_condition)) {fprintf(stderr, "Error: variable qnan_condition has undefined value (%s) at test point.\n", to_string(&qnan_condition));assert(0);} \
if(bit_vector_to_uint64(0, &qnan_condition)){bit_vector_cast_to_bit_vector(0, &(MUX_15931), &(result_qnan));\
}else {bit_vector_clear(&konst_15930);\
bit_vector_cast_to_bit_vector(0, &(MUX_15931), &(konst_15930));\
}bit_vector_or(&(MUX_15927), &(MUX_15931), &(OR_u64_u64_15932));\
if (has_undefined_bit(&inf_condition)) {fprintf(stderr, "Error: variable inf_condition has undefined value (%s) at test point.\n", to_string(&inf_condition));assert(0);} \
if(bit_vector_to_uint64(0, &inf_condition)){bit_vector_cast_to_bit_vector(0, &(MUX_15936), &(result_infinity));\
}else {bit_vector_clear(&konst_15935);\
bit_vector_cast_to_bit_vector(0, &(MUX_15936), &(konst_15935));\
}bit_vector_or(&(OR_u64_u64_15932), &(MUX_15936), &(OR_u64_u64_15937));\
if (has_undefined_bit(&normal_condition)) {fprintf(stderr, "Error: variable normal_condition has undefined value (%s) at test point.\n", to_string(&normal_condition));assert(0);} \
if(bit_vector_to_uint64(0, &normal_condition)){bit_vector_cast_to_bit_vector(0, &(MUX_15941), &(result_normal));\
}else {bit_vector_clear(&konst_15940);\
bit_vector_cast_to_bit_vector(0, &(MUX_15941), &(konst_15940));\
}if (has_undefined_bit(&is_denormalizable)) {fprintf(stderr, "Error: variable is_denormalizable has undefined value (%s) at test point.\n", to_string(&is_denormalizable));assert(0);} \
if(bit_vector_to_uint64(0, &is_denormalizable)){bit_vector_cast_to_bit_vector(0, &(MUX_15945), &(result_denormal));\
}else {bit_vector_clear(&konst_15944);\
bit_vector_cast_to_bit_vector(0, &(MUX_15945), &(konst_15944));\
}bit_vector_or(&(MUX_15941), &(MUX_15945), &(OR_u64_u64_15946));\
bit_vector_or(&(OR_u64_u64_15937), &(OR_u64_u64_15946), &(OR_u64_u64_15947));\
bit_vector_cast_to_bit_vector(0, &(result), &(OR_u64_u64_15947));\
;

#define fpunit_exec_exec__fpdivide64_assign_stmt_15952_c_macro_ static double type_cast_15951;\
bit_vector_bitcast_to_double( &(type_cast_15951),  &(result));\
f1BYf2 = type_cast_15951;\
;

#define fpunit_exec_exec__fpdivide64_inner_outarg_prep_macro__ (*__pf1BYf2) = f1BYf2;\
;

#define fpunit_exec_exec__fpdivide64_outer_arg_decl_macro__ double __f1_d = f1_d;\
double __f2_d = f2_d;\
;

#define fpunit_exec_exec__fpdivide64_outer_op_xfer_macro__  *f1BYf2 = __f1BYf2;\
;

#define fpunit_exec_exec__fpmul32_op_inner_inarg_prep_macro__ __declare_static_bit_vector(uf1_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &((*__puf1_s)));\
__declare_static_bit_vector(f1_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_s_class), &((*__pf1_s_class)));\
__declare_static_bit_vector(uf2_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf2_s), &((*__puf2_s)));\
__declare_static_bit_vector(f2_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f2_s_class), &((*__pf2_s_class)));\
__declare_static_bit_vector(needs_norm,1);\
__declare_static_bit_vector(extn_result,81);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_pos_inf,1);\
__declare_static_bit_vector(f1_neg_inf,1);\
__declare_static_bit_vector(f2_zero,1);\
__declare_static_bit_vector(f2_normal,1);\
__declare_static_bit_vector(f2_denormal,1);\
__declare_static_bit_vector(f2_nan,1);\
__declare_static_bit_vector(f2_inf,1);\
__declare_static_bit_vector(f2_pos_inf,1);\
__declare_static_bit_vector(f2_neg_inf,1);\
__declare_static_bit_vector(uf1_s_efp,67);\
__declare_static_bit_vector(uf2_s_efp,67);\
__declare_static_bit_vector(sign_uf1_s,1);\
__declare_static_bit_vector(f1_exp13_unbiased,13);\
__declare_static_bit_vector(f1_top_bit,1);\
__declare_static_bit_vector(f1_fraction,23);\
__declare_static_bit_vector(sign_uf2_s,1);\
__declare_static_bit_vector(f2_exp13_unbiased,13);\
__declare_static_bit_vector(f2_top_bit,1);\
__declare_static_bit_vector(f2_fraction,23);\
__declare_static_bit_vector(sign_result,1);\
__declare_static_bit_vector(f1_frac_v,24);\
__declare_static_bit_vector(f2_frac_v,24);\
__declare_static_bit_vector(exp_a,13);\
__declare_static_bit_vector(exp_b,13);\
__declare_static_bit_vector(f1_top_bit_pos,5);\
__declare_static_bit_vector(f1_top_bit_found,1);\
__declare_static_bit_vector(f2_top_bit_pos,5);\
__declare_static_bit_vector(f2_top_bit_found,1);\
__declare_static_bit_vector(f1_left_shift_correction,13);\
__declare_static_bit_vector(exp_a_corrected,13);\
__declare_static_bit_vector(f2_left_shift_correction,13);\
__declare_static_bit_vector(exp_b_corrected,13);\
__declare_static_bit_vector(mul_result_left_shift_amount,13);\
__declare_static_bit_vector(f1_frac,24);\
__declare_static_bit_vector(f2_frac,24);\
__declare_static_bit_vector(exp_ab,13);\
__declare_static_bit_vector(frac_result_48bits,48);\
__declare_static_bit_vector(frac_result_35,35);\
__declare_static_bit_vector(value_of_bits_thrown_away_greater_than_zero,1);\
__declare_static_bit_vector(implied_shift_amount,6);\
__declare_static_bit_vector(frac_result_35_with_implied_shift,35);\
__declare_static_bit_vector(shift_by_one,1);\
__declare_static_bit_vector(thrown_away_bit,1);\
__declare_static_bit_vector(mantissa_33_bits,33);\
__declare_static_bit_vector(mantissa_62_bits,62);\
__declare_static_bit_vector(sticky_raw,1);\
__declare_static_bit_vector(exponent_correction,13);\
__declare_static_bit_vector(exponent_without_bias,13);\
__declare_static_bit_vector(SP_overflow,1);\
__declare_static_bit_vector(SP_underflow,1);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(condition_zero,1);\
__declare_static_bit_vector(condition_nan,1);\
__declare_static_bit_vector(condition_inf,1);\
__declare_static_bit_vector(underflow,1);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(SP_nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(SP_normalization_required,1);\
__declare_static_bit_vector(normalization_required,1);\
__declare_static_bit_vector(nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(condition_nan_d,1);\
__declare_static_bit_vector(condition_zero_d,1);\
__declare_static_bit_vector(exponent_to_be_passed,13);\
__declare_static_bit_vector(mantissa_to_be_passed,62);\

#define fpunit_exec_exec__fpmul32_op_call_stmt_12215_c_macro_ __declare_static_bit_vector(konst_12207,10);\
bit_vector_clear(&konst_12207);\
bit_vector_clear(&konst_12207);\
_fpunit_exec_exec_classify_utility_( &(ONE_1),  &(f1_s_class),  &(konst_12207), &(f1_zero), &(f1_normal), &(f1_denormal), &(f1_nan), &(f1_inf), &(f1_pos_inf), &(f1_neg_inf));\
;

#define fpunit_exec_exec__fpmul32_op_call_stmt_12226_c_macro_ __declare_static_bit_vector(konst_12218,10);\
bit_vector_clear(&konst_12218);\
bit_vector_clear(&konst_12218);\
_fpunit_exec_exec_classify_utility_( &(ONE_1),  &(f2_s_class),  &(konst_12218), &(f2_zero), &(f2_normal), &(f2_denormal), &(f2_nan), &(f2_inf), &(f2_pos_inf), &(f2_neg_inf));\
;

#define fpunit_exec_exec__fpmul32_op_call_stmt_12230_c_macro_ _fpunit_exec_exec_SingleToExtendedFp_( &(uf1_s),  &(f1_s_class), &(uf1_s_efp));\
;

#define fpunit_exec_exec__fpmul32_op_call_stmt_12234_c_macro_ _fpunit_exec_exec_SingleToExtendedFp_( &(uf2_s),  &(f2_s_class), &(uf2_s_efp));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12238_c_macro_ __declare_static_bit_vector(slice_12237,1);\
bit_vector_slice(&(uf1_s_efp), &(slice_12237), 66);\
bit_vector_cast_to_bit_vector(0, &(sign_uf1_s), &(slice_12237));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12242_c_macro_ __declare_static_bit_vector(slice_12241,13);\
bit_vector_slice(&(uf1_s_efp), &(slice_12241), 53);\
bit_vector_cast_to_bit_vector(0, &(f1_exp13_unbiased), &(slice_12241));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12246_c_macro_ __declare_static_bit_vector(slice_12245,1);\
bit_vector_slice(&(uf1_s_efp), &(slice_12245), 52);\
bit_vector_cast_to_bit_vector(0, &(f1_top_bit), &(slice_12245));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12250_c_macro_ __declare_static_bit_vector(slice_12249,23);\
bit_vector_slice(&(uf1_s_efp), &(slice_12249), 29);\
bit_vector_cast_to_bit_vector(0, &(f1_fraction), &(slice_12249));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12254_c_macro_ __declare_static_bit_vector(slice_12253,1);\
bit_vector_slice(&(uf2_s_efp), &(slice_12253), 66);\
bit_vector_cast_to_bit_vector(0, &(sign_uf2_s), &(slice_12253));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12258_c_macro_ __declare_static_bit_vector(slice_12257,13);\
bit_vector_slice(&(uf2_s_efp), &(slice_12257), 53);\
bit_vector_cast_to_bit_vector(0, &(f2_exp13_unbiased), &(slice_12257));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12262_c_macro_ __declare_static_bit_vector(slice_12261,1);\
bit_vector_slice(&(uf2_s_efp), &(slice_12261), 52);\
bit_vector_cast_to_bit_vector(0, &(f2_top_bit), &(slice_12261));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12266_c_macro_ __declare_static_bit_vector(slice_12265,23);\
bit_vector_slice(&(uf2_s_efp), &(slice_12265), 29);\
bit_vector_cast_to_bit_vector(0, &(f2_fraction), &(slice_12265));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12271_c_macro_ __declare_static_bit_vector(XOR_u1_u1_12270,1);\
bit_vector_xor(&(sign_uf1_s), &(sign_uf2_s), &(XOR_u1_u1_12270));\
bit_vector_cast_to_bit_vector(0, &(sign_result), &(XOR_u1_u1_12270));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12276_c_macro_ __declare_static_bit_vector(CONCAT_u1_u24_12275,24);\
bit_vector_concatenate( &(f1_top_bit), &(f1_fraction), &(CONCAT_u1_u24_12275));\
bit_vector_cast_to_bit_vector(0, &(f1_frac_v), &(CONCAT_u1_u24_12275));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12281_c_macro_ __declare_static_bit_vector(CONCAT_u1_u24_12280,24);\
bit_vector_concatenate( &(f2_top_bit), &(f2_fraction), &(CONCAT_u1_u24_12280));\
bit_vector_cast_to_bit_vector(0, &(f2_frac_v), &(CONCAT_u1_u24_12280));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12285_c_macro_ __declare_static_bit_vector(type_cast_12284,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12284), &(f1_exp13_unbiased));\
bit_vector_cast_to_bit_vector(1, &(exp_a), &(type_cast_12284));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12289_c_macro_ __declare_static_bit_vector(type_cast_12288,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12288), &(f2_exp13_unbiased));\
bit_vector_cast_to_bit_vector(1, &(exp_b), &(type_cast_12288));\
;

#define fpunit_exec_exec__fpmul32_op_call_stmt_12293_c_macro_ _fpunit_exec_exec_find_left_24_( &(f1_frac_v), &(f1_top_bit_pos), &(f1_top_bit_found));\
;

#define fpunit_exec_exec__fpmul32_op_call_stmt_12297_c_macro_ _fpunit_exec_exec_find_left_24_( &(f2_frac_v), &(f2_top_bit_pos), &(f2_top_bit_found));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12303_c_macro_ __declare_static_bit_vector(konst_12299,5);\
bit_vector_clear(&konst_12299);\
konst_12299.val.byte_array[0] = 23;\
__declare_static_bit_vector(SUB_u5_u5_12301,5);\
__declare_static_bit_vector(type_cast_12302,13);\
bit_vector_clear(&konst_12299);\
konst_12299.val.byte_array[0] = 23;\
bit_vector_minus( &(konst_12299), &(f1_top_bit_pos), &(SUB_u5_u5_12301));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12302), &(SUB_u5_u5_12301));\
bit_vector_cast_to_bit_vector(1, &(f1_left_shift_correction), &(type_cast_12302));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12308_c_macro_ __declare_static_bit_vector(SUB_i13_i13_12307,13);\
bit_vector_minus( &(exp_a), &(f1_left_shift_correction), &(SUB_i13_i13_12307));\
bit_vector_cast_to_bit_vector(1, &(exp_a_corrected), &(SUB_i13_i13_12307));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12314_c_macro_ __declare_static_bit_vector(konst_12310,5);\
bit_vector_clear(&konst_12310);\
konst_12310.val.byte_array[0] = 23;\
__declare_static_bit_vector(SUB_u5_u5_12312,5);\
__declare_static_bit_vector(type_cast_12313,13);\
bit_vector_clear(&konst_12310);\
konst_12310.val.byte_array[0] = 23;\
bit_vector_minus( &(konst_12310), &(f2_top_bit_pos), &(SUB_u5_u5_12312));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12313), &(SUB_u5_u5_12312));\
bit_vector_cast_to_bit_vector(1, &(f2_left_shift_correction), &(type_cast_12313));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12319_c_macro_ __declare_static_bit_vector(SUB_i13_i13_12318,13);\
bit_vector_minus( &(exp_b), &(f2_left_shift_correction), &(SUB_i13_i13_12318));\
bit_vector_cast_to_bit_vector(1, &(exp_b_corrected), &(SUB_i13_i13_12318));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12324_c_macro_ __declare_static_bit_vector(ADD_i13_i13_12323,13);\
bit_vector_plus( &(f1_left_shift_correction), &(f2_left_shift_correction), &(ADD_i13_i13_12323));\
bit_vector_cast_to_bit_vector(1, &(mul_result_left_shift_amount), &(ADD_i13_i13_12323));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12327_c_macro_ bit_vector_cast_to_bit_vector(0, &(f1_frac), &(f1_frac_v));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12330_c_macro_ bit_vector_cast_to_bit_vector(0, &(f2_frac), &(f2_frac_v));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12335_c_macro_ __declare_static_bit_vector(ADD_i13_i13_12334,13);\
bit_vector_plus( &(exp_a_corrected), &(exp_b_corrected), &(ADD_i13_i13_12334));\
bit_vector_cast_to_bit_vector(1, &(exp_ab), &(ADD_i13_i13_12334));\
;

#define fpunit_exec_exec__fpmul32_op_call_stmt_12339_c_macro_ _fpunit_exec_exec_mul24_( &(f1_frac),  &(f2_frac), &(frac_result_48bits));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12343_c_macro_ __declare_static_bit_vector(slice_12342,35);\
bit_vector_slice(&(frac_result_48bits), &(slice_12342), 13);\
bit_vector_cast_to_bit_vector(0, &(frac_result_35), &(slice_12342));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12350_c_macro_ __declare_static_bit_vector(slice_12346,7);\
__declare_static_bit_vector(konst_12347,7);\
bit_vector_clear(&konst_12347);\
__declare_static_bit_vector(EQ_u7_u1_12348,1);\
__declare_static_bit_vector(NOT_u1_u1_12349,1);\
bit_vector_slice(&(frac_result_35), &(slice_12346), 0);\
bit_vector_clear(&konst_12347);\
bit_vector_equal(0, &(slice_12346), &(konst_12347), &(EQ_u7_u1_12348));\
bit_vector_not( &(EQ_u7_u1_12348), &(NOT_u1_u1_12349));\
bit_vector_cast_to_bit_vector(0, &(value_of_bits_thrown_away_greater_than_zero), &(NOT_u1_u1_12349));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12359_c_macro_ __declare_static_bit_vector(konst_12353,13);\
bit_vector_clear(&konst_12353);\
konst_12353.val.byte_array[0] = 35;\
__declare_static_bit_vector(SGT_i13_u1_12354,1);\
__declare_static_bit_vector(konst_12355,6);\
bit_vector_clear(&konst_12355);\
konst_12355.val.byte_array[0] = 35;\
__declare_static_bit_vector(type_cast_12357,6);\
__declare_static_bit_vector(MUX_12358,6);\
bit_vector_clear(&konst_12353);\
konst_12353.val.byte_array[0] = 35;\
bit_vector_greater(1, &(mul_result_left_shift_amount), &(konst_12353), &(SGT_i13_u1_12354));\
if (has_undefined_bit(&SGT_i13_u1_12354)) {fprintf(stderr, "Error: variable SGT_i13_u1_12354 has undefined value (%s) at test point.\n", to_string(&SGT_i13_u1_12354));assert(0);} \
if(bit_vector_to_uint64(0, &SGT_i13_u1_12354)){bit_vector_clear(&konst_12355);\
konst_12355.val.byte_array[0] = 35;\
bit_vector_cast_to_bit_vector(0, &(MUX_12358), &(konst_12355));\
}else {bit_vector_bitcast_to_bit_vector( &(type_cast_12357), &(mul_result_left_shift_amount));\
bit_vector_cast_to_bit_vector(0, &(MUX_12358), &(type_cast_12357));\
}bit_vector_cast_to_bit_vector(0, &(implied_shift_amount), &(MUX_12358));\
;

#define fpunit_exec_exec__fpmul32_op_call_stmt_12363_c_macro_ _fpunit_exec_exec_i35_sll_( &(frac_result_35),  &(implied_shift_amount), &(frac_result_35_with_implied_shift));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12368_c_macro_ __declare_static_bit_vector(konst_12366,35);\
bit_vector_clear(&konst_12366);\
konst_12366.val.byte_array[0] = 34;\
__declare_static_bit_vector(BITSEL_u35_u1_12367,1);\
bit_vector_clear(&konst_12366);\
konst_12366.val.byte_array[0] = 34;\
bit_vector_bitsel( &(frac_result_35_with_implied_shift), &(konst_12366), &(BITSEL_u35_u1_12367));\
bit_vector_cast_to_bit_vector(0, &(shift_by_one), &(BITSEL_u35_u1_12367));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12376_c_macro_ __declare_static_bit_vector(konst_12372,35);\
bit_vector_clear(&konst_12372);\
__declare_static_bit_vector(BITSEL_u35_u1_12373,1);\
__declare_static_bit_vector(konst_12374,1);\
bit_vector_clear(&konst_12374);\
__declare_static_bit_vector(MUX_12375,1);\
if (has_undefined_bit(&shift_by_one)) {fprintf(stderr, "Error: variable shift_by_one has undefined value (%s) at test point.\n", to_string(&shift_by_one));assert(0);} \
if(bit_vector_to_uint64(0, &shift_by_one)){bit_vector_clear(&konst_12372);\
bit_vector_bitsel( &(frac_result_35_with_implied_shift), &(konst_12372), &(BITSEL_u35_u1_12373));\
bit_vector_cast_to_bit_vector(0, &(MUX_12375), &(BITSEL_u35_u1_12373));\
}else {bit_vector_clear(&konst_12374);\
bit_vector_cast_to_bit_vector(0, &(MUX_12375), &(konst_12374));\
}bit_vector_cast_to_bit_vector(0, &(thrown_away_bit), &(MUX_12375));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12384_c_macro_ __declare_static_bit_vector(slice_12380,33);\
__declare_static_bit_vector(slice_12382,33);\
__declare_static_bit_vector(MUX_12383,33);\
if (has_undefined_bit(&shift_by_one)) {fprintf(stderr, "Error: variable shift_by_one has undefined value (%s) at test point.\n", to_string(&shift_by_one));assert(0);} \
if(bit_vector_to_uint64(0, &shift_by_one)){bit_vector_slice(&(frac_result_35_with_implied_shift), &(slice_12380), 1);\
bit_vector_cast_to_bit_vector(0, &(MUX_12383), &(slice_12380));\
}else {bit_vector_slice(&(frac_result_35_with_implied_shift), &(slice_12382), 0);\
bit_vector_cast_to_bit_vector(0, &(MUX_12383), &(slice_12382));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_33_bits), &(MUX_12383));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12390_c_macro_ __declare_static_bit_vector(konst_12387,29);\
bit_vector_clear(&konst_12387);\
__declare_static_bit_vector(type_cast_12388,29);\
bit_vector_clear(&type_cast_12388);\
__declare_static_bit_vector(CONCAT_u33_u62_12389,62);\
bit_vector_clear(&konst_12387);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12388), &(konst_12387));\
bit_vector_concatenate( &(mantissa_33_bits), &(type_cast_12388), &(CONCAT_u33_u62_12389));\
bit_vector_cast_to_bit_vector(0, &(mantissa_62_bits), &(CONCAT_u33_u62_12389));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12395_c_macro_ __declare_static_bit_vector(OR_u1_u1_12394,1);\
bit_vector_or(&(thrown_away_bit), &(value_of_bits_thrown_away_greater_than_zero), &(OR_u1_u1_12394));\
bit_vector_cast_to_bit_vector(0, &(sticky_raw), &(OR_u1_u1_12394));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12401_c_macro_ __declare_static_bit_vector(MUX_12400,13);\
if (has_undefined_bit(&shift_by_one)) {fprintf(stderr, "Error: variable shift_by_one has undefined value (%s) at test point.\n", to_string(&shift_by_one));assert(0);} \
if(bit_vector_to_uint64(0, &shift_by_one)){bit_vector_cast_to_bit_vector(1, &(MUX_12400), &(exp_base_1));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_12400), &(exp_base_0));\
}bit_vector_cast_to_bit_vector(1, &(exponent_correction), &(MUX_12400));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12406_c_macro_ __declare_static_bit_vector(ADD_i13_i13_12405,13);\
bit_vector_plus( &(exp_ab), &(exponent_correction), &(ADD_i13_i13_12405));\
bit_vector_cast_to_bit_vector(1, &(exponent_without_bias), &(ADD_i13_i13_12405));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12411_c_macro_ __declare_static_bit_vector(konst_12409,13);\
bit_vector_clear(&konst_12409);\
konst_12409.val.byte_array[0] = 127;\
__declare_static_bit_vector(SGT_i13_u1_12410,1);\
bit_vector_clear(&konst_12409);\
konst_12409.val.byte_array[0] = 127;\
bit_vector_greater(1, &(exponent_without_bias), &(konst_12409), &(SGT_i13_u1_12410));\
bit_vector_cast_to_bit_vector(0, &(SP_overflow), &(SGT_i13_u1_12410));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12416_c_macro_ __declare_static_bit_vector(konst_12414,13);\
bit_vector_clear(&konst_12414);\
konst_12414.val.byte_array[0] = 130;\
konst_12414.val.byte_array[1] = 255;\
__declare_static_bit_vector(SLT_i13_u1_12415,1);\
bit_vector_clear(&konst_12414);\
konst_12414.val.byte_array[0] = 130;\
konst_12414.val.byte_array[1] = 255;\
bit_vector_less(1, &(exponent_without_bias), &(konst_12414), &(SLT_i13_u1_12415));\
bit_vector_cast_to_bit_vector(0, &(SP_underflow), &(SLT_i13_u1_12415));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12419_c_macro_ bit_vector_cast_to_bit_vector(0, &(overflow), &(SP_overflow));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12424_c_macro_ __declare_static_bit_vector(OR_u1_u1_12423,1);\
bit_vector_or(&(f1_zero), &(f2_zero), &(OR_u1_u1_12423));\
bit_vector_cast_to_bit_vector(0, &(condition_zero), &(OR_u1_u1_12423));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12437_c_macro_ __declare_static_bit_vector(OR_u1_u1_12428,1);\
__declare_static_bit_vector(AND_u1_u1_12431,1);\
__declare_static_bit_vector(AND_u1_u1_12434,1);\
__declare_static_bit_vector(OR_u1_u1_12435,1);\
__declare_static_bit_vector(OR_u1_u1_12436,1);\
bit_vector_or(&(f1_nan), &(f2_nan), &(OR_u1_u1_12428));\
bit_vector_and(&(f1_zero), &(f2_inf), &(AND_u1_u1_12431));\
bit_vector_and(&(f1_inf), &(f2_zero), &(AND_u1_u1_12434));\
bit_vector_or(&(AND_u1_u1_12431), &(AND_u1_u1_12434), &(OR_u1_u1_12435));\
bit_vector_or(&(OR_u1_u1_12428), &(OR_u1_u1_12435), &(OR_u1_u1_12436));\
bit_vector_cast_to_bit_vector(0, &(condition_nan), &(OR_u1_u1_12436));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12456_c_macro_ __declare_static_bit_vector(OR_u1_u1_12442,1);\
__declare_static_bit_vector(OR_u1_u1_12444,1);\
__declare_static_bit_vector(AND_u1_u1_12445,1);\
__declare_static_bit_vector(OR_u1_u1_12449,1);\
__declare_static_bit_vector(OR_u1_u1_12451,1);\
__declare_static_bit_vector(AND_u1_u1_12452,1);\
__declare_static_bit_vector(OR_u1_u1_12453,1);\
__declare_static_bit_vector(OR_u1_u1_12455,1);\
bit_vector_or(&(f2_inf), &(f2_normal), &(OR_u1_u1_12442));\
bit_vector_or(&(OR_u1_u1_12442), &(f2_denormal), &(OR_u1_u1_12444));\
bit_vector_and(&(f1_inf), &(OR_u1_u1_12444), &(AND_u1_u1_12445));\
bit_vector_or(&(f1_inf), &(f1_normal), &(OR_u1_u1_12449));\
bit_vector_or(&(OR_u1_u1_12449), &(f1_denormal), &(OR_u1_u1_12451));\
bit_vector_and(&(f2_inf), &(OR_u1_u1_12451), &(AND_u1_u1_12452));\
bit_vector_or(&(AND_u1_u1_12445), &(AND_u1_u1_12452), &(OR_u1_u1_12453));\
bit_vector_or(&(OR_u1_u1_12453), &(overflow), &(OR_u1_u1_12455));\
bit_vector_cast_to_bit_vector(0, &(condition_inf), &(OR_u1_u1_12455));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12462_c_macro_ __declare_static_bit_vector(NOT_u1_u1_12459,1);\
__declare_static_bit_vector(AND_u1_u1_12461,1);\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_12459));\
bit_vector_and(&(NOT_u1_u1_12459), &(SP_underflow), &(AND_u1_u1_12461));\
bit_vector_cast_to_bit_vector(0, &(underflow), &(AND_u1_u1_12461));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12474_c_macro_ __declare_static_bit_vector(NOT_u1_u1_12466,1);\
__declare_static_bit_vector(AND_u1_u1_12467,1);\
__declare_static_bit_vector(NOT_u1_u1_12469,1);\
__declare_static_bit_vector(NOT_u1_u1_12471,1);\
__declare_static_bit_vector(AND_u1_u1_12472,1);\
__declare_static_bit_vector(AND_u1_u1_12473,1);\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_12466));\
bit_vector_and(&(sticky_raw), &(NOT_u1_u1_12466), &(AND_u1_u1_12467));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_12469));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_12471));\
bit_vector_and(&(NOT_u1_u1_12469), &(NOT_u1_u1_12471), &(AND_u1_u1_12472));\
bit_vector_and(&(AND_u1_u1_12467), &(AND_u1_u1_12472), &(AND_u1_u1_12473));\
bit_vector_cast_to_bit_vector(0, &(sticky), &(AND_u1_u1_12473));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12490_c_macro_ __declare_static_bit_vector(NOT_u1_u1_12477,1);\
__declare_static_bit_vector(NOT_u1_u1_12479,1);\
__declare_static_bit_vector(AND_u1_u1_12480,1);\
__declare_static_bit_vector(NOT_u1_u1_12482,1);\
__declare_static_bit_vector(AND_u1_u1_12483,1);\
__declare_static_bit_vector(NOT_u1_u1_12485,1);\
__declare_static_bit_vector(NOT_u1_u1_12487,1);\
__declare_static_bit_vector(AND_u1_u1_12488,1);\
__declare_static_bit_vector(AND_u1_u1_12489,1);\
bit_vector_not( &(overflow), &(NOT_u1_u1_12477));\
bit_vector_not( &(underflow), &(NOT_u1_u1_12479));\
bit_vector_and(&(NOT_u1_u1_12477), &(NOT_u1_u1_12479), &(AND_u1_u1_12480));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_12482));\
bit_vector_and(&(AND_u1_u1_12480), &(NOT_u1_u1_12482), &(AND_u1_u1_12483));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_12485));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_12487));\
bit_vector_and(&(NOT_u1_u1_12485), &(NOT_u1_u1_12487), &(AND_u1_u1_12488));\
bit_vector_and(&(AND_u1_u1_12483), &(AND_u1_u1_12488), &(AND_u1_u1_12489));\
bit_vector_cast_to_bit_vector(0, &(SP_nothing_to_be_done_condition_normal), &(AND_u1_u1_12489));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12504_c_macro_ __declare_static_bit_vector(OR_u1_u1_12494,1);\
__declare_static_bit_vector(NOT_u1_u1_12496,1);\
__declare_static_bit_vector(AND_u1_u1_12497,1);\
__declare_static_bit_vector(NOT_u1_u1_12499,1);\
__declare_static_bit_vector(NOT_u1_u1_12501,1);\
__declare_static_bit_vector(AND_u1_u1_12502,1);\
__declare_static_bit_vector(AND_u1_u1_12503,1);\
bit_vector_or(&(overflow), &(underflow), &(OR_u1_u1_12494));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_12496));\
bit_vector_and(&(OR_u1_u1_12494), &(NOT_u1_u1_12496), &(AND_u1_u1_12497));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_12499));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_12501));\
bit_vector_and(&(NOT_u1_u1_12499), &(NOT_u1_u1_12501), &(AND_u1_u1_12502));\
bit_vector_and(&(AND_u1_u1_12497), &(AND_u1_u1_12502), &(AND_u1_u1_12503));\
bit_vector_cast_to_bit_vector(0, &(SP_normalization_required), &(AND_u1_u1_12503));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12507_c_macro_ bit_vector_cast_to_bit_vector(0, &(normalization_required), &(SP_normalization_required));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12510_c_macro_ bit_vector_cast_to_bit_vector(0, &(nothing_to_be_done_condition_normal), &(SP_nothing_to_be_done_condition_normal));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12513_c_macro_ bit_vector_cast_to_bit_vector(0, &(condition_nan_d), &(condition_nan));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12516_c_macro_ bit_vector_cast_to_bit_vector(0, &(condition_zero_d), &(condition_zero));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12537_c_macro_ __declare_static_bit_vector(OR_u1_u1_12520,1);\
__declare_static_bit_vector(konst_12522,13);\
bit_vector_clear(&konst_12522);\
__declare_static_bit_vector(MUX_12523,13);\
__declare_static_bit_vector(type_cast_12526,13);\
bit_vector_clear(&type_cast_12526);\
__declare_static_bit_vector(konst_12527,13);\
bit_vector_clear(&konst_12527);\
__declare_static_bit_vector(MUX_12528,13);\
__declare_static_bit_vector(OR_i13_i13_12529,13);\
__declare_static_bit_vector(OR_u1_u1_12532,1);\
__declare_static_bit_vector(konst_12534,13);\
bit_vector_clear(&konst_12534);\
__declare_static_bit_vector(MUX_12535,13);\
__declare_static_bit_vector(OR_i13_i13_12536,13);\
bit_vector_or(&(condition_nan_d), &(condition_inf), &(OR_u1_u1_12520));\
if (has_undefined_bit(&OR_u1_u1_12520)) {fprintf(stderr, "Error: variable OR_u1_u1_12520 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_12520));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_12520)){bit_vector_cast_to_bit_vector(1, &(MUX_12523), &(ALL_ONE_13));\
}else {bit_vector_clear(&konst_12522);\
bit_vector_cast_to_bit_vector(1, &(MUX_12523), &(konst_12522));\
}if (has_undefined_bit(&condition_zero_d)) {fprintf(stderr, "Error: variable condition_zero_d has undefined value (%s) at test point.\n", to_string(&condition_zero_d));assert(0);} \
if(bit_vector_to_uint64(0, &condition_zero_d)){bit_vector_bitcast_to_bit_vector( &(type_cast_12526), &(ZERO_13));\
bit_vector_cast_to_bit_vector(1, &(MUX_12528), &(type_cast_12526));\
}else {bit_vector_clear(&konst_12527);\
bit_vector_cast_to_bit_vector(1, &(MUX_12528), &(konst_12527));\
}bit_vector_or(&(MUX_12523), &(MUX_12528), &(OR_i13_i13_12529));\
bit_vector_or(&(normalization_required), &(nothing_to_be_done_condition_normal), &(OR_u1_u1_12532));\
if (has_undefined_bit(&OR_u1_u1_12532)) {fprintf(stderr, "Error: variable OR_u1_u1_12532 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_12532));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_12532)){bit_vector_cast_to_bit_vector(1, &(MUX_12535), &(exponent_without_bias));\
}else {bit_vector_clear(&konst_12534);\
bit_vector_cast_to_bit_vector(1, &(MUX_12535), &(konst_12534));\
}bit_vector_or(&(OR_i13_i13_12529), &(MUX_12535), &(OR_i13_i13_12536));\
bit_vector_cast_to_bit_vector(1, &(exponent_to_be_passed), &(OR_i13_i13_12536));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12562_c_macro_ __declare_static_bit_vector(CONCAT_u1_u62_12542,62);\
bit_vector_clear(&CONCAT_u1_u62_12542);\
CONCAT_u1_u62_12542.val.byte_array[7] = 32;\
__declare_static_bit_vector(konst_12543,62);\
bit_vector_clear(&konst_12543);\
__declare_static_bit_vector(MUX_12544,62);\
__declare_static_bit_vector(konst_12547,62);\
bit_vector_clear(&konst_12547);\
__declare_static_bit_vector(MUX_12548,62);\
__declare_static_bit_vector(OR_u62_u62_12549,62);\
__declare_static_bit_vector(konst_12552,62);\
bit_vector_clear(&konst_12552);\
__declare_static_bit_vector(MUX_12553,62);\
__declare_static_bit_vector(OR_u1_u1_12556,1);\
__declare_static_bit_vector(konst_12558,62);\
bit_vector_clear(&konst_12558);\
__declare_static_bit_vector(MUX_12559,62);\
__declare_static_bit_vector(OR_u62_u62_12560,62);\
__declare_static_bit_vector(OR_u62_u62_12561,62);\
if (has_undefined_bit(&condition_nan_d)) {fprintf(stderr, "Error: variable condition_nan_d has undefined value (%s) at test point.\n", to_string(&condition_nan_d));assert(0);} \
if(bit_vector_to_uint64(0, &condition_nan_d)){bit_vector_concatenate( &(ONE_1), &(ZERO_61), &(CONCAT_u1_u62_12542));\
bit_vector_cast_to_bit_vector(0, &(MUX_12544), &(CONCAT_u1_u62_12542));\
}else {bit_vector_clear(&konst_12543);\
bit_vector_cast_to_bit_vector(0, &(MUX_12544), &(konst_12543));\
}if (has_undefined_bit(&condition_inf)) {fprintf(stderr, "Error: variable condition_inf has undefined value (%s) at test point.\n", to_string(&condition_inf));assert(0);} \
if(bit_vector_to_uint64(0, &condition_inf)){bit_vector_cast_to_bit_vector(0, &(MUX_12548), &(ZERO_62));\
}else {bit_vector_clear(&konst_12547);\
bit_vector_cast_to_bit_vector(0, &(MUX_12548), &(konst_12547));\
}bit_vector_or(&(MUX_12544), &(MUX_12548), &(OR_u62_u62_12549));\
if (has_undefined_bit(&condition_zero_d)) {fprintf(stderr, "Error: variable condition_zero_d has undefined value (%s) at test point.\n", to_string(&condition_zero_d));assert(0);} \
if(bit_vector_to_uint64(0, &condition_zero_d)){bit_vector_cast_to_bit_vector(0, &(MUX_12553), &(ZERO_62));\
}else {bit_vector_clear(&konst_12552);\
bit_vector_cast_to_bit_vector(0, &(MUX_12553), &(konst_12552));\
}bit_vector_or(&(normalization_required), &(nothing_to_be_done_condition_normal), &(OR_u1_u1_12556));\
if (has_undefined_bit(&OR_u1_u1_12556)) {fprintf(stderr, "Error: variable OR_u1_u1_12556 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_12556));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_12556)){bit_vector_cast_to_bit_vector(0, &(MUX_12559), &(mantissa_62_bits));\
}else {bit_vector_clear(&konst_12558);\
bit_vector_cast_to_bit_vector(0, &(MUX_12559), &(konst_12558));\
}bit_vector_or(&(MUX_12553), &(MUX_12559), &(OR_u62_u62_12560));\
bit_vector_or(&(OR_u62_u62_12549), &(OR_u62_u62_12560), &(OR_u62_u62_12561));\
bit_vector_cast_to_bit_vector(0, &(mantissa_to_be_passed), &(OR_u62_u62_12561));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12574_c_macro_ __declare_static_bit_vector(NOT_u1_u1_12566,1);\
__declare_static_bit_vector(AND_u1_u1_12567,1);\
__declare_static_bit_vector(NOT_u1_u1_12569,1);\
__declare_static_bit_vector(NOT_u1_u1_12571,1);\
__declare_static_bit_vector(AND_u1_u1_12572,1);\
__declare_static_bit_vector(AND_u1_u1_12573,1);\
bit_vector_not( &(condition_zero_d), &(NOT_u1_u1_12566));\
bit_vector_and(&(normalization_required), &(NOT_u1_u1_12566), &(AND_u1_u1_12567));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_12569));\
bit_vector_not( &(condition_nan_d), &(NOT_u1_u1_12571));\
bit_vector_and(&(NOT_u1_u1_12569), &(NOT_u1_u1_12571), &(AND_u1_u1_12572));\
bit_vector_and(&(AND_u1_u1_12567), &(AND_u1_u1_12572), &(AND_u1_u1_12573));\
bit_vector_cast_to_bit_vector(0, &(needs_norm), &(AND_u1_u1_12573));\
;

#define fpunit_exec_exec__fpmul32_op_assign_stmt_12592_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_12578,2);\
__declare_static_bit_vector(CONCAT_u1_u2_12581,2);\
__declare_static_bit_vector(CONCAT_u2_u4_12582,4);\
__declare_static_bit_vector(CONCAT_u1_u2_12585,2);\
__declare_static_bit_vector(type_cast_12587,13);\
__declare_static_bit_vector(CONCAT_u13_u75_12589,75);\
__declare_static_bit_vector(CONCAT_u2_u77_12590,77);\
__declare_static_bit_vector(CONCAT_u4_u81_12591,81);\
bit_vector_concatenate( &(sticky), &(nothing_to_be_done_condition_normal), &(CONCAT_u1_u2_12578));\
bit_vector_concatenate( &(sign_result), &(condition_nan_d), &(CONCAT_u1_u2_12581));\
bit_vector_concatenate( &(CONCAT_u1_u2_12578), &(CONCAT_u1_u2_12581), &(CONCAT_u2_u4_12582));\
bit_vector_concatenate( &(condition_inf), &(condition_zero_d), &(CONCAT_u1_u2_12585));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12587), &(exponent_to_be_passed));\
bit_vector_concatenate( &(type_cast_12587), &(mantissa_to_be_passed), &(CONCAT_u13_u75_12589));\
bit_vector_concatenate( &(CONCAT_u1_u2_12585), &(CONCAT_u13_u75_12589), &(CONCAT_u2_u77_12590));\
bit_vector_concatenate( &(CONCAT_u2_u4_12582), &(CONCAT_u2_u77_12590), &(CONCAT_u4_u81_12591));\
bit_vector_cast_to_bit_vector(0, &(extn_result), &(CONCAT_u4_u81_12591));\
;

#define fpunit_exec_exec__fpmul32_op_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pneeds_norm)), &(needs_norm));\
bit_vector_cast_to_bit_vector(0, &((*__pextn_result)), &(extn_result));\
;

#define fpunit_exec_exec__fpmul32_wrap_inner_inarg_prep_macro__ static float X;\
X = (*__pX);\
static float Y;\
Y = (*__pY);\
static float RESULT;\
__declare_static_bit_vector(xpn,1);\
__declare_static_bit_vector(xnn,1);\
__declare_static_bit_vector(xpd,1);\
__declare_static_bit_vector(xnd,1);\
__declare_static_bit_vector(xqnan,1);\
__declare_static_bit_vector(xsnan,1);\
__declare_static_bit_vector(xpi,1);\
__declare_static_bit_vector(xni,1);\
__declare_static_bit_vector(xpz,1);\
__declare_static_bit_vector(xnz,1);\
__declare_static_bit_vector(x_class,10);\
__declare_static_bit_vector(ypn,1);\
__declare_static_bit_vector(ynn,1);\
__declare_static_bit_vector(ypd,1);\
__declare_static_bit_vector(ynd,1);\
__declare_static_bit_vector(yqnan,1);\
__declare_static_bit_vector(ysnan,1);\
__declare_static_bit_vector(ypi,1);\
__declare_static_bit_vector(yni,1);\
__declare_static_bit_vector(ypz,1);\
__declare_static_bit_vector(ynz,1);\
__declare_static_bit_vector(y_class,10);\
__declare_static_bit_vector(denormalize_flag_mul,1);\
__declare_static_bit_vector(extn_result_mul,81);\
__declare_static_bit_vector(muls_result_fast,32);\
__declare_static_bit_vector(muls_result_slow,32);\

#define fpunit_exec_exec__fpmul32_wrap_call_stmt_18821_c_macro_ _fpunit_exec_exec_classFp32_( &(X), &(xpn), &(xnn), &(xpd), &(xnd), &(xqnan), &(xsnan), &(xpi), &(xni), &(xpz), &(xnz));\
;

#define fpunit_exec_exec__fpmul32_wrap_assign_stmt_18842_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18825,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18827,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18830,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18831,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18834,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18836,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18839,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18840,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18841,10);\
bit_vector_concatenate( &(xpn), &(xnn), &(CONCAT_u1_u2_18825));\
bit_vector_concatenate( &(CONCAT_u1_u2_18825), &(xpd), &(CONCAT_u2_u3_18827));\
bit_vector_concatenate( &(xnd), &(xqnan), &(CONCAT_u1_u2_18830));\
bit_vector_concatenate( &(CONCAT_u2_u3_18827), &(CONCAT_u1_u2_18830), &(CONCAT_u3_u5_18831));\
bit_vector_concatenate( &(xsnan), &(xpi), &(CONCAT_u1_u2_18834));\
bit_vector_concatenate( &(CONCAT_u1_u2_18834), &(xni), &(CONCAT_u2_u3_18836));\
bit_vector_concatenate( &(xpz), &(xnz), &(CONCAT_u1_u2_18839));\
bit_vector_concatenate( &(CONCAT_u2_u3_18836), &(CONCAT_u1_u2_18839), &(CONCAT_u3_u5_18840));\
bit_vector_concatenate( &(CONCAT_u3_u5_18831), &(CONCAT_u3_u5_18840), &(CONCAT_u5_u10_18841));\
bit_vector_cast_to_bit_vector(0, &(x_class), &(CONCAT_u5_u10_18841));\
;

#define fpunit_exec_exec__fpmul32_wrap_call_stmt_18854_c_macro_ _fpunit_exec_exec_classFp32_( &(Y), &(ypn), &(ynn), &(ypd), &(ynd), &(yqnan), &(ysnan), &(ypi), &(yni), &(ypz), &(ynz));\
;

#define fpunit_exec_exec__fpmul32_wrap_assign_stmt_18875_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18858,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18860,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18863,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18864,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18867,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18869,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18872,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18873,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18874,10);\
bit_vector_concatenate( &(ypn), &(ynn), &(CONCAT_u1_u2_18858));\
bit_vector_concatenate( &(CONCAT_u1_u2_18858), &(ypd), &(CONCAT_u2_u3_18860));\
bit_vector_concatenate( &(ynd), &(yqnan), &(CONCAT_u1_u2_18863));\
bit_vector_concatenate( &(CONCAT_u2_u3_18860), &(CONCAT_u1_u2_18863), &(CONCAT_u3_u5_18864));\
bit_vector_concatenate( &(ysnan), &(ypi), &(CONCAT_u1_u2_18867));\
bit_vector_concatenate( &(CONCAT_u1_u2_18867), &(yni), &(CONCAT_u2_u3_18869));\
bit_vector_concatenate( &(ypz), &(ynz), &(CONCAT_u1_u2_18872));\
bit_vector_concatenate( &(CONCAT_u2_u3_18869), &(CONCAT_u1_u2_18872), &(CONCAT_u3_u5_18873));\
bit_vector_concatenate( &(CONCAT_u3_u5_18864), &(CONCAT_u3_u5_18873), &(CONCAT_u5_u10_18874));\
bit_vector_cast_to_bit_vector(0, &(y_class), &(CONCAT_u5_u10_18874));\
;

#define fpunit_exec_exec__fpmul32_wrap_call_stmt_18890_c_macro_ __declare_static_bit_vector(type_cast_18879,32);\
__declare_static_bit_vector(type_cast_18882,32);\
__declare_static_bit_vector(konst_18884,64);\
bit_vector_clear(&konst_18884);\
__declare_static_bit_vector(konst_18885,10);\
bit_vector_clear(&konst_18885);\
__declare_static_bit_vector(konst_18886,64);\
bit_vector_clear(&konst_18886);\
__declare_static_bit_vector(konst_18887,10);\
bit_vector_clear(&konst_18887);\
float_bitcast_to_bit_vector( &(type_cast_18879), &(X));\
float_bitcast_to_bit_vector( &(type_cast_18882), &(Y));\
bit_vector_clear(&konst_18884);\
bit_vector_clear(&konst_18885);\
bit_vector_clear(&konst_18886);\
bit_vector_clear(&konst_18887);\
_fpunit_exec_exec_fpmul64_op_( &(ONE_1),  &(ZERO_1),  &(type_cast_18879),  &(x_class),  &(type_cast_18882),  &(y_class),  &(konst_18884),  &(konst_18885),  &(konst_18886),  &(konst_18887), &(denormalize_flag_mul), &(extn_result_mul));\
;

#define fpunit_exec_exec__fpmul32_wrap_call_stmt_18893_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_result_mul), &(muls_result_fast));\
;

#define fpunit_exec_exec__fpmul32_wrap_call_stmt_18897_c_macro_ if (has_undefined_bit(&denormalize_flag_mul)) {fprintf(stderr, "Error: variable denormalize_flag_mul has undefined value (%s) at test point.\n", to_string(&denormalize_flag_mul));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_mul)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_result_mul), &(muls_result_slow));\
}\
;

#define fpunit_exec_exec__fpmul32_wrap_assign_stmt_18904_c_macro_ __declare_static_bit_vector(MUX_18902,32);\
static float type_cast_18903;\
if (has_undefined_bit(&denormalize_flag_mul)) {fprintf(stderr, "Error: variable denormalize_flag_mul has undefined value (%s) at test point.\n", to_string(&denormalize_flag_mul));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_mul)){bit_vector_cast_to_bit_vector(0, &(MUX_18902), &(muls_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_18902), &(muls_result_fast));\
}bit_vector_bitcast_to_float( &(type_cast_18903),  &(MUX_18902));\
RESULT = type_cast_18903;\
;

#define fpunit_exec_exec__fpmul32_wrap_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fpmul32_wrap_outer_arg_decl_macro__ float __X = X;\
float __Y = Y;\
;

#define fpunit_exec_exec__fpmul32_wrap_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fpmul32_wrap_new_inner_inarg_prep_macro__ static float X;\
X = (*__pX);\
static float Y;\
Y = (*__pY);\
static float RESULT;\
__declare_static_bit_vector(xpn,1);\
__declare_static_bit_vector(xnn,1);\
__declare_static_bit_vector(xpd,1);\
__declare_static_bit_vector(xnd,1);\
__declare_static_bit_vector(xqnan,1);\
__declare_static_bit_vector(xsnan,1);\
__declare_static_bit_vector(xpi,1);\
__declare_static_bit_vector(xni,1);\
__declare_static_bit_vector(xpz,1);\
__declare_static_bit_vector(xnz,1);\
__declare_static_bit_vector(x_class,10);\
__declare_static_bit_vector(ypn,1);\
__declare_static_bit_vector(ynn,1);\
__declare_static_bit_vector(ypd,1);\
__declare_static_bit_vector(ynd,1);\
__declare_static_bit_vector(yqnan,1);\
__declare_static_bit_vector(ysnan,1);\
__declare_static_bit_vector(ypi,1);\
__declare_static_bit_vector(yni,1);\
__declare_static_bit_vector(ypz,1);\
__declare_static_bit_vector(ynz,1);\
__declare_static_bit_vector(y_class,10);\
__declare_static_bit_vector(denormalize_flag_mul,1);\
__declare_static_bit_vector(extn_result_mul,81);\
__declare_static_bit_vector(muls_result_fast,32);\
__declare_static_bit_vector(muls_result_slow,32);\

#define fpunit_exec_exec__fpmul32_wrap_new_call_stmt_18921_c_macro_ _fpunit_exec_exec_classFp32_( &(X), &(xpn), &(xnn), &(xpd), &(xnd), &(xqnan), &(xsnan), &(xpi), &(xni), &(xpz), &(xnz));\
;

#define fpunit_exec_exec__fpmul32_wrap_new_assign_stmt_18942_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18925,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18927,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18930,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18931,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18934,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18936,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18939,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18940,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18941,10);\
bit_vector_concatenate( &(xpn), &(xnn), &(CONCAT_u1_u2_18925));\
bit_vector_concatenate( &(CONCAT_u1_u2_18925), &(xpd), &(CONCAT_u2_u3_18927));\
bit_vector_concatenate( &(xnd), &(xqnan), &(CONCAT_u1_u2_18930));\
bit_vector_concatenate( &(CONCAT_u2_u3_18927), &(CONCAT_u1_u2_18930), &(CONCAT_u3_u5_18931));\
bit_vector_concatenate( &(xsnan), &(xpi), &(CONCAT_u1_u2_18934));\
bit_vector_concatenate( &(CONCAT_u1_u2_18934), &(xni), &(CONCAT_u2_u3_18936));\
bit_vector_concatenate( &(xpz), &(xnz), &(CONCAT_u1_u2_18939));\
bit_vector_concatenate( &(CONCAT_u2_u3_18936), &(CONCAT_u1_u2_18939), &(CONCAT_u3_u5_18940));\
bit_vector_concatenate( &(CONCAT_u3_u5_18931), &(CONCAT_u3_u5_18940), &(CONCAT_u5_u10_18941));\
bit_vector_cast_to_bit_vector(0, &(x_class), &(CONCAT_u5_u10_18941));\
;

#define fpunit_exec_exec__fpmul32_wrap_new_call_stmt_18954_c_macro_ _fpunit_exec_exec_classFp32_( &(Y), &(ypn), &(ynn), &(ypd), &(ynd), &(yqnan), &(ysnan), &(ypi), &(yni), &(ypz), &(ynz));\
;

#define fpunit_exec_exec__fpmul32_wrap_new_assign_stmt_18975_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_18958,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18960,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18963,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18964,5);\
__declare_static_bit_vector(CONCAT_u1_u2_18967,2);\
__declare_static_bit_vector(CONCAT_u2_u3_18969,3);\
__declare_static_bit_vector(CONCAT_u1_u2_18972,2);\
__declare_static_bit_vector(CONCAT_u3_u5_18973,5);\
__declare_static_bit_vector(CONCAT_u5_u10_18974,10);\
bit_vector_concatenate( &(ypn), &(ynn), &(CONCAT_u1_u2_18958));\
bit_vector_concatenate( &(CONCAT_u1_u2_18958), &(ypd), &(CONCAT_u2_u3_18960));\
bit_vector_concatenate( &(ynd), &(yqnan), &(CONCAT_u1_u2_18963));\
bit_vector_concatenate( &(CONCAT_u2_u3_18960), &(CONCAT_u1_u2_18963), &(CONCAT_u3_u5_18964));\
bit_vector_concatenate( &(ysnan), &(ypi), &(CONCAT_u1_u2_18967));\
bit_vector_concatenate( &(CONCAT_u1_u2_18967), &(yni), &(CONCAT_u2_u3_18969));\
bit_vector_concatenate( &(ypz), &(ynz), &(CONCAT_u1_u2_18972));\
bit_vector_concatenate( &(CONCAT_u2_u3_18969), &(CONCAT_u1_u2_18972), &(CONCAT_u3_u5_18973));\
bit_vector_concatenate( &(CONCAT_u3_u5_18964), &(CONCAT_u3_u5_18973), &(CONCAT_u5_u10_18974));\
bit_vector_cast_to_bit_vector(0, &(y_class), &(CONCAT_u5_u10_18974));\
;

#define fpunit_exec_exec__fpmul32_wrap_new_call_stmt_18984_c_macro_ __declare_static_bit_vector(type_cast_18977,32);\
__declare_static_bit_vector(type_cast_18980,32);\
float_bitcast_to_bit_vector( &(type_cast_18977), &(X));\
float_bitcast_to_bit_vector( &(type_cast_18980), &(Y));\
_fpunit_exec_exec_fpmul32_op_( &(type_cast_18977),  &(x_class),  &(type_cast_18980),  &(y_class), &(denormalize_flag_mul), &(extn_result_mul));\
;

#define fpunit_exec_exec__fpmul32_wrap_new_call_stmt_18987_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_result_mul), &(muls_result_fast));\
;

#define fpunit_exec_exec__fpmul32_wrap_new_call_stmt_18991_c_macro_ if (has_undefined_bit(&denormalize_flag_mul)) {fprintf(stderr, "Error: variable denormalize_flag_mul has undefined value (%s) at test point.\n", to_string(&denormalize_flag_mul));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_mul)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_result_mul), &(muls_result_slow));\
}\
;

#define fpunit_exec_exec__fpmul32_wrap_new_assign_stmt_18998_c_macro_ __declare_static_bit_vector(MUX_18996,32);\
static float type_cast_18997;\
if (has_undefined_bit(&denormalize_flag_mul)) {fprintf(stderr, "Error: variable denormalize_flag_mul has undefined value (%s) at test point.\n", to_string(&denormalize_flag_mul));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_mul)){bit_vector_cast_to_bit_vector(0, &(MUX_18996), &(muls_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_18996), &(muls_result_fast));\
}bit_vector_bitcast_to_float( &(type_cast_18997),  &(MUX_18996));\
RESULT = type_cast_18997;\
;

#define fpunit_exec_exec__fpmul32_wrap_new_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fpmul32_wrap_new_outer_arg_decl_macro__ float __X = X;\
float __Y = Y;\
;

#define fpunit_exec_exec__fpmul32_wrap_new_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fpmul64_op_inner_inarg_prep_macro__ __declare_static_bit_vector(use_single_precision_inputs,1);\
bit_vector_cast_to_bit_vector(0, &(use_single_precision_inputs), &((*__puse_single_precision_inputs)));\
__declare_static_bit_vector(double_precision_outputs,1);\
bit_vector_cast_to_bit_vector(0, &(double_precision_outputs), &((*__pdouble_precision_outputs)));\
__declare_static_bit_vector(uf1_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf1_s), &((*__puf1_s)));\
__declare_static_bit_vector(f1_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_s_class), &((*__pf1_s_class)));\
__declare_static_bit_vector(uf2_s,32);\
bit_vector_cast_to_bit_vector(0, &(uf2_s), &((*__puf2_s)));\
__declare_static_bit_vector(f2_s_class,10);\
bit_vector_cast_to_bit_vector(0, &(f2_s_class), &((*__pf2_s_class)));\
__declare_static_bit_vector(uf1_d_i,64);\
bit_vector_cast_to_bit_vector(0, &(uf1_d_i), &((*__puf1_d_i)));\
__declare_static_bit_vector(f1_d_class,10);\
bit_vector_cast_to_bit_vector(0, &(f1_d_class), &((*__pf1_d_class)));\
__declare_static_bit_vector(uf2_d_i,64);\
bit_vector_cast_to_bit_vector(0, &(uf2_d_i), &((*__puf2_d_i)));\
__declare_static_bit_vector(f2_d_class,10);\
bit_vector_cast_to_bit_vector(0, &(f2_d_class), &((*__pf2_d_class)));\
__declare_static_bit_vector(needs_norm,1);\
__declare_static_bit_vector(extn_result,81);\
__declare_static_bit_vector(f1_zero,1);\
__declare_static_bit_vector(f1_normal,1);\
__declare_static_bit_vector(f1_denormal,1);\
__declare_static_bit_vector(f1_nan,1);\
__declare_static_bit_vector(f1_inf,1);\
__declare_static_bit_vector(f1_pos_inf,1);\
__declare_static_bit_vector(f1_neg_inf,1);\
__declare_static_bit_vector(f2_zero,1);\
__declare_static_bit_vector(f2_normal,1);\
__declare_static_bit_vector(f2_denormal,1);\
__declare_static_bit_vector(f2_nan,1);\
__declare_static_bit_vector(f2_inf,1);\
__declare_static_bit_vector(f2_pos_inf,1);\
__declare_static_bit_vector(f2_neg_inf,1);\
__declare_static_bit_vector(uf1_s_efp,67);\
__declare_static_bit_vector(uf2_s_efp,67);\
__declare_static_bit_vector(uf1_d_i_efp,67);\
__declare_static_bit_vector(uf2_d_i_efp,67);\
__declare_static_bit_vector(uf1_d_efp,67);\
__declare_static_bit_vector(uf2_d_efp,67);\
__declare_static_bit_vector(sign_uf1_d,1);\
__declare_static_bit_vector(f1_exp13_unbiased,13);\
__declare_static_bit_vector(f1_top_bit,1);\
__declare_static_bit_vector(f1_fraction,52);\
__declare_static_bit_vector(sign_uf2_d,1);\
__declare_static_bit_vector(f2_exp13_unbiased,13);\
__declare_static_bit_vector(f2_top_bit,1);\
__declare_static_bit_vector(f2_fraction,52);\
__declare_static_bit_vector(sign_result,1);\
__declare_static_bit_vector(f1_frac_v,53);\
__declare_static_bit_vector(f2_frac_v,53);\
__declare_static_bit_vector(exp_a,13);\
__declare_static_bit_vector(exp_b,13);\
__declare_static_bit_vector(f1_top_bit_pos,6);\
__declare_static_bit_vector(f1_top_bit_found,1);\
__declare_static_bit_vector(f2_top_bit_pos,6);\
__declare_static_bit_vector(f2_top_bit_found,1);\
__declare_static_bit_vector(f1_left_shift_correction,13);\
__declare_static_bit_vector(exp_a_corrected,13);\
__declare_static_bit_vector(f2_left_shift_correction,13);\
__declare_static_bit_vector(exp_b_corrected,13);\
__declare_static_bit_vector(mul_result_left_shift_amount,13);\
__declare_static_bit_vector(exp_ab,13);\
__declare_static_bit_vector(frac_result_106bits,106);\
__declare_static_bit_vector(frac_result_64,64);\
__declare_static_bit_vector(value_of_bits_thrown_away_greater_than_zero,1);\
__declare_static_bit_vector(implied_shift_amount,6);\
__declare_static_bit_vector(frac_result_64_with_implied_shift_raw,64);\
__declare_static_bit_vector(frac_result_64_with_implied_shift,64);\
__declare_static_bit_vector(shift_by_one,1);\
__declare_static_bit_vector(thrown_away_bit,1);\
__declare_static_bit_vector(mantissa_62_bits,62);\
__declare_static_bit_vector(sticky_raw,1);\
__declare_static_bit_vector(exponent_correction,13);\
__declare_static_bit_vector(exponent_without_bias,13);\
__declare_static_bit_vector(DP_overflow,1);\
__declare_static_bit_vector(DP_underflow,1);\
__declare_static_bit_vector(SP_overflow,1);\
__declare_static_bit_vector(SP_underflow,1);\
__declare_static_bit_vector(overflow,1);\
__declare_static_bit_vector(condition_zero,1);\
__declare_static_bit_vector(condition_nan,1);\
__declare_static_bit_vector(condition_inf,1);\
__declare_static_bit_vector(underflow,1);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(SP_nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(SP_normalization_required,1);\
__declare_static_bit_vector(DP_nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(DP_normalization_required,1);\
__declare_static_bit_vector(normalization_required,1);\
__declare_static_bit_vector(nothing_to_be_done_condition_normal,1);\
__declare_static_bit_vector(condition_nan_d,1);\
__declare_static_bit_vector(condition_zero_d,1);\
__declare_static_bit_vector(exponent_to_be_passed,13);\
__declare_static_bit_vector(mantissa_to_be_passed,62);\

#define fpunit_exec_exec__fpmul64_op_call_stmt_12833_c_macro_ _fpunit_exec_exec_classify_utility_( &(use_single_precision_inputs),  &(f1_s_class),  &(f1_d_class), &(f1_zero), &(f1_normal), &(f1_denormal), &(f1_nan), &(f1_inf), &(f1_pos_inf), &(f1_neg_inf));\
;

#define fpunit_exec_exec__fpmul64_op_call_stmt_12844_c_macro_ _fpunit_exec_exec_classify_utility_( &(use_single_precision_inputs),  &(f2_s_class),  &(f2_d_class), &(f2_zero), &(f2_normal), &(f2_denormal), &(f2_nan), &(f2_inf), &(f2_pos_inf), &(f2_neg_inf));\
;

#define fpunit_exec_exec__fpmul64_op_call_stmt_12848_c_macro_ _fpunit_exec_exec_SingleToExtendedFp_( &(uf1_s),  &(f1_s_class), &(uf1_s_efp));\
;

#define fpunit_exec_exec__fpmul64_op_call_stmt_12852_c_macro_ _fpunit_exec_exec_SingleToExtendedFp_( &(uf2_s),  &(f2_s_class), &(uf2_s_efp));\
;

#define fpunit_exec_exec__fpmul64_op_call_stmt_12856_c_macro_ _fpunit_exec_exec_DoubleToExtendedFp_( &(uf1_d_i),  &(f1_d_class), &(uf1_d_i_efp));\
;

#define fpunit_exec_exec__fpmul64_op_call_stmt_12860_c_macro_ _fpunit_exec_exec_DoubleToExtendedFp_( &(uf2_d_i),  &(f2_d_class), &(uf2_d_i_efp));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12866_c_macro_ __declare_static_bit_vector(MUX_12865,67);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(0, &(MUX_12865), &(uf1_s_efp));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_12865), &(uf1_d_i_efp));\
}bit_vector_cast_to_bit_vector(0, &(uf1_d_efp), &(MUX_12865));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12872_c_macro_ __declare_static_bit_vector(MUX_12871,67);\
if (has_undefined_bit(&use_single_precision_inputs)) {fprintf(stderr, "Error: variable use_single_precision_inputs has undefined value (%s) at test point.\n", to_string(&use_single_precision_inputs));assert(0);} \
if(bit_vector_to_uint64(0, &use_single_precision_inputs)){bit_vector_cast_to_bit_vector(0, &(MUX_12871), &(uf2_s_efp));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_12871), &(uf2_d_i_efp));\
}bit_vector_cast_to_bit_vector(0, &(uf2_d_efp), &(MUX_12871));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12876_c_macro_ __declare_static_bit_vector(slice_12875,1);\
bit_vector_slice(&(uf1_d_efp), &(slice_12875), 66);\
bit_vector_cast_to_bit_vector(0, &(sign_uf1_d), &(slice_12875));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12880_c_macro_ __declare_static_bit_vector(slice_12879,13);\
bit_vector_slice(&(uf1_d_efp), &(slice_12879), 53);\
bit_vector_cast_to_bit_vector(0, &(f1_exp13_unbiased), &(slice_12879));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12884_c_macro_ __declare_static_bit_vector(slice_12883,1);\
bit_vector_slice(&(uf1_d_efp), &(slice_12883), 52);\
bit_vector_cast_to_bit_vector(0, &(f1_top_bit), &(slice_12883));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12888_c_macro_ __declare_static_bit_vector(slice_12887,52);\
bit_vector_slice(&(uf1_d_efp), &(slice_12887), 0);\
bit_vector_cast_to_bit_vector(0, &(f1_fraction), &(slice_12887));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12892_c_macro_ __declare_static_bit_vector(slice_12891,1);\
bit_vector_slice(&(uf2_d_efp), &(slice_12891), 66);\
bit_vector_cast_to_bit_vector(0, &(sign_uf2_d), &(slice_12891));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12896_c_macro_ __declare_static_bit_vector(slice_12895,13);\
bit_vector_slice(&(uf2_d_efp), &(slice_12895), 53);\
bit_vector_cast_to_bit_vector(0, &(f2_exp13_unbiased), &(slice_12895));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12900_c_macro_ __declare_static_bit_vector(slice_12899,1);\
bit_vector_slice(&(uf2_d_efp), &(slice_12899), 52);\
bit_vector_cast_to_bit_vector(0, &(f2_top_bit), &(slice_12899));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12904_c_macro_ __declare_static_bit_vector(slice_12903,52);\
bit_vector_slice(&(uf2_d_efp), &(slice_12903), 0);\
bit_vector_cast_to_bit_vector(0, &(f2_fraction), &(slice_12903));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12909_c_macro_ __declare_static_bit_vector(XOR_u1_u1_12908,1);\
bit_vector_xor(&(sign_uf1_d), &(sign_uf2_d), &(XOR_u1_u1_12908));\
bit_vector_cast_to_bit_vector(0, &(sign_result), &(XOR_u1_u1_12908));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12914_c_macro_ __declare_static_bit_vector(CONCAT_u1_u53_12913,53);\
bit_vector_concatenate( &(f1_top_bit), &(f1_fraction), &(CONCAT_u1_u53_12913));\
bit_vector_cast_to_bit_vector(0, &(f1_frac_v), &(CONCAT_u1_u53_12913));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12919_c_macro_ __declare_static_bit_vector(CONCAT_u1_u53_12918,53);\
bit_vector_concatenate( &(f2_top_bit), &(f2_fraction), &(CONCAT_u1_u53_12918));\
bit_vector_cast_to_bit_vector(0, &(f2_frac_v), &(CONCAT_u1_u53_12918));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12923_c_macro_ __declare_static_bit_vector(type_cast_12922,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12922), &(f1_exp13_unbiased));\
bit_vector_cast_to_bit_vector(1, &(exp_a), &(type_cast_12922));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12927_c_macro_ __declare_static_bit_vector(type_cast_12926,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12926), &(f2_exp13_unbiased));\
bit_vector_cast_to_bit_vector(1, &(exp_b), &(type_cast_12926));\
;

#define fpunit_exec_exec__fpmul64_op_call_stmt_12931_c_macro_ _fpunit_exec_exec_find_left_53_( &(f1_frac_v), &(f1_top_bit_pos), &(f1_top_bit_found));\
;

#define fpunit_exec_exec__fpmul64_op_call_stmt_12935_c_macro_ _fpunit_exec_exec_find_left_53_( &(f2_frac_v), &(f2_top_bit_pos), &(f2_top_bit_found));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12941_c_macro_ __declare_static_bit_vector(konst_12937,6);\
bit_vector_clear(&konst_12937);\
konst_12937.val.byte_array[0] = 52;\
__declare_static_bit_vector(SUB_u6_u6_12939,6);\
__declare_static_bit_vector(type_cast_12940,13);\
bit_vector_clear(&konst_12937);\
konst_12937.val.byte_array[0] = 52;\
bit_vector_minus( &(konst_12937), &(f1_top_bit_pos), &(SUB_u6_u6_12939));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12940), &(SUB_u6_u6_12939));\
bit_vector_cast_to_bit_vector(1, &(f1_left_shift_correction), &(type_cast_12940));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12946_c_macro_ __declare_static_bit_vector(SUB_i13_i13_12945,13);\
bit_vector_minus( &(exp_a), &(f1_left_shift_correction), &(SUB_i13_i13_12945));\
bit_vector_cast_to_bit_vector(1, &(exp_a_corrected), &(SUB_i13_i13_12945));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12952_c_macro_ __declare_static_bit_vector(konst_12948,6);\
bit_vector_clear(&konst_12948);\
konst_12948.val.byte_array[0] = 52;\
__declare_static_bit_vector(SUB_u6_u6_12950,6);\
__declare_static_bit_vector(type_cast_12951,13);\
bit_vector_clear(&konst_12948);\
konst_12948.val.byte_array[0] = 52;\
bit_vector_minus( &(konst_12948), &(f2_top_bit_pos), &(SUB_u6_u6_12950));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12951), &(SUB_u6_u6_12950));\
bit_vector_cast_to_bit_vector(1, &(f2_left_shift_correction), &(type_cast_12951));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12957_c_macro_ __declare_static_bit_vector(SUB_i13_i13_12956,13);\
bit_vector_minus( &(exp_b), &(f2_left_shift_correction), &(SUB_i13_i13_12956));\
bit_vector_cast_to_bit_vector(1, &(exp_b_corrected), &(SUB_i13_i13_12956));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12962_c_macro_ __declare_static_bit_vector(ADD_i13_i13_12961,13);\
bit_vector_plus( &(f1_left_shift_correction), &(f2_left_shift_correction), &(ADD_i13_i13_12961));\
bit_vector_cast_to_bit_vector(1, &(mul_result_left_shift_amount), &(ADD_i13_i13_12961));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12967_c_macro_ __declare_static_bit_vector(ADD_i13_i13_12966,13);\
bit_vector_plus( &(exp_a_corrected), &(exp_b_corrected), &(ADD_i13_i13_12966));\
bit_vector_cast_to_bit_vector(1, &(exp_ab), &(ADD_i13_i13_12966));\
;

#define fpunit_exec_exec__fpmul64_op_call_stmt_12971_c_macro_ _fpunit_exec_exec_mul53_( &(f1_frac_v),  &(f2_frac_v), &(frac_result_106bits));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12975_c_macro_ __declare_static_bit_vector(slice_12974,64);\
bit_vector_slice(&(frac_result_106bits), &(slice_12974), 42);\
bit_vector_cast_to_bit_vector(0, &(frac_result_64), &(slice_12974));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12982_c_macro_ __declare_static_bit_vector(slice_12978,42);\
__declare_static_bit_vector(konst_12979,42);\
bit_vector_clear(&konst_12979);\
__declare_static_bit_vector(EQ_u42_u1_12980,1);\
__declare_static_bit_vector(NOT_u1_u1_12981,1);\
bit_vector_slice(&(frac_result_106bits), &(slice_12978), 0);\
bit_vector_clear(&konst_12979);\
bit_vector_equal(0, &(slice_12978), &(konst_12979), &(EQ_u42_u1_12980));\
bit_vector_not( &(EQ_u42_u1_12980), &(NOT_u1_u1_12981));\
bit_vector_cast_to_bit_vector(0, &(value_of_bits_thrown_away_greater_than_zero), &(NOT_u1_u1_12981));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12986_c_macro_ __declare_static_bit_vector(type_cast_12985,6);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12985), &(mul_result_left_shift_amount));\
bit_vector_cast_to_bit_vector(0, &(implied_shift_amount), &(type_cast_12985));\
;

#define fpunit_exec_exec__fpmul64_op_call_stmt_12990_c_macro_ _fpunit_exec_exec_i64_sll_( &(frac_result_64),  &(implied_shift_amount), &(frac_result_64_with_implied_shift_raw));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_12998_c_macro_ __declare_static_bit_vector(konst_12993,13);\
bit_vector_clear(&konst_12993);\
konst_12993.val.byte_array[0] = 63;\
__declare_static_bit_vector(SGT_i13_u1_12994,1);\
__declare_static_bit_vector(konst_12995,64);\
bit_vector_clear(&konst_12995);\
__declare_static_bit_vector(MUX_12997,64);\
bit_vector_clear(&konst_12993);\
konst_12993.val.byte_array[0] = 63;\
bit_vector_greater(1, &(mul_result_left_shift_amount), &(konst_12993), &(SGT_i13_u1_12994));\
if (has_undefined_bit(&SGT_i13_u1_12994)) {fprintf(stderr, "Error: variable SGT_i13_u1_12994 has undefined value (%s) at test point.\n", to_string(&SGT_i13_u1_12994));assert(0);} \
if(bit_vector_to_uint64(0, &SGT_i13_u1_12994)){bit_vector_clear(&konst_12995);\
bit_vector_cast_to_bit_vector(0, &(MUX_12997), &(konst_12995));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_12997), &(frac_result_64_with_implied_shift_raw));\
}bit_vector_cast_to_bit_vector(0, &(frac_result_64_with_implied_shift), &(MUX_12997));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13003_c_macro_ __declare_static_bit_vector(konst_13001,64);\
bit_vector_clear(&konst_13001);\
konst_13001.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_13002,1);\
bit_vector_clear(&konst_13001);\
konst_13001.val.byte_array[0] = 63;\
bit_vector_bitsel( &(frac_result_64_with_implied_shift), &(konst_13001), &(BITSEL_u64_u1_13002));\
bit_vector_cast_to_bit_vector(0, &(shift_by_one), &(BITSEL_u64_u1_13002));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13011_c_macro_ __declare_static_bit_vector(konst_13007,64);\
bit_vector_clear(&konst_13007);\
__declare_static_bit_vector(BITSEL_u64_u1_13008,1);\
__declare_static_bit_vector(konst_13009,1);\
bit_vector_clear(&konst_13009);\
__declare_static_bit_vector(MUX_13010,1);\
if (has_undefined_bit(&shift_by_one)) {fprintf(stderr, "Error: variable shift_by_one has undefined value (%s) at test point.\n", to_string(&shift_by_one));assert(0);} \
if(bit_vector_to_uint64(0, &shift_by_one)){bit_vector_clear(&konst_13007);\
bit_vector_bitsel( &(frac_result_64_with_implied_shift), &(konst_13007), &(BITSEL_u64_u1_13008));\
bit_vector_cast_to_bit_vector(0, &(MUX_13010), &(BITSEL_u64_u1_13008));\
}else {bit_vector_clear(&konst_13009);\
bit_vector_cast_to_bit_vector(0, &(MUX_13010), &(konst_13009));\
}bit_vector_cast_to_bit_vector(0, &(thrown_away_bit), &(MUX_13010));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13019_c_macro_ __declare_static_bit_vector(slice_13015,62);\
__declare_static_bit_vector(slice_13017,62);\
__declare_static_bit_vector(MUX_13018,62);\
if (has_undefined_bit(&shift_by_one)) {fprintf(stderr, "Error: variable shift_by_one has undefined value (%s) at test point.\n", to_string(&shift_by_one));assert(0);} \
if(bit_vector_to_uint64(0, &shift_by_one)){bit_vector_slice(&(frac_result_64_with_implied_shift), &(slice_13015), 1);\
bit_vector_cast_to_bit_vector(0, &(MUX_13018), &(slice_13015));\
}else {bit_vector_slice(&(frac_result_64_with_implied_shift), &(slice_13017), 0);\
bit_vector_cast_to_bit_vector(0, &(MUX_13018), &(slice_13017));\
}bit_vector_cast_to_bit_vector(0, &(mantissa_62_bits), &(MUX_13018));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13024_c_macro_ __declare_static_bit_vector(OR_u1_u1_13023,1);\
bit_vector_or(&(thrown_away_bit), &(value_of_bits_thrown_away_greater_than_zero), &(OR_u1_u1_13023));\
bit_vector_cast_to_bit_vector(0, &(sticky_raw), &(OR_u1_u1_13023));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13030_c_macro_ __declare_static_bit_vector(MUX_13029,13);\
if (has_undefined_bit(&shift_by_one)) {fprintf(stderr, "Error: variable shift_by_one has undefined value (%s) at test point.\n", to_string(&shift_by_one));assert(0);} \
if(bit_vector_to_uint64(0, &shift_by_one)){bit_vector_cast_to_bit_vector(1, &(MUX_13029), &(exp_base_1));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_13029), &(exp_base_0));\
}bit_vector_cast_to_bit_vector(1, &(exponent_correction), &(MUX_13029));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13035_c_macro_ __declare_static_bit_vector(ADD_i13_i13_13034,13);\
bit_vector_plus( &(exp_ab), &(exponent_correction), &(ADD_i13_i13_13034));\
bit_vector_cast_to_bit_vector(1, &(exponent_without_bias), &(ADD_i13_i13_13034));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13040_c_macro_ __declare_static_bit_vector(konst_13038,13);\
bit_vector_clear(&konst_13038);\
konst_13038.val.byte_array[0] = 255;\
konst_13038.val.byte_array[1] = 3;\
__declare_static_bit_vector(SGT_i13_u1_13039,1);\
bit_vector_clear(&konst_13038);\
konst_13038.val.byte_array[0] = 255;\
konst_13038.val.byte_array[1] = 3;\
bit_vector_greater(1, &(exponent_without_bias), &(konst_13038), &(SGT_i13_u1_13039));\
bit_vector_cast_to_bit_vector(0, &(DP_overflow), &(SGT_i13_u1_13039));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13045_c_macro_ __declare_static_bit_vector(konst_13043,13);\
bit_vector_clear(&konst_13043);\
konst_13043.val.byte_array[0] = 2;\
konst_13043.val.byte_array[1] = 252;\
__declare_static_bit_vector(SLT_i13_u1_13044,1);\
bit_vector_clear(&konst_13043);\
konst_13043.val.byte_array[0] = 2;\
konst_13043.val.byte_array[1] = 252;\
bit_vector_less(1, &(exponent_without_bias), &(konst_13043), &(SLT_i13_u1_13044));\
bit_vector_cast_to_bit_vector(0, &(DP_underflow), &(SLT_i13_u1_13044));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13050_c_macro_ __declare_static_bit_vector(konst_13048,13);\
bit_vector_clear(&konst_13048);\
konst_13048.val.byte_array[0] = 127;\
__declare_static_bit_vector(SGT_i13_u1_13049,1);\
bit_vector_clear(&konst_13048);\
konst_13048.val.byte_array[0] = 127;\
bit_vector_greater(1, &(exponent_without_bias), &(konst_13048), &(SGT_i13_u1_13049));\
bit_vector_cast_to_bit_vector(0, &(SP_overflow), &(SGT_i13_u1_13049));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13055_c_macro_ __declare_static_bit_vector(konst_13053,13);\
bit_vector_clear(&konst_13053);\
konst_13053.val.byte_array[0] = 130;\
konst_13053.val.byte_array[1] = 255;\
__declare_static_bit_vector(SLT_i13_u1_13054,1);\
bit_vector_clear(&konst_13053);\
konst_13053.val.byte_array[0] = 130;\
konst_13053.val.byte_array[1] = 255;\
bit_vector_less(1, &(exponent_without_bias), &(konst_13053), &(SLT_i13_u1_13054));\
bit_vector_cast_to_bit_vector(0, &(SP_underflow), &(SLT_i13_u1_13054));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13061_c_macro_ __declare_static_bit_vector(MUX_13060,1);\
if (has_undefined_bit(&double_precision_outputs)) {fprintf(stderr, "Error: variable double_precision_outputs has undefined value (%s) at test point.\n", to_string(&double_precision_outputs));assert(0);} \
if(bit_vector_to_uint64(0, &double_precision_outputs)){bit_vector_cast_to_bit_vector(0, &(MUX_13060), &(DP_overflow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13060), &(SP_overflow));\
}bit_vector_cast_to_bit_vector(0, &(overflow), &(MUX_13060));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13066_c_macro_ __declare_static_bit_vector(OR_u1_u1_13065,1);\
bit_vector_or(&(f1_zero), &(f2_zero), &(OR_u1_u1_13065));\
bit_vector_cast_to_bit_vector(0, &(condition_zero), &(OR_u1_u1_13065));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13079_c_macro_ __declare_static_bit_vector(OR_u1_u1_13070,1);\
__declare_static_bit_vector(AND_u1_u1_13073,1);\
__declare_static_bit_vector(AND_u1_u1_13076,1);\
__declare_static_bit_vector(OR_u1_u1_13077,1);\
__declare_static_bit_vector(OR_u1_u1_13078,1);\
bit_vector_or(&(f1_nan), &(f2_nan), &(OR_u1_u1_13070));\
bit_vector_and(&(f1_zero), &(f2_inf), &(AND_u1_u1_13073));\
bit_vector_and(&(f1_inf), &(f2_zero), &(AND_u1_u1_13076));\
bit_vector_or(&(AND_u1_u1_13073), &(AND_u1_u1_13076), &(OR_u1_u1_13077));\
bit_vector_or(&(OR_u1_u1_13070), &(OR_u1_u1_13077), &(OR_u1_u1_13078));\
bit_vector_cast_to_bit_vector(0, &(condition_nan), &(OR_u1_u1_13078));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13098_c_macro_ __declare_static_bit_vector(OR_u1_u1_13084,1);\
__declare_static_bit_vector(OR_u1_u1_13086,1);\
__declare_static_bit_vector(AND_u1_u1_13087,1);\
__declare_static_bit_vector(OR_u1_u1_13091,1);\
__declare_static_bit_vector(OR_u1_u1_13093,1);\
__declare_static_bit_vector(AND_u1_u1_13094,1);\
__declare_static_bit_vector(OR_u1_u1_13095,1);\
__declare_static_bit_vector(OR_u1_u1_13097,1);\
bit_vector_or(&(f2_inf), &(f2_normal), &(OR_u1_u1_13084));\
bit_vector_or(&(OR_u1_u1_13084), &(f2_denormal), &(OR_u1_u1_13086));\
bit_vector_and(&(f1_inf), &(OR_u1_u1_13086), &(AND_u1_u1_13087));\
bit_vector_or(&(f1_inf), &(f1_normal), &(OR_u1_u1_13091));\
bit_vector_or(&(OR_u1_u1_13091), &(f1_denormal), &(OR_u1_u1_13093));\
bit_vector_and(&(f2_inf), &(OR_u1_u1_13093), &(AND_u1_u1_13094));\
bit_vector_or(&(AND_u1_u1_13087), &(AND_u1_u1_13094), &(OR_u1_u1_13095));\
bit_vector_or(&(OR_u1_u1_13095), &(overflow), &(OR_u1_u1_13097));\
bit_vector_cast_to_bit_vector(0, &(condition_inf), &(OR_u1_u1_13097));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13107_c_macro_ __declare_static_bit_vector(NOT_u1_u1_13101,1);\
__declare_static_bit_vector(MUX_13105,1);\
__declare_static_bit_vector(AND_u1_u1_13106,1);\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_13101));\
if (has_undefined_bit(&double_precision_outputs)) {fprintf(stderr, "Error: variable double_precision_outputs has undefined value (%s) at test point.\n", to_string(&double_precision_outputs));assert(0);} \
if(bit_vector_to_uint64(0, &double_precision_outputs)){bit_vector_cast_to_bit_vector(0, &(MUX_13105), &(DP_underflow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13105), &(SP_underflow));\
}bit_vector_and(&(NOT_u1_u1_13101), &(MUX_13105), &(AND_u1_u1_13106));\
bit_vector_cast_to_bit_vector(0, &(underflow), &(AND_u1_u1_13106));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13119_c_macro_ __declare_static_bit_vector(NOT_u1_u1_13111,1);\
__declare_static_bit_vector(AND_u1_u1_13112,1);\
__declare_static_bit_vector(NOT_u1_u1_13114,1);\
__declare_static_bit_vector(NOT_u1_u1_13116,1);\
__declare_static_bit_vector(AND_u1_u1_13117,1);\
__declare_static_bit_vector(AND_u1_u1_13118,1);\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_13111));\
bit_vector_and(&(sticky_raw), &(NOT_u1_u1_13111), &(AND_u1_u1_13112));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_13114));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_13116));\
bit_vector_and(&(NOT_u1_u1_13114), &(NOT_u1_u1_13116), &(AND_u1_u1_13117));\
bit_vector_and(&(AND_u1_u1_13112), &(AND_u1_u1_13117), &(AND_u1_u1_13118));\
bit_vector_cast_to_bit_vector(0, &(sticky), &(AND_u1_u1_13118));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13135_c_macro_ __declare_static_bit_vector(NOT_u1_u1_13122,1);\
__declare_static_bit_vector(NOT_u1_u1_13124,1);\
__declare_static_bit_vector(AND_u1_u1_13125,1);\
__declare_static_bit_vector(NOT_u1_u1_13127,1);\
__declare_static_bit_vector(AND_u1_u1_13128,1);\
__declare_static_bit_vector(NOT_u1_u1_13130,1);\
__declare_static_bit_vector(NOT_u1_u1_13132,1);\
__declare_static_bit_vector(AND_u1_u1_13133,1);\
__declare_static_bit_vector(AND_u1_u1_13134,1);\
bit_vector_not( &(overflow), &(NOT_u1_u1_13122));\
bit_vector_not( &(underflow), &(NOT_u1_u1_13124));\
bit_vector_and(&(NOT_u1_u1_13122), &(NOT_u1_u1_13124), &(AND_u1_u1_13125));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_13127));\
bit_vector_and(&(AND_u1_u1_13125), &(NOT_u1_u1_13127), &(AND_u1_u1_13128));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_13130));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_13132));\
bit_vector_and(&(NOT_u1_u1_13130), &(NOT_u1_u1_13132), &(AND_u1_u1_13133));\
bit_vector_and(&(AND_u1_u1_13128), &(AND_u1_u1_13133), &(AND_u1_u1_13134));\
bit_vector_cast_to_bit_vector(0, &(SP_nothing_to_be_done_condition_normal), &(AND_u1_u1_13134));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13149_c_macro_ __declare_static_bit_vector(OR_u1_u1_13139,1);\
__declare_static_bit_vector(NOT_u1_u1_13141,1);\
__declare_static_bit_vector(AND_u1_u1_13142,1);\
__declare_static_bit_vector(NOT_u1_u1_13144,1);\
__declare_static_bit_vector(NOT_u1_u1_13146,1);\
__declare_static_bit_vector(AND_u1_u1_13147,1);\
__declare_static_bit_vector(AND_u1_u1_13148,1);\
bit_vector_or(&(overflow), &(underflow), &(OR_u1_u1_13139));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_13141));\
bit_vector_and(&(OR_u1_u1_13139), &(NOT_u1_u1_13141), &(AND_u1_u1_13142));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_13144));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_13146));\
bit_vector_and(&(NOT_u1_u1_13144), &(NOT_u1_u1_13146), &(AND_u1_u1_13147));\
bit_vector_and(&(AND_u1_u1_13142), &(AND_u1_u1_13147), &(AND_u1_u1_13148));\
bit_vector_cast_to_bit_vector(0, &(SP_normalization_required), &(AND_u1_u1_13148));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13165_c_macro_ __declare_static_bit_vector(NOT_u1_u1_13152,1);\
__declare_static_bit_vector(NOT_u1_u1_13154,1);\
__declare_static_bit_vector(AND_u1_u1_13155,1);\
__declare_static_bit_vector(NOT_u1_u1_13157,1);\
__declare_static_bit_vector(AND_u1_u1_13158,1);\
__declare_static_bit_vector(NOT_u1_u1_13160,1);\
__declare_static_bit_vector(NOT_u1_u1_13162,1);\
__declare_static_bit_vector(AND_u1_u1_13163,1);\
__declare_static_bit_vector(AND_u1_u1_13164,1);\
bit_vector_not( &(overflow), &(NOT_u1_u1_13152));\
bit_vector_not( &(underflow), &(NOT_u1_u1_13154));\
bit_vector_and(&(NOT_u1_u1_13152), &(NOT_u1_u1_13154), &(AND_u1_u1_13155));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_13157));\
bit_vector_and(&(AND_u1_u1_13155), &(NOT_u1_u1_13157), &(AND_u1_u1_13158));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_13160));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_13162));\
bit_vector_and(&(NOT_u1_u1_13160), &(NOT_u1_u1_13162), &(AND_u1_u1_13163));\
bit_vector_and(&(AND_u1_u1_13158), &(AND_u1_u1_13163), &(AND_u1_u1_13164));\
bit_vector_cast_to_bit_vector(0, &(DP_nothing_to_be_done_condition_normal), &(AND_u1_u1_13164));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13179_c_macro_ __declare_static_bit_vector(OR_u1_u1_13169,1);\
__declare_static_bit_vector(NOT_u1_u1_13171,1);\
__declare_static_bit_vector(AND_u1_u1_13172,1);\
__declare_static_bit_vector(NOT_u1_u1_13174,1);\
__declare_static_bit_vector(NOT_u1_u1_13176,1);\
__declare_static_bit_vector(AND_u1_u1_13177,1);\
__declare_static_bit_vector(AND_u1_u1_13178,1);\
bit_vector_or(&(overflow), &(underflow), &(OR_u1_u1_13169));\
bit_vector_not( &(condition_zero), &(NOT_u1_u1_13171));\
bit_vector_and(&(OR_u1_u1_13169), &(NOT_u1_u1_13171), &(AND_u1_u1_13172));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_13174));\
bit_vector_not( &(condition_nan), &(NOT_u1_u1_13176));\
bit_vector_and(&(NOT_u1_u1_13174), &(NOT_u1_u1_13176), &(AND_u1_u1_13177));\
bit_vector_and(&(AND_u1_u1_13172), &(AND_u1_u1_13177), &(AND_u1_u1_13178));\
bit_vector_cast_to_bit_vector(0, &(DP_normalization_required), &(AND_u1_u1_13178));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13185_c_macro_ __declare_static_bit_vector(MUX_13184,1);\
if (has_undefined_bit(&double_precision_outputs)) {fprintf(stderr, "Error: variable double_precision_outputs has undefined value (%s) at test point.\n", to_string(&double_precision_outputs));assert(0);} \
if(bit_vector_to_uint64(0, &double_precision_outputs)){bit_vector_cast_to_bit_vector(0, &(MUX_13184), &(DP_normalization_required));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13184), &(SP_normalization_required));\
}bit_vector_cast_to_bit_vector(0, &(normalization_required), &(MUX_13184));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13191_c_macro_ __declare_static_bit_vector(MUX_13190,1);\
if (has_undefined_bit(&double_precision_outputs)) {fprintf(stderr, "Error: variable double_precision_outputs has undefined value (%s) at test point.\n", to_string(&double_precision_outputs));assert(0);} \
if(bit_vector_to_uint64(0, &double_precision_outputs)){bit_vector_cast_to_bit_vector(0, &(MUX_13190), &(DP_nothing_to_be_done_condition_normal));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13190), &(SP_nothing_to_be_done_condition_normal));\
}bit_vector_cast_to_bit_vector(0, &(nothing_to_be_done_condition_normal), &(MUX_13190));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13194_c_macro_ bit_vector_cast_to_bit_vector(0, &(condition_nan_d), &(condition_nan));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13197_c_macro_ bit_vector_cast_to_bit_vector(0, &(condition_zero_d), &(condition_zero));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13218_c_macro_ __declare_static_bit_vector(OR_u1_u1_13201,1);\
__declare_static_bit_vector(konst_13203,13);\
bit_vector_clear(&konst_13203);\
__declare_static_bit_vector(MUX_13204,13);\
__declare_static_bit_vector(type_cast_13207,13);\
bit_vector_clear(&type_cast_13207);\
__declare_static_bit_vector(konst_13208,13);\
bit_vector_clear(&konst_13208);\
__declare_static_bit_vector(MUX_13209,13);\
__declare_static_bit_vector(OR_i13_i13_13210,13);\
__declare_static_bit_vector(OR_u1_u1_13213,1);\
__declare_static_bit_vector(konst_13215,13);\
bit_vector_clear(&konst_13215);\
__declare_static_bit_vector(MUX_13216,13);\
__declare_static_bit_vector(OR_i13_i13_13217,13);\
bit_vector_or(&(condition_nan_d), &(condition_inf), &(OR_u1_u1_13201));\
if (has_undefined_bit(&OR_u1_u1_13201)) {fprintf(stderr, "Error: variable OR_u1_u1_13201 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_13201));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_13201)){bit_vector_cast_to_bit_vector(1, &(MUX_13204), &(ALL_ONE_13));\
}else {bit_vector_clear(&konst_13203);\
bit_vector_cast_to_bit_vector(1, &(MUX_13204), &(konst_13203));\
}if (has_undefined_bit(&condition_zero_d)) {fprintf(stderr, "Error: variable condition_zero_d has undefined value (%s) at test point.\n", to_string(&condition_zero_d));assert(0);} \
if(bit_vector_to_uint64(0, &condition_zero_d)){bit_vector_bitcast_to_bit_vector( &(type_cast_13207), &(ZERO_13));\
bit_vector_cast_to_bit_vector(1, &(MUX_13209), &(type_cast_13207));\
}else {bit_vector_clear(&konst_13208);\
bit_vector_cast_to_bit_vector(1, &(MUX_13209), &(konst_13208));\
}bit_vector_or(&(MUX_13204), &(MUX_13209), &(OR_i13_i13_13210));\
bit_vector_or(&(normalization_required), &(nothing_to_be_done_condition_normal), &(OR_u1_u1_13213));\
if (has_undefined_bit(&OR_u1_u1_13213)) {fprintf(stderr, "Error: variable OR_u1_u1_13213 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_13213));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_13213)){bit_vector_cast_to_bit_vector(1, &(MUX_13216), &(exponent_without_bias));\
}else {bit_vector_clear(&konst_13215);\
bit_vector_cast_to_bit_vector(1, &(MUX_13216), &(konst_13215));\
}bit_vector_or(&(OR_i13_i13_13210), &(MUX_13216), &(OR_i13_i13_13217));\
bit_vector_cast_to_bit_vector(1, &(exponent_to_be_passed), &(OR_i13_i13_13217));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13243_c_macro_ __declare_static_bit_vector(CONCAT_u1_u62_13223,62);\
bit_vector_clear(&CONCAT_u1_u62_13223);\
CONCAT_u1_u62_13223.val.byte_array[7] = 32;\
__declare_static_bit_vector(konst_13224,62);\
bit_vector_clear(&konst_13224);\
__declare_static_bit_vector(MUX_13225,62);\
__declare_static_bit_vector(konst_13228,62);\
bit_vector_clear(&konst_13228);\
__declare_static_bit_vector(MUX_13229,62);\
__declare_static_bit_vector(OR_u62_u62_13230,62);\
__declare_static_bit_vector(konst_13233,62);\
bit_vector_clear(&konst_13233);\
__declare_static_bit_vector(MUX_13234,62);\
__declare_static_bit_vector(OR_u1_u1_13237,1);\
__declare_static_bit_vector(konst_13239,62);\
bit_vector_clear(&konst_13239);\
__declare_static_bit_vector(MUX_13240,62);\
__declare_static_bit_vector(OR_u62_u62_13241,62);\
__declare_static_bit_vector(OR_u62_u62_13242,62);\
if (has_undefined_bit(&condition_nan_d)) {fprintf(stderr, "Error: variable condition_nan_d has undefined value (%s) at test point.\n", to_string(&condition_nan_d));assert(0);} \
if(bit_vector_to_uint64(0, &condition_nan_d)){bit_vector_concatenate( &(ONE_1), &(ZERO_61), &(CONCAT_u1_u62_13223));\
bit_vector_cast_to_bit_vector(0, &(MUX_13225), &(CONCAT_u1_u62_13223));\
}else {bit_vector_clear(&konst_13224);\
bit_vector_cast_to_bit_vector(0, &(MUX_13225), &(konst_13224));\
}if (has_undefined_bit(&condition_inf)) {fprintf(stderr, "Error: variable condition_inf has undefined value (%s) at test point.\n", to_string(&condition_inf));assert(0);} \
if(bit_vector_to_uint64(0, &condition_inf)){bit_vector_cast_to_bit_vector(0, &(MUX_13229), &(ZERO_62));\
}else {bit_vector_clear(&konst_13228);\
bit_vector_cast_to_bit_vector(0, &(MUX_13229), &(konst_13228));\
}bit_vector_or(&(MUX_13225), &(MUX_13229), &(OR_u62_u62_13230));\
if (has_undefined_bit(&condition_zero_d)) {fprintf(stderr, "Error: variable condition_zero_d has undefined value (%s) at test point.\n", to_string(&condition_zero_d));assert(0);} \
if(bit_vector_to_uint64(0, &condition_zero_d)){bit_vector_cast_to_bit_vector(0, &(MUX_13234), &(ZERO_62));\
}else {bit_vector_clear(&konst_13233);\
bit_vector_cast_to_bit_vector(0, &(MUX_13234), &(konst_13233));\
}bit_vector_or(&(normalization_required), &(nothing_to_be_done_condition_normal), &(OR_u1_u1_13237));\
if (has_undefined_bit(&OR_u1_u1_13237)) {fprintf(stderr, "Error: variable OR_u1_u1_13237 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_13237));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_13237)){bit_vector_cast_to_bit_vector(0, &(MUX_13240), &(mantissa_62_bits));\
}else {bit_vector_clear(&konst_13239);\
bit_vector_cast_to_bit_vector(0, &(MUX_13240), &(konst_13239));\
}bit_vector_or(&(MUX_13234), &(MUX_13240), &(OR_u62_u62_13241));\
bit_vector_or(&(OR_u62_u62_13230), &(OR_u62_u62_13241), &(OR_u62_u62_13242));\
bit_vector_cast_to_bit_vector(0, &(mantissa_to_be_passed), &(OR_u62_u62_13242));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13255_c_macro_ __declare_static_bit_vector(NOT_u1_u1_13247,1);\
__declare_static_bit_vector(AND_u1_u1_13248,1);\
__declare_static_bit_vector(NOT_u1_u1_13250,1);\
__declare_static_bit_vector(NOT_u1_u1_13252,1);\
__declare_static_bit_vector(AND_u1_u1_13253,1);\
__declare_static_bit_vector(AND_u1_u1_13254,1);\
bit_vector_not( &(condition_zero_d), &(NOT_u1_u1_13247));\
bit_vector_and(&(normalization_required), &(NOT_u1_u1_13247), &(AND_u1_u1_13248));\
bit_vector_not( &(condition_inf), &(NOT_u1_u1_13250));\
bit_vector_not( &(condition_nan_d), &(NOT_u1_u1_13252));\
bit_vector_and(&(NOT_u1_u1_13250), &(NOT_u1_u1_13252), &(AND_u1_u1_13253));\
bit_vector_and(&(AND_u1_u1_13248), &(AND_u1_u1_13253), &(AND_u1_u1_13254));\
bit_vector_cast_to_bit_vector(0, &(needs_norm), &(AND_u1_u1_13254));\
;

#define fpunit_exec_exec__fpmul64_op_assign_stmt_13273_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_13259,2);\
__declare_static_bit_vector(CONCAT_u1_u2_13262,2);\
__declare_static_bit_vector(CONCAT_u2_u4_13263,4);\
__declare_static_bit_vector(CONCAT_u1_u2_13266,2);\
__declare_static_bit_vector(type_cast_13268,13);\
__declare_static_bit_vector(CONCAT_u13_u75_13270,75);\
__declare_static_bit_vector(CONCAT_u2_u77_13271,77);\
__declare_static_bit_vector(CONCAT_u4_u81_13272,81);\
bit_vector_concatenate( &(sticky), &(ZERO_1), &(CONCAT_u1_u2_13259));\
bit_vector_concatenate( &(sign_result), &(condition_nan_d), &(CONCAT_u1_u2_13262));\
bit_vector_concatenate( &(CONCAT_u1_u2_13259), &(CONCAT_u1_u2_13262), &(CONCAT_u2_u4_13263));\
bit_vector_concatenate( &(condition_inf), &(condition_zero_d), &(CONCAT_u1_u2_13266));\
bit_vector_bitcast_to_bit_vector( &(type_cast_13268), &(exponent_to_be_passed));\
bit_vector_concatenate( &(type_cast_13268), &(mantissa_to_be_passed), &(CONCAT_u13_u75_13270));\
bit_vector_concatenate( &(CONCAT_u1_u2_13266), &(CONCAT_u13_u75_13270), &(CONCAT_u2_u77_13271));\
bit_vector_concatenate( &(CONCAT_u2_u4_13263), &(CONCAT_u2_u77_13271), &(CONCAT_u4_u81_13272));\
bit_vector_cast_to_bit_vector(0, &(extn_result), &(CONCAT_u4_u81_13272));\
;

#define fpunit_exec_exec__fpmul64_op_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pneeds_norm)), &(needs_norm));\
bit_vector_cast_to_bit_vector(0, &((*__pextn_result)), &(extn_result));\
;

#define fpunit_exec_exec__fpmul64_wrap_inner_inarg_prep_macro__ static double X;\
X = (*__pX);\
static double Y;\
Y = (*__pY);\
static double RESULT;\
__declare_static_bit_vector(xpn,1);\
__declare_static_bit_vector(xnn,1);\
__declare_static_bit_vector(xpd,1);\
__declare_static_bit_vector(xnd,1);\
__declare_static_bit_vector(xqnan,1);\
__declare_static_bit_vector(xsnan,1);\
__declare_static_bit_vector(xpi,1);\
__declare_static_bit_vector(xni,1);\
__declare_static_bit_vector(xpz,1);\
__declare_static_bit_vector(xnz,1);\
__declare_static_bit_vector(x_class,10);\
__declare_static_bit_vector(ypn,1);\
__declare_static_bit_vector(ynn,1);\
__declare_static_bit_vector(ypd,1);\
__declare_static_bit_vector(ynd,1);\
__declare_static_bit_vector(yqnan,1);\
__declare_static_bit_vector(ysnan,1);\
__declare_static_bit_vector(ypi,1);\
__declare_static_bit_vector(yni,1);\
__declare_static_bit_vector(ypz,1);\
__declare_static_bit_vector(ynz,1);\
__declare_static_bit_vector(y_class,10);\
__declare_static_bit_vector(denormalize_flag_mul,1);\
__declare_static_bit_vector(extn_result_mul,81);\
__declare_static_bit_vector(muld_result_fast,64);\
__declare_static_bit_vector(muld_result_slow,64);\

#define fpunit_exec_exec__fpmul64_wrap_call_stmt_19015_c_macro_ _fpunit_exec_exec_classFp64_( &(X), &(xpn), &(xnn), &(xpd), &(xnd), &(xqnan), &(xsnan), &(xpi), &(xni), &(xpz), &(xnz));\
;

#define fpunit_exec_exec__fpmul64_wrap_assign_stmt_19036_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_19019,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19021,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19024,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19025,5);\
__declare_static_bit_vector(CONCAT_u1_u2_19028,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19030,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19033,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19034,5);\
__declare_static_bit_vector(CONCAT_u5_u10_19035,10);\
bit_vector_concatenate( &(xpn), &(xnn), &(CONCAT_u1_u2_19019));\
bit_vector_concatenate( &(CONCAT_u1_u2_19019), &(xpd), &(CONCAT_u2_u3_19021));\
bit_vector_concatenate( &(xnd), &(xqnan), &(CONCAT_u1_u2_19024));\
bit_vector_concatenate( &(CONCAT_u2_u3_19021), &(CONCAT_u1_u2_19024), &(CONCAT_u3_u5_19025));\
bit_vector_concatenate( &(xsnan), &(xpi), &(CONCAT_u1_u2_19028));\
bit_vector_concatenate( &(CONCAT_u1_u2_19028), &(xni), &(CONCAT_u2_u3_19030));\
bit_vector_concatenate( &(xpz), &(xnz), &(CONCAT_u1_u2_19033));\
bit_vector_concatenate( &(CONCAT_u2_u3_19030), &(CONCAT_u1_u2_19033), &(CONCAT_u3_u5_19034));\
bit_vector_concatenate( &(CONCAT_u3_u5_19025), &(CONCAT_u3_u5_19034), &(CONCAT_u5_u10_19035));\
bit_vector_cast_to_bit_vector(0, &(x_class), &(CONCAT_u5_u10_19035));\
;

#define fpunit_exec_exec__fpmul64_wrap_call_stmt_19048_c_macro_ _fpunit_exec_exec_classFp64_( &(Y), &(ypn), &(ynn), &(ypd), &(ynd), &(yqnan), &(ysnan), &(ypi), &(yni), &(ypz), &(ynz));\
;

#define fpunit_exec_exec__fpmul64_wrap_assign_stmt_19069_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_19052,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19054,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19057,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19058,5);\
__declare_static_bit_vector(CONCAT_u1_u2_19061,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19063,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19066,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19067,5);\
__declare_static_bit_vector(CONCAT_u5_u10_19068,10);\
bit_vector_concatenate( &(ypn), &(ynn), &(CONCAT_u1_u2_19052));\
bit_vector_concatenate( &(CONCAT_u1_u2_19052), &(ypd), &(CONCAT_u2_u3_19054));\
bit_vector_concatenate( &(ynd), &(yqnan), &(CONCAT_u1_u2_19057));\
bit_vector_concatenate( &(CONCAT_u2_u3_19054), &(CONCAT_u1_u2_19057), &(CONCAT_u3_u5_19058));\
bit_vector_concatenate( &(ysnan), &(ypi), &(CONCAT_u1_u2_19061));\
bit_vector_concatenate( &(CONCAT_u1_u2_19061), &(yni), &(CONCAT_u2_u3_19063));\
bit_vector_concatenate( &(ypz), &(ynz), &(CONCAT_u1_u2_19066));\
bit_vector_concatenate( &(CONCAT_u2_u3_19063), &(CONCAT_u1_u2_19066), &(CONCAT_u3_u5_19067));\
bit_vector_concatenate( &(CONCAT_u3_u5_19058), &(CONCAT_u3_u5_19067), &(CONCAT_u5_u10_19068));\
bit_vector_cast_to_bit_vector(0, &(y_class), &(CONCAT_u5_u10_19068));\
;

#define fpunit_exec_exec__fpmul64_wrap_call_stmt_19084_c_macro_ __declare_static_bit_vector(konst_19072,32);\
bit_vector_clear(&konst_19072);\
__declare_static_bit_vector(konst_19073,10);\
bit_vector_clear(&konst_19073);\
__declare_static_bit_vector(konst_19074,32);\
bit_vector_clear(&konst_19074);\
__declare_static_bit_vector(konst_19075,10);\
bit_vector_clear(&konst_19075);\
__declare_static_bit_vector(type_cast_19077,64);\
__declare_static_bit_vector(type_cast_19080,64);\
bit_vector_clear(&konst_19072);\
bit_vector_clear(&konst_19073);\
bit_vector_clear(&konst_19074);\
bit_vector_clear(&konst_19075);\
double_bitcast_to_bit_vector( &(type_cast_19077), &(X));\
double_bitcast_to_bit_vector( &(type_cast_19080), &(Y));\
_fpunit_exec_exec_fpmul64_op_( &(ZERO_1),  &(ONE_1),  &(konst_19072),  &(konst_19073),  &(konst_19074),  &(konst_19075),  &(type_cast_19077),  &(x_class),  &(type_cast_19080),  &(y_class), &(denormalize_flag_mul), &(extn_result_mul));\
;

#define fpunit_exec_exec__fpmul64_wrap_call_stmt_19087_c_macro_ _fpunit_exec_exec_round_fp_64_( &(extn_result_mul), &(muld_result_fast));\
;

#define fpunit_exec_exec__fpmul64_wrap_call_stmt_19091_c_macro_ if (has_undefined_bit(&denormalize_flag_mul)) {fprintf(stderr, "Error: variable denormalize_flag_mul has undefined value (%s) at test point.\n", to_string(&denormalize_flag_mul));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_mul)) {\
_fpunit_exec_exec_denormalize_fp_64_( &(extn_result_mul), &(muld_result_slow));\
}\
;

#define fpunit_exec_exec__fpmul64_wrap_assign_stmt_19098_c_macro_ __declare_static_bit_vector(MUX_19096,64);\
static double type_cast_19097;\
if (has_undefined_bit(&denormalize_flag_mul)) {fprintf(stderr, "Error: variable denormalize_flag_mul has undefined value (%s) at test point.\n", to_string(&denormalize_flag_mul));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_mul)){bit_vector_cast_to_bit_vector(0, &(MUX_19096), &(muld_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19096), &(muld_result_fast));\
}bit_vector_bitcast_to_double( &(type_cast_19097),  &(MUX_19096));\
RESULT = type_cast_19097;\
;

#define fpunit_exec_exec__fpmul64_wrap_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fpmul64_wrap_outer_arg_decl_macro__ double __X = X;\
double __Y = Y;\
;

#define fpunit_exec_exec__fpmul64_wrap_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_inner_inarg_prep_macro__ static float a;\
a = (*__pa);\
static float sqrt_a;\
__declare_static_bit_vector(e_e,13);\
__declare_static_bit_vector(e_m,32);\
__declare_static_bit_vector(special_case,1);\
static float special_case_result;\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(s_e_m,32);\
__declare_static_bit_vector(s_e_e,13);\
__declare_static_bit_vector(sticky_qualified,1);\
__declare_static_bit_vector(s_e_e_qualified,13);\
__declare_static_bit_vector(s_e_m_qualified,32);\
static float fsqrt32_normalized_result;\
__declare_static_bit_vector(ur,32);\

#define fpunit_exec_exec__fpsqrt32_bit_wise_call_stmt_15185_c_macro_ _fpunit_exec_exec_classify_and_prepare_32_( &(a), &(e_e), &(e_m), &(special_case), &(special_case_result));\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15191_c_macro_ uint32_t fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15191_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15191_c_macro___print_counter,"fpsqrt32_bit_wise_in_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15191_c_macro___print_counter,"a");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",a);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15191_c_macro___print_counter,"e_e");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(e_e)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15191_c_macro___print_counter,"e_m");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(e_m)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15191_c_macro___print_counter,"special_case");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(special_case)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15191_c_macro___print_counter,"special_case_result");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",special_case_result);fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpsqrt32_bit_wise_call_stmt_15196_c_macro_ if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if (!bit_vector_to_uint64(0, &special_case)) {\
_fpunit_exec_exec_short_sqrt_32_( &(e_m), &(sticky), &(s_e_m));\
}\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15201_c_macro_ if (!bit_vector_to_uint64(0, &special_case)) {\
uint32_t fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15201_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15201_c_macro___print_counter,"fpsqrt32_bit_wise_post_short_sqrt");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15201_c_macro___print_counter,"sticky");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sticky)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15201_c_macro___print_counter,"e_m");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(e_m)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15201_c_macro___print_counter,"s_e_m");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(s_e_m)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__fpsqrt32_bit_wise_assign_stmt_15215_c_macro_ __declare_static_bit_vector(konst_15204,13);\
bit_vector_clear(&konst_15204);\
__declare_static_bit_vector(SLT_i13_u1_15205,1);\
__declare_static_bit_vector(konst_15207,13);\
bit_vector_clear(&konst_15207);\
konst_15207.val.byte_array[0] = 255;\
konst_15207.val.byte_array[1] = 255;\
__declare_static_bit_vector(EQ_i13_u1_15208,1);\
__declare_static_bit_vector(AND_u1_u1_15209,1);\
__declare_static_bit_vector(konst_15210,13);\
bit_vector_clear(&konst_15210);\
__declare_static_bit_vector(konst_15212,13);\
bit_vector_clear(&konst_15212);\
konst_15212.val.byte_array[0] = 1;\
__declare_static_bit_vector(ASHR_i13_i13_15213,13);\
__declare_static_bit_vector(MUX_15214,13);\
bit_vector_clear(&konst_15204);\
bit_vector_less(1, &(e_e), &(konst_15204), &(SLT_i13_u1_15205));\
bit_vector_clear(&konst_15207);\
konst_15207.val.byte_array[0] = 255;\
konst_15207.val.byte_array[1] = 255;\
bit_vector_equal(1, &(e_e), &(konst_15207), &(EQ_i13_u1_15208));\
bit_vector_and(&(SLT_i13_u1_15205), &(EQ_i13_u1_15208), &(AND_u1_u1_15209));\
if (has_undefined_bit(&AND_u1_u1_15209)) {fprintf(stderr, "Error: variable AND_u1_u1_15209 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_15209));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_15209)){bit_vector_clear(&konst_15210);\
bit_vector_cast_to_bit_vector(1, &(MUX_15214), &(konst_15210));\
}else {bit_vector_clear(&konst_15212);\
konst_15212.val.byte_array[0] = 1;\
bit_vector_shift_right(1, &(e_e), &(konst_15212), &(ASHR_i13_i13_15213));\
bit_vector_cast_to_bit_vector(1, &(MUX_15214), &(ASHR_i13_i13_15213));\
}bit_vector_cast_to_bit_vector(1, &(s_e_e), &(MUX_15214));\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15218_c_macro_ uint32_t fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15218_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15218_c_macro___print_counter,"fpsqrt32_bit_wise_to_round");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15218_c_macro___print_counter,"s_e_e");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(s_e_e)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15218_c_macro___print_counter,"s_e_m");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(s_e_m)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpsqrt32_bit_wise_assign_stmt_15224_c_macro_ __declare_static_bit_vector(konst_15221,1);\
bit_vector_clear(&konst_15221);\
__declare_static_bit_vector(MUX_15223,1);\
if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if(bit_vector_to_uint64(0, &special_case)){bit_vector_clear(&konst_15221);\
bit_vector_cast_to_bit_vector(0, &(MUX_15223), &(konst_15221));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_15223), &(sticky));\
}bit_vector_cast_to_bit_vector(0, &(sticky_qualified), &(MUX_15223));\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_assign_stmt_15230_c_macro_ __declare_static_bit_vector(konst_15227,13);\
bit_vector_clear(&konst_15227);\
__declare_static_bit_vector(MUX_15229,13);\
if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if(bit_vector_to_uint64(0, &special_case)){bit_vector_clear(&konst_15227);\
bit_vector_cast_to_bit_vector(1, &(MUX_15229), &(konst_15227));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_15229), &(s_e_e));\
}bit_vector_cast_to_bit_vector(1, &(s_e_e_qualified), &(MUX_15229));\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_assign_stmt_15236_c_macro_ __declare_static_bit_vector(konst_15233,32);\
bit_vector_clear(&konst_15233);\
__declare_static_bit_vector(MUX_15235,32);\
if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if(bit_vector_to_uint64(0, &special_case)){bit_vector_clear(&konst_15233);\
bit_vector_cast_to_bit_vector(0, &(MUX_15235), &(konst_15233));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_15235), &(s_e_m));\
}bit_vector_cast_to_bit_vector(0, &(s_e_m_qualified), &(MUX_15235));\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_call_stmt_15241_c_macro_ _fpunit_exec_exec_round_e_32_( &(sticky_qualified),  &(s_e_e_qualified),  &(s_e_m_qualified), &(fsqrt32_normalized_result));\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_assign_stmt_15245_c_macro_ __declare_static_bit_vector(type_cast_15244,32);\
float_bitcast_to_bit_vector( &(type_cast_15244), &(fsqrt32_normalized_result));\
bit_vector_cast_to_bit_vector(0, &(ur), &(type_cast_15244));\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15247_c_macro_ uint32_t fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15247_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15247_c_macro___print_counter,"fpsqrt32_bit_wise_from_round");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt32_bit_wise_stmt_15247_c_macro___print_counter,"ur");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ur)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpsqrt32_bit_wise_assign_stmt_15253_c_macro_ static float MUX_15252;\
if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if(bit_vector_to_uint64(0, &special_case)){MUX_15252 = special_case_result;\
}else {MUX_15252 = fsqrt32_normalized_result;\
}sqrt_a = MUX_15252;\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_inner_outarg_prep_macro__ (*__psqrt_a) = sqrt_a;\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_outer_arg_decl_macro__ float __a = a;\
;

#define fpunit_exec_exec__fpsqrt32_bit_wise_outer_op_xfer_macro__  *sqrt_a = __sqrt_a;\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_inner_inarg_prep_macro__ static double a;\
a = (*__pa);\
static double sqrt_a;\
__declare_static_bit_vector(e_e,13);\
__declare_static_bit_vector(e_m,56);\
__declare_static_bit_vector(special_case,1);\
static double special_case_result;\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(s_e_m,56);\
__declare_static_bit_vector(s_e_e,13);\
__declare_static_bit_vector(sticky_qualified,1);\
__declare_static_bit_vector(s_e_e_qualified,13);\
__declare_static_bit_vector(s_e_m_qualified,56);\
static double fsqrt64_normalized_result;\
__declare_static_bit_vector(ur,64);\

#define fpunit_exec_exec__fpsqrt64_bit_wise_call_stmt_16263_c_macro_ _fpunit_exec_exec_classify_and_prepare_64_( &(a), &(e_e), &(e_m), &(special_case), &(special_case_result));\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16269_c_macro_ uint32_t fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16269_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16269_c_macro___print_counter,"fpsqrt64_bit_wise_in_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16269_c_macro___print_counter,"a");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",a);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16269_c_macro___print_counter,"e_e");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(e_e)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16269_c_macro___print_counter,"e_m");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(e_m)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16269_c_macro___print_counter,"special_case");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(special_case)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16269_c_macro___print_counter,"special_case_result");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",special_case_result);fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpsqrt64_bit_wise_call_stmt_16274_c_macro_ if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if (!bit_vector_to_uint64(0, &special_case)) {\
_fpunit_exec_exec_short_sqrt_56_( &(e_m), &(sticky), &(s_e_m));\
}\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16279_c_macro_ if (!bit_vector_to_uint64(0, &special_case)) {\
uint32_t fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16279_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16279_c_macro___print_counter,"fpsqrt64_bit_wise_post_short_sqrt");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16279_c_macro___print_counter,"sticky");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sticky)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16279_c_macro___print_counter,"e_m");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(e_m)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16279_c_macro___print_counter,"s_e_m");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(s_e_m)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__fpsqrt64_bit_wise_assign_stmt_16293_c_macro_ __declare_static_bit_vector(konst_16282,13);\
bit_vector_clear(&konst_16282);\
__declare_static_bit_vector(SLT_i13_u1_16283,1);\
__declare_static_bit_vector(konst_16285,13);\
bit_vector_clear(&konst_16285);\
konst_16285.val.byte_array[0] = 255;\
konst_16285.val.byte_array[1] = 255;\
__declare_static_bit_vector(EQ_i13_u1_16286,1);\
__declare_static_bit_vector(AND_u1_u1_16287,1);\
__declare_static_bit_vector(konst_16288,13);\
bit_vector_clear(&konst_16288);\
__declare_static_bit_vector(konst_16290,13);\
bit_vector_clear(&konst_16290);\
konst_16290.val.byte_array[0] = 1;\
__declare_static_bit_vector(ASHR_i13_i13_16291,13);\
__declare_static_bit_vector(MUX_16292,13);\
bit_vector_clear(&konst_16282);\
bit_vector_less(1, &(e_e), &(konst_16282), &(SLT_i13_u1_16283));\
bit_vector_clear(&konst_16285);\
konst_16285.val.byte_array[0] = 255;\
konst_16285.val.byte_array[1] = 255;\
bit_vector_equal(1, &(e_e), &(konst_16285), &(EQ_i13_u1_16286));\
bit_vector_and(&(SLT_i13_u1_16283), &(EQ_i13_u1_16286), &(AND_u1_u1_16287));\
if (has_undefined_bit(&AND_u1_u1_16287)) {fprintf(stderr, "Error: variable AND_u1_u1_16287 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_16287));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_16287)){bit_vector_clear(&konst_16288);\
bit_vector_cast_to_bit_vector(1, &(MUX_16292), &(konst_16288));\
}else {bit_vector_clear(&konst_16290);\
konst_16290.val.byte_array[0] = 1;\
bit_vector_shift_right(1, &(e_e), &(konst_16290), &(ASHR_i13_i13_16291));\
bit_vector_cast_to_bit_vector(1, &(MUX_16292), &(ASHR_i13_i13_16291));\
}bit_vector_cast_to_bit_vector(1, &(s_e_e), &(MUX_16292));\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16296_c_macro_ uint32_t fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16296_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16296_c_macro___print_counter,"fpsqrt64_bit_wise_to_round");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16296_c_macro___print_counter,"s_e_e");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(s_e_e)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16296_c_macro___print_counter,"s_e_m");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(s_e_m)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpsqrt64_bit_wise_assign_stmt_16302_c_macro_ __declare_static_bit_vector(konst_16299,1);\
bit_vector_clear(&konst_16299);\
__declare_static_bit_vector(MUX_16301,1);\
if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if(bit_vector_to_uint64(0, &special_case)){bit_vector_clear(&konst_16299);\
bit_vector_cast_to_bit_vector(0, &(MUX_16301), &(konst_16299));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_16301), &(sticky));\
}bit_vector_cast_to_bit_vector(0, &(sticky_qualified), &(MUX_16301));\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_assign_stmt_16308_c_macro_ __declare_static_bit_vector(konst_16305,13);\
bit_vector_clear(&konst_16305);\
__declare_static_bit_vector(MUX_16307,13);\
if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if(bit_vector_to_uint64(0, &special_case)){bit_vector_clear(&konst_16305);\
bit_vector_cast_to_bit_vector(1, &(MUX_16307), &(konst_16305));\
}else {bit_vector_cast_to_bit_vector(1, &(MUX_16307), &(s_e_e));\
}bit_vector_cast_to_bit_vector(1, &(s_e_e_qualified), &(MUX_16307));\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_assign_stmt_16314_c_macro_ __declare_static_bit_vector(konst_16311,56);\
bit_vector_clear(&konst_16311);\
__declare_static_bit_vector(MUX_16313,56);\
if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if(bit_vector_to_uint64(0, &special_case)){bit_vector_clear(&konst_16311);\
bit_vector_cast_to_bit_vector(0, &(MUX_16313), &(konst_16311));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_16313), &(s_e_m));\
}bit_vector_cast_to_bit_vector(0, &(s_e_m_qualified), &(MUX_16313));\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_call_stmt_16319_c_macro_ _fpunit_exec_exec_round_e_64_( &(sticky_qualified),  &(s_e_e_qualified),  &(s_e_m_qualified), &(fsqrt64_normalized_result));\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_assign_stmt_16323_c_macro_ __declare_static_bit_vector(type_cast_16322,64);\
double_bitcast_to_bit_vector( &(type_cast_16322), &(fsqrt64_normalized_result));\
bit_vector_cast_to_bit_vector(0, &(ur), &(type_cast_16322));\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16325_c_macro_ uint32_t fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16325_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16325_c_macro___print_counter,"fpsqrt64_bit_wise_from_round");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__fpsqrt64_bit_wise_stmt_16325_c_macro___print_counter,"ur");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ur)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__fpsqrt64_bit_wise_assign_stmt_16331_c_macro_ static double MUX_16330;\
if (has_undefined_bit(&special_case)) {fprintf(stderr, "Error: variable special_case has undefined value (%s) at test point.\n", to_string(&special_case));assert(0);} \
if(bit_vector_to_uint64(0, &special_case)){MUX_16330 = special_case_result;\
}else {MUX_16330 = fsqrt64_normalized_result;\
}sqrt_a = MUX_16330;\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_inner_outarg_prep_macro__ (*__psqrt_a) = sqrt_a;\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_outer_arg_decl_macro__ double __a = a;\
;

#define fpunit_exec_exec__fpsqrt64_bit_wise_outer_op_xfer_macro__  *sqrt_a = __sqrt_a;\
;

#define fpunit_exec_exec__fpsub32_wrap_inner_inarg_prep_macro__ static float X;\
X = (*__pX);\
static float Y;\
Y = (*__pY);\
static float RESULT;\
__declare_static_bit_vector(xpn,1);\
__declare_static_bit_vector(xnn,1);\
__declare_static_bit_vector(xpd,1);\
__declare_static_bit_vector(xnd,1);\
__declare_static_bit_vector(xqnan,1);\
__declare_static_bit_vector(xsnan,1);\
__declare_static_bit_vector(xpi,1);\
__declare_static_bit_vector(xni,1);\
__declare_static_bit_vector(xpz,1);\
__declare_static_bit_vector(xnz,1);\
__declare_static_bit_vector(x_class,10);\
__declare_static_bit_vector(ypn,1);\
__declare_static_bit_vector(ynn,1);\
__declare_static_bit_vector(ypd,1);\
__declare_static_bit_vector(ynd,1);\
__declare_static_bit_vector(yqnan,1);\
__declare_static_bit_vector(ysnan,1);\
__declare_static_bit_vector(ypi,1);\
__declare_static_bit_vector(yni,1);\
__declare_static_bit_vector(ypz,1);\
__declare_static_bit_vector(ynz,1);\
__declare_static_bit_vector(y_class,10);\
__declare_static_bit_vector(y_n_class,10);\
__declare_static_bit_vector(uY,32);\
__declare_static_bit_vector(unY,32);\
__declare_static_bit_vector(denormalize_flag_add,1);\
__declare_static_bit_vector(extn_result_add,81);\
__declare_static_bit_vector(adds_result_fast,32);\
__declare_static_bit_vector(adds_result_slow,32);\

#define fpunit_exec_exec__fpsub32_wrap_call_stmt_19115_c_macro_ _fpunit_exec_exec_classFp32_( &(X), &(xpn), &(xnn), &(xpd), &(xnd), &(xqnan), &(xsnan), &(xpi), &(xni), &(xpz), &(xnz));\
;

#define fpunit_exec_exec__fpsub32_wrap_assign_stmt_19136_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_19119,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19121,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19124,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19125,5);\
__declare_static_bit_vector(CONCAT_u1_u2_19128,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19130,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19133,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19134,5);\
__declare_static_bit_vector(CONCAT_u5_u10_19135,10);\
bit_vector_concatenate( &(xpn), &(xnn), &(CONCAT_u1_u2_19119));\
bit_vector_concatenate( &(CONCAT_u1_u2_19119), &(xpd), &(CONCAT_u2_u3_19121));\
bit_vector_concatenate( &(xnd), &(xqnan), &(CONCAT_u1_u2_19124));\
bit_vector_concatenate( &(CONCAT_u2_u3_19121), &(CONCAT_u1_u2_19124), &(CONCAT_u3_u5_19125));\
bit_vector_concatenate( &(xsnan), &(xpi), &(CONCAT_u1_u2_19128));\
bit_vector_concatenate( &(CONCAT_u1_u2_19128), &(xni), &(CONCAT_u2_u3_19130));\
bit_vector_concatenate( &(xpz), &(xnz), &(CONCAT_u1_u2_19133));\
bit_vector_concatenate( &(CONCAT_u2_u3_19130), &(CONCAT_u1_u2_19133), &(CONCAT_u3_u5_19134));\
bit_vector_concatenate( &(CONCAT_u3_u5_19125), &(CONCAT_u3_u5_19134), &(CONCAT_u5_u10_19135));\
bit_vector_cast_to_bit_vector(0, &(x_class), &(CONCAT_u5_u10_19135));\
;

#define fpunit_exec_exec__fpsub32_wrap_call_stmt_19148_c_macro_ _fpunit_exec_exec_classFp32_( &(Y), &(ypn), &(ynn), &(ypd), &(ynd), &(yqnan), &(ysnan), &(ypi), &(yni), &(ypz), &(ynz));\
;

#define fpunit_exec_exec__fpsub32_wrap_assign_stmt_19169_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_19152,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19154,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19157,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19158,5);\
__declare_static_bit_vector(CONCAT_u1_u2_19161,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19163,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19166,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19167,5);\
__declare_static_bit_vector(CONCAT_u5_u10_19168,10);\
bit_vector_concatenate( &(ypn), &(ynn), &(CONCAT_u1_u2_19152));\
bit_vector_concatenate( &(CONCAT_u1_u2_19152), &(ypd), &(CONCAT_u2_u3_19154));\
bit_vector_concatenate( &(ynd), &(yqnan), &(CONCAT_u1_u2_19157));\
bit_vector_concatenate( &(CONCAT_u2_u3_19154), &(CONCAT_u1_u2_19157), &(CONCAT_u3_u5_19158));\
bit_vector_concatenate( &(ysnan), &(ypi), &(CONCAT_u1_u2_19161));\
bit_vector_concatenate( &(CONCAT_u1_u2_19161), &(yni), &(CONCAT_u2_u3_19163));\
bit_vector_concatenate( &(ypz), &(ynz), &(CONCAT_u1_u2_19166));\
bit_vector_concatenate( &(CONCAT_u2_u3_19163), &(CONCAT_u1_u2_19166), &(CONCAT_u3_u5_19167));\
bit_vector_concatenate( &(CONCAT_u3_u5_19158), &(CONCAT_u3_u5_19167), &(CONCAT_u5_u10_19168));\
bit_vector_cast_to_bit_vector(0, &(y_class), &(CONCAT_u5_u10_19168));\
;

#define fpunit_exec_exec__fpsub32_wrap_call_stmt_19172_c_macro_ _fpunit_exec_exec_negate_classification_( &(y_class), &(y_n_class));\
;

#define fpunit_exec_exec__fpsub32_wrap_assign_stmt_19176_c_macro_ __declare_static_bit_vector(type_cast_19175,32);\
float_bitcast_to_bit_vector( &(type_cast_19175), &(Y));\
bit_vector_cast_to_bit_vector(0, &(uY), &(type_cast_19175));\
;

#define fpunit_exec_exec__fpsub32_wrap_assign_stmt_19185_c_macro_ __declare_static_bit_vector(konst_19179,32);\
bit_vector_clear(&konst_19179);\
konst_19179.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_19180,1);\
__declare_static_bit_vector(NOT_u1_u1_19181,1);\
__declare_static_bit_vector(slice_19183,31);\
__declare_static_bit_vector(CONCAT_u1_u32_19184,32);\
bit_vector_clear(&konst_19179);\
konst_19179.val.byte_array[0] = 31;\
bit_vector_bitsel( &(uY), &(konst_19179), &(BITSEL_u32_u1_19180));\
bit_vector_not( &(BITSEL_u32_u1_19180), &(NOT_u1_u1_19181));\
bit_vector_slice(&(uY), &(slice_19183), 0);\
bit_vector_concatenate( &(NOT_u1_u1_19181), &(slice_19183), &(CONCAT_u1_u32_19184));\
bit_vector_cast_to_bit_vector(0, &(unY), &(CONCAT_u1_u32_19184));\
;

#define fpunit_exec_exec__fpsub32_wrap_call_stmt_19199_c_macro_ __declare_static_bit_vector(type_cast_19189,32);\
__declare_static_bit_vector(konst_19193,64);\
bit_vector_clear(&konst_19193);\
__declare_static_bit_vector(konst_19194,10);\
bit_vector_clear(&konst_19194);\
__declare_static_bit_vector(konst_19195,64);\
bit_vector_clear(&konst_19195);\
__declare_static_bit_vector(konst_19196,10);\
bit_vector_clear(&konst_19196);\
float_bitcast_to_bit_vector( &(type_cast_19189), &(X));\
bit_vector_clear(&konst_19193);\
bit_vector_clear(&konst_19194);\
bit_vector_clear(&konst_19195);\
bit_vector_clear(&konst_19196);\
_fpunit_exec_exec_fpadd64_op_( &(ONE_1),  &(ZERO_1),  &(type_cast_19189),  &(x_class),  &(unY),  &(y_n_class),  &(konst_19193),  &(konst_19194),  &(konst_19195),  &(konst_19196), &(denormalize_flag_add), &(extn_result_add));\
;

#define fpunit_exec_exec__fpsub32_wrap_call_stmt_19202_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_result_add), &(adds_result_fast));\
;

#define fpunit_exec_exec__fpsub32_wrap_call_stmt_19206_c_macro_ if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_add)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_result_add), &(adds_result_slow));\
}\
;

#define fpunit_exec_exec__fpsub32_wrap_assign_stmt_19213_c_macro_ __declare_static_bit_vector(MUX_19211,32);\
static float type_cast_19212;\
if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_add)){bit_vector_cast_to_bit_vector(0, &(MUX_19211), &(adds_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19211), &(adds_result_fast));\
}bit_vector_bitcast_to_float( &(type_cast_19212),  &(MUX_19211));\
RESULT = type_cast_19212;\
;

#define fpunit_exec_exec__fpsub32_wrap_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fpsub32_wrap_outer_arg_decl_macro__ float __X = X;\
float __Y = Y;\
;

#define fpunit_exec_exec__fpsub32_wrap_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fpsub32_wrap_new_inner_inarg_prep_macro__ static float X;\
X = (*__pX);\
static float Y;\
Y = (*__pY);\
static float RESULT;\
__declare_static_bit_vector(xpn,1);\
__declare_static_bit_vector(xnn,1);\
__declare_static_bit_vector(xpd,1);\
__declare_static_bit_vector(xnd,1);\
__declare_static_bit_vector(xqnan,1);\
__declare_static_bit_vector(xsnan,1);\
__declare_static_bit_vector(xpi,1);\
__declare_static_bit_vector(xni,1);\
__declare_static_bit_vector(xpz,1);\
__declare_static_bit_vector(xnz,1);\
__declare_static_bit_vector(x_class,10);\
__declare_static_bit_vector(ypn,1);\
__declare_static_bit_vector(ynn,1);\
__declare_static_bit_vector(ypd,1);\
__declare_static_bit_vector(ynd,1);\
__declare_static_bit_vector(yqnan,1);\
__declare_static_bit_vector(ysnan,1);\
__declare_static_bit_vector(ypi,1);\
__declare_static_bit_vector(yni,1);\
__declare_static_bit_vector(ypz,1);\
__declare_static_bit_vector(ynz,1);\
__declare_static_bit_vector(y_class,10);\
__declare_static_bit_vector(y_n_class,10);\
__declare_static_bit_vector(uY,32);\
__declare_static_bit_vector(unY,32);\
__declare_static_bit_vector(denormalize_flag_add,1);\
__declare_static_bit_vector(extn_result_add,81);\
__declare_static_bit_vector(adds_result_fast,32);\
__declare_static_bit_vector(adds_result_slow,32);\

#define fpunit_exec_exec__fpsub32_wrap_new_call_stmt_19230_c_macro_ _fpunit_exec_exec_classFp32_( &(X), &(xpn), &(xnn), &(xpd), &(xnd), &(xqnan), &(xsnan), &(xpi), &(xni), &(xpz), &(xnz));\
;

#define fpunit_exec_exec__fpsub32_wrap_new_assign_stmt_19251_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_19234,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19236,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19239,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19240,5);\
__declare_static_bit_vector(CONCAT_u1_u2_19243,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19245,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19248,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19249,5);\
__declare_static_bit_vector(CONCAT_u5_u10_19250,10);\
bit_vector_concatenate( &(xpn), &(xnn), &(CONCAT_u1_u2_19234));\
bit_vector_concatenate( &(CONCAT_u1_u2_19234), &(xpd), &(CONCAT_u2_u3_19236));\
bit_vector_concatenate( &(xnd), &(xqnan), &(CONCAT_u1_u2_19239));\
bit_vector_concatenate( &(CONCAT_u2_u3_19236), &(CONCAT_u1_u2_19239), &(CONCAT_u3_u5_19240));\
bit_vector_concatenate( &(xsnan), &(xpi), &(CONCAT_u1_u2_19243));\
bit_vector_concatenate( &(CONCAT_u1_u2_19243), &(xni), &(CONCAT_u2_u3_19245));\
bit_vector_concatenate( &(xpz), &(xnz), &(CONCAT_u1_u2_19248));\
bit_vector_concatenate( &(CONCAT_u2_u3_19245), &(CONCAT_u1_u2_19248), &(CONCAT_u3_u5_19249));\
bit_vector_concatenate( &(CONCAT_u3_u5_19240), &(CONCAT_u3_u5_19249), &(CONCAT_u5_u10_19250));\
bit_vector_cast_to_bit_vector(0, &(x_class), &(CONCAT_u5_u10_19250));\
;

#define fpunit_exec_exec__fpsub32_wrap_new_call_stmt_19263_c_macro_ _fpunit_exec_exec_classFp32_( &(Y), &(ypn), &(ynn), &(ypd), &(ynd), &(yqnan), &(ysnan), &(ypi), &(yni), &(ypz), &(ynz));\
;

#define fpunit_exec_exec__fpsub32_wrap_new_assign_stmt_19284_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_19267,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19269,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19272,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19273,5);\
__declare_static_bit_vector(CONCAT_u1_u2_19276,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19278,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19281,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19282,5);\
__declare_static_bit_vector(CONCAT_u5_u10_19283,10);\
bit_vector_concatenate( &(ypn), &(ynn), &(CONCAT_u1_u2_19267));\
bit_vector_concatenate( &(CONCAT_u1_u2_19267), &(ypd), &(CONCAT_u2_u3_19269));\
bit_vector_concatenate( &(ynd), &(yqnan), &(CONCAT_u1_u2_19272));\
bit_vector_concatenate( &(CONCAT_u2_u3_19269), &(CONCAT_u1_u2_19272), &(CONCAT_u3_u5_19273));\
bit_vector_concatenate( &(ysnan), &(ypi), &(CONCAT_u1_u2_19276));\
bit_vector_concatenate( &(CONCAT_u1_u2_19276), &(yni), &(CONCAT_u2_u3_19278));\
bit_vector_concatenate( &(ypz), &(ynz), &(CONCAT_u1_u2_19281));\
bit_vector_concatenate( &(CONCAT_u2_u3_19278), &(CONCAT_u1_u2_19281), &(CONCAT_u3_u5_19282));\
bit_vector_concatenate( &(CONCAT_u3_u5_19273), &(CONCAT_u3_u5_19282), &(CONCAT_u5_u10_19283));\
bit_vector_cast_to_bit_vector(0, &(y_class), &(CONCAT_u5_u10_19283));\
;

#define fpunit_exec_exec__fpsub32_wrap_new_call_stmt_19287_c_macro_ _fpunit_exec_exec_negate_classification_( &(y_class), &(y_n_class));\
;

#define fpunit_exec_exec__fpsub32_wrap_new_assign_stmt_19291_c_macro_ __declare_static_bit_vector(type_cast_19290,32);\
float_bitcast_to_bit_vector( &(type_cast_19290), &(Y));\
bit_vector_cast_to_bit_vector(0, &(uY), &(type_cast_19290));\
;

#define fpunit_exec_exec__fpsub32_wrap_new_assign_stmt_19300_c_macro_ __declare_static_bit_vector(konst_19294,32);\
bit_vector_clear(&konst_19294);\
konst_19294.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_19295,1);\
__declare_static_bit_vector(NOT_u1_u1_19296,1);\
__declare_static_bit_vector(slice_19298,31);\
__declare_static_bit_vector(CONCAT_u1_u32_19299,32);\
bit_vector_clear(&konst_19294);\
konst_19294.val.byte_array[0] = 31;\
bit_vector_bitsel( &(uY), &(konst_19294), &(BITSEL_u32_u1_19295));\
bit_vector_not( &(BITSEL_u32_u1_19295), &(NOT_u1_u1_19296));\
bit_vector_slice(&(uY), &(slice_19298), 0);\
bit_vector_concatenate( &(NOT_u1_u1_19296), &(slice_19298), &(CONCAT_u1_u32_19299));\
bit_vector_cast_to_bit_vector(0, &(unY), &(CONCAT_u1_u32_19299));\
;

#define fpunit_exec_exec__fpsub32_wrap_new_call_stmt_19308_c_macro_ __declare_static_bit_vector(type_cast_19302,32);\
float_bitcast_to_bit_vector( &(type_cast_19302), &(X));\
_fpunit_exec_exec_fpadd32_op_( &(type_cast_19302),  &(x_class),  &(unY),  &(y_n_class), &(denormalize_flag_add), &(extn_result_add));\
;

#define fpunit_exec_exec__fpsub32_wrap_new_call_stmt_19311_c_macro_ _fpunit_exec_exec_round_fp_32_( &(extn_result_add), &(adds_result_fast));\
;

#define fpunit_exec_exec__fpsub32_wrap_new_call_stmt_19315_c_macro_ if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_add)) {\
_fpunit_exec_exec_denormalize_fp_32_( &(extn_result_add), &(adds_result_slow));\
}\
;

#define fpunit_exec_exec__fpsub32_wrap_new_assign_stmt_19322_c_macro_ __declare_static_bit_vector(MUX_19320,32);\
static float type_cast_19321;\
if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_add)){bit_vector_cast_to_bit_vector(0, &(MUX_19320), &(adds_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19320), &(adds_result_fast));\
}bit_vector_bitcast_to_float( &(type_cast_19321),  &(MUX_19320));\
RESULT = type_cast_19321;\
;

#define fpunit_exec_exec__fpsub32_wrap_new_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fpsub32_wrap_new_outer_arg_decl_macro__ float __X = X;\
float __Y = Y;\
;

#define fpunit_exec_exec__fpsub32_wrap_new_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fpsub64_wrap_inner_inarg_prep_macro__ static double X;\
X = (*__pX);\
static double Y;\
Y = (*__pY);\
static double RESULT;\
__declare_static_bit_vector(xpn,1);\
__declare_static_bit_vector(xnn,1);\
__declare_static_bit_vector(xpd,1);\
__declare_static_bit_vector(xnd,1);\
__declare_static_bit_vector(xqnan,1);\
__declare_static_bit_vector(xsnan,1);\
__declare_static_bit_vector(xpi,1);\
__declare_static_bit_vector(xni,1);\
__declare_static_bit_vector(xpz,1);\
__declare_static_bit_vector(xnz,1);\
__declare_static_bit_vector(x_class,10);\
__declare_static_bit_vector(ypn,1);\
__declare_static_bit_vector(ynn,1);\
__declare_static_bit_vector(ypd,1);\
__declare_static_bit_vector(ynd,1);\
__declare_static_bit_vector(yqnan,1);\
__declare_static_bit_vector(ysnan,1);\
__declare_static_bit_vector(ypi,1);\
__declare_static_bit_vector(yni,1);\
__declare_static_bit_vector(ypz,1);\
__declare_static_bit_vector(ynz,1);\
__declare_static_bit_vector(y_class,10);\
__declare_static_bit_vector(y_n_class,10);\
__declare_static_bit_vector(uY,64);\
__declare_static_bit_vector(unY,64);\
__declare_static_bit_vector(denormalize_flag_add,1);\
__declare_static_bit_vector(extn_result_add,81);\
__declare_static_bit_vector(addd_result_fast,64);\
__declare_static_bit_vector(addd_result_slow,64);\

#define fpunit_exec_exec__fpsub64_wrap_call_stmt_19339_c_macro_ _fpunit_exec_exec_classFp64_( &(X), &(xpn), &(xnn), &(xpd), &(xnd), &(xqnan), &(xsnan), &(xpi), &(xni), &(xpz), &(xnz));\
;

#define fpunit_exec_exec__fpsub64_wrap_assign_stmt_19360_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_19343,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19345,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19348,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19349,5);\
__declare_static_bit_vector(CONCAT_u1_u2_19352,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19354,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19357,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19358,5);\
__declare_static_bit_vector(CONCAT_u5_u10_19359,10);\
bit_vector_concatenate( &(xpn), &(xnn), &(CONCAT_u1_u2_19343));\
bit_vector_concatenate( &(CONCAT_u1_u2_19343), &(xpd), &(CONCAT_u2_u3_19345));\
bit_vector_concatenate( &(xnd), &(xqnan), &(CONCAT_u1_u2_19348));\
bit_vector_concatenate( &(CONCAT_u2_u3_19345), &(CONCAT_u1_u2_19348), &(CONCAT_u3_u5_19349));\
bit_vector_concatenate( &(xsnan), &(xpi), &(CONCAT_u1_u2_19352));\
bit_vector_concatenate( &(CONCAT_u1_u2_19352), &(xni), &(CONCAT_u2_u3_19354));\
bit_vector_concatenate( &(xpz), &(xnz), &(CONCAT_u1_u2_19357));\
bit_vector_concatenate( &(CONCAT_u2_u3_19354), &(CONCAT_u1_u2_19357), &(CONCAT_u3_u5_19358));\
bit_vector_concatenate( &(CONCAT_u3_u5_19349), &(CONCAT_u3_u5_19358), &(CONCAT_u5_u10_19359));\
bit_vector_cast_to_bit_vector(0, &(x_class), &(CONCAT_u5_u10_19359));\
;

#define fpunit_exec_exec__fpsub64_wrap_call_stmt_19372_c_macro_ _fpunit_exec_exec_classFp64_( &(Y), &(ypn), &(ynn), &(ypd), &(ynd), &(yqnan), &(ysnan), &(ypi), &(yni), &(ypz), &(ynz));\
;

#define fpunit_exec_exec__fpsub64_wrap_assign_stmt_19393_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_19376,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19378,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19381,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19382,5);\
__declare_static_bit_vector(CONCAT_u1_u2_19385,2);\
__declare_static_bit_vector(CONCAT_u2_u3_19387,3);\
__declare_static_bit_vector(CONCAT_u1_u2_19390,2);\
__declare_static_bit_vector(CONCAT_u3_u5_19391,5);\
__declare_static_bit_vector(CONCAT_u5_u10_19392,10);\
bit_vector_concatenate( &(ypn), &(ynn), &(CONCAT_u1_u2_19376));\
bit_vector_concatenate( &(CONCAT_u1_u2_19376), &(ypd), &(CONCAT_u2_u3_19378));\
bit_vector_concatenate( &(ynd), &(yqnan), &(CONCAT_u1_u2_19381));\
bit_vector_concatenate( &(CONCAT_u2_u3_19378), &(CONCAT_u1_u2_19381), &(CONCAT_u3_u5_19382));\
bit_vector_concatenate( &(ysnan), &(ypi), &(CONCAT_u1_u2_19385));\
bit_vector_concatenate( &(CONCAT_u1_u2_19385), &(yni), &(CONCAT_u2_u3_19387));\
bit_vector_concatenate( &(ypz), &(ynz), &(CONCAT_u1_u2_19390));\
bit_vector_concatenate( &(CONCAT_u2_u3_19387), &(CONCAT_u1_u2_19390), &(CONCAT_u3_u5_19391));\
bit_vector_concatenate( &(CONCAT_u3_u5_19382), &(CONCAT_u3_u5_19391), &(CONCAT_u5_u10_19392));\
bit_vector_cast_to_bit_vector(0, &(y_class), &(CONCAT_u5_u10_19392));\
;

#define fpunit_exec_exec__fpsub64_wrap_call_stmt_19396_c_macro_ _fpunit_exec_exec_negate_classification_( &(y_class), &(y_n_class));\
;

#define fpunit_exec_exec__fpsub64_wrap_assign_stmt_19400_c_macro_ __declare_static_bit_vector(type_cast_19399,64);\
double_bitcast_to_bit_vector( &(type_cast_19399), &(Y));\
bit_vector_cast_to_bit_vector(0, &(uY), &(type_cast_19399));\
;

#define fpunit_exec_exec__fpsub64_wrap_assign_stmt_19409_c_macro_ __declare_static_bit_vector(konst_19403,64);\
bit_vector_clear(&konst_19403);\
konst_19403.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_19404,1);\
__declare_static_bit_vector(NOT_u1_u1_19405,1);\
__declare_static_bit_vector(slice_19407,63);\
__declare_static_bit_vector(CONCAT_u1_u64_19408,64);\
bit_vector_clear(&konst_19403);\
konst_19403.val.byte_array[0] = 63;\
bit_vector_bitsel( &(uY), &(konst_19403), &(BITSEL_u64_u1_19404));\
bit_vector_not( &(BITSEL_u64_u1_19404), &(NOT_u1_u1_19405));\
bit_vector_slice(&(uY), &(slice_19407), 0);\
bit_vector_concatenate( &(NOT_u1_u1_19405), &(slice_19407), &(CONCAT_u1_u64_19408));\
bit_vector_cast_to_bit_vector(0, &(unY), &(CONCAT_u1_u64_19408));\
;

#define fpunit_exec_exec__fpsub64_wrap_call_stmt_19423_c_macro_ __declare_static_bit_vector(konst_19412,32);\
bit_vector_clear(&konst_19412);\
__declare_static_bit_vector(konst_19413,10);\
bit_vector_clear(&konst_19413);\
__declare_static_bit_vector(konst_19414,32);\
bit_vector_clear(&konst_19414);\
__declare_static_bit_vector(konst_19415,10);\
bit_vector_clear(&konst_19415);\
__declare_static_bit_vector(type_cast_19417,64);\
bit_vector_clear(&konst_19412);\
bit_vector_clear(&konst_19413);\
bit_vector_clear(&konst_19414);\
bit_vector_clear(&konst_19415);\
double_bitcast_to_bit_vector( &(type_cast_19417), &(X));\
_fpunit_exec_exec_fpadd64_op_( &(ZERO_1),  &(ONE_1),  &(konst_19412),  &(konst_19413),  &(konst_19414),  &(konst_19415),  &(type_cast_19417),  &(x_class),  &(unY),  &(y_n_class), &(denormalize_flag_add), &(extn_result_add));\
;

#define fpunit_exec_exec__fpsub64_wrap_call_stmt_19426_c_macro_ _fpunit_exec_exec_round_fp_64_( &(extn_result_add), &(addd_result_fast));\
;

#define fpunit_exec_exec__fpsub64_wrap_call_stmt_19430_c_macro_ if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if (bit_vector_to_uint64(0, &denormalize_flag_add)) {\
_fpunit_exec_exec_denormalize_fp_64_( &(extn_result_add), &(addd_result_slow));\
}\
;

#define fpunit_exec_exec__fpsub64_wrap_assign_stmt_19437_c_macro_ __declare_static_bit_vector(MUX_19435,64);\
static double type_cast_19436;\
if (has_undefined_bit(&denormalize_flag_add)) {fprintf(stderr, "Error: variable denormalize_flag_add has undefined value (%s) at test point.\n", to_string(&denormalize_flag_add));assert(0);} \
if(bit_vector_to_uint64(0, &denormalize_flag_add)){bit_vector_cast_to_bit_vector(0, &(MUX_19435), &(addd_result_slow));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19435), &(addd_result_fast));\
}bit_vector_bitcast_to_double( &(type_cast_19436),  &(MUX_19435));\
RESULT = type_cast_19436;\
;

#define fpunit_exec_exec__fpsub64_wrap_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fpsub64_wrap_outer_arg_decl_macro__ double __X = X;\
double __Y = Y;\
;

#define fpunit_exec_exec__fpsub64_wrap_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fpu_increment_64_inner_inarg_prep_macro__ __declare_static_bit_vector(A,64);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(SUM,64);\
__declare_static_bit_vector(A0,16);\
__declare_static_bit_vector(A1,16);\
__declare_static_bit_vector(A2,16);\
__declare_static_bit_vector(A3,16);\
__declare_static_bit_vector(CIN1_S0,16);\
__declare_static_bit_vector(CIN1_C0,1);\
__declare_static_bit_vector(CIN1_S1,16);\
__declare_static_bit_vector(CIN1_C1,1);\
__declare_static_bit_vector(CIN1_S2,16);\
__declare_static_bit_vector(CIN1_C2,1);\
__declare_static_bit_vector(CIN1_S3,16);\
__declare_static_bit_vector(CIN1_C3,1);\
__declare_static_bit_vector(P0,1);\
__declare_static_bit_vector(P1,1);\
__declare_static_bit_vector(P2,1);\
__declare_static_bit_vector(sum_0,16);\
__declare_static_bit_vector(carry_0,1);\
__declare_static_bit_vector(sum_1,16);\
__declare_static_bit_vector(carry_1,1);\
__declare_static_bit_vector(sum_2,16);\
__declare_static_bit_vector(carry_2,1);\
__declare_static_bit_vector(sum_3,16);\

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19445_c_macro_ __declare_static_bit_vector(slice_19444,16);\
bit_vector_slice(&(A), &(slice_19444), 0);\
bit_vector_cast_to_bit_vector(0, &(A0), &(slice_19444));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19449_c_macro_ __declare_static_bit_vector(slice_19448,16);\
bit_vector_slice(&(A), &(slice_19448), 16);\
bit_vector_cast_to_bit_vector(0, &(A1), &(slice_19448));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19453_c_macro_ __declare_static_bit_vector(slice_19452,16);\
bit_vector_slice(&(A), &(slice_19452), 32);\
bit_vector_cast_to_bit_vector(0, &(A2), &(slice_19452));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19457_c_macro_ __declare_static_bit_vector(slice_19456,16);\
bit_vector_slice(&(A), &(slice_19456), 48);\
bit_vector_cast_to_bit_vector(0, &(A3), &(slice_19456));\
;

#define fpunit_exec_exec__fpu_increment_64_call_stmt_19463_c_macro_ __declare_static_bit_vector(konst_19459,16);\
bit_vector_clear(&konst_19459);\
bit_vector_clear(&konst_19459);\
_fpunit_exec_exec_adder_18_( &(A0),  &(konst_19459),  &(ONE_1), &(CIN1_S0), &(CIN1_C0));\
;

#define fpunit_exec_exec__fpu_increment_64_call_stmt_19469_c_macro_ __declare_static_bit_vector(konst_19465,16);\
bit_vector_clear(&konst_19465);\
bit_vector_clear(&konst_19465);\
_fpunit_exec_exec_adder_18_( &(A1),  &(konst_19465),  &(ONE_1), &(CIN1_S1), &(CIN1_C1));\
;

#define fpunit_exec_exec__fpu_increment_64_call_stmt_19475_c_macro_ __declare_static_bit_vector(konst_19471,16);\
bit_vector_clear(&konst_19471);\
bit_vector_clear(&konst_19471);\
_fpunit_exec_exec_adder_18_( &(A2),  &(konst_19471),  &(ONE_1), &(CIN1_S2), &(CIN1_C2));\
;

#define fpunit_exec_exec__fpu_increment_64_call_stmt_19481_c_macro_ __declare_static_bit_vector(konst_19477,16);\
bit_vector_clear(&konst_19477);\
bit_vector_clear(&konst_19477);\
_fpunit_exec_exec_adder_18_( &(A3),  &(konst_19477),  &(ONE_1), &(CIN1_S3), &(CIN1_C3));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19487_c_macro_ __declare_static_bit_vector(konst_19484,16);\
bit_vector_clear(&konst_19484);\
__declare_static_bit_vector(NOT_u16_u16_19485,16);\
bit_vector_clear(&NOT_u16_u16_19485);\
NOT_u16_u16_19485.val.byte_array[0] = 255;\
NOT_u16_u16_19485.val.byte_array[1] = 255;\
__declare_static_bit_vector(EQ_u16_u1_19486,1);\
bit_vector_clear(&konst_19484);\
bit_vector_not( &(konst_19484), &(NOT_u16_u16_19485));\
bit_vector_equal(0, &(A0), &(NOT_u16_u16_19485), &(EQ_u16_u1_19486));\
bit_vector_cast_to_bit_vector(0, &(P0), &(EQ_u16_u1_19486));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19493_c_macro_ __declare_static_bit_vector(konst_19490,16);\
bit_vector_clear(&konst_19490);\
__declare_static_bit_vector(NOT_u16_u16_19491,16);\
bit_vector_clear(&NOT_u16_u16_19491);\
NOT_u16_u16_19491.val.byte_array[0] = 255;\
NOT_u16_u16_19491.val.byte_array[1] = 255;\
__declare_static_bit_vector(EQ_u16_u1_19492,1);\
bit_vector_clear(&konst_19490);\
bit_vector_not( &(konst_19490), &(NOT_u16_u16_19491));\
bit_vector_equal(0, &(A1), &(NOT_u16_u16_19491), &(EQ_u16_u1_19492));\
bit_vector_cast_to_bit_vector(0, &(P1), &(EQ_u16_u1_19492));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19499_c_macro_ __declare_static_bit_vector(konst_19496,16);\
bit_vector_clear(&konst_19496);\
__declare_static_bit_vector(NOT_u16_u16_19497,16);\
bit_vector_clear(&NOT_u16_u16_19497);\
NOT_u16_u16_19497.val.byte_array[0] = 255;\
NOT_u16_u16_19497.val.byte_array[1] = 255;\
__declare_static_bit_vector(EQ_u16_u1_19498,1);\
bit_vector_clear(&konst_19496);\
bit_vector_not( &(konst_19496), &(NOT_u16_u16_19497));\
bit_vector_equal(0, &(A2), &(NOT_u16_u16_19497), &(EQ_u16_u1_19498));\
bit_vector_cast_to_bit_vector(0, &(P2), &(EQ_u16_u1_19498));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19502_c_macro_ bit_vector_cast_to_bit_vector(0, &(sum_0), &(CIN1_S0));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19505_c_macro_ bit_vector_cast_to_bit_vector(0, &(carry_0), &(P0));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19511_c_macro_ __declare_static_bit_vector(MUX_19510,16);\
if (has_undefined_bit(&P0)) {fprintf(stderr, "Error: variable P0 has undefined value (%s) at test point.\n", to_string(&P0));assert(0);} \
if(bit_vector_to_uint64(0, &P0)){bit_vector_cast_to_bit_vector(0, &(MUX_19510), &(CIN1_S1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19510), &(A1));\
}bit_vector_cast_to_bit_vector(0, &(sum_1), &(MUX_19510));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19516_c_macro_ __declare_static_bit_vector(AND_u1_u1_19515,1);\
bit_vector_and(&(P1), &(carry_0), &(AND_u1_u1_19515));\
bit_vector_cast_to_bit_vector(0, &(carry_1), &(AND_u1_u1_19515));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19522_c_macro_ __declare_static_bit_vector(MUX_19521,16);\
if (has_undefined_bit(&carry_1)) {fprintf(stderr, "Error: variable carry_1 has undefined value (%s) at test point.\n", to_string(&carry_1));assert(0);} \
if(bit_vector_to_uint64(0, &carry_1)){bit_vector_cast_to_bit_vector(0, &(MUX_19521), &(CIN1_S2));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19521), &(A2));\
}bit_vector_cast_to_bit_vector(0, &(sum_2), &(MUX_19521));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19529_c_macro_ __declare_static_bit_vector(AND_u1_u1_19526,1);\
__declare_static_bit_vector(AND_u1_u1_19528,1);\
bit_vector_and(&(P0), &(P1), &(AND_u1_u1_19526));\
bit_vector_and(&(AND_u1_u1_19526), &(P2), &(AND_u1_u1_19528));\
bit_vector_cast_to_bit_vector(0, &(carry_2), &(AND_u1_u1_19528));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19535_c_macro_ __declare_static_bit_vector(MUX_19534,16);\
if (has_undefined_bit(&carry_2)) {fprintf(stderr, "Error: variable carry_2 has undefined value (%s) at test point.\n", to_string(&carry_2));assert(0);} \
if(bit_vector_to_uint64(0, &carry_2)){bit_vector_cast_to_bit_vector(0, &(MUX_19534), &(CIN1_S3));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19534), &(A3));\
}bit_vector_cast_to_bit_vector(0, &(sum_3), &(MUX_19534));\
;

#define fpunit_exec_exec__fpu_increment_64_assign_stmt_19544_c_macro_ __declare_static_bit_vector(CONCAT_u16_u32_19539,32);\
__declare_static_bit_vector(CONCAT_u16_u32_19542,32);\
__declare_static_bit_vector(CONCAT_u32_u64_19543,64);\
bit_vector_concatenate( &(sum_3), &(sum_2), &(CONCAT_u16_u32_19539));\
bit_vector_concatenate( &(sum_1), &(sum_0), &(CONCAT_u16_u32_19542));\
bit_vector_concatenate( &(CONCAT_u16_u32_19539), &(CONCAT_u16_u32_19542), &(CONCAT_u32_u64_19543));\
bit_vector_cast_to_bit_vector(0, &(SUM), &(CONCAT_u32_u64_19543));\
;

#define fpunit_exec_exec__fpu_increment_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pSUM)), &(SUM));\
;

#define fpunit_exec_exec__fpu_increment_64_outer_arg_decl_macro__ __declare_static_bit_vector(__A, 64);\
bit_vector_assign_uint64(0, &__A, A);\
__declare_static_bit_vector(__SUM, 64);\
;

#define fpunit_exec_exec__fpu_increment_64_outer_op_xfer_macro__  *SUM =  bit_vector_to_uint64(0, &__SUM);\
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_inner_inarg_prep_macro__
#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_branch_block_stmt_19547_c_export_decl_macro_ __declare_static_bit_vector(u,96);\
__declare_static_bit_vector(fast_valid,1);\
__declare_static_bit_vector(v,96);\
__declare_static_bit_vector(u_19596_delayed_1_0,96);\
__declare_static_bit_vector(fast_valid_19595_delayed_1_0,1);\
__declare_static_bit_vector(to_wb,96);\


#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_merge_stmt_19549_c_preamble_macro_ uint8_t merge_stmt_19549_entry_flag;\
merge_stmt_19549_entry_flag = do_while_entry_flag;\
goto merge_stmt_19549_run;\
merge_stmt_19549_run: ;\
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_merge_stmt_19549_c_postamble_macro_ merge_stmt_19549_entry_flag = 0;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_assign_stmt_19552_c_macro_ __declare_static_bit_vector(RPIPE_fpunit_exec_to_writeback_fast_19551,96);\
read_bit_vector_from_pipe("fpunit_exec_to_writeback_fast",&(RPIPE_fpunit_exec_to_writeback_fast_19551));\
bit_vector_cast_to_bit_vector(0, &(u), &(RPIPE_fpunit_exec_to_writeback_fast_19551));\
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_assign_stmt_19557_c_macro_ __declare_static_bit_vector(konst_19555,96);\
bit_vector_clear(&konst_19555);\
konst_19555.val.byte_array[0] = 95;\
__declare_static_bit_vector(BITSEL_u96_u1_19556,1);\
bit_vector_clear(&konst_19555);\
konst_19555.val.byte_array[0] = 95;\
bit_vector_bitsel( &(u), &(konst_19555), &(BITSEL_u96_u1_19556));\
bit_vector_cast_to_bit_vector(0, &(fast_valid), &(BITSEL_u96_u1_19556));\
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_assign_stmt_19561_c_macro_ if (has_undefined_bit(&fast_valid)) {fprintf(stderr, "Error: variable fast_valid has undefined value (%s) at test point.\n", to_string(&fast_valid));assert(0);} \
__declare_static_bit_vector(RPIPE_fpunit_exec_to_writeback_slow_19560,96);\
if (!bit_vector_to_uint64(0, &fast_valid)) {\
read_bit_vector_from_pipe("fpunit_exec_to_writeback_slow",&(RPIPE_fpunit_exec_to_writeback_slow_19560));\
bit_vector_cast_to_bit_vector(0, &(v), &(RPIPE_fpunit_exec_to_writeback_slow_19560));\
}
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_assign_stmt_19564_c_macro_ bit_vector_cast_to_bit_vector(0, &(u_19596_delayed_1_0), &(u));\
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_assign_stmt_19567_c_macro_ bit_vector_cast_to_bit_vector(0, &(fast_valid_19595_delayed_1_0), &(fast_valid));\
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_assign_stmt_19573_c_macro_ __declare_static_bit_vector(MUX_19572,96);\
if (has_undefined_bit(&fast_valid_19595_delayed_1_0)) {fprintf(stderr, "Error: variable fast_valid_19595_delayed_1_0 has undefined value (%s) at test point.\n", to_string(&fast_valid_19595_delayed_1_0));assert(0);} \
if(bit_vector_to_uint64(0, &fast_valid_19595_delayed_1_0)){bit_vector_cast_to_bit_vector(0, &(MUX_19572), &(u_19596_delayed_1_0));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19572), &(v));\
}bit_vector_cast_to_bit_vector(0, &(to_wb), &(MUX_19572));\
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_assign_stmt_19576_c_macro_ write_bit_vector_to_pipe("fpunit_exec_to_writeback",&(to_wb));\
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_stmt_19577_c_macro_ usleep (100);\
;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_branch_block_stmt_19547_c_export_apply_macro_ ;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_inner_outarg_prep_macro__ ;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_outer_arg_decl_macro__ ;

#define fpunit_exec_exec__fpunit_exec_pipe_merge_daemon_outer_op_xfer_macro__ ;

#define fpunit_exec_exec__fstod_wrap_inner_inarg_prep_macro__ static float X;\
X = (*__pX);\
static double RESULT;\
static double r;\

#define fpunit_exec_exec__fstod_wrap_call_stmt_19587_c_macro_ _fpunit_exec_exec_SingleToDouble_( &(X), &(r));\
;

#define fpunit_exec_exec__fstod_wrap_assign_stmt_19590_c_macro_ RESULT = r;\
;

#define fpunit_exec_exec__fstod_wrap_inner_outarg_prep_macro__ (*__pRESULT) = RESULT;\
;

#define fpunit_exec_exec__fstod_wrap_outer_arg_decl_macro__ float __X = X;\
;

#define fpunit_exec_exec__fstod_wrap_outer_op_xfer_macro__  *RESULT = __RESULT;\
;

#define fpunit_exec_exec__fstoi_wrap_inner_inarg_prep_macro__ static float X;\
X = (*__pX);\
__declare_static_bit_vector(Y,32);\
static double Xd;\

#define fpunit_exec_exec__fstoi_wrap_call_stmt_19597_c_macro_ _fpunit_exec_exec_SingleToDouble_( &(X), &(Xd));\
;

#define fpunit_exec_exec__fstoi_wrap_call_stmt_19600_c_macro_ _fpunit_exec_exec_fdtoi_op_( &(Xd), &(Y));\
;

#define fpunit_exec_exec__fstoi_wrap_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(1, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__fstoi_wrap_outer_arg_decl_macro__ float __X = X;\
__declare_static_bit_vector(__Y, 32);\
;

#define fpunit_exec_exec__fstoi_wrap_outer_op_xfer_macro__  *Y =  bit_vector_to_uint64(1, &__Y);\
;

#define fpunit_exec_exec__fsub16_wrap_inner_inarg_prep_macro__ __declare_static_bit_vector(f1,16);\
bit_vector_cast_to_bit_vector(0, &(f1), &((*__pf1)));\
__declare_static_bit_vector(f2,16);\
bit_vector_cast_to_bit_vector(0, &(f2), &((*__pf2)));\
__declare_static_bit_vector(result,16);\

#define fpunit_exec_exec__fsub16_wrap_call_stmt_19610_c_macro_ _fpunit_exec_exec_faddsub16_( &(f1),  &(f2),  &(ONE_1), &(result));\
;

#define fpunit_exec_exec__fsub16_wrap_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__fsub16_wrap_outer_arg_decl_macro__ __declare_static_bit_vector(__f1, 16);\
bit_vector_assign_uint64(0, &__f1, f1);\
__declare_static_bit_vector(__f2, 16);\
bit_vector_assign_uint64(0, &__f2, f2);\
__declare_static_bit_vector(__result, 16);\
;

#define fpunit_exec_exec__fsub16_wrap_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_inner_inarg_prep_macro__ __declare_static_bit_vector(thread_id,4);\
bit_vector_cast_to_bit_vector(0, &(thread_id), &((*__pthread_id)));\
__declare_static_bit_vector(stream_id,2);\
bit_vector_cast_to_bit_vector(0, &(stream_id), &((*__pstream_id)));\
__declare_static_bit_vector(slot_id,6);\
bit_vector_cast_to_bit_vector(0, &(slot_id), &((*__pslot_id)));\
__declare_static_bit_vector(fpadds,1);\
bit_vector_cast_to_bit_vector(0, &(fpadds), &((*__pfpadds)));\
__declare_static_bit_vector(fpsubs,1);\
bit_vector_cast_to_bit_vector(0, &(fpsubs), &((*__pfpsubs)));\
__declare_static_bit_vector(fpmuls,1);\
bit_vector_cast_to_bit_vector(0, &(fpmuls), &((*__pfpmuls)));\
__declare_static_bit_vector(fpdivs,1);\
bit_vector_cast_to_bit_vector(0, &(fpdivs), &((*__pfpdivs)));\
__declare_static_bit_vector(fpcmps,1);\
bit_vector_cast_to_bit_vector(0, &(fpcmps), &((*__pfpcmps)));\
__declare_static_bit_vector(fpcmpes,1);\
bit_vector_cast_to_bit_vector(0, &(fpcmpes), &((*__pfpcmpes)));\
__declare_static_bit_vector(fpsqrts,1);\
bit_vector_cast_to_bit_vector(0, &(fpsqrts), &((*__pfpsqrts)));\
__declare_static_bit_vector(fstoi,1);\
bit_vector_cast_to_bit_vector(0, &(fstoi), &((*__pfstoi)));\
__declare_static_bit_vector(fitos,1);\
bit_vector_cast_to_bit_vector(0, &(fitos), &((*__pfitos)));\
__declare_static_bit_vector(fstod,1);\
bit_vector_cast_to_bit_vector(0, &(fstod), &((*__pfstod)));\
static float f1_s;\
f1_s = (*__pf1_s);\
static float f2_s;\
f2_s = (*__pf2_s);\
__declare_static_bit_vector(fpaddd,1);\
bit_vector_cast_to_bit_vector(0, &(fpaddd), &((*__pfpaddd)));\
__declare_static_bit_vector(fpsubd,1);\
bit_vector_cast_to_bit_vector(0, &(fpsubd), &((*__pfpsubd)));\
__declare_static_bit_vector(fpmuld,1);\
bit_vector_cast_to_bit_vector(0, &(fpmuld), &((*__pfpmuld)));\
__declare_static_bit_vector(fpdivd,1);\
bit_vector_cast_to_bit_vector(0, &(fpdivd), &((*__pfpdivd)));\
__declare_static_bit_vector(fpcmpd,1);\
bit_vector_cast_to_bit_vector(0, &(fpcmpd), &((*__pfpcmpd)));\
__declare_static_bit_vector(fpcmped,1);\
bit_vector_cast_to_bit_vector(0, &(fpcmped), &((*__pfpcmped)));\
__declare_static_bit_vector(fpsqrtd,1);\
bit_vector_cast_to_bit_vector(0, &(fpsqrtd), &((*__pfpsqrtd)));\
__declare_static_bit_vector(fdtoi,1);\
bit_vector_cast_to_bit_vector(0, &(fdtoi), &((*__pfdtoi)));\
__declare_static_bit_vector(fdtos,1);\
bit_vector_cast_to_bit_vector(0, &(fdtos), &((*__pfdtos)));\
static double f1_d;\
f1_d = (*__pf1_d);\
static double f2_d;\
f2_d = (*__pf2_d);\
__declare_static_bit_vector(nvc,1);\
__declare_static_bit_vector(ofc,1);\
__declare_static_bit_vector(ufc,1);\
__declare_static_bit_vector(dzc,1);\
__declare_static_bit_vector(nxc,1);\
__declare_static_bit_vector(f1_s_classification,10);\
__declare_static_bit_vector(f2_s_classification,10);\
__declare_static_bit_vector(f1_d_classification,10);\
__declare_static_bit_vector(f2_d_classification,10);\
__declare_static_bit_vector(f1_s_pos_normal,1);\
__declare_static_bit_vector(f1_s_neg_normal,1);\
__declare_static_bit_vector(f1_s_pos_denormal,1);\
__declare_static_bit_vector(f1_s_neg_denormal,1);\
__declare_static_bit_vector(f1_s_qnan,1);\
__declare_static_bit_vector(f1_s_snan,1);\
__declare_static_bit_vector(f1_s_pos_inf,1);\
__declare_static_bit_vector(f1_s_neg_inf,1);\
__declare_static_bit_vector(f1_s_pos_zero,1);\
__declare_static_bit_vector(f1_s_neg_zero,1);\
__declare_static_bit_vector(f2_s_pos_normal,1);\
__declare_static_bit_vector(f2_s_neg_normal,1);\
__declare_static_bit_vector(f2_s_pos_denormal,1);\
__declare_static_bit_vector(f2_s_neg_denormal,1);\
__declare_static_bit_vector(f2_s_qnan,1);\
__declare_static_bit_vector(f2_s_snan,1);\
__declare_static_bit_vector(f2_s_pos_inf,1);\
__declare_static_bit_vector(f2_s_neg_inf,1);\
__declare_static_bit_vector(f2_s_pos_zero,1);\
__declare_static_bit_vector(f2_s_neg_zero,1);\
__declare_static_bit_vector(f1_d_pos_normal,1);\
__declare_static_bit_vector(f1_d_neg_normal,1);\
__declare_static_bit_vector(f1_d_pos_denormal,1);\
__declare_static_bit_vector(f1_d_neg_denormal,1);\
__declare_static_bit_vector(f1_d_qnan,1);\
__declare_static_bit_vector(f1_d_snan,1);\
__declare_static_bit_vector(f1_d_pos_inf,1);\
__declare_static_bit_vector(f1_d_neg_inf,1);\
__declare_static_bit_vector(f1_d_pos_zero,1);\
__declare_static_bit_vector(f1_d_neg_zero,1);\
__declare_static_bit_vector(f2_d_pos_normal,1);\
__declare_static_bit_vector(f2_d_neg_normal,1);\
__declare_static_bit_vector(f2_d_pos_denormal,1);\
__declare_static_bit_vector(f2_d_neg_denormal,1);\
__declare_static_bit_vector(f2_d_qnan,1);\
__declare_static_bit_vector(f2_d_snan,1);\
__declare_static_bit_vector(f2_d_pos_inf,1);\
__declare_static_bit_vector(f2_d_neg_inf,1);\
__declare_static_bit_vector(f2_d_pos_zero,1);\
__declare_static_bit_vector(f2_d_neg_zero,1);\
__declare_static_bit_vector(single_precision,1);\
__declare_static_bit_vector(double_precision,1);\
__declare_static_bit_vector(snan_nv,1);\
__declare_static_bit_vector(add_sub_nv,1);\
__declare_static_bit_vector(mul_nv,1);\
__declare_static_bit_vector(div_nv,1);\
__declare_static_bit_vector(sqrt_nv,1);\
__declare_static_bit_vector(conv_nv,1);\
__declare_static_bit_vector(fcmp_nv,1);\

#define fpunit_exec_exec__generate_pre_compute_exceptions_call_stmt_8307_c_macro_ _fpunit_exec_exec_classFp32_( &(f1_s), &(f1_s_pos_normal), &(f1_s_neg_normal), &(f1_s_pos_denormal), &(f1_s_neg_denormal), &(f1_s_qnan), &(f1_s_snan), &(f1_s_pos_inf), &(f1_s_neg_inf), &(f1_s_pos_zero), &(f1_s_neg_zero));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8328_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_8311,2);\
__declare_static_bit_vector(CONCAT_u2_u3_8313,3);\
__declare_static_bit_vector(CONCAT_u1_u2_8316,2);\
__declare_static_bit_vector(CONCAT_u3_u5_8317,5);\
__declare_static_bit_vector(CONCAT_u1_u2_8320,2);\
__declare_static_bit_vector(CONCAT_u2_u3_8322,3);\
__declare_static_bit_vector(CONCAT_u1_u2_8325,2);\
__declare_static_bit_vector(CONCAT_u3_u5_8326,5);\
__declare_static_bit_vector(CONCAT_u5_u10_8327,10);\
bit_vector_concatenate( &(f1_s_pos_normal), &(f1_s_neg_normal), &(CONCAT_u1_u2_8311));\
bit_vector_concatenate( &(CONCAT_u1_u2_8311), &(f1_s_pos_denormal), &(CONCAT_u2_u3_8313));\
bit_vector_concatenate( &(f1_s_neg_denormal), &(f1_s_qnan), &(CONCAT_u1_u2_8316));\
bit_vector_concatenate( &(CONCAT_u2_u3_8313), &(CONCAT_u1_u2_8316), &(CONCAT_u3_u5_8317));\
bit_vector_concatenate( &(f1_s_snan), &(f1_s_pos_inf), &(CONCAT_u1_u2_8320));\
bit_vector_concatenate( &(CONCAT_u1_u2_8320), &(f1_s_neg_inf), &(CONCAT_u2_u3_8322));\
bit_vector_concatenate( &(f1_s_pos_zero), &(f1_s_neg_zero), &(CONCAT_u1_u2_8325));\
bit_vector_concatenate( &(CONCAT_u2_u3_8322), &(CONCAT_u1_u2_8325), &(CONCAT_u3_u5_8326));\
bit_vector_concatenate( &(CONCAT_u3_u5_8317), &(CONCAT_u3_u5_8326), &(CONCAT_u5_u10_8327));\
bit_vector_cast_to_bit_vector(0, &(f1_s_classification), &(CONCAT_u5_u10_8327));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_call_stmt_8340_c_macro_ _fpunit_exec_exec_classFp32_( &(f2_s), &(f2_s_pos_normal), &(f2_s_neg_normal), &(f2_s_pos_denormal), &(f2_s_neg_denormal), &(f2_s_qnan), &(f2_s_snan), &(f2_s_pos_inf), &(f2_s_neg_inf), &(f2_s_pos_zero), &(f2_s_neg_zero));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8361_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_8344,2);\
__declare_static_bit_vector(CONCAT_u2_u3_8346,3);\
__declare_static_bit_vector(CONCAT_u1_u2_8349,2);\
__declare_static_bit_vector(CONCAT_u3_u5_8350,5);\
__declare_static_bit_vector(CONCAT_u1_u2_8353,2);\
__declare_static_bit_vector(CONCAT_u2_u3_8355,3);\
__declare_static_bit_vector(CONCAT_u1_u2_8358,2);\
__declare_static_bit_vector(CONCAT_u3_u5_8359,5);\
__declare_static_bit_vector(CONCAT_u5_u10_8360,10);\
bit_vector_concatenate( &(f2_s_pos_normal), &(f2_s_neg_normal), &(CONCAT_u1_u2_8344));\
bit_vector_concatenate( &(CONCAT_u1_u2_8344), &(f2_s_pos_denormal), &(CONCAT_u2_u3_8346));\
bit_vector_concatenate( &(f2_s_neg_denormal), &(f2_s_qnan), &(CONCAT_u1_u2_8349));\
bit_vector_concatenate( &(CONCAT_u2_u3_8346), &(CONCAT_u1_u2_8349), &(CONCAT_u3_u5_8350));\
bit_vector_concatenate( &(f2_s_snan), &(f2_s_pos_inf), &(CONCAT_u1_u2_8353));\
bit_vector_concatenate( &(CONCAT_u1_u2_8353), &(f2_s_neg_inf), &(CONCAT_u2_u3_8355));\
bit_vector_concatenate( &(f2_s_pos_zero), &(f2_s_neg_zero), &(CONCAT_u1_u2_8358));\
bit_vector_concatenate( &(CONCAT_u2_u3_8355), &(CONCAT_u1_u2_8358), &(CONCAT_u3_u5_8359));\
bit_vector_concatenate( &(CONCAT_u3_u5_8350), &(CONCAT_u3_u5_8359), &(CONCAT_u5_u10_8360));\
bit_vector_cast_to_bit_vector(0, &(f2_s_classification), &(CONCAT_u5_u10_8360));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_call_stmt_8373_c_macro_ _fpunit_exec_exec_classFp64_( &(f1_d), &(f1_d_pos_normal), &(f1_d_neg_normal), &(f1_d_pos_denormal), &(f1_d_neg_denormal), &(f1_d_qnan), &(f1_d_snan), &(f1_d_pos_inf), &(f1_d_neg_inf), &(f1_d_pos_zero), &(f1_d_neg_zero));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8394_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_8377,2);\
__declare_static_bit_vector(CONCAT_u2_u3_8379,3);\
__declare_static_bit_vector(CONCAT_u1_u2_8382,2);\
__declare_static_bit_vector(CONCAT_u3_u5_8383,5);\
__declare_static_bit_vector(CONCAT_u1_u2_8386,2);\
__declare_static_bit_vector(CONCAT_u2_u3_8388,3);\
__declare_static_bit_vector(CONCAT_u1_u2_8391,2);\
__declare_static_bit_vector(CONCAT_u3_u5_8392,5);\
__declare_static_bit_vector(CONCAT_u5_u10_8393,10);\
bit_vector_concatenate( &(f1_d_pos_normal), &(f1_d_neg_normal), &(CONCAT_u1_u2_8377));\
bit_vector_concatenate( &(CONCAT_u1_u2_8377), &(f1_d_pos_denormal), &(CONCAT_u2_u3_8379));\
bit_vector_concatenate( &(f1_d_neg_denormal), &(f1_d_qnan), &(CONCAT_u1_u2_8382));\
bit_vector_concatenate( &(CONCAT_u2_u3_8379), &(CONCAT_u1_u2_8382), &(CONCAT_u3_u5_8383));\
bit_vector_concatenate( &(f1_d_snan), &(f1_d_pos_inf), &(CONCAT_u1_u2_8386));\
bit_vector_concatenate( &(CONCAT_u1_u2_8386), &(f1_d_neg_inf), &(CONCAT_u2_u3_8388));\
bit_vector_concatenate( &(f1_d_pos_zero), &(f1_d_neg_zero), &(CONCAT_u1_u2_8391));\
bit_vector_concatenate( &(CONCAT_u2_u3_8388), &(CONCAT_u1_u2_8391), &(CONCAT_u3_u5_8392));\
bit_vector_concatenate( &(CONCAT_u3_u5_8383), &(CONCAT_u3_u5_8392), &(CONCAT_u5_u10_8393));\
bit_vector_cast_to_bit_vector(0, &(f1_d_classification), &(CONCAT_u5_u10_8393));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_call_stmt_8406_c_macro_ _fpunit_exec_exec_classFp64_( &(f2_d), &(f2_d_pos_normal), &(f2_d_neg_normal), &(f2_d_pos_denormal), &(f2_d_neg_denormal), &(f2_d_qnan), &(f2_d_snan), &(f2_d_pos_inf), &(f2_d_neg_inf), &(f2_d_pos_zero), &(f2_d_neg_zero));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8427_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_8410,2);\
__declare_static_bit_vector(CONCAT_u2_u3_8412,3);\
__declare_static_bit_vector(CONCAT_u1_u2_8415,2);\
__declare_static_bit_vector(CONCAT_u3_u5_8416,5);\
__declare_static_bit_vector(CONCAT_u1_u2_8419,2);\
__declare_static_bit_vector(CONCAT_u2_u3_8421,3);\
__declare_static_bit_vector(CONCAT_u1_u2_8424,2);\
__declare_static_bit_vector(CONCAT_u3_u5_8425,5);\
__declare_static_bit_vector(CONCAT_u5_u10_8426,10);\
bit_vector_concatenate( &(f2_d_pos_normal), &(f2_d_neg_normal), &(CONCAT_u1_u2_8410));\
bit_vector_concatenate( &(CONCAT_u1_u2_8410), &(f2_d_pos_denormal), &(CONCAT_u2_u3_8412));\
bit_vector_concatenate( &(f2_d_neg_denormal), &(f2_d_qnan), &(CONCAT_u1_u2_8415));\
bit_vector_concatenate( &(CONCAT_u2_u3_8412), &(CONCAT_u1_u2_8415), &(CONCAT_u3_u5_8416));\
bit_vector_concatenate( &(f2_d_snan), &(f2_d_pos_inf), &(CONCAT_u1_u2_8419));\
bit_vector_concatenate( &(CONCAT_u1_u2_8419), &(f2_d_neg_inf), &(CONCAT_u2_u3_8421));\
bit_vector_concatenate( &(f2_d_pos_zero), &(f2_d_neg_zero), &(CONCAT_u1_u2_8424));\
bit_vector_concatenate( &(CONCAT_u2_u3_8421), &(CONCAT_u1_u2_8424), &(CONCAT_u3_u5_8425));\
bit_vector_concatenate( &(CONCAT_u3_u5_8416), &(CONCAT_u3_u5_8425), &(CONCAT_u5_u10_8426));\
bit_vector_cast_to_bit_vector(0, &(f2_d_classification), &(CONCAT_u5_u10_8426));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8446_c_macro_ __declare_static_bit_vector(OR_u1_u1_8431,1);\
__declare_static_bit_vector(OR_u1_u1_8433,1);\
__declare_static_bit_vector(OR_u1_u1_8436,1);\
__declare_static_bit_vector(OR_u1_u1_8437,1);\
__declare_static_bit_vector(OR_u1_u1_8440,1);\
__declare_static_bit_vector(OR_u1_u1_8443,1);\
__declare_static_bit_vector(OR_u1_u1_8444,1);\
__declare_static_bit_vector(OR_u1_u1_8445,1);\
bit_vector_or(&(fpadds), &(fpsubs), &(OR_u1_u1_8431));\
bit_vector_or(&(OR_u1_u1_8431), &(fpmuls), &(OR_u1_u1_8433));\
bit_vector_or(&(fpdivs), &(fpcmps), &(OR_u1_u1_8436));\
bit_vector_or(&(OR_u1_u1_8433), &(OR_u1_u1_8436), &(OR_u1_u1_8437));\
bit_vector_or(&(fpsqrts), &(fstoi), &(OR_u1_u1_8440));\
bit_vector_or(&(fitos), &(fstod), &(OR_u1_u1_8443));\
bit_vector_or(&(OR_u1_u1_8440), &(OR_u1_u1_8443), &(OR_u1_u1_8444));\
bit_vector_or(&(OR_u1_u1_8437), &(OR_u1_u1_8444), &(OR_u1_u1_8445));\
bit_vector_cast_to_bit_vector(0, &(single_precision), &(OR_u1_u1_8445));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8463_c_macro_ __declare_static_bit_vector(OR_u1_u1_8450,1);\
__declare_static_bit_vector(OR_u1_u1_8453,1);\
__declare_static_bit_vector(OR_u1_u1_8454,1);\
__declare_static_bit_vector(OR_u1_u1_8457,1);\
__declare_static_bit_vector(OR_u1_u1_8460,1);\
__declare_static_bit_vector(OR_u1_u1_8461,1);\
__declare_static_bit_vector(OR_u1_u1_8462,1);\
bit_vector_or(&(fpaddd), &(fpsubd), &(OR_u1_u1_8450));\
bit_vector_or(&(fpmuld), &(fpdivd), &(OR_u1_u1_8453));\
bit_vector_or(&(OR_u1_u1_8450), &(OR_u1_u1_8453), &(OR_u1_u1_8454));\
bit_vector_or(&(fpcmpd), &(fpsqrtd), &(OR_u1_u1_8457));\
bit_vector_or(&(fdtoi), &(fdtos), &(OR_u1_u1_8460));\
bit_vector_or(&(OR_u1_u1_8457), &(OR_u1_u1_8460), &(OR_u1_u1_8461));\
bit_vector_or(&(OR_u1_u1_8454), &(OR_u1_u1_8461), &(OR_u1_u1_8462));\
bit_vector_cast_to_bit_vector(0, &(double_precision), &(OR_u1_u1_8462));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro_ uint32_t fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"generate_precompute_exceptions_arguments___");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"thread_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(thread_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"stream_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(stream_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"slot_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(slot_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpadds");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpadds)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpsubs");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpsubs)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpmuls");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpmuls)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpdivs");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpdivs)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpcmps");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpcmps)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpsqrts");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpsqrts)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fstoi");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fstoi)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fitos");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fitos)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fstod");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fstod)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpaddd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpaddd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpsubd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpsubd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpmuld");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpmuld)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpdivd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpdivd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpcmpd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpcmpd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fpsqrtd");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fpsqrtd)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fdtoi");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fdtoi)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"fdtos");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fdtos)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f1_s");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",f1_s);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f2_s");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",f2_s);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f1_d");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",f1_d);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f2_d");fprintf(fpunit_exec_exec___report_log_file__, ":= %le\n",f2_d);fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"single_precision");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(single_precision)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"double_precision");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(double_precision)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f1_s_snan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_s_snan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f1_s_qnan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_s_qnan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f1_s_pos_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_s_pos_zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f1_s_neg_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_s_neg_zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f2_s_snan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_s_snan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f2_s_qnan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_s_qnan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f2_s_pos_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_s_pos_zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f2_s_neg_zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_s_neg_zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f1_d_snan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_d_snan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f1_d_qnan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f1_d_qnan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f2_d_snan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_d_snan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8502_c_macro___print_counter,"f2_d_qnan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(f2_d_qnan)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8551_c_macro_ __declare_static_bit_vector(OR_u1_u1_8506,1);\
__declare_static_bit_vector(OR_u1_u1_8508,1);\
__declare_static_bit_vector(OR_u1_u1_8511,1);\
__declare_static_bit_vector(OR_u1_u1_8512,1);\
__declare_static_bit_vector(OR_u1_u1_8515,1);\
__declare_static_bit_vector(konst_8516,1);\
bit_vector_clear(&konst_8516);\
__declare_static_bit_vector(MUX_8517,1);\
__declare_static_bit_vector(OR_u1_u1_8520,1);\
__declare_static_bit_vector(OR_u1_u1_8522,1);\
__declare_static_bit_vector(konst_8524,1);\
bit_vector_clear(&konst_8524);\
__declare_static_bit_vector(MUX_8525,1);\
__declare_static_bit_vector(OR_u1_u1_8526,1);\
__declare_static_bit_vector(OR_u1_u1_8529,1);\
__declare_static_bit_vector(OR_u1_u1_8531,1);\
__declare_static_bit_vector(OR_u1_u1_8534,1);\
__declare_static_bit_vector(OR_u1_u1_8535,1);\
__declare_static_bit_vector(OR_u1_u1_8538,1);\
__declare_static_bit_vector(konst_8539,1);\
bit_vector_clear(&konst_8539);\
__declare_static_bit_vector(MUX_8540,1);\
__declare_static_bit_vector(OR_u1_u1_8543,1);\
__declare_static_bit_vector(OR_u1_u1_8545,1);\
__declare_static_bit_vector(konst_8547,1);\
bit_vector_clear(&konst_8547);\
__declare_static_bit_vector(MUX_8548,1);\
__declare_static_bit_vector(OR_u1_u1_8549,1);\
__declare_static_bit_vector(OR_u1_u1_8550,1);\
bit_vector_or(&(fpadds), &(fpsubs), &(OR_u1_u1_8506));\
bit_vector_or(&(OR_u1_u1_8506), &(fpmuls), &(OR_u1_u1_8508));\
bit_vector_or(&(fpdivs), &(fpcmps), &(OR_u1_u1_8511));\
bit_vector_or(&(OR_u1_u1_8508), &(OR_u1_u1_8511), &(OR_u1_u1_8512));\
if (has_undefined_bit(&OR_u1_u1_8512)) {fprintf(stderr, "Error: variable OR_u1_u1_8512 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_8512));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_8512)){bit_vector_or(&(f1_s_snan), &(f2_s_snan), &(OR_u1_u1_8515));\
bit_vector_cast_to_bit_vector(0, &(MUX_8517), &(OR_u1_u1_8515));\
}else {bit_vector_clear(&konst_8516);\
bit_vector_cast_to_bit_vector(0, &(MUX_8517), &(konst_8516));\
}bit_vector_or(&(fpsqrts), &(fstoi), &(OR_u1_u1_8520));\
bit_vector_or(&(OR_u1_u1_8520), &(fstod), &(OR_u1_u1_8522));\
if (has_undefined_bit(&OR_u1_u1_8522)) {fprintf(stderr, "Error: variable OR_u1_u1_8522 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_8522));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_8522)){bit_vector_cast_to_bit_vector(0, &(MUX_8525), &(f2_s_snan));\
}else {bit_vector_clear(&konst_8524);\
bit_vector_cast_to_bit_vector(0, &(MUX_8525), &(konst_8524));\
}bit_vector_or(&(MUX_8517), &(MUX_8525), &(OR_u1_u1_8526));\
bit_vector_or(&(fpaddd), &(fpsubd), &(OR_u1_u1_8529));\
bit_vector_or(&(OR_u1_u1_8529), &(fpmuld), &(OR_u1_u1_8531));\
bit_vector_or(&(fpdivd), &(fpcmpd), &(OR_u1_u1_8534));\
bit_vector_or(&(OR_u1_u1_8531), &(OR_u1_u1_8534), &(OR_u1_u1_8535));\
if (has_undefined_bit(&OR_u1_u1_8535)) {fprintf(stderr, "Error: variable OR_u1_u1_8535 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_8535));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_8535)){bit_vector_or(&(f1_d_snan), &(f2_d_snan), &(OR_u1_u1_8538));\
bit_vector_cast_to_bit_vector(0, &(MUX_8540), &(OR_u1_u1_8538));\
}else {bit_vector_clear(&konst_8539);\
bit_vector_cast_to_bit_vector(0, &(MUX_8540), &(konst_8539));\
}bit_vector_or(&(fpsqrtd), &(fdtoi), &(OR_u1_u1_8543));\
bit_vector_or(&(OR_u1_u1_8543), &(fdtos), &(OR_u1_u1_8545));\
if (has_undefined_bit(&OR_u1_u1_8545)) {fprintf(stderr, "Error: variable OR_u1_u1_8545 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_8545));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_8545)){bit_vector_cast_to_bit_vector(0, &(MUX_8548), &(f2_d_snan));\
}else {bit_vector_clear(&konst_8547);\
bit_vector_cast_to_bit_vector(0, &(MUX_8548), &(konst_8547));\
}bit_vector_or(&(MUX_8540), &(MUX_8548), &(OR_u1_u1_8549));\
bit_vector_or(&(OR_u1_u1_8526), &(OR_u1_u1_8549), &(OR_u1_u1_8550));\
bit_vector_cast_to_bit_vector(0, &(snan_nv), &(OR_u1_u1_8550));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8596_c_macro_ __declare_static_bit_vector(AND_u1_u1_8556,1);\
__declare_static_bit_vector(AND_u1_u1_8559,1);\
__declare_static_bit_vector(OR_u1_u1_8560,1);\
__declare_static_bit_vector(konst_8561,1);\
bit_vector_clear(&konst_8561);\
__declare_static_bit_vector(MUX_8562,1);\
__declare_static_bit_vector(AND_u1_u1_8566,1);\
__declare_static_bit_vector(AND_u1_u1_8569,1);\
__declare_static_bit_vector(OR_u1_u1_8570,1);\
__declare_static_bit_vector(konst_8571,1);\
bit_vector_clear(&konst_8571);\
__declare_static_bit_vector(MUX_8572,1);\
__declare_static_bit_vector(OR_u1_u1_8573,1);\
__declare_static_bit_vector(AND_u1_u1_8577,1);\
__declare_static_bit_vector(AND_u1_u1_8580,1);\
__declare_static_bit_vector(OR_u1_u1_8581,1);\
__declare_static_bit_vector(konst_8582,1);\
bit_vector_clear(&konst_8582);\
__declare_static_bit_vector(MUX_8583,1);\
__declare_static_bit_vector(AND_u1_u1_8587,1);\
__declare_static_bit_vector(AND_u1_u1_8590,1);\
__declare_static_bit_vector(OR_u1_u1_8591,1);\
__declare_static_bit_vector(konst_8592,1);\
bit_vector_clear(&konst_8592);\
__declare_static_bit_vector(MUX_8593,1);\
__declare_static_bit_vector(OR_u1_u1_8594,1);\
__declare_static_bit_vector(OR_u1_u1_8595,1);\
if (has_undefined_bit(&fpadds)) {fprintf(stderr, "Error: variable fpadds has undefined value (%s) at test point.\n", to_string(&fpadds));assert(0);} \
if(bit_vector_to_uint64(0, &fpadds)){bit_vector_and(&(f1_s_pos_inf), &(f2_s_neg_inf), &(AND_u1_u1_8556));\
bit_vector_and(&(f2_s_pos_inf), &(f1_s_neg_inf), &(AND_u1_u1_8559));\
bit_vector_or(&(AND_u1_u1_8556), &(AND_u1_u1_8559), &(OR_u1_u1_8560));\
bit_vector_cast_to_bit_vector(0, &(MUX_8562), &(OR_u1_u1_8560));\
}else {bit_vector_clear(&konst_8561);\
bit_vector_cast_to_bit_vector(0, &(MUX_8562), &(konst_8561));\
}if (has_undefined_bit(&fpsubs)) {fprintf(stderr, "Error: variable fpsubs has undefined value (%s) at test point.\n", to_string(&fpsubs));assert(0);} \
if(bit_vector_to_uint64(0, &fpsubs)){bit_vector_and(&(f1_s_pos_inf), &(f2_s_pos_inf), &(AND_u1_u1_8566));\
bit_vector_and(&(f2_s_neg_inf), &(f1_s_neg_inf), &(AND_u1_u1_8569));\
bit_vector_or(&(AND_u1_u1_8566), &(AND_u1_u1_8569), &(OR_u1_u1_8570));\
bit_vector_cast_to_bit_vector(0, &(MUX_8572), &(OR_u1_u1_8570));\
}else {bit_vector_clear(&konst_8571);\
bit_vector_cast_to_bit_vector(0, &(MUX_8572), &(konst_8571));\
}bit_vector_or(&(MUX_8562), &(MUX_8572), &(OR_u1_u1_8573));\
if (has_undefined_bit(&fpaddd)) {fprintf(stderr, "Error: variable fpaddd has undefined value (%s) at test point.\n", to_string(&fpaddd));assert(0);} \
if(bit_vector_to_uint64(0, &fpaddd)){bit_vector_and(&(f1_d_pos_inf), &(f2_d_neg_inf), &(AND_u1_u1_8577));\
bit_vector_and(&(f2_d_pos_inf), &(f1_d_neg_inf), &(AND_u1_u1_8580));\
bit_vector_or(&(AND_u1_u1_8577), &(AND_u1_u1_8580), &(OR_u1_u1_8581));\
bit_vector_cast_to_bit_vector(0, &(MUX_8583), &(OR_u1_u1_8581));\
}else {bit_vector_clear(&konst_8582);\
bit_vector_cast_to_bit_vector(0, &(MUX_8583), &(konst_8582));\
}if (has_undefined_bit(&fpsubd)) {fprintf(stderr, "Error: variable fpsubd has undefined value (%s) at test point.\n", to_string(&fpsubd));assert(0);} \
if(bit_vector_to_uint64(0, &fpsubd)){bit_vector_and(&(f1_d_pos_inf), &(f2_d_pos_inf), &(AND_u1_u1_8587));\
bit_vector_and(&(f2_d_neg_inf), &(f1_d_neg_inf), &(AND_u1_u1_8590));\
bit_vector_or(&(AND_u1_u1_8587), &(AND_u1_u1_8590), &(OR_u1_u1_8591));\
bit_vector_cast_to_bit_vector(0, &(MUX_8593), &(OR_u1_u1_8591));\
}else {bit_vector_clear(&konst_8592);\
bit_vector_cast_to_bit_vector(0, &(MUX_8593), &(konst_8592));\
}bit_vector_or(&(MUX_8583), &(MUX_8593), &(OR_u1_u1_8594));\
bit_vector_or(&(OR_u1_u1_8573), &(OR_u1_u1_8594), &(OR_u1_u1_8595));\
bit_vector_cast_to_bit_vector(0, &(add_sub_nv), &(OR_u1_u1_8595));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8635_c_macro_ __declare_static_bit_vector(OR_u1_u1_8601,1);\
__declare_static_bit_vector(OR_u1_u1_8604,1);\
__declare_static_bit_vector(OR_u1_u1_8605,1);\
__declare_static_bit_vector(OR_u1_u1_8608,1);\
__declare_static_bit_vector(OR_u1_u1_8611,1);\
__declare_static_bit_vector(OR_u1_u1_8612,1);\
__declare_static_bit_vector(AND_u1_u1_8613,1);\
__declare_static_bit_vector(konst_8614,1);\
bit_vector_clear(&konst_8614);\
__declare_static_bit_vector(MUX_8615,1);\
__declare_static_bit_vector(OR_u1_u1_8619,1);\
__declare_static_bit_vector(OR_u1_u1_8622,1);\
__declare_static_bit_vector(OR_u1_u1_8623,1);\
__declare_static_bit_vector(OR_u1_u1_8626,1);\
__declare_static_bit_vector(OR_u1_u1_8629,1);\
__declare_static_bit_vector(OR_u1_u1_8630,1);\
__declare_static_bit_vector(AND_u1_u1_8631,1);\
__declare_static_bit_vector(konst_8632,1);\
bit_vector_clear(&konst_8632);\
__declare_static_bit_vector(MUX_8633,1);\
__declare_static_bit_vector(OR_u1_u1_8634,1);\
if (has_undefined_bit(&fpmuls)) {fprintf(stderr, "Error: variable fpmuls has undefined value (%s) at test point.\n", to_string(&fpmuls));assert(0);} \
if(bit_vector_to_uint64(0, &fpmuls)){bit_vector_or(&(f1_s_pos_zero), &(f1_s_neg_zero), &(OR_u1_u1_8601));\
bit_vector_or(&(f2_s_pos_zero), &(f2_s_neg_zero), &(OR_u1_u1_8604));\
bit_vector_or(&(OR_u1_u1_8601), &(OR_u1_u1_8604), &(OR_u1_u1_8605));\
bit_vector_or(&(f1_s_pos_inf), &(f1_s_neg_inf), &(OR_u1_u1_8608));\
bit_vector_or(&(f2_s_pos_inf), &(f2_s_neg_inf), &(OR_u1_u1_8611));\
bit_vector_or(&(OR_u1_u1_8608), &(OR_u1_u1_8611), &(OR_u1_u1_8612));\
bit_vector_and(&(OR_u1_u1_8605), &(OR_u1_u1_8612), &(AND_u1_u1_8613));\
bit_vector_cast_to_bit_vector(0, &(MUX_8615), &(AND_u1_u1_8613));\
}else {bit_vector_clear(&konst_8614);\
bit_vector_cast_to_bit_vector(0, &(MUX_8615), &(konst_8614));\
}if (has_undefined_bit(&fpmuld)) {fprintf(stderr, "Error: variable fpmuld has undefined value (%s) at test point.\n", to_string(&fpmuld));assert(0);} \
if(bit_vector_to_uint64(0, &fpmuld)){bit_vector_or(&(f1_d_pos_zero), &(f1_d_neg_zero), &(OR_u1_u1_8619));\
bit_vector_or(&(f2_d_pos_zero), &(f2_d_neg_zero), &(OR_u1_u1_8622));\
bit_vector_or(&(OR_u1_u1_8619), &(OR_u1_u1_8622), &(OR_u1_u1_8623));\
bit_vector_or(&(f1_d_pos_inf), &(f1_d_neg_inf), &(OR_u1_u1_8626));\
bit_vector_or(&(f2_d_pos_inf), &(f2_d_neg_inf), &(OR_u1_u1_8629));\
bit_vector_or(&(OR_u1_u1_8626), &(OR_u1_u1_8629), &(OR_u1_u1_8630));\
bit_vector_and(&(OR_u1_u1_8623), &(OR_u1_u1_8630), &(AND_u1_u1_8631));\
bit_vector_cast_to_bit_vector(0, &(MUX_8633), &(AND_u1_u1_8631));\
}else {bit_vector_clear(&konst_8632);\
bit_vector_cast_to_bit_vector(0, &(MUX_8633), &(konst_8632));\
}bit_vector_or(&(MUX_8615), &(MUX_8633), &(OR_u1_u1_8634));\
bit_vector_cast_to_bit_vector(0, &(mul_nv), &(OR_u1_u1_8634));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8674_c_macro_ __declare_static_bit_vector(OR_u1_u1_8640,1);\
__declare_static_bit_vector(OR_u1_u1_8643,1);\
__declare_static_bit_vector(AND_u1_u1_8644,1);\
__declare_static_bit_vector(OR_u1_u1_8647,1);\
__declare_static_bit_vector(OR_u1_u1_8650,1);\
__declare_static_bit_vector(AND_u1_u1_8651,1);\
__declare_static_bit_vector(OR_u1_u1_8652,1);\
__declare_static_bit_vector(konst_8653,1);\
bit_vector_clear(&konst_8653);\
__declare_static_bit_vector(MUX_8654,1);\
__declare_static_bit_vector(OR_u1_u1_8658,1);\
__declare_static_bit_vector(OR_u1_u1_8661,1);\
__declare_static_bit_vector(AND_u1_u1_8662,1);\
__declare_static_bit_vector(OR_u1_u1_8665,1);\
__declare_static_bit_vector(OR_u1_u1_8668,1);\
__declare_static_bit_vector(AND_u1_u1_8669,1);\
__declare_static_bit_vector(OR_u1_u1_8670,1);\
__declare_static_bit_vector(konst_8671,1);\
bit_vector_clear(&konst_8671);\
__declare_static_bit_vector(MUX_8672,1);\
__declare_static_bit_vector(OR_u1_u1_8673,1);\
if (has_undefined_bit(&fpdivs)) {fprintf(stderr, "Error: variable fpdivs has undefined value (%s) at test point.\n", to_string(&fpdivs));assert(0);} \
if(bit_vector_to_uint64(0, &fpdivs)){bit_vector_or(&(f1_s_pos_zero), &(f1_s_neg_zero), &(OR_u1_u1_8640));\
bit_vector_or(&(f2_s_pos_zero), &(f2_s_neg_zero), &(OR_u1_u1_8643));\
bit_vector_and(&(OR_u1_u1_8640), &(OR_u1_u1_8643), &(AND_u1_u1_8644));\
bit_vector_or(&(f1_s_pos_inf), &(f1_s_neg_inf), &(OR_u1_u1_8647));\
bit_vector_or(&(f2_s_pos_inf), &(f2_s_neg_inf), &(OR_u1_u1_8650));\
bit_vector_and(&(OR_u1_u1_8647), &(OR_u1_u1_8650), &(AND_u1_u1_8651));\
bit_vector_or(&(AND_u1_u1_8644), &(AND_u1_u1_8651), &(OR_u1_u1_8652));\
bit_vector_cast_to_bit_vector(0, &(MUX_8654), &(OR_u1_u1_8652));\
}else {bit_vector_clear(&konst_8653);\
bit_vector_cast_to_bit_vector(0, &(MUX_8654), &(konst_8653));\
}if (has_undefined_bit(&fpdivd)) {fprintf(stderr, "Error: variable fpdivd has undefined value (%s) at test point.\n", to_string(&fpdivd));assert(0);} \
if(bit_vector_to_uint64(0, &fpdivd)){bit_vector_or(&(f1_d_pos_zero), &(f1_d_neg_zero), &(OR_u1_u1_8658));\
bit_vector_or(&(f2_d_pos_zero), &(f2_d_neg_zero), &(OR_u1_u1_8661));\
bit_vector_and(&(OR_u1_u1_8658), &(OR_u1_u1_8661), &(AND_u1_u1_8662));\
bit_vector_or(&(f1_d_pos_inf), &(f1_d_neg_inf), &(OR_u1_u1_8665));\
bit_vector_or(&(f2_d_pos_inf), &(f2_d_neg_inf), &(OR_u1_u1_8668));\
bit_vector_and(&(OR_u1_u1_8665), &(OR_u1_u1_8668), &(AND_u1_u1_8669));\
bit_vector_or(&(AND_u1_u1_8662), &(AND_u1_u1_8669), &(OR_u1_u1_8670));\
bit_vector_cast_to_bit_vector(0, &(MUX_8672), &(OR_u1_u1_8670));\
}else {bit_vector_clear(&konst_8671);\
bit_vector_cast_to_bit_vector(0, &(MUX_8672), &(konst_8671));\
}bit_vector_or(&(MUX_8654), &(MUX_8672), &(OR_u1_u1_8673));\
bit_vector_cast_to_bit_vector(0, &(div_nv), &(OR_u1_u1_8673));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8693_c_macro_ __declare_static_bit_vector(OR_u1_u1_8679,1);\
__declare_static_bit_vector(OR_u1_u1_8681,1);\
__declare_static_bit_vector(konst_8682,1);\
bit_vector_clear(&konst_8682);\
__declare_static_bit_vector(MUX_8683,1);\
__declare_static_bit_vector(OR_u1_u1_8687,1);\
__declare_static_bit_vector(OR_u1_u1_8689,1);\
__declare_static_bit_vector(konst_8690,1);\
bit_vector_clear(&konst_8690);\
__declare_static_bit_vector(MUX_8691,1);\
__declare_static_bit_vector(OR_u1_u1_8692,1);\
if (has_undefined_bit(&fpsqrts)) {fprintf(stderr, "Error: variable fpsqrts has undefined value (%s) at test point.\n", to_string(&fpsqrts));assert(0);} \
if(bit_vector_to_uint64(0, &fpsqrts)){bit_vector_or(&(f2_s_neg_normal), &(f2_s_neg_denormal), &(OR_u1_u1_8679));\
bit_vector_or(&(OR_u1_u1_8679), &(f2_s_neg_inf), &(OR_u1_u1_8681));\
bit_vector_cast_to_bit_vector(0, &(MUX_8683), &(OR_u1_u1_8681));\
}else {bit_vector_clear(&konst_8682);\
bit_vector_cast_to_bit_vector(0, &(MUX_8683), &(konst_8682));\
}if (has_undefined_bit(&fpsqrtd)) {fprintf(stderr, "Error: variable fpsqrtd has undefined value (%s) at test point.\n", to_string(&fpsqrtd));assert(0);} \
if(bit_vector_to_uint64(0, &fpsqrtd)){bit_vector_or(&(f2_d_neg_normal), &(f2_d_neg_denormal), &(OR_u1_u1_8687));\
bit_vector_or(&(OR_u1_u1_8687), &(f2_d_neg_inf), &(OR_u1_u1_8689));\
bit_vector_cast_to_bit_vector(0, &(MUX_8691), &(OR_u1_u1_8689));\
}else {bit_vector_clear(&konst_8690);\
bit_vector_cast_to_bit_vector(0, &(MUX_8691), &(konst_8690));\
}bit_vector_or(&(MUX_8683), &(MUX_8691), &(OR_u1_u1_8692));\
bit_vector_cast_to_bit_vector(0, &(sqrt_nv), &(OR_u1_u1_8692));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8718_c_macro_ __declare_static_bit_vector(OR_u1_u1_8698,1);\
__declare_static_bit_vector(konst_8699,1);\
bit_vector_clear(&konst_8699);\
__declare_static_bit_vector(MUX_8700,1);\
__declare_static_bit_vector(OR_u1_u1_8704,1);\
__declare_static_bit_vector(konst_8705,1);\
bit_vector_clear(&konst_8705);\
__declare_static_bit_vector(MUX_8706,1);\
__declare_static_bit_vector(OR_u1_u1_8707,1);\
__declare_static_bit_vector(konst_8710,1);\
bit_vector_clear(&konst_8710);\
__declare_static_bit_vector(MUX_8711,1);\
__declare_static_bit_vector(konst_8714,1);\
bit_vector_clear(&konst_8714);\
__declare_static_bit_vector(MUX_8715,1);\
__declare_static_bit_vector(OR_u1_u1_8716,1);\
__declare_static_bit_vector(OR_u1_u1_8717,1);\
if (has_undefined_bit(&fstoi)) {fprintf(stderr, "Error: variable fstoi has undefined value (%s) at test point.\n", to_string(&fstoi));assert(0);} \
if(bit_vector_to_uint64(0, &fstoi)){bit_vector_or(&(f1_s_qnan), &(f1_s_snan), &(OR_u1_u1_8698));\
bit_vector_cast_to_bit_vector(0, &(MUX_8700), &(OR_u1_u1_8698));\
}else {bit_vector_clear(&konst_8699);\
bit_vector_cast_to_bit_vector(0, &(MUX_8700), &(konst_8699));\
}if (has_undefined_bit(&fdtoi)) {fprintf(stderr, "Error: variable fdtoi has undefined value (%s) at test point.\n", to_string(&fdtoi));assert(0);} \
if(bit_vector_to_uint64(0, &fdtoi)){bit_vector_or(&(f1_d_qnan), &(f1_d_snan), &(OR_u1_u1_8704));\
bit_vector_cast_to_bit_vector(0, &(MUX_8706), &(OR_u1_u1_8704));\
}else {bit_vector_clear(&konst_8705);\
bit_vector_cast_to_bit_vector(0, &(MUX_8706), &(konst_8705));\
}bit_vector_or(&(MUX_8700), &(MUX_8706), &(OR_u1_u1_8707));\
if (has_undefined_bit(&fstod)) {fprintf(stderr, "Error: variable fstod has undefined value (%s) at test point.\n", to_string(&fstod));assert(0);} \
if(bit_vector_to_uint64(0, &fstod)){bit_vector_cast_to_bit_vector(0, &(MUX_8711), &(f1_s_snan));\
}else {bit_vector_clear(&konst_8710);\
bit_vector_cast_to_bit_vector(0, &(MUX_8711), &(konst_8710));\
}if (has_undefined_bit(&fdtos)) {fprintf(stderr, "Error: variable fdtos has undefined value (%s) at test point.\n", to_string(&fdtos));assert(0);} \
if(bit_vector_to_uint64(0, &fdtos)){bit_vector_cast_to_bit_vector(0, &(MUX_8715), &(f1_d_snan));\
}else {bit_vector_clear(&konst_8714);\
bit_vector_cast_to_bit_vector(0, &(MUX_8715), &(konst_8714));\
}bit_vector_or(&(MUX_8711), &(MUX_8715), &(OR_u1_u1_8716));\
bit_vector_or(&(OR_u1_u1_8707), &(OR_u1_u1_8716), &(OR_u1_u1_8717));\
bit_vector_cast_to_bit_vector(0, &(conv_nv), &(OR_u1_u1_8717));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8755_c_macro_ __declare_static_bit_vector(OR_u1_u1_8723,1);\
__declare_static_bit_vector(konst_8724,1);\
bit_vector_clear(&konst_8724);\
__declare_static_bit_vector(MUX_8725,1);\
__declare_static_bit_vector(OR_u1_u1_8729,1);\
__declare_static_bit_vector(konst_8730,1);\
bit_vector_clear(&konst_8730);\
__declare_static_bit_vector(MUX_8731,1);\
__declare_static_bit_vector(OR_u1_u1_8732,1);\
__declare_static_bit_vector(OR_u1_u1_8736,1);\
__declare_static_bit_vector(OR_u1_u1_8739,1);\
__declare_static_bit_vector(OR_u1_u1_8740,1);\
__declare_static_bit_vector(konst_8741,1);\
bit_vector_clear(&konst_8741);\
__declare_static_bit_vector(MUX_8742,1);\
__declare_static_bit_vector(OR_u1_u1_8746,1);\
__declare_static_bit_vector(OR_u1_u1_8749,1);\
__declare_static_bit_vector(OR_u1_u1_8750,1);\
__declare_static_bit_vector(konst_8751,1);\
bit_vector_clear(&konst_8751);\
__declare_static_bit_vector(MUX_8752,1);\
__declare_static_bit_vector(OR_u1_u1_8753,1);\
__declare_static_bit_vector(OR_u1_u1_8754,1);\
if (has_undefined_bit(&fpcmps)) {fprintf(stderr, "Error: variable fpcmps has undefined value (%s) at test point.\n", to_string(&fpcmps));assert(0);} \
if(bit_vector_to_uint64(0, &fpcmps)){bit_vector_or(&(f1_s_snan), &(f2_s_snan), &(OR_u1_u1_8723));\
bit_vector_cast_to_bit_vector(0, &(MUX_8725), &(OR_u1_u1_8723));\
}else {bit_vector_clear(&konst_8724);\
bit_vector_cast_to_bit_vector(0, &(MUX_8725), &(konst_8724));\
}if (has_undefined_bit(&fpcmpd)) {fprintf(stderr, "Error: variable fpcmpd has undefined value (%s) at test point.\n", to_string(&fpcmpd));assert(0);} \
if(bit_vector_to_uint64(0, &fpcmpd)){bit_vector_or(&(f1_d_snan), &(f2_d_snan), &(OR_u1_u1_8729));\
bit_vector_cast_to_bit_vector(0, &(MUX_8731), &(OR_u1_u1_8729));\
}else {bit_vector_clear(&konst_8730);\
bit_vector_cast_to_bit_vector(0, &(MUX_8731), &(konst_8730));\
}bit_vector_or(&(MUX_8725), &(MUX_8731), &(OR_u1_u1_8732));\
if (has_undefined_bit(&fpcmpes)) {fprintf(stderr, "Error: variable fpcmpes has undefined value (%s) at test point.\n", to_string(&fpcmpes));assert(0);} \
if(bit_vector_to_uint64(0, &fpcmpes)){bit_vector_or(&(f1_s_snan), &(f2_s_snan), &(OR_u1_u1_8736));\
bit_vector_or(&(f1_s_qnan), &(f2_s_qnan), &(OR_u1_u1_8739));\
bit_vector_or(&(OR_u1_u1_8736), &(OR_u1_u1_8739), &(OR_u1_u1_8740));\
bit_vector_cast_to_bit_vector(0, &(MUX_8742), &(OR_u1_u1_8740));\
}else {bit_vector_clear(&konst_8741);\
bit_vector_cast_to_bit_vector(0, &(MUX_8742), &(konst_8741));\
}if (has_undefined_bit(&fpcmped)) {fprintf(stderr, "Error: variable fpcmped has undefined value (%s) at test point.\n", to_string(&fpcmped));assert(0);} \
if(bit_vector_to_uint64(0, &fpcmped)){bit_vector_or(&(f1_d_snan), &(f2_d_snan), &(OR_u1_u1_8746));\
bit_vector_or(&(f1_d_qnan), &(f2_d_qnan), &(OR_u1_u1_8749));\
bit_vector_or(&(OR_u1_u1_8746), &(OR_u1_u1_8749), &(OR_u1_u1_8750));\
bit_vector_cast_to_bit_vector(0, &(MUX_8752), &(OR_u1_u1_8750));\
}else {bit_vector_clear(&konst_8751);\
bit_vector_cast_to_bit_vector(0, &(MUX_8752), &(konst_8751));\
}bit_vector_or(&(MUX_8742), &(MUX_8752), &(OR_u1_u1_8753));\
bit_vector_or(&(OR_u1_u1_8732), &(OR_u1_u1_8753), &(OR_u1_u1_8754));\
bit_vector_cast_to_bit_vector(0, &(fcmp_nv), &(OR_u1_u1_8754));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8770_c_macro_ __declare_static_bit_vector(OR_u1_u1_8759,1);\
__declare_static_bit_vector(OR_u1_u1_8762,1);\
__declare_static_bit_vector(OR_u1_u1_8763,1);\
__declare_static_bit_vector(OR_u1_u1_8766,1);\
__declare_static_bit_vector(OR_u1_u1_8768,1);\
__declare_static_bit_vector(OR_u1_u1_8769,1);\
bit_vector_or(&(snan_nv), &(add_sub_nv), &(OR_u1_u1_8759));\
bit_vector_or(&(mul_nv), &(div_nv), &(OR_u1_u1_8762));\
bit_vector_or(&(OR_u1_u1_8759), &(OR_u1_u1_8762), &(OR_u1_u1_8763));\
bit_vector_or(&(sqrt_nv), &(fcmp_nv), &(OR_u1_u1_8766));\
bit_vector_or(&(OR_u1_u1_8766), &(conv_nv), &(OR_u1_u1_8768));\
bit_vector_or(&(OR_u1_u1_8763), &(OR_u1_u1_8768), &(OR_u1_u1_8769));\
bit_vector_cast_to_bit_vector(0, &(nvc), &(OR_u1_u1_8769));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8773_c_macro_ __declare_static_bit_vector(konst_8772,1);\
bit_vector_clear(&konst_8772);\
bit_vector_clear(&konst_8772);\
bit_vector_cast_to_bit_vector(0, &(nxc), &(konst_8772));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8776_c_macro_ __declare_static_bit_vector(konst_8775,1);\
bit_vector_clear(&konst_8775);\
bit_vector_clear(&konst_8775);\
bit_vector_cast_to_bit_vector(0, &(dzc), &(konst_8775));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8779_c_macro_ __declare_static_bit_vector(konst_8778,1);\
bit_vector_clear(&konst_8778);\
bit_vector_clear(&konst_8778);\
bit_vector_cast_to_bit_vector(0, &(ofc), &(konst_8778));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_assign_stmt_8782_c_macro_ __declare_static_bit_vector(konst_8781,1);\
bit_vector_clear(&konst_8781);\
bit_vector_clear(&konst_8781);\
bit_vector_cast_to_bit_vector(0, &(ufc), &(konst_8781));\
;

#define fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro_ uint32_t fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"generate_precompute_exceptions_response__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"snan_nv");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(snan_nv)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"add_sub_nv");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(add_sub_nv)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"mul_nv");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mul_nv)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"div_nv");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(div_nv)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"sqrt_nv");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sqrt_nv)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"fcmp_nv");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fcmp_nv)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"conv_nv");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(conv_nv)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"nvc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(nvc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"nxc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(nxc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"dzc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(dzc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"ofc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ofc)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__generate_pre_compute_exceptions_stmt_8795_c_macro___print_counter,"ufc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ufc)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__generate_pre_compute_exceptions_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pnvc)), &(nvc));\
bit_vector_cast_to_bit_vector(0, &((*__pofc)), &(ofc));\
bit_vector_cast_to_bit_vector(0, &((*__pufc)), &(ufc));\
bit_vector_cast_to_bit_vector(0, &((*__pdzc)), &(dzc));\
bit_vector_cast_to_bit_vector(0, &((*__pnxc)), &(nxc));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_s_classification)), &(f1_s_classification));\
bit_vector_cast_to_bit_vector(0, &((*__pf2_s_classification)), &(f2_s_classification));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_d_classification)), &(f1_d_classification));\
bit_vector_cast_to_bit_vector(0, &((*__pf2_d_classification)), &(f2_d_classification));\
;

#define fpunit_exec_exec__getHalfInf_inner_inarg_prep_macro__ __declare_static_bit_vector(s,1);\
bit_vector_cast_to_bit_vector(0, &(s), &((*__ps)));\
__declare_static_bit_vector(ret_val,16);\
__declare_static_bit_vector(exp,5);\
bit_vector_clear(&exp);\
exp.val.byte_array[0] = 255;\
__declare_static_bit_vector(mant,10);\
bit_vector_clear(&mant);\

#define fpunit_exec_exec__getHalfInf_assign_stmt_9879_c_macro_ __declare_static_bit_vector(konst_9876,5);\
bit_vector_clear(&konst_9876);\
__declare_static_bit_vector(type_cast_9877,5);\
bit_vector_clear(&type_cast_9877);\
__declare_static_bit_vector(NOT_u5_u5_9878,5);\
bit_vector_clear(&NOT_u5_u5_9878);\
NOT_u5_u5_9878.val.byte_array[0] = 255;\
bit_vector_clear(&konst_9876);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9877), &(konst_9876));\
bit_vector_not( &(type_cast_9877), &(NOT_u5_u5_9878));\
bit_vector_cast_to_bit_vector(0, &(exp), &(NOT_u5_u5_9878));\
;

#define fpunit_exec_exec__getHalfInf_assign_stmt_9883_c_macro_ __declare_static_bit_vector(konst_9881,10);\
bit_vector_clear(&konst_9881);\
__declare_static_bit_vector(type_cast_9882,10);\
bit_vector_clear(&type_cast_9882);\
bit_vector_clear(&konst_9881);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9882), &(konst_9881));\
bit_vector_cast_to_bit_vector(0, &(mant), &(type_cast_9882));\
;

#define fpunit_exec_exec__getHalfInf_assign_stmt_9890_c_macro_ __declare_static_bit_vector(CONCAT_u1_u6_9887,6);\
__declare_static_bit_vector(CONCAT_u6_u16_9889,16);\
bit_vector_concatenate( &(s), &(exp), &(CONCAT_u1_u6_9887));\
bit_vector_concatenate( &(CONCAT_u1_u6_9887), &(mant), &(CONCAT_u6_u16_9889));\
bit_vector_cast_to_bit_vector(0, &(ret_val), &(CONCAT_u6_u16_9889));\
;

#define fpunit_exec_exec__getHalfInf_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pret_val)), &(ret_val));\
;

#define fpunit_exec_exec__getHalfNan_inner_inarg_prep_macro__ __declare_static_bit_vector(s,1);\
bit_vector_cast_to_bit_vector(0, &(s), &((*__ps)));\
__declare_static_bit_vector(ret_val,16);\
__declare_static_bit_vector(exp,5);\
bit_vector_clear(&exp);\
exp.val.byte_array[0] = 255;\
__declare_static_bit_vector(mant,10);\
bit_vector_clear(&mant);\
mant.val.byte_array[1] = 2;\

#define fpunit_exec_exec__getHalfNan_assign_stmt_9908_c_macro_ __declare_static_bit_vector(konst_9905,5);\
bit_vector_clear(&konst_9905);\
__declare_static_bit_vector(type_cast_9906,5);\
bit_vector_clear(&type_cast_9906);\
__declare_static_bit_vector(NOT_u5_u5_9907,5);\
bit_vector_clear(&NOT_u5_u5_9907);\
NOT_u5_u5_9907.val.byte_array[0] = 255;\
bit_vector_clear(&konst_9905);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9906), &(konst_9905));\
bit_vector_not( &(type_cast_9906), &(NOT_u5_u5_9907));\
bit_vector_cast_to_bit_vector(0, &(exp), &(NOT_u5_u5_9907));\
;

#define fpunit_exec_exec__getHalfNan_assign_stmt_9914_c_macro_ __declare_static_bit_vector(konst_9911,9);\
bit_vector_clear(&konst_9911);\
__declare_static_bit_vector(type_cast_9912,9);\
bit_vector_clear(&type_cast_9912);\
__declare_static_bit_vector(CONCAT_u1_u10_9913,10);\
bit_vector_clear(&CONCAT_u1_u10_9913);\
CONCAT_u1_u10_9913.val.byte_array[1] = 2;\
bit_vector_clear(&konst_9911);\
bit_vector_bitcast_to_bit_vector( &(type_cast_9912), &(konst_9911));\
bit_vector_concatenate( &(ONE_1), &(type_cast_9912), &(CONCAT_u1_u10_9913));\
bit_vector_cast_to_bit_vector(0, &(mant), &(CONCAT_u1_u10_9913));\
;

#define fpunit_exec_exec__getHalfNan_assign_stmt_9921_c_macro_ __declare_static_bit_vector(CONCAT_u1_u6_9918,6);\
__declare_static_bit_vector(CONCAT_u6_u16_9920,16);\
bit_vector_concatenate( &(s), &(exp), &(CONCAT_u1_u6_9918));\
bit_vector_concatenate( &(CONCAT_u1_u6_9918), &(mant), &(CONCAT_u6_u16_9920));\
bit_vector_cast_to_bit_vector(0, &(ret_val), &(CONCAT_u6_u16_9920));\
;

#define fpunit_exec_exec__getHalfNan_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pret_val)), &(ret_val));\
;

#define fpunit_exec_exec__getHalfZero_inner_inarg_prep_macro__ __declare_static_bit_vector(s,1);\
bit_vector_cast_to_bit_vector(0, &(s), &((*__ps)));\
__declare_static_bit_vector(ret_val,16);\

#define fpunit_exec_exec__getHalfZero_assign_stmt_9899_c_macro_ __declare_static_bit_vector(CONCAT_u1_u16_9898,16);\
bit_vector_concatenate( &(s), &(ZERO_15), &(CONCAT_u1_u16_9898));\
bit_vector_cast_to_bit_vector(0, &(ret_val), &(CONCAT_u1_u16_9898));\
;

#define fpunit_exec_exec__getHalfZero_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pret_val)), &(ret_val));\
;

#define fpunit_exec_exec__global_storage_initializer__inner_inarg_prep_macro__
#define fpunit_exec_exec__global_storage_initializer__inner_outarg_prep_macro__ ;

#define fpunit_exec_exec__global_storage_initializer__outer_arg_decl_macro__ ;

#define fpunit_exec_exec__global_storage_initializer__outer_op_xfer_macro__ ;

#define fpunit_exec_exec__i16_sll_inner_inarg_prep_macro__ __declare_static_bit_vector(X,16);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,5);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,16);\
__declare_static_bit_vector(X0,16);\
__declare_static_bit_vector(X1,16);\
__declare_static_bit_vector(X2,16);\
__declare_static_bit_vector(X3,16);\

#define fpunit_exec_exec__i16_sll_assign_stmt_9652_c_macro_ __declare_static_bit_vector(konst_9644,5);\
bit_vector_clear(&konst_9644);\
__declare_static_bit_vector(BITSEL_u5_u1_9645,1);\
__declare_static_bit_vector(slice_9647,15);\
__declare_static_bit_vector(CONCAT_u15_u16_9649,16);\
__declare_static_bit_vector(MUX_9651,16);\
bit_vector_clear(&konst_9644);\
bit_vector_bitsel( &(S), &(konst_9644), &(BITSEL_u5_u1_9645));\
if (has_undefined_bit(&BITSEL_u5_u1_9645)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_9645 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_9645));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_9645)){bit_vector_slice(&(X), &(slice_9647), 0);\
bit_vector_concatenate( &(slice_9647), &(ZERO_1), &(CONCAT_u15_u16_9649));\
bit_vector_cast_to_bit_vector(0, &(MUX_9651), &(CONCAT_u15_u16_9649));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9651), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_9651));\
;

#define fpunit_exec_exec__i16_sll_assign_stmt_9663_c_macro_ __declare_static_bit_vector(konst_9655,5);\
bit_vector_clear(&konst_9655);\
konst_9655.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u5_u1_9656,1);\
__declare_static_bit_vector(slice_9658,14);\
__declare_static_bit_vector(CONCAT_u14_u16_9660,16);\
__declare_static_bit_vector(MUX_9662,16);\
bit_vector_clear(&konst_9655);\
konst_9655.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_9655), &(BITSEL_u5_u1_9656));\
if (has_undefined_bit(&BITSEL_u5_u1_9656)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_9656 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_9656));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_9656)){bit_vector_slice(&(X0), &(slice_9658), 0);\
bit_vector_concatenate( &(slice_9658), &(ZERO_2), &(CONCAT_u14_u16_9660));\
bit_vector_cast_to_bit_vector(0, &(MUX_9662), &(CONCAT_u14_u16_9660));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9662), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_9662));\
;

#define fpunit_exec_exec__i16_sll_assign_stmt_9674_c_macro_ __declare_static_bit_vector(konst_9666,5);\
bit_vector_clear(&konst_9666);\
konst_9666.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u5_u1_9667,1);\
__declare_static_bit_vector(slice_9669,12);\
__declare_static_bit_vector(CONCAT_u12_u16_9671,16);\
__declare_static_bit_vector(MUX_9673,16);\
bit_vector_clear(&konst_9666);\
konst_9666.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_9666), &(BITSEL_u5_u1_9667));\
if (has_undefined_bit(&BITSEL_u5_u1_9667)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_9667 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_9667));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_9667)){bit_vector_slice(&(X1), &(slice_9669), 0);\
bit_vector_concatenate( &(slice_9669), &(ZERO_4), &(CONCAT_u12_u16_9671));\
bit_vector_cast_to_bit_vector(0, &(MUX_9673), &(CONCAT_u12_u16_9671));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9673), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_9673));\
;

#define fpunit_exec_exec__i16_sll_assign_stmt_9685_c_macro_ __declare_static_bit_vector(konst_9677,5);\
bit_vector_clear(&konst_9677);\
konst_9677.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u5_u1_9678,1);\
__declare_static_bit_vector(slice_9680,8);\
__declare_static_bit_vector(CONCAT_u8_u16_9682,16);\
__declare_static_bit_vector(MUX_9684,16);\
bit_vector_clear(&konst_9677);\
konst_9677.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_9677), &(BITSEL_u5_u1_9678));\
if (has_undefined_bit(&BITSEL_u5_u1_9678)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_9678 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_9678));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_9678)){bit_vector_slice(&(X2), &(slice_9680), 0);\
bit_vector_concatenate( &(slice_9680), &(ZERO_8), &(CONCAT_u8_u16_9682));\
bit_vector_cast_to_bit_vector(0, &(MUX_9684), &(CONCAT_u8_u16_9682));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9684), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_9684));\
;

#define fpunit_exec_exec__i16_sll_assign_stmt_9693_c_macro_ __declare_static_bit_vector(konst_9688,5);\
bit_vector_clear(&konst_9688);\
konst_9688.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u5_u1_9689,1);\
__declare_static_bit_vector(konst_9690,16);\
bit_vector_clear(&konst_9690);\
__declare_static_bit_vector(MUX_9692,16);\
bit_vector_clear(&konst_9688);\
konst_9688.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_9688), &(BITSEL_u5_u1_9689));\
if (has_undefined_bit(&BITSEL_u5_u1_9689)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_9689 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_9689));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_9689)){bit_vector_clear(&konst_9690);\
bit_vector_cast_to_bit_vector(0, &(MUX_9692), &(konst_9690));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9692), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_9692));\
;

#define fpunit_exec_exec__i16_sll_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__i24_sll_inner_inarg_prep_macro__ __declare_static_bit_vector(X,24);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,5);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,24);\
__declare_static_bit_vector(X0,24);\
__declare_static_bit_vector(X1,24);\
__declare_static_bit_vector(X2,24);\
__declare_static_bit_vector(X3,24);\

#define fpunit_exec_exec__i24_sll_assign_stmt_2246_c_macro_ __declare_static_bit_vector(konst_2238,5);\
bit_vector_clear(&konst_2238);\
__declare_static_bit_vector(BITSEL_u5_u1_2239,1);\
__declare_static_bit_vector(slice_2241,23);\
__declare_static_bit_vector(CONCAT_u23_u24_2243,24);\
__declare_static_bit_vector(MUX_2245,24);\
bit_vector_clear(&konst_2238);\
bit_vector_bitsel( &(S), &(konst_2238), &(BITSEL_u5_u1_2239));\
if (has_undefined_bit(&BITSEL_u5_u1_2239)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_2239 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_2239));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_2239)){bit_vector_slice(&(X), &(slice_2241), 0);\
bit_vector_concatenate( &(slice_2241), &(ZERO_1), &(CONCAT_u23_u24_2243));\
bit_vector_cast_to_bit_vector(0, &(MUX_2245), &(CONCAT_u23_u24_2243));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2245), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_2245));\
;

#define fpunit_exec_exec__i24_sll_assign_stmt_2257_c_macro_ __declare_static_bit_vector(konst_2249,5);\
bit_vector_clear(&konst_2249);\
konst_2249.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u5_u1_2250,1);\
__declare_static_bit_vector(slice_2252,22);\
__declare_static_bit_vector(CONCAT_u22_u24_2254,24);\
__declare_static_bit_vector(MUX_2256,24);\
bit_vector_clear(&konst_2249);\
konst_2249.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_2249), &(BITSEL_u5_u1_2250));\
if (has_undefined_bit(&BITSEL_u5_u1_2250)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_2250 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_2250));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_2250)){bit_vector_slice(&(X0), &(slice_2252), 0);\
bit_vector_concatenate( &(slice_2252), &(ZERO_2), &(CONCAT_u22_u24_2254));\
bit_vector_cast_to_bit_vector(0, &(MUX_2256), &(CONCAT_u22_u24_2254));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2256), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_2256));\
;

#define fpunit_exec_exec__i24_sll_assign_stmt_2268_c_macro_ __declare_static_bit_vector(konst_2260,5);\
bit_vector_clear(&konst_2260);\
konst_2260.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u5_u1_2261,1);\
__declare_static_bit_vector(slice_2263,20);\
__declare_static_bit_vector(CONCAT_u20_u24_2265,24);\
__declare_static_bit_vector(MUX_2267,24);\
bit_vector_clear(&konst_2260);\
konst_2260.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_2260), &(BITSEL_u5_u1_2261));\
if (has_undefined_bit(&BITSEL_u5_u1_2261)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_2261 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_2261));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_2261)){bit_vector_slice(&(X1), &(slice_2263), 0);\
bit_vector_concatenate( &(slice_2263), &(ZERO_4), &(CONCAT_u20_u24_2265));\
bit_vector_cast_to_bit_vector(0, &(MUX_2267), &(CONCAT_u20_u24_2265));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2267), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_2267));\
;

#define fpunit_exec_exec__i24_sll_assign_stmt_2279_c_macro_ __declare_static_bit_vector(konst_2271,5);\
bit_vector_clear(&konst_2271);\
konst_2271.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u5_u1_2272,1);\
__declare_static_bit_vector(slice_2274,16);\
__declare_static_bit_vector(CONCAT_u16_u24_2276,24);\
__declare_static_bit_vector(MUX_2278,24);\
bit_vector_clear(&konst_2271);\
konst_2271.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_2271), &(BITSEL_u5_u1_2272));\
if (has_undefined_bit(&BITSEL_u5_u1_2272)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_2272 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_2272));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_2272)){bit_vector_slice(&(X2), &(slice_2274), 0);\
bit_vector_concatenate( &(slice_2274), &(ZERO_8), &(CONCAT_u16_u24_2276));\
bit_vector_cast_to_bit_vector(0, &(MUX_2278), &(CONCAT_u16_u24_2276));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2278), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_2278));\
;

#define fpunit_exec_exec__i24_sll_assign_stmt_2290_c_macro_ __declare_static_bit_vector(konst_2282,5);\
bit_vector_clear(&konst_2282);\
konst_2282.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u5_u1_2283,1);\
__declare_static_bit_vector(slice_2285,8);\
__declare_static_bit_vector(CONCAT_u8_u24_2287,24);\
__declare_static_bit_vector(MUX_2289,24);\
bit_vector_clear(&konst_2282);\
konst_2282.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_2282), &(BITSEL_u5_u1_2283));\
if (has_undefined_bit(&BITSEL_u5_u1_2283)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_2283 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_2283));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_2283)){bit_vector_slice(&(X3), &(slice_2285), 0);\
bit_vector_concatenate( &(slice_2285), &(ZERO_16), &(CONCAT_u8_u24_2287));\
bit_vector_cast_to_bit_vector(0, &(MUX_2289), &(CONCAT_u8_u24_2287));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_2289), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_2289));\
;

#define fpunit_exec_exec__i24_sll_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__i32_sll_inner_inarg_prep_macro__ __declare_static_bit_vector(X,32);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,6);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,32);\
__declare_static_bit_vector(X0,32);\
__declare_static_bit_vector(X1,32);\
__declare_static_bit_vector(X2,32);\
__declare_static_bit_vector(X3,32);\
__declare_static_bit_vector(X4,32);\

#define fpunit_exec_exec__i32_sll_assign_stmt_13322_c_macro_ __declare_static_bit_vector(konst_13314,6);\
bit_vector_clear(&konst_13314);\
__declare_static_bit_vector(BITSEL_u6_u1_13315,1);\
__declare_static_bit_vector(slice_13317,31);\
__declare_static_bit_vector(CONCAT_u31_u32_13319,32);\
__declare_static_bit_vector(MUX_13321,32);\
bit_vector_clear(&konst_13314);\
bit_vector_bitsel( &(S), &(konst_13314), &(BITSEL_u6_u1_13315));\
if (has_undefined_bit(&BITSEL_u6_u1_13315)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_13315 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_13315));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_13315)){bit_vector_slice(&(X), &(slice_13317), 0);\
bit_vector_concatenate( &(slice_13317), &(ZERO_1), &(CONCAT_u31_u32_13319));\
bit_vector_cast_to_bit_vector(0, &(MUX_13321), &(CONCAT_u31_u32_13319));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13321), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_13321));\
;

#define fpunit_exec_exec__i32_sll_assign_stmt_13333_c_macro_ __declare_static_bit_vector(konst_13325,6);\
bit_vector_clear(&konst_13325);\
konst_13325.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u6_u1_13326,1);\
__declare_static_bit_vector(slice_13328,30);\
__declare_static_bit_vector(CONCAT_u30_u32_13330,32);\
__declare_static_bit_vector(MUX_13332,32);\
bit_vector_clear(&konst_13325);\
konst_13325.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_13325), &(BITSEL_u6_u1_13326));\
if (has_undefined_bit(&BITSEL_u6_u1_13326)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_13326 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_13326));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_13326)){bit_vector_slice(&(X0), &(slice_13328), 0);\
bit_vector_concatenate( &(slice_13328), &(ZERO_2), &(CONCAT_u30_u32_13330));\
bit_vector_cast_to_bit_vector(0, &(MUX_13332), &(CONCAT_u30_u32_13330));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13332), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_13332));\
;

#define fpunit_exec_exec__i32_sll_assign_stmt_13344_c_macro_ __declare_static_bit_vector(konst_13336,6);\
bit_vector_clear(&konst_13336);\
konst_13336.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u6_u1_13337,1);\
__declare_static_bit_vector(slice_13339,28);\
__declare_static_bit_vector(CONCAT_u28_u32_13341,32);\
__declare_static_bit_vector(MUX_13343,32);\
bit_vector_clear(&konst_13336);\
konst_13336.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_13336), &(BITSEL_u6_u1_13337));\
if (has_undefined_bit(&BITSEL_u6_u1_13337)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_13337 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_13337));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_13337)){bit_vector_slice(&(X1), &(slice_13339), 0);\
bit_vector_concatenate( &(slice_13339), &(ZERO_4), &(CONCAT_u28_u32_13341));\
bit_vector_cast_to_bit_vector(0, &(MUX_13343), &(CONCAT_u28_u32_13341));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13343), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_13343));\
;

#define fpunit_exec_exec__i32_sll_assign_stmt_13355_c_macro_ __declare_static_bit_vector(konst_13347,6);\
bit_vector_clear(&konst_13347);\
konst_13347.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u6_u1_13348,1);\
__declare_static_bit_vector(slice_13350,24);\
__declare_static_bit_vector(CONCAT_u24_u32_13352,32);\
__declare_static_bit_vector(MUX_13354,32);\
bit_vector_clear(&konst_13347);\
konst_13347.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_13347), &(BITSEL_u6_u1_13348));\
if (has_undefined_bit(&BITSEL_u6_u1_13348)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_13348 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_13348));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_13348)){bit_vector_slice(&(X2), &(slice_13350), 0);\
bit_vector_concatenate( &(slice_13350), &(ZERO_8), &(CONCAT_u24_u32_13352));\
bit_vector_cast_to_bit_vector(0, &(MUX_13354), &(CONCAT_u24_u32_13352));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13354), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_13354));\
;

#define fpunit_exec_exec__i32_sll_assign_stmt_13366_c_macro_ __declare_static_bit_vector(konst_13358,6);\
bit_vector_clear(&konst_13358);\
konst_13358.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u6_u1_13359,1);\
__declare_static_bit_vector(slice_13361,16);\
__declare_static_bit_vector(CONCAT_u16_u32_13363,32);\
__declare_static_bit_vector(MUX_13365,32);\
bit_vector_clear(&konst_13358);\
konst_13358.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_13358), &(BITSEL_u6_u1_13359));\
if (has_undefined_bit(&BITSEL_u6_u1_13359)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_13359 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_13359));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_13359)){bit_vector_slice(&(X3), &(slice_13361), 0);\
bit_vector_concatenate( &(slice_13361), &(ZERO_16), &(CONCAT_u16_u32_13363));\
bit_vector_cast_to_bit_vector(0, &(MUX_13365), &(CONCAT_u16_u32_13363));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13365), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_13365));\
;

#define fpunit_exec_exec__i32_sll_assign_stmt_13374_c_macro_ __declare_static_bit_vector(konst_13369,6);\
bit_vector_clear(&konst_13369);\
konst_13369.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u6_u1_13370,1);\
__declare_static_bit_vector(konst_13371,32);\
bit_vector_clear(&konst_13371);\
__declare_static_bit_vector(MUX_13373,32);\
bit_vector_clear(&konst_13369);\
konst_13369.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_13369), &(BITSEL_u6_u1_13370));\
if (has_undefined_bit(&BITSEL_u6_u1_13370)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_13370 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_13370));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_13370)){bit_vector_clear(&konst_13371);\
bit_vector_cast_to_bit_vector(0, &(MUX_13373), &(konst_13371));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13373), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_13373));\
;

#define fpunit_exec_exec__i32_sll_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__i32_srl_inner_inarg_prep_macro__ __declare_static_bit_vector(X,32);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,5);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,32);\
__declare_static_bit_vector(X0,32);\
__declare_static_bit_vector(X1,32);\
__declare_static_bit_vector(X2,32);\
__declare_static_bit_vector(X3,32);\

#define fpunit_exec_exec__i32_srl_assign_stmt_7286_c_macro_ __declare_static_bit_vector(konst_7278,5);\
bit_vector_clear(&konst_7278);\
__declare_static_bit_vector(BITSEL_u5_u1_7279,1);\
__declare_static_bit_vector(slice_7282,31);\
__declare_static_bit_vector(CONCAT_u1_u32_7283,32);\
__declare_static_bit_vector(MUX_7285,32);\
bit_vector_clear(&konst_7278);\
bit_vector_bitsel( &(S), &(konst_7278), &(BITSEL_u5_u1_7279));\
if (has_undefined_bit(&BITSEL_u5_u1_7279)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_7279 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_7279));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_7279)){bit_vector_slice(&(X), &(slice_7282), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_7282), &(CONCAT_u1_u32_7283));\
bit_vector_cast_to_bit_vector(0, &(MUX_7285), &(CONCAT_u1_u32_7283));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7285), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_7285));\
;

#define fpunit_exec_exec__i32_srl_assign_stmt_7297_c_macro_ __declare_static_bit_vector(konst_7289,5);\
bit_vector_clear(&konst_7289);\
konst_7289.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u5_u1_7290,1);\
__declare_static_bit_vector(slice_7293,30);\
__declare_static_bit_vector(CONCAT_u2_u32_7294,32);\
__declare_static_bit_vector(MUX_7296,32);\
bit_vector_clear(&konst_7289);\
konst_7289.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_7289), &(BITSEL_u5_u1_7290));\
if (has_undefined_bit(&BITSEL_u5_u1_7290)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_7290 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_7290));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_7290)){bit_vector_slice(&(X0), &(slice_7293), 2);\
bit_vector_concatenate( &(ZERO_2), &(slice_7293), &(CONCAT_u2_u32_7294));\
bit_vector_cast_to_bit_vector(0, &(MUX_7296), &(CONCAT_u2_u32_7294));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7296), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_7296));\
;

#define fpunit_exec_exec__i32_srl_assign_stmt_7308_c_macro_ __declare_static_bit_vector(konst_7300,5);\
bit_vector_clear(&konst_7300);\
konst_7300.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u5_u1_7301,1);\
__declare_static_bit_vector(slice_7304,28);\
__declare_static_bit_vector(CONCAT_u4_u32_7305,32);\
__declare_static_bit_vector(MUX_7307,32);\
bit_vector_clear(&konst_7300);\
konst_7300.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_7300), &(BITSEL_u5_u1_7301));\
if (has_undefined_bit(&BITSEL_u5_u1_7301)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_7301 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_7301));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_7301)){bit_vector_slice(&(X1), &(slice_7304), 4);\
bit_vector_concatenate( &(ZERO_4), &(slice_7304), &(CONCAT_u4_u32_7305));\
bit_vector_cast_to_bit_vector(0, &(MUX_7307), &(CONCAT_u4_u32_7305));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7307), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_7307));\
;

#define fpunit_exec_exec__i32_srl_assign_stmt_7319_c_macro_ __declare_static_bit_vector(konst_7311,5);\
bit_vector_clear(&konst_7311);\
konst_7311.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u5_u1_7312,1);\
__declare_static_bit_vector(slice_7315,24);\
__declare_static_bit_vector(CONCAT_u8_u32_7316,32);\
__declare_static_bit_vector(MUX_7318,32);\
bit_vector_clear(&konst_7311);\
konst_7311.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_7311), &(BITSEL_u5_u1_7312));\
if (has_undefined_bit(&BITSEL_u5_u1_7312)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_7312 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_7312));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_7312)){bit_vector_slice(&(X2), &(slice_7315), 8);\
bit_vector_concatenate( &(ZERO_8), &(slice_7315), &(CONCAT_u8_u32_7316));\
bit_vector_cast_to_bit_vector(0, &(MUX_7318), &(CONCAT_u8_u32_7316));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7318), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_7318));\
;

#define fpunit_exec_exec__i32_srl_assign_stmt_7330_c_macro_ __declare_static_bit_vector(konst_7322,5);\
bit_vector_clear(&konst_7322);\
konst_7322.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u5_u1_7323,1);\
__declare_static_bit_vector(slice_7326,16);\
__declare_static_bit_vector(CONCAT_u16_u32_7327,32);\
__declare_static_bit_vector(MUX_7329,32);\
bit_vector_clear(&konst_7322);\
konst_7322.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_7322), &(BITSEL_u5_u1_7323));\
if (has_undefined_bit(&BITSEL_u5_u1_7323)) {fprintf(stderr, "Error: variable BITSEL_u5_u1_7323 has undefined value (%s) at test point.\n", to_string(&BITSEL_u5_u1_7323));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u5_u1_7323)){bit_vector_slice(&(X3), &(slice_7326), 16);\
bit_vector_concatenate( &(ZERO_16), &(slice_7326), &(CONCAT_u16_u32_7327));\
bit_vector_cast_to_bit_vector(0, &(MUX_7329), &(CONCAT_u16_u32_7327));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7329), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_7329));\
;

#define fpunit_exec_exec__i32_srl_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__i35_sll_inner_inarg_prep_macro__ __declare_static_bit_vector(X,35);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,6);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,35);\
__declare_static_bit_vector(X0,35);\
__declare_static_bit_vector(X1,35);\
__declare_static_bit_vector(X2,35);\
__declare_static_bit_vector(X3,35);\
__declare_static_bit_vector(X4,35);\

#define fpunit_exec_exec__i35_sll_assign_stmt_11404_c_macro_ __declare_static_bit_vector(konst_11396,6);\
bit_vector_clear(&konst_11396);\
__declare_static_bit_vector(BITSEL_u6_u1_11397,1);\
__declare_static_bit_vector(slice_11399,34);\
__declare_static_bit_vector(CONCAT_u34_u35_11401,35);\
__declare_static_bit_vector(MUX_11403,35);\
bit_vector_clear(&konst_11396);\
bit_vector_bitsel( &(S), &(konst_11396), &(BITSEL_u6_u1_11397));\
if (has_undefined_bit(&BITSEL_u6_u1_11397)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11397 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11397));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11397)){bit_vector_slice(&(X), &(slice_11399), 0);\
bit_vector_concatenate( &(slice_11399), &(ZERO_1), &(CONCAT_u34_u35_11401));\
bit_vector_cast_to_bit_vector(0, &(MUX_11403), &(CONCAT_u34_u35_11401));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11403), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_11403));\
;

#define fpunit_exec_exec__i35_sll_assign_stmt_11415_c_macro_ __declare_static_bit_vector(konst_11407,6);\
bit_vector_clear(&konst_11407);\
konst_11407.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u6_u1_11408,1);\
__declare_static_bit_vector(slice_11410,33);\
__declare_static_bit_vector(CONCAT_u33_u35_11412,35);\
__declare_static_bit_vector(MUX_11414,35);\
bit_vector_clear(&konst_11407);\
konst_11407.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_11407), &(BITSEL_u6_u1_11408));\
if (has_undefined_bit(&BITSEL_u6_u1_11408)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11408 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11408));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11408)){bit_vector_slice(&(X0), &(slice_11410), 0);\
bit_vector_concatenate( &(slice_11410), &(ZERO_2), &(CONCAT_u33_u35_11412));\
bit_vector_cast_to_bit_vector(0, &(MUX_11414), &(CONCAT_u33_u35_11412));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11414), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_11414));\
;

#define fpunit_exec_exec__i35_sll_assign_stmt_11426_c_macro_ __declare_static_bit_vector(konst_11418,6);\
bit_vector_clear(&konst_11418);\
konst_11418.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u6_u1_11419,1);\
__declare_static_bit_vector(slice_11421,31);\
__declare_static_bit_vector(CONCAT_u31_u35_11423,35);\
__declare_static_bit_vector(MUX_11425,35);\
bit_vector_clear(&konst_11418);\
konst_11418.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_11418), &(BITSEL_u6_u1_11419));\
if (has_undefined_bit(&BITSEL_u6_u1_11419)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11419 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11419));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11419)){bit_vector_slice(&(X1), &(slice_11421), 0);\
bit_vector_concatenate( &(slice_11421), &(ZERO_4), &(CONCAT_u31_u35_11423));\
bit_vector_cast_to_bit_vector(0, &(MUX_11425), &(CONCAT_u31_u35_11423));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11425), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_11425));\
;

#define fpunit_exec_exec__i35_sll_assign_stmt_11437_c_macro_ __declare_static_bit_vector(konst_11429,6);\
bit_vector_clear(&konst_11429);\
konst_11429.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u6_u1_11430,1);\
__declare_static_bit_vector(slice_11432,27);\
__declare_static_bit_vector(CONCAT_u27_u35_11434,35);\
__declare_static_bit_vector(MUX_11436,35);\
bit_vector_clear(&konst_11429);\
konst_11429.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_11429), &(BITSEL_u6_u1_11430));\
if (has_undefined_bit(&BITSEL_u6_u1_11430)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11430 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11430));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11430)){bit_vector_slice(&(X2), &(slice_11432), 0);\
bit_vector_concatenate( &(slice_11432), &(ZERO_8), &(CONCAT_u27_u35_11434));\
bit_vector_cast_to_bit_vector(0, &(MUX_11436), &(CONCAT_u27_u35_11434));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11436), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_11436));\
;

#define fpunit_exec_exec__i35_sll_assign_stmt_11448_c_macro_ __declare_static_bit_vector(konst_11440,6);\
bit_vector_clear(&konst_11440);\
konst_11440.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u6_u1_11441,1);\
__declare_static_bit_vector(slice_11443,19);\
__declare_static_bit_vector(CONCAT_u19_u35_11445,35);\
__declare_static_bit_vector(MUX_11447,35);\
bit_vector_clear(&konst_11440);\
konst_11440.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_11440), &(BITSEL_u6_u1_11441));\
if (has_undefined_bit(&BITSEL_u6_u1_11441)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11441 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11441));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11441)){bit_vector_slice(&(X3), &(slice_11443), 0);\
bit_vector_concatenate( &(slice_11443), &(ZERO_16), &(CONCAT_u19_u35_11445));\
bit_vector_cast_to_bit_vector(0, &(MUX_11447), &(CONCAT_u19_u35_11445));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11447), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_11447));\
;

#define fpunit_exec_exec__i35_sll_assign_stmt_11459_c_macro_ __declare_static_bit_vector(konst_11451,6);\
bit_vector_clear(&konst_11451);\
konst_11451.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u6_u1_11452,1);\
__declare_static_bit_vector(slice_11454,3);\
__declare_static_bit_vector(CONCAT_u3_u35_11456,35);\
__declare_static_bit_vector(MUX_11458,35);\
bit_vector_clear(&konst_11451);\
konst_11451.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_11451), &(BITSEL_u6_u1_11452));\
if (has_undefined_bit(&BITSEL_u6_u1_11452)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11452 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11452));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11452)){bit_vector_slice(&(X4), &(slice_11454), 0);\
bit_vector_concatenate( &(slice_11454), &(ZERO_32), &(CONCAT_u3_u35_11456));\
bit_vector_cast_to_bit_vector(0, &(MUX_11458), &(CONCAT_u3_u35_11456));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11458), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_11458));\
;

#define fpunit_exec_exec__i35_sll_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__i53_sll_inner_inarg_prep_macro__ __declare_static_bit_vector(X,53);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,6);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,53);\
__declare_static_bit_vector(X0,53);\
__declare_static_bit_vector(X1,53);\
__declare_static_bit_vector(X2,53);\
__declare_static_bit_vector(X3,53);\
__declare_static_bit_vector(X4,53);\

#define fpunit_exec_exec__i53_sll_assign_stmt_1863_c_macro_ __declare_static_bit_vector(konst_1855,6);\
bit_vector_clear(&konst_1855);\
__declare_static_bit_vector(BITSEL_u6_u1_1856,1);\
__declare_static_bit_vector(slice_1858,52);\
__declare_static_bit_vector(CONCAT_u52_u53_1860,53);\
__declare_static_bit_vector(MUX_1862,53);\
bit_vector_clear(&konst_1855);\
bit_vector_bitsel( &(S), &(konst_1855), &(BITSEL_u6_u1_1856));\
if (has_undefined_bit(&BITSEL_u6_u1_1856)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_1856 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_1856));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_1856)){bit_vector_slice(&(X), &(slice_1858), 0);\
bit_vector_concatenate( &(slice_1858), &(ZERO_1), &(CONCAT_u52_u53_1860));\
bit_vector_cast_to_bit_vector(0, &(MUX_1862), &(CONCAT_u52_u53_1860));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_1862), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_1862));\
;

#define fpunit_exec_exec__i53_sll_assign_stmt_1874_c_macro_ __declare_static_bit_vector(konst_1866,6);\
bit_vector_clear(&konst_1866);\
konst_1866.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u6_u1_1867,1);\
__declare_static_bit_vector(slice_1869,51);\
__declare_static_bit_vector(CONCAT_u51_u53_1871,53);\
__declare_static_bit_vector(MUX_1873,53);\
bit_vector_clear(&konst_1866);\
konst_1866.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_1866), &(BITSEL_u6_u1_1867));\
if (has_undefined_bit(&BITSEL_u6_u1_1867)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_1867 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_1867));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_1867)){bit_vector_slice(&(X0), &(slice_1869), 0);\
bit_vector_concatenate( &(slice_1869), &(ZERO_2), &(CONCAT_u51_u53_1871));\
bit_vector_cast_to_bit_vector(0, &(MUX_1873), &(CONCAT_u51_u53_1871));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_1873), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_1873));\
;

#define fpunit_exec_exec__i53_sll_assign_stmt_1886_c_macro_ __declare_static_bit_vector(konst_1877,6);\
bit_vector_clear(&konst_1877);\
konst_1877.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u6_u1_1878,1);\
__declare_static_bit_vector(slice_1881,49);\
__declare_static_bit_vector(CONCAT_u49_u53_1883,53);\
__declare_static_bit_vector(MUX_1885,53);\
bit_vector_clear(&konst_1877);\
konst_1877.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_1877), &(BITSEL_u6_u1_1878));\
if (has_undefined_bit(&BITSEL_u6_u1_1878)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_1878 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_1878));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_1878)){bit_vector_slice(&(X1), &(slice_1881), 0);\
bit_vector_concatenate( &(slice_1881), &(ZERO_4), &(CONCAT_u49_u53_1883));\
bit_vector_cast_to_bit_vector(0, &(MUX_1885), &(CONCAT_u49_u53_1883));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_1885), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_1885));\
;

#define fpunit_exec_exec__i53_sll_assign_stmt_1898_c_macro_ __declare_static_bit_vector(konst_1889,6);\
bit_vector_clear(&konst_1889);\
konst_1889.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u6_u1_1890,1);\
__declare_static_bit_vector(slice_1893,45);\
__declare_static_bit_vector(CONCAT_u45_u53_1895,53);\
__declare_static_bit_vector(MUX_1897,53);\
bit_vector_clear(&konst_1889);\
konst_1889.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_1889), &(BITSEL_u6_u1_1890));\
if (has_undefined_bit(&BITSEL_u6_u1_1890)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_1890 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_1890));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_1890)){bit_vector_slice(&(X2), &(slice_1893), 0);\
bit_vector_concatenate( &(slice_1893), &(ZERO_8), &(CONCAT_u45_u53_1895));\
bit_vector_cast_to_bit_vector(0, &(MUX_1897), &(CONCAT_u45_u53_1895));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_1897), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_1897));\
;

#define fpunit_exec_exec__i53_sll_assign_stmt_1910_c_macro_ __declare_static_bit_vector(konst_1901,6);\
bit_vector_clear(&konst_1901);\
konst_1901.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u6_u1_1902,1);\
__declare_static_bit_vector(slice_1905,37);\
__declare_static_bit_vector(CONCAT_u37_u53_1907,53);\
__declare_static_bit_vector(MUX_1909,53);\
bit_vector_clear(&konst_1901);\
konst_1901.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_1901), &(BITSEL_u6_u1_1902));\
if (has_undefined_bit(&BITSEL_u6_u1_1902)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_1902 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_1902));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_1902)){bit_vector_slice(&(X3), &(slice_1905), 0);\
bit_vector_concatenate( &(slice_1905), &(ZERO_16), &(CONCAT_u37_u53_1907));\
bit_vector_cast_to_bit_vector(0, &(MUX_1909), &(CONCAT_u37_u53_1907));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_1909), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_1909));\
;

#define fpunit_exec_exec__i53_sll_assign_stmt_1922_c_macro_ __declare_static_bit_vector(konst_1913,6);\
bit_vector_clear(&konst_1913);\
konst_1913.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u6_u1_1914,1);\
__declare_static_bit_vector(slice_1917,21);\
__declare_static_bit_vector(CONCAT_u21_u53_1919,53);\
__declare_static_bit_vector(MUX_1921,53);\
bit_vector_clear(&konst_1913);\
konst_1913.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_1913), &(BITSEL_u6_u1_1914));\
if (has_undefined_bit(&BITSEL_u6_u1_1914)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_1914 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_1914));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_1914)){bit_vector_slice(&(X4), &(slice_1917), 0);\
bit_vector_concatenate( &(slice_1917), &(ZERO_32), &(CONCAT_u21_u53_1919));\
bit_vector_cast_to_bit_vector(0, &(MUX_1921), &(CONCAT_u21_u53_1919));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_1921), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_1921));\
;

#define fpunit_exec_exec__i53_sll_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__i64_sll_inner_inarg_prep_macro__ __declare_static_bit_vector(X,64);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,6);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,64);\
__declare_static_bit_vector(X0,64);\
__declare_static_bit_vector(X1,64);\
__declare_static_bit_vector(X2,64);\
__declare_static_bit_vector(X3,64);\
__declare_static_bit_vector(X4,64);\

#define fpunit_exec_exec__i64_sll_assign_stmt_10396_c_macro_ __declare_static_bit_vector(konst_10388,6);\
bit_vector_clear(&konst_10388);\
__declare_static_bit_vector(BITSEL_u6_u1_10389,1);\
__declare_static_bit_vector(slice_10391,63);\
__declare_static_bit_vector(CONCAT_u63_u64_10393,64);\
__declare_static_bit_vector(MUX_10395,64);\
bit_vector_clear(&konst_10388);\
bit_vector_bitsel( &(S), &(konst_10388), &(BITSEL_u6_u1_10389));\
if (has_undefined_bit(&BITSEL_u6_u1_10389)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_10389 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_10389));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_10389)){bit_vector_slice(&(X), &(slice_10391), 0);\
bit_vector_concatenate( &(slice_10391), &(ZERO_1), &(CONCAT_u63_u64_10393));\
bit_vector_cast_to_bit_vector(0, &(MUX_10395), &(CONCAT_u63_u64_10393));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10395), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_10395));\
;

#define fpunit_exec_exec__i64_sll_assign_stmt_10407_c_macro_ __declare_static_bit_vector(konst_10399,6);\
bit_vector_clear(&konst_10399);\
konst_10399.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u6_u1_10400,1);\
__declare_static_bit_vector(slice_10402,62);\
__declare_static_bit_vector(CONCAT_u62_u64_10404,64);\
__declare_static_bit_vector(MUX_10406,64);\
bit_vector_clear(&konst_10399);\
konst_10399.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_10399), &(BITSEL_u6_u1_10400));\
if (has_undefined_bit(&BITSEL_u6_u1_10400)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_10400 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_10400));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_10400)){bit_vector_slice(&(X0), &(slice_10402), 0);\
bit_vector_concatenate( &(slice_10402), &(ZERO_2), &(CONCAT_u62_u64_10404));\
bit_vector_cast_to_bit_vector(0, &(MUX_10406), &(CONCAT_u62_u64_10404));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10406), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_10406));\
;

#define fpunit_exec_exec__i64_sll_assign_stmt_10418_c_macro_ __declare_static_bit_vector(konst_10410,6);\
bit_vector_clear(&konst_10410);\
konst_10410.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u6_u1_10411,1);\
__declare_static_bit_vector(slice_10413,60);\
__declare_static_bit_vector(CONCAT_u60_u64_10415,64);\
__declare_static_bit_vector(MUX_10417,64);\
bit_vector_clear(&konst_10410);\
konst_10410.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_10410), &(BITSEL_u6_u1_10411));\
if (has_undefined_bit(&BITSEL_u6_u1_10411)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_10411 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_10411));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_10411)){bit_vector_slice(&(X1), &(slice_10413), 0);\
bit_vector_concatenate( &(slice_10413), &(ZERO_4), &(CONCAT_u60_u64_10415));\
bit_vector_cast_to_bit_vector(0, &(MUX_10417), &(CONCAT_u60_u64_10415));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10417), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_10417));\
;

#define fpunit_exec_exec__i64_sll_assign_stmt_10429_c_macro_ __declare_static_bit_vector(konst_10421,6);\
bit_vector_clear(&konst_10421);\
konst_10421.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u6_u1_10422,1);\
__declare_static_bit_vector(slice_10424,56);\
__declare_static_bit_vector(CONCAT_u56_u64_10426,64);\
__declare_static_bit_vector(MUX_10428,64);\
bit_vector_clear(&konst_10421);\
konst_10421.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_10421), &(BITSEL_u6_u1_10422));\
if (has_undefined_bit(&BITSEL_u6_u1_10422)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_10422 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_10422));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_10422)){bit_vector_slice(&(X2), &(slice_10424), 0);\
bit_vector_concatenate( &(slice_10424), &(ZERO_8), &(CONCAT_u56_u64_10426));\
bit_vector_cast_to_bit_vector(0, &(MUX_10428), &(CONCAT_u56_u64_10426));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10428), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_10428));\
;

#define fpunit_exec_exec__i64_sll_assign_stmt_10440_c_macro_ __declare_static_bit_vector(konst_10432,6);\
bit_vector_clear(&konst_10432);\
konst_10432.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u6_u1_10433,1);\
__declare_static_bit_vector(slice_10435,48);\
__declare_static_bit_vector(CONCAT_u48_u64_10437,64);\
__declare_static_bit_vector(MUX_10439,64);\
bit_vector_clear(&konst_10432);\
konst_10432.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_10432), &(BITSEL_u6_u1_10433));\
if (has_undefined_bit(&BITSEL_u6_u1_10433)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_10433 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_10433));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_10433)){bit_vector_slice(&(X3), &(slice_10435), 0);\
bit_vector_concatenate( &(slice_10435), &(ZERO_16), &(CONCAT_u48_u64_10437));\
bit_vector_cast_to_bit_vector(0, &(MUX_10439), &(CONCAT_u48_u64_10437));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10439), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_10439));\
;

#define fpunit_exec_exec__i64_sll_assign_stmt_10451_c_macro_ __declare_static_bit_vector(konst_10443,6);\
bit_vector_clear(&konst_10443);\
konst_10443.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u6_u1_10444,1);\
__declare_static_bit_vector(slice_10446,32);\
__declare_static_bit_vector(CONCAT_u32_u64_10448,64);\
__declare_static_bit_vector(MUX_10450,64);\
bit_vector_clear(&konst_10443);\
konst_10443.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_10443), &(BITSEL_u6_u1_10444));\
if (has_undefined_bit(&BITSEL_u6_u1_10444)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_10444 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_10444));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_10444)){bit_vector_slice(&(X4), &(slice_10446), 0);\
bit_vector_concatenate( &(slice_10446), &(ZERO_32), &(CONCAT_u32_u64_10448));\
bit_vector_cast_to_bit_vector(0, &(MUX_10450), &(CONCAT_u32_u64_10448));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10450), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_10450));\
;

#define fpunit_exec_exec__i64_sll_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__i64_srl_inner_inarg_prep_macro__ __declare_static_bit_vector(X,64);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,6);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,64);\
__declare_static_bit_vector(X0,64);\
__declare_static_bit_vector(X1,64);\
__declare_static_bit_vector(X2,64);\
__declare_static_bit_vector(X3,64);\
__declare_static_bit_vector(X4,64);\

#define fpunit_exec_exec__i64_srl_assign_stmt_7421_c_macro_ __declare_static_bit_vector(konst_7413,6);\
bit_vector_clear(&konst_7413);\
__declare_static_bit_vector(BITSEL_u6_u1_7414,1);\
__declare_static_bit_vector(slice_7417,63);\
__declare_static_bit_vector(CONCAT_u1_u64_7418,64);\
__declare_static_bit_vector(MUX_7420,64);\
bit_vector_clear(&konst_7413);\
bit_vector_bitsel( &(S), &(konst_7413), &(BITSEL_u6_u1_7414));\
if (has_undefined_bit(&BITSEL_u6_u1_7414)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_7414 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_7414));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_7414)){bit_vector_slice(&(X), &(slice_7417), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_7417), &(CONCAT_u1_u64_7418));\
bit_vector_cast_to_bit_vector(0, &(MUX_7420), &(CONCAT_u1_u64_7418));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7420), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_7420));\
;

#define fpunit_exec_exec__i64_srl_assign_stmt_7432_c_macro_ __declare_static_bit_vector(konst_7424,6);\
bit_vector_clear(&konst_7424);\
konst_7424.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u6_u1_7425,1);\
__declare_static_bit_vector(slice_7428,62);\
__declare_static_bit_vector(CONCAT_u2_u64_7429,64);\
__declare_static_bit_vector(MUX_7431,64);\
bit_vector_clear(&konst_7424);\
konst_7424.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_7424), &(BITSEL_u6_u1_7425));\
if (has_undefined_bit(&BITSEL_u6_u1_7425)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_7425 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_7425));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_7425)){bit_vector_slice(&(X0), &(slice_7428), 2);\
bit_vector_concatenate( &(ZERO_2), &(slice_7428), &(CONCAT_u2_u64_7429));\
bit_vector_cast_to_bit_vector(0, &(MUX_7431), &(CONCAT_u2_u64_7429));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7431), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_7431));\
;

#define fpunit_exec_exec__i64_srl_assign_stmt_7443_c_macro_ __declare_static_bit_vector(konst_7435,6);\
bit_vector_clear(&konst_7435);\
konst_7435.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u6_u1_7436,1);\
__declare_static_bit_vector(slice_7439,60);\
__declare_static_bit_vector(CONCAT_u4_u64_7440,64);\
__declare_static_bit_vector(MUX_7442,64);\
bit_vector_clear(&konst_7435);\
konst_7435.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_7435), &(BITSEL_u6_u1_7436));\
if (has_undefined_bit(&BITSEL_u6_u1_7436)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_7436 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_7436));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_7436)){bit_vector_slice(&(X1), &(slice_7439), 4);\
bit_vector_concatenate( &(ZERO_4), &(slice_7439), &(CONCAT_u4_u64_7440));\
bit_vector_cast_to_bit_vector(0, &(MUX_7442), &(CONCAT_u4_u64_7440));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7442), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_7442));\
;

#define fpunit_exec_exec__i64_srl_assign_stmt_7454_c_macro_ __declare_static_bit_vector(konst_7446,6);\
bit_vector_clear(&konst_7446);\
konst_7446.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u6_u1_7447,1);\
__declare_static_bit_vector(slice_7450,56);\
__declare_static_bit_vector(CONCAT_u8_u64_7451,64);\
__declare_static_bit_vector(MUX_7453,64);\
bit_vector_clear(&konst_7446);\
konst_7446.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_7446), &(BITSEL_u6_u1_7447));\
if (has_undefined_bit(&BITSEL_u6_u1_7447)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_7447 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_7447));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_7447)){bit_vector_slice(&(X2), &(slice_7450), 8);\
bit_vector_concatenate( &(ZERO_8), &(slice_7450), &(CONCAT_u8_u64_7451));\
bit_vector_cast_to_bit_vector(0, &(MUX_7453), &(CONCAT_u8_u64_7451));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7453), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_7453));\
;

#define fpunit_exec_exec__i64_srl_assign_stmt_7465_c_macro_ __declare_static_bit_vector(konst_7457,6);\
bit_vector_clear(&konst_7457);\
konst_7457.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u6_u1_7458,1);\
__declare_static_bit_vector(slice_7461,48);\
__declare_static_bit_vector(CONCAT_u16_u64_7462,64);\
__declare_static_bit_vector(MUX_7464,64);\
bit_vector_clear(&konst_7457);\
konst_7457.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_7457), &(BITSEL_u6_u1_7458));\
if (has_undefined_bit(&BITSEL_u6_u1_7458)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_7458 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_7458));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_7458)){bit_vector_slice(&(X3), &(slice_7461), 16);\
bit_vector_concatenate( &(ZERO_16), &(slice_7461), &(CONCAT_u16_u64_7462));\
bit_vector_cast_to_bit_vector(0, &(MUX_7464), &(CONCAT_u16_u64_7462));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7464), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_7464));\
;

#define fpunit_exec_exec__i64_srl_assign_stmt_7476_c_macro_ __declare_static_bit_vector(konst_7468,6);\
bit_vector_clear(&konst_7468);\
konst_7468.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u6_u1_7469,1);\
__declare_static_bit_vector(slice_7472,32);\
__declare_static_bit_vector(CONCAT_u32_u64_7473,64);\
__declare_static_bit_vector(MUX_7475,64);\
bit_vector_clear(&konst_7468);\
konst_7468.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_7468), &(BITSEL_u6_u1_7469));\
if (has_undefined_bit(&BITSEL_u6_u1_7469)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_7469 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_7469));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_7469)){bit_vector_slice(&(X4), &(slice_7472), 32);\
bit_vector_concatenate( &(ZERO_32), &(slice_7472), &(CONCAT_u32_u64_7473));\
bit_vector_cast_to_bit_vector(0, &(MUX_7475), &(CONCAT_u32_u64_7473));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7475), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_7475));\
;

#define fpunit_exec_exec__i64_srl_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__increment_16_inner_inarg_prep_macro__ __declare_static_bit_vector(A,16);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,16);\
__declare_static_bit_vector(AH,8);\
__declare_static_bit_vector(AL,8);\
__declare_static_bit_vector(BL,8);\
__declare_static_bit_vector(tBH,8);\

#define fpunit_exec_exec__increment_16_assign_stmt_9480_c_macro_ __declare_static_bit_vector(slice_9479,8);\
bit_vector_slice(&(A), &(slice_9479), 8);\
bit_vector_cast_to_bit_vector(0, &(AH), &(slice_9479));\
;

#define fpunit_exec_exec__increment_16_assign_stmt_9484_c_macro_ __declare_static_bit_vector(slice_9483,8);\
bit_vector_slice(&(A), &(slice_9483), 0);\
bit_vector_cast_to_bit_vector(0, &(AL), &(slice_9483));\
;

#define fpunit_exec_exec__increment_16_assign_stmt_9489_c_macro_ __declare_static_bit_vector(konst_9487,8);\
bit_vector_clear(&konst_9487);\
konst_9487.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u8_u8_9488,8);\
bit_vector_clear(&konst_9487);\
konst_9487.val.byte_array[0] = 1;\
bit_vector_plus( &(AL), &(konst_9487), &(ADD_u8_u8_9488));\
bit_vector_cast_to_bit_vector(0, &(BL), &(ADD_u8_u8_9488));\
;

#define fpunit_exec_exec__increment_16_assign_stmt_9494_c_macro_ __declare_static_bit_vector(konst_9492,8);\
bit_vector_clear(&konst_9492);\
konst_9492.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u8_u8_9493,8);\
bit_vector_clear(&konst_9492);\
konst_9492.val.byte_array[0] = 1;\
bit_vector_plus( &(AH), &(konst_9492), &(ADD_u8_u8_9493));\
bit_vector_cast_to_bit_vector(0, &(tBH), &(ADD_u8_u8_9493));\
;

#define fpunit_exec_exec__increment_16_assign_stmt_9505_c_macro_ __declare_static_bit_vector(NOT_u8_u8_9497,8);\
__declare_static_bit_vector(konst_9498,8);\
bit_vector_clear(&konst_9498);\
__declare_static_bit_vector(EQ_u8_u1_9499,1);\
__declare_static_bit_vector(MUX_9502,8);\
__declare_static_bit_vector(CONCAT_u8_u16_9504,16);\
bit_vector_not( &(AL), &(NOT_u8_u8_9497));\
bit_vector_clear(&konst_9498);\
bit_vector_equal(0, &(NOT_u8_u8_9497), &(konst_9498), &(EQ_u8_u1_9499));\
if (has_undefined_bit(&EQ_u8_u1_9499)) {fprintf(stderr, "Error: variable EQ_u8_u1_9499 has undefined value (%s) at test point.\n", to_string(&EQ_u8_u1_9499));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u8_u1_9499)){bit_vector_cast_to_bit_vector(0, &(MUX_9502), &(tBH));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9502), &(AH));\
}bit_vector_concatenate( &(MUX_9502), &(BL), &(CONCAT_u8_u16_9504));\
bit_vector_cast_to_bit_vector(0, &(B), &(CONCAT_u8_u16_9504));\
;

#define fpunit_exec_exec__increment_16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pB)), &(B));\
;

#define fpunit_exec_exec__increment_16_outer_arg_decl_macro__ __declare_static_bit_vector(__A, 16);\
bit_vector_assign_uint64(0, &__A, A);\
__declare_static_bit_vector(__B, 16);\
;

#define fpunit_exec_exec__increment_16_outer_op_xfer_macro__  *B =  bit_vector_to_uint64(0, &__B);\
;

#define fpunit_exec_exec__increment_32_inner_inarg_prep_macro__ __declare_static_bit_vector(A,32);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,32);\
__declare_static_bit_vector(AH,16);\
__declare_static_bit_vector(AL,16);\
__declare_static_bit_vector(BL,16);\
__declare_static_bit_vector(tBH,16);\

#define fpunit_exec_exec__increment_32_assign_stmt_13281_c_macro_ __declare_static_bit_vector(slice_13280,16);\
bit_vector_slice(&(A), &(slice_13280), 16);\
bit_vector_cast_to_bit_vector(0, &(AH), &(slice_13280));\
;

#define fpunit_exec_exec__increment_32_assign_stmt_13285_c_macro_ __declare_static_bit_vector(slice_13284,16);\
bit_vector_slice(&(A), &(slice_13284), 0);\
bit_vector_cast_to_bit_vector(0, &(AL), &(slice_13284));\
;

#define fpunit_exec_exec__increment_32_assign_stmt_13290_c_macro_ __declare_static_bit_vector(konst_13288,16);\
bit_vector_clear(&konst_13288);\
konst_13288.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u16_u16_13289,16);\
bit_vector_clear(&konst_13288);\
konst_13288.val.byte_array[0] = 1;\
bit_vector_plus( &(AL), &(konst_13288), &(ADD_u16_u16_13289));\
bit_vector_cast_to_bit_vector(0, &(BL), &(ADD_u16_u16_13289));\
;

#define fpunit_exec_exec__increment_32_assign_stmt_13295_c_macro_ __declare_static_bit_vector(konst_13293,16);\
bit_vector_clear(&konst_13293);\
konst_13293.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u16_u16_13294,16);\
bit_vector_clear(&konst_13293);\
konst_13293.val.byte_array[0] = 1;\
bit_vector_plus( &(AH), &(konst_13293), &(ADD_u16_u16_13294));\
bit_vector_cast_to_bit_vector(0, &(tBH), &(ADD_u16_u16_13294));\
;

#define fpunit_exec_exec__increment_32_assign_stmt_13306_c_macro_ __declare_static_bit_vector(NOT_u16_u16_13298,16);\
__declare_static_bit_vector(konst_13299,16);\
bit_vector_clear(&konst_13299);\
__declare_static_bit_vector(EQ_u16_u1_13300,1);\
__declare_static_bit_vector(MUX_13303,16);\
__declare_static_bit_vector(CONCAT_u16_u32_13305,32);\
bit_vector_not( &(AL), &(NOT_u16_u16_13298));\
bit_vector_clear(&konst_13299);\
bit_vector_equal(0, &(NOT_u16_u16_13298), &(konst_13299), &(EQ_u16_u1_13300));\
if (has_undefined_bit(&EQ_u16_u1_13300)) {fprintf(stderr, "Error: variable EQ_u16_u1_13300 has undefined value (%s) at test point.\n", to_string(&EQ_u16_u1_13300));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u16_u1_13300)){bit_vector_cast_to_bit_vector(0, &(MUX_13303), &(tBH));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13303), &(AH));\
}bit_vector_concatenate( &(MUX_13303), &(BL), &(CONCAT_u16_u32_13305));\
bit_vector_cast_to_bit_vector(0, &(B), &(CONCAT_u16_u32_13305));\
;

#define fpunit_exec_exec__increment_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pB)), &(B));\
;

#define fpunit_exec_exec__increment_32_outer_arg_decl_macro__ __declare_static_bit_vector(__A, 32);\
bit_vector_assign_uint64(0, &__A, A);\
__declare_static_bit_vector(__B, 32);\
;

#define fpunit_exec_exec__increment_32_outer_op_xfer_macro__  *B =  bit_vector_to_uint64(0, &__B);\
;

#define fpunit_exec_exec__increment_64_inner_inarg_prep_macro__ __declare_static_bit_vector(A,64);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,64);\
__declare_static_bit_vector(AH,32);\
__declare_static_bit_vector(AL,32);\
__declare_static_bit_vector(BL,32);\
__declare_static_bit_vector(tBH,32);\

#define fpunit_exec_exec__increment_64_assign_stmt_19621_c_macro_ __declare_static_bit_vector(slice_19620,32);\
bit_vector_slice(&(A), &(slice_19620), 32);\
bit_vector_cast_to_bit_vector(0, &(AH), &(slice_19620));\
;

#define fpunit_exec_exec__increment_64_assign_stmt_19625_c_macro_ __declare_static_bit_vector(slice_19624,32);\
bit_vector_slice(&(A), &(slice_19624), 0);\
bit_vector_cast_to_bit_vector(0, &(AL), &(slice_19624));\
;

#define fpunit_exec_exec__increment_64_call_stmt_19628_c_macro_ _fpunit_exec_exec_increment_32_( &(AL), &(BL));\
;

#define fpunit_exec_exec__increment_64_call_stmt_19631_c_macro_ _fpunit_exec_exec_increment_32_( &(AH), &(tBH));\
;

#define fpunit_exec_exec__increment_64_assign_stmt_19642_c_macro_ __declare_static_bit_vector(NOT_u32_u32_19634,32);\
__declare_static_bit_vector(konst_19635,32);\
bit_vector_clear(&konst_19635);\
__declare_static_bit_vector(EQ_u32_u1_19636,1);\
__declare_static_bit_vector(MUX_19639,32);\
__declare_static_bit_vector(CONCAT_u32_u64_19641,64);\
bit_vector_not( &(AL), &(NOT_u32_u32_19634));\
bit_vector_clear(&konst_19635);\
bit_vector_equal(0, &(NOT_u32_u32_19634), &(konst_19635), &(EQ_u32_u1_19636));\
if (has_undefined_bit(&EQ_u32_u1_19636)) {fprintf(stderr, "Error: variable EQ_u32_u1_19636 has undefined value (%s) at test point.\n", to_string(&EQ_u32_u1_19636));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u32_u1_19636)){bit_vector_cast_to_bit_vector(0, &(MUX_19639), &(tBH));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19639), &(AH));\
}bit_vector_concatenate( &(MUX_19639), &(BL), &(CONCAT_u32_u64_19641));\
bit_vector_cast_to_bit_vector(0, &(B), &(CONCAT_u32_u64_19641));\
;

#define fpunit_exec_exec__increment_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pB)), &(B));\
;

#define fpunit_exec_exec__increment_64_outer_arg_decl_macro__ __declare_static_bit_vector(__A, 64);\
bit_vector_assign_uint64(0, &__A, A);\
__declare_static_bit_vector(__B, 64);\
;

#define fpunit_exec_exec__increment_64_outer_op_xfer_macro__  *B =  bit_vector_to_uint64(0, &__B);\
;

#define fpunit_exec_exec__isSnand_inner_inarg_prep_macro__ static double f;\
f = (*__pf);\
__declare_static_bit_vector(is_snan,1);\
__declare_static_bit_vector(pos_normal,1);\
__declare_static_bit_vector(neg_normal,1);\
__declare_static_bit_vector(pos_denormal,1);\
__declare_static_bit_vector(neg_denormal,1);\
__declare_static_bit_vector(qnan,1);\
__declare_static_bit_vector(pos_inf,1);\
__declare_static_bit_vector(neg_inf,1);\
__declare_static_bit_vector(pos_zero,1);\
__declare_static_bit_vector(neg_zero,1);\

#define fpunit_exec_exec__isSnand_call_stmt_19658_c_macro_ _fpunit_exec_exec_classFp64_( &(f), &(pos_normal), &(neg_normal), &(pos_denormal), &(neg_denormal), &(qnan), &(is_snan), &(pos_inf), &(neg_inf), &(pos_zero), &(neg_zero));\
;

#define fpunit_exec_exec__isSnand_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pis_snan)), &(is_snan));\
;

#define fpunit_exec_exec__isSnans_inner_inarg_prep_macro__ static float f;\
f = (*__pf);\
__declare_static_bit_vector(is_snan,1);\
__declare_static_bit_vector(pos_normal,1);\
__declare_static_bit_vector(neg_normal,1);\
__declare_static_bit_vector(pos_denormal,1);\
__declare_static_bit_vector(neg_denormal,1);\
__declare_static_bit_vector(qnan,1);\
__declare_static_bit_vector(pos_inf,1);\
__declare_static_bit_vector(neg_inf,1);\
__declare_static_bit_vector(pos_zero,1);\
__declare_static_bit_vector(neg_zero,1);\

#define fpunit_exec_exec__isSnans_call_stmt_19674_c_macro_ _fpunit_exec_exec_classFp32_( &(f), &(pos_normal), &(neg_normal), &(pos_denormal), &(neg_denormal), &(qnan), &(is_snan), &(pos_inf), &(neg_inf), &(pos_zero), &(neg_zero));\
;

#define fpunit_exec_exec__isSnans_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pis_snan)), &(is_snan));\
;

#define fpunit_exec_exec__make_new_estimate_32_inner_inarg_prep_macro__ __declare_static_bit_vector(last_root_estimate,32);\
bit_vector_cast_to_bit_vector(0, &(last_root_estimate), &((*__plast_root_estimate)));\
__declare_static_bit_vector(last_residue,34);\
bit_vector_cast_to_bit_vector(0, &(last_residue), &((*__plast_residue)));\
__declare_static_bit_vector(last_shifted_index_word,32);\
bit_vector_cast_to_bit_vector(0, &(last_shifted_index_word), &((*__plast_shifted_index_word)));\
__declare_static_bit_vector(current_root_estimate,32);\
__declare_static_bit_vector(current_residue,34);\
__declare_static_bit_vector(current_residue_sign,1);\
__declare_static_bit_vector(current_shifted_index_word,32);\
__declare_static_bit_vector(current_shifted_index_word_right_shifted,32);\
__declare_static_bit_vector(current_increment,34);\

#define fpunit_exec_exec__make_new_estimate_32_stmt_14887_c_macro_ uint32_t fpunit_exec_exec__make_new_estimate_32_stmt_14887_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__make_new_estimate_32_stmt_14887_c_macro___print_counter,"make_new_estimate_32_in_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_32_stmt_14887_c_macro___print_counter,"last_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_32_stmt_14887_c_macro___print_counter,"last_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_32_stmt_14887_c_macro___print_counter,"last_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__make_new_estimate_32_assign_stmt_14893_c_macro_ __declare_static_bit_vector(slice_14891,31);\
__declare_static_bit_vector(CONCAT_u1_u32_14892,32);\
bit_vector_slice(&(last_shifted_index_word), &(slice_14891), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_14891), &(CONCAT_u1_u32_14892));\
bit_vector_cast_to_bit_vector(0, &(current_shifted_index_word), &(CONCAT_u1_u32_14892));\
;

#define fpunit_exec_exec__make_new_estimate_32_assign_stmt_14898_c_macro_ __declare_static_bit_vector(OR_u32_u32_14897,32);\
bit_vector_or(&(last_root_estimate), &(current_shifted_index_word), &(OR_u32_u32_14897));\
bit_vector_cast_to_bit_vector(0, &(current_root_estimate), &(OR_u32_u32_14897));\
;

#define fpunit_exec_exec__make_new_estimate_32_assign_stmt_14904_c_macro_ __declare_static_bit_vector(slice_14902,31);\
__declare_static_bit_vector(CONCAT_u1_u32_14903,32);\
bit_vector_slice(&(current_shifted_index_word), &(slice_14902), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_14902), &(CONCAT_u1_u32_14903));\
bit_vector_cast_to_bit_vector(0, &(current_shifted_index_word_right_shifted), &(CONCAT_u1_u32_14903));\
;

#define fpunit_exec_exec__make_new_estimate_32_assign_stmt_14913_c_macro_ __declare_static_bit_vector(OR_u32_u32_14909,32);\
__declare_static_bit_vector(CONCAT_u1_u33_14910,33);\
__declare_static_bit_vector(CONCAT_u33_u34_14912,34);\
bit_vector_or(&(last_root_estimate), &(current_shifted_index_word_right_shifted), &(OR_u32_u32_14909));\
bit_vector_concatenate( &(ZERO_1), &(OR_u32_u32_14909), &(CONCAT_u1_u33_14910));\
bit_vector_concatenate( &(CONCAT_u1_u33_14910), &(ZERO_1), &(CONCAT_u33_u34_14912));\
bit_vector_cast_to_bit_vector(0, &(current_increment), &(CONCAT_u33_u34_14912));\
;

#define fpunit_exec_exec__make_new_estimate_32_assign_stmt_14918_c_macro_ __declare_static_bit_vector(SUB_u34_u34_14917,34);\
bit_vector_minus( &(last_residue), &(current_increment), &(SUB_u34_u34_14917));\
bit_vector_cast_to_bit_vector(0, &(current_residue), &(SUB_u34_u34_14917));\
;

#define fpunit_exec_exec__make_new_estimate_32_assign_stmt_14923_c_macro_ __declare_static_bit_vector(ULT_u34_u1_14922,1);\
bit_vector_less(0, &(last_residue), &(current_increment), &(ULT_u34_u1_14922));\
bit_vector_cast_to_bit_vector(0, &(current_residue_sign), &(ULT_u34_u1_14922));\
;

#define fpunit_exec_exec__make_new_estimate_32_stmt_14930_c_macro_ uint32_t fpunit_exec_exec__make_new_estimate_32_stmt_14930_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__make_new_estimate_32_stmt_14930_c_macro___print_counter,"make_new_estimate_32_outargs");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_32_stmt_14930_c_macro___print_counter,"current_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_32_stmt_14930_c_macro___print_counter,"current_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_32_stmt_14930_c_macro___print_counter,"current_shifted_index_word_right_shifted");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_shifted_index_word_right_shifted)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_32_stmt_14930_c_macro___print_counter,"current_increment");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_increment)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_32_stmt_14930_c_macro___print_counter,"current_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_32_stmt_14930_c_macro___print_counter,"current_residue_sign");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_residue_sign)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__make_new_estimate_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pcurrent_root_estimate)), &(current_root_estimate));\
bit_vector_cast_to_bit_vector(0, &((*__pcurrent_residue)), &(current_residue));\
bit_vector_cast_to_bit_vector(0, &((*__pcurrent_residue_sign)), &(current_residue_sign));\
;

#define fpunit_exec_exec__make_new_estimate_56_inner_inarg_prep_macro__ __declare_static_bit_vector(last_root_estimate,56);\
bit_vector_cast_to_bit_vector(0, &(last_root_estimate), &((*__plast_root_estimate)));\
__declare_static_bit_vector(last_residue,58);\
bit_vector_cast_to_bit_vector(0, &(last_residue), &((*__plast_residue)));\
__declare_static_bit_vector(last_shifted_index_word,56);\
bit_vector_cast_to_bit_vector(0, &(last_shifted_index_word), &((*__plast_shifted_index_word)));\
__declare_static_bit_vector(current_root_estimate,56);\
__declare_static_bit_vector(current_residue,58);\
__declare_static_bit_vector(current_residue_sign,1);\
__declare_static_bit_vector(current_shifted_index_word,56);\
__declare_static_bit_vector(current_shifted_index_word_right_shifted,56);\
__declare_static_bit_vector(current_increment,58);\

#define fpunit_exec_exec__make_new_estimate_56_stmt_15964_c_macro_ uint32_t fpunit_exec_exec__make_new_estimate_56_stmt_15964_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__make_new_estimate_56_stmt_15964_c_macro___print_counter,"make_new_estimate_56_in_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_56_stmt_15964_c_macro___print_counter,"last_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_56_stmt_15964_c_macro___print_counter,"last_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_56_stmt_15964_c_macro___print_counter,"last_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__make_new_estimate_56_assign_stmt_15970_c_macro_ __declare_static_bit_vector(slice_15968,55);\
__declare_static_bit_vector(CONCAT_u1_u56_15969,56);\
bit_vector_slice(&(last_shifted_index_word), &(slice_15968), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_15968), &(CONCAT_u1_u56_15969));\
bit_vector_cast_to_bit_vector(0, &(current_shifted_index_word), &(CONCAT_u1_u56_15969));\
;

#define fpunit_exec_exec__make_new_estimate_56_assign_stmt_15975_c_macro_ __declare_static_bit_vector(OR_u56_u56_15974,56);\
bit_vector_or(&(last_root_estimate), &(current_shifted_index_word), &(OR_u56_u56_15974));\
bit_vector_cast_to_bit_vector(0, &(current_root_estimate), &(OR_u56_u56_15974));\
;

#define fpunit_exec_exec__make_new_estimate_56_assign_stmt_15981_c_macro_ __declare_static_bit_vector(slice_15979,55);\
__declare_static_bit_vector(CONCAT_u1_u56_15980,56);\
bit_vector_slice(&(current_shifted_index_word), &(slice_15979), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_15979), &(CONCAT_u1_u56_15980));\
bit_vector_cast_to_bit_vector(0, &(current_shifted_index_word_right_shifted), &(CONCAT_u1_u56_15980));\
;

#define fpunit_exec_exec__make_new_estimate_56_assign_stmt_15990_c_macro_ __declare_static_bit_vector(OR_u56_u56_15986,56);\
__declare_static_bit_vector(CONCAT_u1_u57_15987,57);\
__declare_static_bit_vector(CONCAT_u57_u58_15989,58);\
bit_vector_or(&(last_root_estimate), &(current_shifted_index_word_right_shifted), &(OR_u56_u56_15986));\
bit_vector_concatenate( &(ZERO_1), &(OR_u56_u56_15986), &(CONCAT_u1_u57_15987));\
bit_vector_concatenate( &(CONCAT_u1_u57_15987), &(ZERO_1), &(CONCAT_u57_u58_15989));\
bit_vector_cast_to_bit_vector(0, &(current_increment), &(CONCAT_u57_u58_15989));\
;

#define fpunit_exec_exec__make_new_estimate_56_assign_stmt_15995_c_macro_ __declare_static_bit_vector(SUB_u58_u58_15994,58);\
bit_vector_minus( &(last_residue), &(current_increment), &(SUB_u58_u58_15994));\
bit_vector_cast_to_bit_vector(0, &(current_residue), &(SUB_u58_u58_15994));\
;

#define fpunit_exec_exec__make_new_estimate_56_assign_stmt_16000_c_macro_ __declare_static_bit_vector(ULT_u58_u1_15999,1);\
bit_vector_less(0, &(last_residue), &(current_increment), &(ULT_u58_u1_15999));\
bit_vector_cast_to_bit_vector(0, &(current_residue_sign), &(ULT_u58_u1_15999));\
;

#define fpunit_exec_exec__make_new_estimate_56_stmt_16007_c_macro_ uint32_t fpunit_exec_exec__make_new_estimate_56_stmt_16007_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__make_new_estimate_56_stmt_16007_c_macro___print_counter,"make_new_estimate_56_outargs");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_56_stmt_16007_c_macro___print_counter,"current_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_56_stmt_16007_c_macro___print_counter,"current_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_56_stmt_16007_c_macro___print_counter,"current_shifted_index_word_right_shifted");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_shifted_index_word_right_shifted)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_56_stmt_16007_c_macro___print_counter,"current_increment");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_increment)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_56_stmt_16007_c_macro___print_counter,"current_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__make_new_estimate_56_stmt_16007_c_macro___print_counter,"current_residue_sign");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_residue_sign)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__make_new_estimate_56_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pcurrent_root_estimate)), &(current_root_estimate));\
bit_vector_cast_to_bit_vector(0, &((*__pcurrent_residue)), &(current_residue));\
bit_vector_cast_to_bit_vector(0, &((*__pcurrent_residue_sign)), &(current_residue_sign));\
;

#define fpunit_exec_exec__mem_load___inner_inarg_prep_macro__ __declare_static_bit_vector(address,32);\
bit_vector_cast_to_bit_vector(0, &(address), &((*__paddress)));\
__declare_static_bit_vector(data,8);\

#define fpunit_exec_exec__mem_load___assign_stmt_19686_c_macro_ __declare_static_bit_vector(konst_19681,32);\
bit_vector_clear(&konst_19681);\
konst_19681.val.byte_array[0] = 1;\
__declare_static_bit_vector(MUL_u32_u32_19682,32);\
__declare_static_bit_vector(konst_19683,32);\
bit_vector_clear(&konst_19683);\
__declare_static_bit_vector(ADD_u32_u32_19684,32);\
bit_vector_clear(&konst_19681);\
konst_19681.val.byte_array[0] = 1;\
bit_vector_mul( &(address), &(konst_19681), &(MUL_u32_u32_19682));\
bit_vector_clear(&konst_19683);\
bit_vector_plus( &(MUL_u32_u32_19682), &(konst_19683), &(ADD_u32_u32_19684));\
bit_vector_cast_to_bit_vector(0, &(data), &((default_mem_pool[bit_vector_to_uint64(0, &ADD_u32_u32_19684)])));\
;

#define fpunit_exec_exec__mem_load___inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pdata)), &(data));\
;

#define fpunit_exec_exec__mem_load___outer_arg_decl_macro__ __declare_static_bit_vector(__address, 32);\
bit_vector_assign_uint64(0, &__address, address);\
__declare_static_bit_vector(__data, 8);\
;

#define fpunit_exec_exec__mem_load___outer_op_xfer_macro__  *data =  bit_vector_to_uint64(0, &__data);\
;

#define fpunit_exec_exec__mem_store___inner_inarg_prep_macro__ __declare_static_bit_vector(address,32);\
bit_vector_cast_to_bit_vector(0, &(address), &((*__paddress)));\
__declare_static_bit_vector(data,8);\
bit_vector_cast_to_bit_vector(0, &(data), &((*__pdata)));\

#define fpunit_exec_exec__mem_store___assign_stmt_19698_c_macro_ __declare_static_bit_vector(konst_19692,32);\
bit_vector_clear(&konst_19692);\
konst_19692.val.byte_array[0] = 1;\
__declare_static_bit_vector(MUL_u32_u32_19693,32);\
__declare_static_bit_vector(konst_19694,32);\
bit_vector_clear(&konst_19694);\
__declare_static_bit_vector(ADD_u32_u32_19695,32);\
bit_vector_clear(&konst_19692);\
konst_19692.val.byte_array[0] = 1;\
bit_vector_mul( &(address), &(konst_19692), &(MUL_u32_u32_19693));\
bit_vector_clear(&konst_19694);\
bit_vector_plus( &(MUL_u32_u32_19693), &(konst_19694), &(ADD_u32_u32_19695));\
bit_vector_cast_to_bit_vector(0, &((default_mem_pool[bit_vector_to_uint64(0, &ADD_u32_u32_19695)])), &(data));\
;

#define fpunit_exec_exec__mem_store___inner_outarg_prep_macro__ ;

#define fpunit_exec_exec__mem_store___outer_arg_decl_macro__ __declare_static_bit_vector(__address, 32);\
bit_vector_assign_uint64(0, &__address, address);\
__declare_static_bit_vector(__data, 8);\
bit_vector_assign_uint64(0, &__data, data);\
;

#define fpunit_exec_exec__mem_store___outer_op_xfer_macro__ ;

#define fpunit_exec_exec__mul24_inner_inarg_prep_macro__ __declare_static_bit_vector(L,24);\
bit_vector_cast_to_bit_vector(0, &(L), &((*__pL)));\
__declare_static_bit_vector(R,24);\
bit_vector_cast_to_bit_vector(0, &(R), &((*__pR)));\
__declare_static_bit_vector(RESULT,48);\
__declare_static_bit_vector(A1,12);\
__declare_static_bit_vector(A0,12);\
__declare_static_bit_vector(B1,12);\
__declare_static_bit_vector(B0,12);\
__declare_static_bit_vector(a0b0,24);\
__declare_static_bit_vector(a0b1,24);\
__declare_static_bit_vector(a1b0,24);\
__declare_static_bit_vector(a1b1,24);\
__declare_static_bit_vector(a0b0_l,12);\
__declare_static_bit_vector(a0b0_h,12);\
__declare_static_bit_vector(a0b1_l,12);\
__declare_static_bit_vector(a0b1_h,12);\
__declare_static_bit_vector(a1b0_l,12);\
__declare_static_bit_vector(a1b0_h,12);\
__declare_static_bit_vector(a1b1_l,12);\
__declare_static_bit_vector(a1b1_h,12);\
__declare_static_bit_vector(P0,12);\
__declare_static_bit_vector(eP1,14);\
__declare_static_bit_vector(P1,12);\
__declare_static_bit_vector(cP1,14);\
__declare_static_bit_vector(eP2,14);\
__declare_static_bit_vector(P2,12);\
__declare_static_bit_vector(cP2,12);\
__declare_static_bit_vector(P3,12);\

#define fpunit_exec_exec__mul24_assign_stmt_12066_c_macro_ __declare_static_bit_vector(slice_12065,12);\
bit_vector_slice(&(L), &(slice_12065), 12);\
bit_vector_cast_to_bit_vector(0, &(A1), &(slice_12065));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12070_c_macro_ __declare_static_bit_vector(slice_12069,12);\
bit_vector_slice(&(L), &(slice_12069), 0);\
bit_vector_cast_to_bit_vector(0, &(A0), &(slice_12069));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12074_c_macro_ __declare_static_bit_vector(slice_12073,12);\
bit_vector_slice(&(R), &(slice_12073), 12);\
bit_vector_cast_to_bit_vector(0, &(B1), &(slice_12073));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12078_c_macro_ __declare_static_bit_vector(slice_12077,12);\
bit_vector_slice(&(R), &(slice_12077), 0);\
bit_vector_cast_to_bit_vector(0, &(B0), &(slice_12077));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12085_c_macro_ __declare_static_bit_vector(type_cast_12081,24);\
__declare_static_bit_vector(type_cast_12083,24);\
__declare_static_bit_vector(MUL_u24_u24_12084,24);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12081), &(A0));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12083), &(B0));\
bit_vector_mul( &(type_cast_12081), &(type_cast_12083), &(MUL_u24_u24_12084));\
bit_vector_cast_to_bit_vector(0, &(a0b0), &(MUL_u24_u24_12084));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12092_c_macro_ __declare_static_bit_vector(type_cast_12088,24);\
__declare_static_bit_vector(type_cast_12090,24);\
__declare_static_bit_vector(MUL_u24_u24_12091,24);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12088), &(A0));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12090), &(B1));\
bit_vector_mul( &(type_cast_12088), &(type_cast_12090), &(MUL_u24_u24_12091));\
bit_vector_cast_to_bit_vector(0, &(a0b1), &(MUL_u24_u24_12091));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12099_c_macro_ __declare_static_bit_vector(type_cast_12095,24);\
__declare_static_bit_vector(type_cast_12097,24);\
__declare_static_bit_vector(MUL_u24_u24_12098,24);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12095), &(A1));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12097), &(B0));\
bit_vector_mul( &(type_cast_12095), &(type_cast_12097), &(MUL_u24_u24_12098));\
bit_vector_cast_to_bit_vector(0, &(a1b0), &(MUL_u24_u24_12098));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12106_c_macro_ __declare_static_bit_vector(type_cast_12102,24);\
__declare_static_bit_vector(type_cast_12104,24);\
__declare_static_bit_vector(MUL_u24_u24_12105,24);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12102), &(A1));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12104), &(B1));\
bit_vector_mul( &(type_cast_12102), &(type_cast_12104), &(MUL_u24_u24_12105));\
bit_vector_cast_to_bit_vector(0, &(a1b1), &(MUL_u24_u24_12105));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12110_c_macro_ __declare_static_bit_vector(slice_12109,12);\
bit_vector_slice(&(a0b0), &(slice_12109), 0);\
bit_vector_cast_to_bit_vector(0, &(a0b0_l), &(slice_12109));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12114_c_macro_ __declare_static_bit_vector(slice_12113,12);\
bit_vector_slice(&(a0b0), &(slice_12113), 12);\
bit_vector_cast_to_bit_vector(0, &(a0b0_h), &(slice_12113));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12118_c_macro_ __declare_static_bit_vector(slice_12117,12);\
bit_vector_slice(&(a0b1), &(slice_12117), 0);\
bit_vector_cast_to_bit_vector(0, &(a0b1_l), &(slice_12117));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12122_c_macro_ __declare_static_bit_vector(slice_12121,12);\
bit_vector_slice(&(a0b1), &(slice_12121), 12);\
bit_vector_cast_to_bit_vector(0, &(a0b1_h), &(slice_12121));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12126_c_macro_ __declare_static_bit_vector(slice_12125,12);\
bit_vector_slice(&(a1b0), &(slice_12125), 0);\
bit_vector_cast_to_bit_vector(0, &(a1b0_l), &(slice_12125));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12130_c_macro_ __declare_static_bit_vector(slice_12129,12);\
bit_vector_slice(&(a1b0), &(slice_12129), 12);\
bit_vector_cast_to_bit_vector(0, &(a1b0_h), &(slice_12129));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12134_c_macro_ __declare_static_bit_vector(slice_12133,12);\
bit_vector_slice(&(a1b1), &(slice_12133), 0);\
bit_vector_cast_to_bit_vector(0, &(a1b1_l), &(slice_12133));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12138_c_macro_ __declare_static_bit_vector(slice_12137,12);\
bit_vector_slice(&(a1b1), &(slice_12137), 12);\
bit_vector_cast_to_bit_vector(0, &(a1b1_h), &(slice_12137));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12141_c_macro_ bit_vector_cast_to_bit_vector(0, &(P0), &(a0b0_l));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12151_c_macro_ __declare_static_bit_vector(type_cast_12144,14);\
__declare_static_bit_vector(type_cast_12146,14);\
__declare_static_bit_vector(type_cast_12148,14);\
__declare_static_bit_vector(ADD_u14_u14_12149,14);\
__declare_static_bit_vector(ADD_u14_u14_12150,14);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12144), &(a0b0_h));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12146), &(a0b1_l));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12148), &(a1b0_l));\
bit_vector_plus( &(type_cast_12146), &(type_cast_12148), &(ADD_u14_u14_12149));\
bit_vector_plus( &(type_cast_12144), &(ADD_u14_u14_12149), &(ADD_u14_u14_12150));\
bit_vector_cast_to_bit_vector(0, &(eP1), &(ADD_u14_u14_12150));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12155_c_macro_ __declare_static_bit_vector(slice_12154,12);\
bit_vector_slice(&(eP1), &(slice_12154), 0);\
bit_vector_cast_to_bit_vector(0, &(P1), &(slice_12154));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12160_c_macro_ __declare_static_bit_vector(slice_12158,2);\
__declare_static_bit_vector(type_cast_12159,14);\
bit_vector_slice(&(eP1), &(slice_12158), 12);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12159), &(slice_12158));\
bit_vector_cast_to_bit_vector(0, &(cP1), &(type_cast_12159));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12172_c_macro_ __declare_static_bit_vector(type_cast_12163,14);\
__declare_static_bit_vector(type_cast_12165,14);\
__declare_static_bit_vector(ADD_u14_u14_12166,14);\
__declare_static_bit_vector(type_cast_12168,14);\
__declare_static_bit_vector(ADD_u14_u14_12170,14);\
__declare_static_bit_vector(ADD_u14_u14_12171,14);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12163), &(a1b0_h));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12165), &(a0b1_h));\
bit_vector_plus( &(type_cast_12163), &(type_cast_12165), &(ADD_u14_u14_12166));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12168), &(a1b1_l));\
bit_vector_plus( &(type_cast_12168), &(cP1), &(ADD_u14_u14_12170));\
bit_vector_plus( &(ADD_u14_u14_12166), &(ADD_u14_u14_12170), &(ADD_u14_u14_12171));\
bit_vector_cast_to_bit_vector(0, &(eP2), &(ADD_u14_u14_12171));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12176_c_macro_ __declare_static_bit_vector(slice_12175,12);\
bit_vector_slice(&(eP2), &(slice_12175), 0);\
bit_vector_cast_to_bit_vector(0, &(P2), &(slice_12175));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12181_c_macro_ __declare_static_bit_vector(slice_12179,2);\
__declare_static_bit_vector(type_cast_12180,12);\
bit_vector_slice(&(eP2), &(slice_12179), 12);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12180), &(slice_12179));\
bit_vector_cast_to_bit_vector(0, &(cP2), &(type_cast_12180));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12187_c_macro_ __declare_static_bit_vector(type_cast_12184,12);\
__declare_static_bit_vector(ADD_u12_u12_12186,12);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12184), &(a1b1_h));\
bit_vector_plus( &(type_cast_12184), &(cP2), &(ADD_u12_u12_12186));\
bit_vector_cast_to_bit_vector(0, &(P3), &(ADD_u12_u12_12186));\
;

#define fpunit_exec_exec__mul24_assign_stmt_12196_c_macro_ __declare_static_bit_vector(CONCAT_u12_u24_12191,24);\
__declare_static_bit_vector(CONCAT_u12_u24_12194,24);\
__declare_static_bit_vector(CONCAT_u24_u48_12195,48);\
bit_vector_concatenate( &(P3), &(P2), &(CONCAT_u12_u24_12191));\
bit_vector_concatenate( &(P1), &(P0), &(CONCAT_u12_u24_12194));\
bit_vector_concatenate( &(CONCAT_u12_u24_12191), &(CONCAT_u12_u24_12194), &(CONCAT_u24_u48_12195));\
bit_vector_cast_to_bit_vector(0, &(RESULT), &(CONCAT_u24_u48_12195));\
;

#define fpunit_exec_exec__mul24_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pRESULT)), &(RESULT));\
;

#define fpunit_exec_exec__mul53_inner_inarg_prep_macro__ __declare_static_bit_vector(L,53);\
bit_vector_cast_to_bit_vector(0, &(L), &((*__pL)));\
__declare_static_bit_vector(R,53);\
bit_vector_cast_to_bit_vector(0, &(R), &((*__pR)));\
__declare_static_bit_vector(RESULT,106);\
__declare_static_bit_vector(A1,27);\
__declare_static_bit_vector(A0,27);\
__declare_static_bit_vector(B1,27);\
__declare_static_bit_vector(B0,27);\
__declare_static_bit_vector(a0b0,54);\
__declare_static_bit_vector(a0b1,54);\
__declare_static_bit_vector(a1b0,54);\
__declare_static_bit_vector(a1b1,54);\
__declare_static_bit_vector(a0b0_l,27);\
__declare_static_bit_vector(a0b0_h,27);\
__declare_static_bit_vector(a0b1_l,27);\
__declare_static_bit_vector(a0b1_h,27);\
__declare_static_bit_vector(a1b0_l,27);\
__declare_static_bit_vector(a1b0_h,27);\
__declare_static_bit_vector(a1b1_l,27);\
__declare_static_bit_vector(a1b1_h,27);\
__declare_static_bit_vector(P0,27);\
__declare_static_bit_vector(eP1,29);\
__declare_static_bit_vector(P1,27);\
__declare_static_bit_vector(cP1,29);\
__declare_static_bit_vector(eP2,29);\
__declare_static_bit_vector(P2,27);\
__declare_static_bit_vector(cP2,25);\
__declare_static_bit_vector(P3,25);\

#define fpunit_exec_exec__mul53_assign_stmt_12676_c_macro_ __declare_static_bit_vector(slice_12674,26);\
__declare_static_bit_vector(CONCAT_u1_u27_12675,27);\
bit_vector_slice(&(L), &(slice_12674), 27);\
bit_vector_concatenate( &(ZERO_1), &(slice_12674), &(CONCAT_u1_u27_12675));\
bit_vector_cast_to_bit_vector(0, &(A1), &(CONCAT_u1_u27_12675));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12680_c_macro_ __declare_static_bit_vector(slice_12679,27);\
bit_vector_slice(&(L), &(slice_12679), 0);\
bit_vector_cast_to_bit_vector(0, &(A0), &(slice_12679));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12686_c_macro_ __declare_static_bit_vector(slice_12684,26);\
__declare_static_bit_vector(CONCAT_u1_u27_12685,27);\
bit_vector_slice(&(R), &(slice_12684), 27);\
bit_vector_concatenate( &(ZERO_1), &(slice_12684), &(CONCAT_u1_u27_12685));\
bit_vector_cast_to_bit_vector(0, &(B1), &(CONCAT_u1_u27_12685));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12690_c_macro_ __declare_static_bit_vector(slice_12689,27);\
bit_vector_slice(&(R), &(slice_12689), 0);\
bit_vector_cast_to_bit_vector(0, &(B0), &(slice_12689));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12697_c_macro_ __declare_static_bit_vector(type_cast_12693,54);\
__declare_static_bit_vector(type_cast_12695,54);\
__declare_static_bit_vector(MUL_u54_u54_12696,54);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12693), &(A0));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12695), &(B0));\
bit_vector_mul( &(type_cast_12693), &(type_cast_12695), &(MUL_u54_u54_12696));\
bit_vector_cast_to_bit_vector(0, &(a0b0), &(MUL_u54_u54_12696));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12704_c_macro_ __declare_static_bit_vector(type_cast_12700,54);\
__declare_static_bit_vector(type_cast_12702,54);\
__declare_static_bit_vector(MUL_u54_u54_12703,54);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12700), &(A0));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12702), &(B1));\
bit_vector_mul( &(type_cast_12700), &(type_cast_12702), &(MUL_u54_u54_12703));\
bit_vector_cast_to_bit_vector(0, &(a0b1), &(MUL_u54_u54_12703));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12711_c_macro_ __declare_static_bit_vector(type_cast_12707,54);\
__declare_static_bit_vector(type_cast_12709,54);\
__declare_static_bit_vector(MUL_u54_u54_12710,54);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12707), &(A1));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12709), &(B0));\
bit_vector_mul( &(type_cast_12707), &(type_cast_12709), &(MUL_u54_u54_12710));\
bit_vector_cast_to_bit_vector(0, &(a1b0), &(MUL_u54_u54_12710));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12718_c_macro_ __declare_static_bit_vector(type_cast_12714,54);\
__declare_static_bit_vector(type_cast_12716,54);\
__declare_static_bit_vector(MUL_u54_u54_12717,54);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12714), &(A1));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12716), &(B1));\
bit_vector_mul( &(type_cast_12714), &(type_cast_12716), &(MUL_u54_u54_12717));\
bit_vector_cast_to_bit_vector(0, &(a1b1), &(MUL_u54_u54_12717));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12722_c_macro_ __declare_static_bit_vector(slice_12721,27);\
bit_vector_slice(&(a0b0), &(slice_12721), 0);\
bit_vector_cast_to_bit_vector(0, &(a0b0_l), &(slice_12721));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12726_c_macro_ __declare_static_bit_vector(slice_12725,27);\
bit_vector_slice(&(a0b0), &(slice_12725), 27);\
bit_vector_cast_to_bit_vector(0, &(a0b0_h), &(slice_12725));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12730_c_macro_ __declare_static_bit_vector(slice_12729,27);\
bit_vector_slice(&(a0b1), &(slice_12729), 0);\
bit_vector_cast_to_bit_vector(0, &(a0b1_l), &(slice_12729));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12734_c_macro_ __declare_static_bit_vector(slice_12733,27);\
bit_vector_slice(&(a0b1), &(slice_12733), 27);\
bit_vector_cast_to_bit_vector(0, &(a0b1_h), &(slice_12733));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12738_c_macro_ __declare_static_bit_vector(slice_12737,27);\
bit_vector_slice(&(a1b0), &(slice_12737), 0);\
bit_vector_cast_to_bit_vector(0, &(a1b0_l), &(slice_12737));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12742_c_macro_ __declare_static_bit_vector(slice_12741,27);\
bit_vector_slice(&(a1b0), &(slice_12741), 27);\
bit_vector_cast_to_bit_vector(0, &(a1b0_h), &(slice_12741));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12746_c_macro_ __declare_static_bit_vector(slice_12745,27);\
bit_vector_slice(&(a1b1), &(slice_12745), 0);\
bit_vector_cast_to_bit_vector(0, &(a1b1_l), &(slice_12745));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12750_c_macro_ __declare_static_bit_vector(slice_12749,27);\
bit_vector_slice(&(a1b1), &(slice_12749), 27);\
bit_vector_cast_to_bit_vector(0, &(a1b1_h), &(slice_12749));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12753_c_macro_ bit_vector_cast_to_bit_vector(0, &(P0), &(a0b0_l));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12763_c_macro_ __declare_static_bit_vector(type_cast_12756,29);\
__declare_static_bit_vector(type_cast_12758,29);\
__declare_static_bit_vector(type_cast_12760,29);\
__declare_static_bit_vector(ADD_u29_u29_12761,29);\
__declare_static_bit_vector(ADD_u29_u29_12762,29);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12756), &(a0b0_h));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12758), &(a0b1_l));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12760), &(a1b0_l));\
bit_vector_plus( &(type_cast_12758), &(type_cast_12760), &(ADD_u29_u29_12761));\
bit_vector_plus( &(type_cast_12756), &(ADD_u29_u29_12761), &(ADD_u29_u29_12762));\
bit_vector_cast_to_bit_vector(0, &(eP1), &(ADD_u29_u29_12762));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12767_c_macro_ __declare_static_bit_vector(slice_12766,27);\
bit_vector_slice(&(eP1), &(slice_12766), 0);\
bit_vector_cast_to_bit_vector(0, &(P1), &(slice_12766));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12772_c_macro_ __declare_static_bit_vector(slice_12770,2);\
__declare_static_bit_vector(type_cast_12771,29);\
bit_vector_slice(&(eP1), &(slice_12770), 27);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12771), &(slice_12770));\
bit_vector_cast_to_bit_vector(0, &(cP1), &(type_cast_12771));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12784_c_macro_ __declare_static_bit_vector(type_cast_12775,29);\
__declare_static_bit_vector(type_cast_12777,29);\
__declare_static_bit_vector(ADD_u29_u29_12778,29);\
__declare_static_bit_vector(type_cast_12780,29);\
__declare_static_bit_vector(ADD_u29_u29_12782,29);\
__declare_static_bit_vector(ADD_u29_u29_12783,29);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12775), &(a1b0_h));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12777), &(a0b1_h));\
bit_vector_plus( &(type_cast_12775), &(type_cast_12777), &(ADD_u29_u29_12778));\
bit_vector_bitcast_to_bit_vector( &(type_cast_12780), &(a1b1_l));\
bit_vector_plus( &(type_cast_12780), &(cP1), &(ADD_u29_u29_12782));\
bit_vector_plus( &(ADD_u29_u29_12778), &(ADD_u29_u29_12782), &(ADD_u29_u29_12783));\
bit_vector_cast_to_bit_vector(0, &(eP2), &(ADD_u29_u29_12783));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12788_c_macro_ __declare_static_bit_vector(slice_12787,27);\
bit_vector_slice(&(eP2), &(slice_12787), 0);\
bit_vector_cast_to_bit_vector(0, &(P2), &(slice_12787));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12793_c_macro_ __declare_static_bit_vector(slice_12791,2);\
__declare_static_bit_vector(type_cast_12792,25);\
bit_vector_slice(&(eP2), &(slice_12791), 27);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12792), &(slice_12791));\
bit_vector_cast_to_bit_vector(0, &(cP2), &(type_cast_12792));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12799_c_macro_ __declare_static_bit_vector(type_cast_12796,25);\
__declare_static_bit_vector(ADD_u25_u25_12798,25);\
bit_vector_bitcast_to_bit_vector( &(type_cast_12796), &(a1b1_h));\
bit_vector_plus( &(type_cast_12796), &(cP2), &(ADD_u25_u25_12798));\
bit_vector_cast_to_bit_vector(0, &(P3), &(ADD_u25_u25_12798));\
;

#define fpunit_exec_exec__mul53_assign_stmt_12808_c_macro_ __declare_static_bit_vector(CONCAT_u25_u52_12803,52);\
__declare_static_bit_vector(CONCAT_u27_u54_12806,54);\
__declare_static_bit_vector(CONCAT_u52_u106_12807,106);\
bit_vector_concatenate( &(P3), &(P2), &(CONCAT_u25_u52_12803));\
bit_vector_concatenate( &(P1), &(P0), &(CONCAT_u27_u54_12806));\
bit_vector_concatenate( &(CONCAT_u25_u52_12803), &(CONCAT_u27_u54_12806), &(CONCAT_u52_u106_12807));\
bit_vector_cast_to_bit_vector(0, &(RESULT), &(CONCAT_u52_u106_12807));\
;

#define fpunit_exec_exec__mul53_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pRESULT)), &(RESULT));\
;

#define fpunit_exec_exec__needSignalFromRetire_inner_inarg_prep_macro__ __declare_static_bit_vector(msg_from_sc,147);\
bit_vector_cast_to_bit_vector(0, &(msg_from_sc), &((*__pmsg_from_sc)));\
__declare_static_bit_vector(sc_valid,1);\
__declare_static_bit_vector(wait_on_iretire,1);\
__declare_static_bit_vector(w,1);\

#define fpunit_exec_exec__needSignalFromRetire_assign_stmt_19707_c_macro_ __declare_static_bit_vector(slice_19706,1);\
bit_vector_slice(&(msg_from_sc), &(slice_19706), 146);\
bit_vector_cast_to_bit_vector(0, &(sc_valid), &(slice_19706));\
;

#define fpunit_exec_exec__needSignalFromRetire_assign_stmt_19711_c_macro_ __declare_static_bit_vector(slice_19710,1);\
bit_vector_slice(&(msg_from_sc), &(slice_19710), 133);\
bit_vector_cast_to_bit_vector(0, &(w), &(slice_19710));\
;

#define fpunit_exec_exec__needSignalFromRetire_assign_stmt_19716_c_macro_ __declare_static_bit_vector(AND_u1_u1_19715,1);\
bit_vector_and(&(sc_valid), &(w), &(AND_u1_u1_19715));\
bit_vector_cast_to_bit_vector(0, &(wait_on_iretire), &(AND_u1_u1_19715));\
;

#define fpunit_exec_exec__needSignalFromRetire_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__psc_valid)), &(sc_valid));\
bit_vector_cast_to_bit_vector(0, &((*__pwait_on_iretire)), &(wait_on_iretire));\
;

#define fpunit_exec_exec__negateVal_inner_inarg_prep_macro__ __declare_static_bit_vector(a,16);\
bit_vector_cast_to_bit_vector(0, &(a), &((*__pa)));\
__declare_static_bit_vector(ret_val,16);\

#define fpunit_exec_exec__negateVal_assign_stmt_13529_c_macro_ __declare_static_bit_vector(konst_13518,16);\
bit_vector_clear(&konst_13518);\
__declare_static_bit_vector(NEQ_u16_u1_13519,1);\
__declare_static_bit_vector(konst_13521,16);\
bit_vector_clear(&konst_13521);\
konst_13521.val.byte_array[0] = 15;\
__declare_static_bit_vector(BITSEL_u16_u1_13522,1);\
__declare_static_bit_vector(NOT_u1_u1_13523,1);\
__declare_static_bit_vector(slice_13525,15);\
__declare_static_bit_vector(CONCAT_u1_u16_13526,16);\
__declare_static_bit_vector(MUX_13528,16);\
bit_vector_clear(&konst_13518);\
bit_vector_not_equal(0, &(a), &(konst_13518), &NEQ_u16_u1_13519);\
if (has_undefined_bit(&NEQ_u16_u1_13519)) {fprintf(stderr, "Error: variable NEQ_u16_u1_13519 has undefined value (%s) at test point.\n", to_string(&NEQ_u16_u1_13519));assert(0);} \
if(bit_vector_to_uint64(0, &NEQ_u16_u1_13519)){bit_vector_clear(&konst_13521);\
konst_13521.val.byte_array[0] = 15;\
bit_vector_bitsel( &(a), &(konst_13521), &(BITSEL_u16_u1_13522));\
bit_vector_not( &(BITSEL_u16_u1_13522), &(NOT_u1_u1_13523));\
bit_vector_slice(&(a), &(slice_13525), 0);\
bit_vector_concatenate( &(NOT_u1_u1_13523), &(slice_13525), &(CONCAT_u1_u16_13526));\
bit_vector_cast_to_bit_vector(0, &(MUX_13528), &(CONCAT_u1_u16_13526));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_13528), &(a));\
}bit_vector_cast_to_bit_vector(0, &(ret_val), &(MUX_13528));\
;

#define fpunit_exec_exec__negateVal_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pret_val)), &(ret_val));\
;

#define fpunit_exec_exec__negateVal_outer_arg_decl_macro__ __declare_static_bit_vector(__a, 16);\
bit_vector_assign_uint64(0, &__a, a);\
__declare_static_bit_vector(__ret_val, 16);\
;

#define fpunit_exec_exec__negateVal_outer_op_xfer_macro__  *ret_val =  bit_vector_to_uint64(0, &__ret_val);\
;

#define fpunit_exec_exec__negate_classification_inner_inarg_prep_macro__ __declare_static_bit_vector(C,10);\
bit_vector_cast_to_bit_vector(0, &(C), &((*__pC)));\
__declare_static_bit_vector(NC,10);\
__declare_static_bit_vector(pn,1);\
__declare_static_bit_vector(nn,1);\
__declare_static_bit_vector(pd,1);\
__declare_static_bit_vector(nd,1);\
__declare_static_bit_vector(qn,1);\
__declare_static_bit_vector(sn,1);\
__declare_static_bit_vector(pi,1);\
__declare_static_bit_vector(ni,1);\
__declare_static_bit_vector(pz,1);\
__declare_static_bit_vector(nz,1);\
__declare_static_bit_vector(cn,1);\
__declare_static_bit_vector(cd,1);\
__declare_static_bit_vector(ci,1);\
__declare_static_bit_vector(cz,1);\

#define fpunit_exec_exec__negate_classification_assign_stmt_10042_c_macro_ __declare_static_bit_vector(slice_10041,1);\
bit_vector_slice(&(C), &(slice_10041), 9);\
bit_vector_cast_to_bit_vector(0, &(pn), &(slice_10041));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10046_c_macro_ __declare_static_bit_vector(slice_10045,1);\
bit_vector_slice(&(C), &(slice_10045), 8);\
bit_vector_cast_to_bit_vector(0, &(nn), &(slice_10045));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10050_c_macro_ __declare_static_bit_vector(slice_10049,1);\
bit_vector_slice(&(C), &(slice_10049), 7);\
bit_vector_cast_to_bit_vector(0, &(pd), &(slice_10049));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10054_c_macro_ __declare_static_bit_vector(slice_10053,1);\
bit_vector_slice(&(C), &(slice_10053), 6);\
bit_vector_cast_to_bit_vector(0, &(nd), &(slice_10053));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10058_c_macro_ __declare_static_bit_vector(slice_10057,1);\
bit_vector_slice(&(C), &(slice_10057), 5);\
bit_vector_cast_to_bit_vector(0, &(qn), &(slice_10057));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10062_c_macro_ __declare_static_bit_vector(slice_10061,1);\
bit_vector_slice(&(C), &(slice_10061), 4);\
bit_vector_cast_to_bit_vector(0, &(sn), &(slice_10061));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10066_c_macro_ __declare_static_bit_vector(slice_10065,1);\
bit_vector_slice(&(C), &(slice_10065), 3);\
bit_vector_cast_to_bit_vector(0, &(pi), &(slice_10065));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10070_c_macro_ __declare_static_bit_vector(slice_10069,1);\
bit_vector_slice(&(C), &(slice_10069), 2);\
bit_vector_cast_to_bit_vector(0, &(ni), &(slice_10069));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10074_c_macro_ __declare_static_bit_vector(slice_10073,1);\
bit_vector_slice(&(C), &(slice_10073), 1);\
bit_vector_cast_to_bit_vector(0, &(pz), &(slice_10073));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10078_c_macro_ __declare_static_bit_vector(slice_10077,1);\
bit_vector_slice(&(C), &(slice_10077), 0);\
bit_vector_cast_to_bit_vector(0, &(nz), &(slice_10077));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10083_c_macro_ __declare_static_bit_vector(OR_u1_u1_10082,1);\
bit_vector_or(&(pn), &(nn), &(OR_u1_u1_10082));\
bit_vector_cast_to_bit_vector(0, &(cn), &(OR_u1_u1_10082));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10088_c_macro_ __declare_static_bit_vector(OR_u1_u1_10087,1);\
bit_vector_or(&(pd), &(nd), &(OR_u1_u1_10087));\
bit_vector_cast_to_bit_vector(0, &(cd), &(OR_u1_u1_10087));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10093_c_macro_ __declare_static_bit_vector(OR_u1_u1_10092,1);\
bit_vector_or(&(pi), &(ni), &(OR_u1_u1_10092));\
bit_vector_cast_to_bit_vector(0, &(ci), &(OR_u1_u1_10092));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10098_c_macro_ __declare_static_bit_vector(OR_u1_u1_10097,1);\
bit_vector_or(&(pz), &(nz), &(OR_u1_u1_10097));\
bit_vector_cast_to_bit_vector(0, &(cz), &(OR_u1_u1_10097));\
;

#define fpunit_exec_exec__negate_classification_assign_stmt_10143_c_macro_ __declare_static_bit_vector(NOT_u1_u1_10102,1);\
__declare_static_bit_vector(AND_u1_u1_10103,1);\
__declare_static_bit_vector(NOT_u1_u1_10106,1);\
__declare_static_bit_vector(AND_u1_u1_10107,1);\
__declare_static_bit_vector(CONCAT_u1_u2_10108,2);\
__declare_static_bit_vector(NOT_u1_u1_10111,1);\
__declare_static_bit_vector(AND_u1_u1_10112,1);\
__declare_static_bit_vector(CONCAT_u2_u3_10113,3);\
__declare_static_bit_vector(NOT_u1_u1_10116,1);\
__declare_static_bit_vector(AND_u1_u1_10117,1);\
__declare_static_bit_vector(CONCAT_u1_u2_10119,2);\
__declare_static_bit_vector(CONCAT_u3_u5_10120,5);\
__declare_static_bit_vector(NOT_u1_u1_10124,1);\
__declare_static_bit_vector(AND_u1_u1_10125,1);\
__declare_static_bit_vector(CONCAT_u1_u2_10126,2);\
__declare_static_bit_vector(NOT_u1_u1_10129,1);\
__declare_static_bit_vector(AND_u1_u1_10130,1);\
__declare_static_bit_vector(CONCAT_u2_u3_10131,3);\
__declare_static_bit_vector(NOT_u1_u1_10134,1);\
__declare_static_bit_vector(AND_u1_u1_10135,1);\
__declare_static_bit_vector(NOT_u1_u1_10138,1);\
__declare_static_bit_vector(AND_u1_u1_10139,1);\
__declare_static_bit_vector(CONCAT_u1_u2_10140,2);\
__declare_static_bit_vector(CONCAT_u3_u5_10141,5);\
__declare_static_bit_vector(CONCAT_u5_u10_10142,10);\
bit_vector_not( &(pn), &(NOT_u1_u1_10102));\
bit_vector_and(&(cn), &(NOT_u1_u1_10102), &(AND_u1_u1_10103));\
bit_vector_not( &(nn), &(NOT_u1_u1_10106));\
bit_vector_and(&(cn), &(NOT_u1_u1_10106), &(AND_u1_u1_10107));\
bit_vector_concatenate( &(AND_u1_u1_10103), &(AND_u1_u1_10107), &(CONCAT_u1_u2_10108));\
bit_vector_not( &(pd), &(NOT_u1_u1_10111));\
bit_vector_and(&(cd), &(NOT_u1_u1_10111), &(AND_u1_u1_10112));\
bit_vector_concatenate( &(CONCAT_u1_u2_10108), &(AND_u1_u1_10112), &(CONCAT_u2_u3_10113));\
bit_vector_not( &(nd), &(NOT_u1_u1_10116));\
bit_vector_and(&(cd), &(NOT_u1_u1_10116), &(AND_u1_u1_10117));\
bit_vector_concatenate( &(AND_u1_u1_10117), &(qn), &(CONCAT_u1_u2_10119));\
bit_vector_concatenate( &(CONCAT_u2_u3_10113), &(CONCAT_u1_u2_10119), &(CONCAT_u3_u5_10120));\
bit_vector_not( &(pi), &(NOT_u1_u1_10124));\
bit_vector_and(&(ci), &(NOT_u1_u1_10124), &(AND_u1_u1_10125));\
bit_vector_concatenate( &(sn), &(AND_u1_u1_10125), &(CONCAT_u1_u2_10126));\
bit_vector_not( &(ni), &(NOT_u1_u1_10129));\
bit_vector_and(&(ci), &(NOT_u1_u1_10129), &(AND_u1_u1_10130));\
bit_vector_concatenate( &(CONCAT_u1_u2_10126), &(AND_u1_u1_10130), &(CONCAT_u2_u3_10131));\
bit_vector_not( &(pz), &(NOT_u1_u1_10134));\
bit_vector_and(&(cz), &(NOT_u1_u1_10134), &(AND_u1_u1_10135));\
bit_vector_not( &(nz), &(NOT_u1_u1_10138));\
bit_vector_and(&(cz), &(NOT_u1_u1_10138), &(AND_u1_u1_10139));\
bit_vector_concatenate( &(AND_u1_u1_10135), &(AND_u1_u1_10139), &(CONCAT_u1_u2_10140));\
bit_vector_concatenate( &(CONCAT_u2_u3_10131), &(CONCAT_u1_u2_10140), &(CONCAT_u3_u5_10141));\
bit_vector_concatenate( &(CONCAT_u3_u5_10120), &(CONCAT_u3_u5_10141), &(CONCAT_u5_u10_10142));\
bit_vector_cast_to_bit_vector(0, &(NC), &(CONCAT_u5_u10_10142));\
;

#define fpunit_exec_exec__negate_classification_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pNC)), &(NC));\
;

#define fpunit_exec_exec__normalize_32_inner_inarg_prep_macro__ __declare_static_bit_vector(fract,24);\
bit_vector_cast_to_bit_vector(0, &(fract), &((*__pfract)));\
__declare_static_bit_vector(expon,10);\
bit_vector_cast_to_bit_vector(1, &(expon), &((*__pexpon)));\
__declare_static_bit_vector(fract_norm,24);\
__declare_static_bit_vector(expon_norm,10);\
__declare_static_bit_vector(index,5);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(shiftx,6);\
__declare_static_bit_vector(fraction_norm,24);\
__declare_static_bit_vector(exp_shift,10);\

#define fpunit_exec_exec__normalize_32_call_stmt_14237_c_macro_ _fpunit_exec_exec_find_left_24_( &(fract), &(index), &(found));\
;

#define fpunit_exec_exec__normalize_32_assign_stmt_14243_c_macro_ __declare_static_bit_vector(konst_14239,6);\
bit_vector_clear(&konst_14239);\
konst_14239.val.byte_array[0] = 23;\
__declare_static_bit_vector(type_cast_14241,6);\
__declare_static_bit_vector(SUB_u6_u6_14242,6);\
bit_vector_clear(&konst_14239);\
konst_14239.val.byte_array[0] = 23;\
bit_vector_bitcast_to_bit_vector( &(type_cast_14241), &(index));\
bit_vector_minus( &(konst_14239), &(type_cast_14241), &(SUB_u6_u6_14242));\
bit_vector_cast_to_bit_vector(0, &(shiftx), &(SUB_u6_u6_14242));\
;

#define fpunit_exec_exec__normalize_32_call_stmt_14248_c_macro_ __declare_static_bit_vector(slice_14246,5);\
bit_vector_slice(&(shiftx), &(slice_14246), 0);\
_fpunit_exec_exec_i24_sll_( &(fract),  &(slice_14246), &(fraction_norm));\
;

#define fpunit_exec_exec__normalize_32_assign_stmt_14252_c_macro_ __declare_static_bit_vector(type_cast_14251,10);\
bit_vector_bitcast_to_bit_vector( &(type_cast_14251), &(shiftx));\
bit_vector_cast_to_bit_vector(1, &(exp_shift), &(type_cast_14251));\
;

#define fpunit_exec_exec__normalize_32_assign_stmt_14255_c_macro_ bit_vector_cast_to_bit_vector(0, &(fract_norm), &(fraction_norm));\
;

#define fpunit_exec_exec__normalize_32_assign_stmt_14260_c_macro_ __declare_static_bit_vector(SUB_i10_i10_14259,10);\
bit_vector_minus( &(expon), &(exp_shift), &(SUB_i10_i10_14259));\
bit_vector_cast_to_bit_vector(1, &(expon_norm), &(SUB_i10_i10_14259));\
;

#define fpunit_exec_exec__normalize_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pfract_norm)), &(fract_norm));\
bit_vector_cast_to_bit_vector(1, &((*__pexpon_norm)), &(expon_norm));\
;

#define fpunit_exec_exec__normalize_64_inner_inarg_prep_macro__ __declare_static_bit_vector(fract,53);\
bit_vector_cast_to_bit_vector(0, &(fract), &((*__pfract)));\
__declare_static_bit_vector(expon,13);\
bit_vector_cast_to_bit_vector(1, &(expon), &((*__pexpon)));\
__declare_static_bit_vector(fract_norm,53);\
__declare_static_bit_vector(expon_norm,13);\
__declare_static_bit_vector(fract_64,64);\
__declare_static_bit_vector(index,6);\
__declare_static_bit_vector(found,1);\
__declare_static_bit_vector(shiftx,6);\
__declare_static_bit_vector(fraction_norm,64);\
__declare_static_bit_vector(exp_shift,13);\

#define fpunit_exec_exec__normalize_64_assign_stmt_15310_c_macro_ __declare_static_bit_vector(type_cast_15309,64);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15309), &(fract));\
bit_vector_cast_to_bit_vector(0, &(fract_64), &(type_cast_15309));\
;

#define fpunit_exec_exec__normalize_64_call_stmt_15314_c_macro_ _fpunit_exec_exec_find_leftmost_64_( &(fract_64), &(index), &(found));\
;

#define fpunit_exec_exec__normalize_64_assign_stmt_15319_c_macro_ __declare_static_bit_vector(SUB_u6_u6_15318,6);\
bit_vector_minus( &(FRACTION_WIDTH_52), &(index), &(SUB_u6_u6_15318));\
bit_vector_cast_to_bit_vector(0, &(shiftx), &(SUB_u6_u6_15318));\
;

#define fpunit_exec_exec__normalize_64_call_stmt_15324_c_macro_ __declare_static_bit_vector(type_cast_15322,6);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15322), &(shiftx));\
_fpunit_exec_exec_i64_sll_( &(fract_64),  &(type_cast_15322), &(fraction_norm));\
;

#define fpunit_exec_exec__normalize_64_assign_stmt_15328_c_macro_ __declare_static_bit_vector(type_cast_15327,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15327), &(shiftx));\
bit_vector_cast_to_bit_vector(1, &(exp_shift), &(type_cast_15327));\
;

#define fpunit_exec_exec__normalize_64_assign_stmt_15332_c_macro_ __declare_static_bit_vector(slice_15331,53);\
bit_vector_slice(&(fraction_norm), &(slice_15331), 0);\
bit_vector_cast_to_bit_vector(0, &(fract_norm), &(slice_15331));\
;

#define fpunit_exec_exec__normalize_64_assign_stmt_15337_c_macro_ __declare_static_bit_vector(SUB_i13_i13_15336,13);\
bit_vector_minus( &(expon), &(exp_shift), &(SUB_i13_i13_15336));\
bit_vector_cast_to_bit_vector(1, &(expon_norm), &(SUB_i13_i13_15336));\
;

#define fpunit_exec_exec__normalize_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pfract_norm)), &(fract_norm));\
bit_vector_cast_to_bit_vector(1, &((*__pexpon_norm)), &(expon_norm));\
;

#define fpunit_exec_exec__pre_op_preparation_inner_inarg_prep_macro__ __declare_static_bit_vector(decoded_info,79);\
bit_vector_cast_to_bit_vector(0, &(decoded_info), &((*__pdecoded_info)));\
__declare_static_bit_vector(ops,174);\
bit_vector_cast_to_bit_vector(0, &(ops), &((*__pops)));\
__declare_static_bit_vector(thread_head,1);\
__declare_static_bit_vector(stream_head,1);\
__declare_static_bit_vector(thread_id,4);\
__declare_static_bit_vector(stream_id,2);\
__declare_static_bit_vector(slot_id,6);\
__declare_static_bit_vector(do_not_bypass,1);\
__declare_static_bit_vector(write_reg_id,5);\
__declare_static_bit_vector(fbcond,4);\
__declare_static_bit_vector(annul_flag,1);\
__declare_static_bit_vector(decode_trap,1);\
__declare_static_bit_vector(unimpl_instr,1);\
__declare_static_bit_vector(invalid_reg,1);\
__declare_static_bit_vector(seq_error,1);\
__declare_static_bit_vector(ieee_754_exception,1);\
__declare_static_bit_vector(cexc,5);\
__declare_static_bit_vector(fp_dti,1);\
__declare_static_bit_vector(issue_fmovs,1);\
__declare_static_bit_vector(issue_fnegs,1);\
__declare_static_bit_vector(issue_fabss,1);\
__declare_static_bit_vector(issue_fbfcc,1);\
__declare_static_bit_vector(issue_fadds,1);\
__declare_static_bit_vector(issue_fsubs,1);\
__declare_static_bit_vector(issue_fmuls,1);\
__declare_static_bit_vector(issue_fdivs,1);\
__declare_static_bit_vector(issue_fsqrts,1);\
__declare_static_bit_vector(issue_fcmps,1);\
__declare_static_bit_vector(issue_fcmpes,1);\
__declare_static_bit_vector(issue_fitos,1);\
__declare_static_bit_vector(issue_fstoi,1);\
__declare_static_bit_vector(issue_fstod,1);\
__declare_static_bit_vector(issue_faddd,1);\
__declare_static_bit_vector(issue_fsubd,1);\
__declare_static_bit_vector(issue_fsmuld,1);\
__declare_static_bit_vector(issue_fmuld,1);\
__declare_static_bit_vector(issue_fdivd,1);\
__declare_static_bit_vector(issue_fsqrtd,1);\
__declare_static_bit_vector(issue_fcmpd,1);\
__declare_static_bit_vector(issue_fcmped,1);\
__declare_static_bit_vector(issue_fitod,1);\
__declare_static_bit_vector(issue_fdtoi,1);\
__declare_static_bit_vector(issue_fdtos,1);\
__declare_static_bit_vector(issue_vfadd,1);\
__declare_static_bit_vector(issue_vfsub,1);\
__declare_static_bit_vector(issue_vfmul,1);\
__declare_static_bit_vector(vf_data_type,3);\
__declare_static_bit_vector(issue_vfhtoi16,1);\
__declare_static_bit_vector(issue_vfi16toh,1);\
__declare_static_bit_vector(issue_faddreduce16,1);\
__declare_static_bit_vector(issue_fstoh,1);\
__declare_static_bit_vector(issue_fhtos,1);\
__declare_static_bit_vector(is_store,1);\
__declare_static_bit_vector(ldfsr,1);\
__declare_static_bit_vector(skip_fp,1);\
__declare_static_bit_vector(r1_val_h,32);\
__declare_static_bit_vector(r1_val_l,32);\
__declare_static_bit_vector(r2_val_h,32);\
__declare_static_bit_vector(r2_val_l,32);\
__declare_static_bit_vector(fsr_val,32);\
static float f1_s;\
static float f2_s;\
static double f1_d;\
static double f2_d;\
__declare_static_bit_vector(st_val_h,32);\
__declare_static_bit_vector(st_val_l,32);\
__declare_static_bit_vector(uses_fu1,1);\
__declare_static_bit_vector(fu1_to_fu2,1);\
__declare_static_bit_vector(fu1_to_sc,1);\
__declare_static_bit_vector(fu1_to_ls,1);\
__declare_static_bit_vector(fu1_to_iu2,1);\
__declare_static_bit_vector(fu1_to_cu2,1);\
__declare_static_bit_vector(f1_s_class,10);\
__declare_static_bit_vector(f2_s_class,10);\
__declare_static_bit_vector(f1_d_class,10);\
__declare_static_bit_vector(f2_d_class,10);\
__declare_static_bit_vector(fbfcc,1);\
__declare_static_bit_vector(fadds,1);\
__declare_static_bit_vector(fsubs,1);\
__declare_static_bit_vector(fmuls,1);\
__declare_static_bit_vector(fdivs,1);\
__declare_static_bit_vector(fsqrts,1);\
__declare_static_bit_vector(fcmps,1);\
__declare_static_bit_vector(fcmpes,1);\
__declare_static_bit_vector(fmovs,1);\
__declare_static_bit_vector(fnegs,1);\
__declare_static_bit_vector(fabss,1);\
__declare_static_bit_vector(fitos,1);\
__declare_static_bit_vector(fstoi,1);\
__declare_static_bit_vector(fstod,1);\
__declare_static_bit_vector(faddd,1);\
__declare_static_bit_vector(fsubd,1);\
__declare_static_bit_vector(fsmuld,1);\
__declare_static_bit_vector(fmuld,1);\
__declare_static_bit_vector(fdivd,1);\
__declare_static_bit_vector(fsqrtd,1);\
__declare_static_bit_vector(fcmpd,1);\
__declare_static_bit_vector(fcmped,1);\
__declare_static_bit_vector(fitod,1);\
__declare_static_bit_vector(fdtoi,1);\
__declare_static_bit_vector(fdtos,1);\
__declare_static_bit_vector(ldf,1);\
__declare_static_bit_vector(lddf,1);\
__declare_static_bit_vector(stf,1);\
__declare_static_bit_vector(stdf,1);\
__declare_static_bit_vector(stfsr,1);\
__declare_static_bit_vector(stdfq,1);\
__declare_static_bit_vector(vfadd32,1);\
__declare_static_bit_vector(vfadd16,1);\
__declare_static_bit_vector(vfsub32,1);\
__declare_static_bit_vector(vfsub16,1);\
__declare_static_bit_vector(vfmul32,1);\
__declare_static_bit_vector(vfmul16,1);\
__declare_static_bit_vector(vfhtoi16,1);\
__declare_static_bit_vector(vfi16toh,1);\
__declare_static_bit_vector(faddreduce16,1);\
__declare_static_bit_vector(fstoh,1);\
__declare_static_bit_vector(fhtos,1);\
__declare_static_bit_vector(skip_fp_regs,1);\
__declare_static_bit_vector(ops_valid,1);\
__declare_static_bit_vector(thread_id_1,4);\
__declare_static_bit_vector(stream_id_1,2);\
__declare_static_bit_vector(slot_id_1,6);\
__declare_static_bit_vector(fsr_tem,5);\
__declare_static_bit_vector(uf1_d,64);\
__declare_static_bit_vector(uf2_d,64);\
__declare_static_bit_vector(NVM,1);\
__declare_static_bit_vector(nvc,1);\
__declare_static_bit_vector(ofc,1);\
__declare_static_bit_vector(ufc,1);\
__declare_static_bit_vector(dzc,1);\
__declare_static_bit_vector(nxc,1);\
__declare_static_bit_vector(ok_to_issue,1);\

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8877_c_macro_ __declare_static_bit_vector(slice_8876,1);\
bit_vector_slice(&(decoded_info), &(slice_8876), 78);\
bit_vector_cast_to_bit_vector(0, &(thread_head), &(slice_8876));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8881_c_macro_ __declare_static_bit_vector(slice_8880,1);\
bit_vector_slice(&(decoded_info), &(slice_8880), 77);\
bit_vector_cast_to_bit_vector(0, &(stream_head), &(slice_8880));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8885_c_macro_ __declare_static_bit_vector(slice_8884,4);\
bit_vector_slice(&(decoded_info), &(slice_8884), 73);\
bit_vector_cast_to_bit_vector(0, &(thread_id), &(slice_8884));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8889_c_macro_ __declare_static_bit_vector(slice_8888,2);\
bit_vector_slice(&(decoded_info), &(slice_8888), 71);\
bit_vector_cast_to_bit_vector(0, &(stream_id), &(slice_8888));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8893_c_macro_ __declare_static_bit_vector(slice_8892,6);\
bit_vector_slice(&(decoded_info), &(slice_8892), 65);\
bit_vector_cast_to_bit_vector(0, &(slot_id), &(slice_8892));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8897_c_macro_ __declare_static_bit_vector(slice_8896,1);\
bit_vector_slice(&(decoded_info), &(slice_8896), 64);\
bit_vector_cast_to_bit_vector(0, &(do_not_bypass), &(slice_8896));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8901_c_macro_ __declare_static_bit_vector(slice_8900,5);\
bit_vector_slice(&(decoded_info), &(slice_8900), 59);\
bit_vector_cast_to_bit_vector(0, &(write_reg_id), &(slice_8900));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8905_c_macro_ __declare_static_bit_vector(slice_8904,1);\
bit_vector_slice(&(decoded_info), &(slice_8904), 58);\
bit_vector_cast_to_bit_vector(0, &(decode_trap), &(slice_8904));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8909_c_macro_ __declare_static_bit_vector(slice_8908,1);\
bit_vector_slice(&(decoded_info), &(slice_8908), 57);\
bit_vector_cast_to_bit_vector(0, &(unimpl_instr), &(slice_8908));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8913_c_macro_ __declare_static_bit_vector(slice_8912,1);\
bit_vector_slice(&(decoded_info), &(slice_8912), 56);\
bit_vector_cast_to_bit_vector(0, &(invalid_reg), &(slice_8912));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8917_c_macro_ __declare_static_bit_vector(slice_8916,1);\
bit_vector_slice(&(decoded_info), &(slice_8916), 55);\
bit_vector_cast_to_bit_vector(0, &(seq_error), &(slice_8916));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8921_c_macro_ __declare_static_bit_vector(slice_8920,1);\
bit_vector_slice(&(decoded_info), &(slice_8920), 54);\
bit_vector_cast_to_bit_vector(0, &(fbfcc), &(slice_8920));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8925_c_macro_ __declare_static_bit_vector(slice_8924,1);\
bit_vector_slice(&(decoded_info), &(slice_8924), 53);\
bit_vector_cast_to_bit_vector(0, &(annul_flag), &(slice_8924));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8929_c_macro_ __declare_static_bit_vector(slice_8928,1);\
bit_vector_slice(&(decoded_info), &(slice_8928), 52);\
bit_vector_cast_to_bit_vector(0, &(fadds), &(slice_8928));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8933_c_macro_ __declare_static_bit_vector(slice_8932,1);\
bit_vector_slice(&(decoded_info), &(slice_8932), 51);\
bit_vector_cast_to_bit_vector(0, &(fsubs), &(slice_8932));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8937_c_macro_ __declare_static_bit_vector(slice_8936,1);\
bit_vector_slice(&(decoded_info), &(slice_8936), 50);\
bit_vector_cast_to_bit_vector(0, &(fmuls), &(slice_8936));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8941_c_macro_ __declare_static_bit_vector(slice_8940,1);\
bit_vector_slice(&(decoded_info), &(slice_8940), 49);\
bit_vector_cast_to_bit_vector(0, &(fdivs), &(slice_8940));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8945_c_macro_ __declare_static_bit_vector(slice_8944,1);\
bit_vector_slice(&(decoded_info), &(slice_8944), 48);\
bit_vector_cast_to_bit_vector(0, &(fsqrts), &(slice_8944));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8949_c_macro_ __declare_static_bit_vector(slice_8948,1);\
bit_vector_slice(&(decoded_info), &(slice_8948), 47);\
bit_vector_cast_to_bit_vector(0, &(fcmps), &(slice_8948));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8953_c_macro_ __declare_static_bit_vector(slice_8952,1);\
bit_vector_slice(&(decoded_info), &(slice_8952), 46);\
bit_vector_cast_to_bit_vector(0, &(fcmpes), &(slice_8952));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8957_c_macro_ __declare_static_bit_vector(slice_8956,1);\
bit_vector_slice(&(decoded_info), &(slice_8956), 45);\
bit_vector_cast_to_bit_vector(0, &(fmovs), &(slice_8956));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8961_c_macro_ __declare_static_bit_vector(slice_8960,1);\
bit_vector_slice(&(decoded_info), &(slice_8960), 44);\
bit_vector_cast_to_bit_vector(0, &(fnegs), &(slice_8960));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8965_c_macro_ __declare_static_bit_vector(slice_8964,1);\
bit_vector_slice(&(decoded_info), &(slice_8964), 43);\
bit_vector_cast_to_bit_vector(0, &(fabss), &(slice_8964));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8969_c_macro_ __declare_static_bit_vector(slice_8968,1);\
bit_vector_slice(&(decoded_info), &(slice_8968), 42);\
bit_vector_cast_to_bit_vector(0, &(fitos), &(slice_8968));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8973_c_macro_ __declare_static_bit_vector(slice_8972,1);\
bit_vector_slice(&(decoded_info), &(slice_8972), 41);\
bit_vector_cast_to_bit_vector(0, &(fstoi), &(slice_8972));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8977_c_macro_ __declare_static_bit_vector(slice_8976,1);\
bit_vector_slice(&(decoded_info), &(slice_8976), 40);\
bit_vector_cast_to_bit_vector(0, &(fstod), &(slice_8976));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8981_c_macro_ __declare_static_bit_vector(slice_8980,1);\
bit_vector_slice(&(decoded_info), &(slice_8980), 39);\
bit_vector_cast_to_bit_vector(0, &(faddd), &(slice_8980));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8985_c_macro_ __declare_static_bit_vector(slice_8984,1);\
bit_vector_slice(&(decoded_info), &(slice_8984), 38);\
bit_vector_cast_to_bit_vector(0, &(fsubd), &(slice_8984));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8989_c_macro_ __declare_static_bit_vector(slice_8988,1);\
bit_vector_slice(&(decoded_info), &(slice_8988), 37);\
bit_vector_cast_to_bit_vector(0, &(fsmuld), &(slice_8988));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8993_c_macro_ __declare_static_bit_vector(slice_8992,1);\
bit_vector_slice(&(decoded_info), &(slice_8992), 36);\
bit_vector_cast_to_bit_vector(0, &(fmuld), &(slice_8992));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_8997_c_macro_ __declare_static_bit_vector(slice_8996,1);\
bit_vector_slice(&(decoded_info), &(slice_8996), 35);\
bit_vector_cast_to_bit_vector(0, &(fdivd), &(slice_8996));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9001_c_macro_ __declare_static_bit_vector(slice_9000,1);\
bit_vector_slice(&(decoded_info), &(slice_9000), 34);\
bit_vector_cast_to_bit_vector(0, &(fsqrtd), &(slice_9000));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9005_c_macro_ __declare_static_bit_vector(slice_9004,1);\
bit_vector_slice(&(decoded_info), &(slice_9004), 33);\
bit_vector_cast_to_bit_vector(0, &(fcmpd), &(slice_9004));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9009_c_macro_ __declare_static_bit_vector(slice_9008,1);\
bit_vector_slice(&(decoded_info), &(slice_9008), 32);\
bit_vector_cast_to_bit_vector(0, &(fcmped), &(slice_9008));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9013_c_macro_ __declare_static_bit_vector(slice_9012,1);\
bit_vector_slice(&(decoded_info), &(slice_9012), 31);\
bit_vector_cast_to_bit_vector(0, &(fitod), &(slice_9012));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9017_c_macro_ __declare_static_bit_vector(slice_9016,1);\
bit_vector_slice(&(decoded_info), &(slice_9016), 30);\
bit_vector_cast_to_bit_vector(0, &(fdtoi), &(slice_9016));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9021_c_macro_ __declare_static_bit_vector(slice_9020,1);\
bit_vector_slice(&(decoded_info), &(slice_9020), 29);\
bit_vector_cast_to_bit_vector(0, &(fdtos), &(slice_9020));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9025_c_macro_ __declare_static_bit_vector(slice_9024,1);\
bit_vector_slice(&(decoded_info), &(slice_9024), 28);\
bit_vector_cast_to_bit_vector(0, &(ldf), &(slice_9024));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9029_c_macro_ __declare_static_bit_vector(slice_9028,1);\
bit_vector_slice(&(decoded_info), &(slice_9028), 27);\
bit_vector_cast_to_bit_vector(0, &(lddf), &(slice_9028));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9033_c_macro_ __declare_static_bit_vector(slice_9032,1);\
bit_vector_slice(&(decoded_info), &(slice_9032), 26);\
bit_vector_cast_to_bit_vector(0, &(ldfsr), &(slice_9032));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9037_c_macro_ __declare_static_bit_vector(slice_9036,1);\
bit_vector_slice(&(decoded_info), &(slice_9036), 25);\
bit_vector_cast_to_bit_vector(0, &(stf), &(slice_9036));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9041_c_macro_ __declare_static_bit_vector(slice_9040,1);\
bit_vector_slice(&(decoded_info), &(slice_9040), 24);\
bit_vector_cast_to_bit_vector(0, &(stdf), &(slice_9040));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9045_c_macro_ __declare_static_bit_vector(slice_9044,1);\
bit_vector_slice(&(decoded_info), &(slice_9044), 23);\
bit_vector_cast_to_bit_vector(0, &(stfsr), &(slice_9044));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9049_c_macro_ __declare_static_bit_vector(slice_9048,1);\
bit_vector_slice(&(decoded_info), &(slice_9048), 22);\
bit_vector_cast_to_bit_vector(0, &(stdfq), &(slice_9048));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9053_c_macro_ __declare_static_bit_vector(slice_9052,1);\
bit_vector_slice(&(decoded_info), &(slice_9052), 21);\
bit_vector_cast_to_bit_vector(0, &(vfadd32), &(slice_9052));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9057_c_macro_ __declare_static_bit_vector(slice_9056,1);\
bit_vector_slice(&(decoded_info), &(slice_9056), 20);\
bit_vector_cast_to_bit_vector(0, &(vfadd16), &(slice_9056));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9061_c_macro_ __declare_static_bit_vector(slice_9060,1);\
bit_vector_slice(&(decoded_info), &(slice_9060), 19);\
bit_vector_cast_to_bit_vector(0, &(vfsub32), &(slice_9060));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9065_c_macro_ __declare_static_bit_vector(slice_9064,1);\
bit_vector_slice(&(decoded_info), &(slice_9064), 18);\
bit_vector_cast_to_bit_vector(0, &(vfsub16), &(slice_9064));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9069_c_macro_ __declare_static_bit_vector(slice_9068,1);\
bit_vector_slice(&(decoded_info), &(slice_9068), 17);\
bit_vector_cast_to_bit_vector(0, &(vfmul32), &(slice_9068));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9073_c_macro_ __declare_static_bit_vector(slice_9072,1);\
bit_vector_slice(&(decoded_info), &(slice_9072), 16);\
bit_vector_cast_to_bit_vector(0, &(vfmul16), &(slice_9072));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9077_c_macro_ __declare_static_bit_vector(slice_9076,1);\
bit_vector_slice(&(decoded_info), &(slice_9076), 15);\
bit_vector_cast_to_bit_vector(0, &(vfhtoi16), &(slice_9076));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9081_c_macro_ __declare_static_bit_vector(slice_9080,1);\
bit_vector_slice(&(decoded_info), &(slice_9080), 14);\
bit_vector_cast_to_bit_vector(0, &(vfi16toh), &(slice_9080));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9085_c_macro_ __declare_static_bit_vector(slice_9084,1);\
bit_vector_slice(&(decoded_info), &(slice_9084), 13);\
bit_vector_cast_to_bit_vector(0, &(faddreduce16), &(slice_9084));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9089_c_macro_ __declare_static_bit_vector(slice_9088,1);\
bit_vector_slice(&(decoded_info), &(slice_9088), 12);\
bit_vector_cast_to_bit_vector(0, &(fstoh), &(slice_9088));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9093_c_macro_ __declare_static_bit_vector(slice_9092,1);\
bit_vector_slice(&(decoded_info), &(slice_9092), 11);\
bit_vector_cast_to_bit_vector(0, &(fhtos), &(slice_9092));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9097_c_macro_ __declare_static_bit_vector(slice_9096,4);\
bit_vector_slice(&(decoded_info), &(slice_9096), 7);\
bit_vector_cast_to_bit_vector(0, &(fbcond), &(slice_9096));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9101_c_macro_ __declare_static_bit_vector(slice_9100,1);\
bit_vector_slice(&(decoded_info), &(slice_9100), 6);\
bit_vector_cast_to_bit_vector(0, &(uses_fu1), &(slice_9100));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9105_c_macro_ __declare_static_bit_vector(slice_9104,1);\
bit_vector_slice(&(decoded_info), &(slice_9104), 5);\
bit_vector_cast_to_bit_vector(0, &(fu1_to_fu2), &(slice_9104));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9109_c_macro_ __declare_static_bit_vector(slice_9108,1);\
bit_vector_slice(&(decoded_info), &(slice_9108), 4);\
bit_vector_cast_to_bit_vector(0, &(fu1_to_sc), &(slice_9108));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9113_c_macro_ __declare_static_bit_vector(slice_9112,1);\
bit_vector_slice(&(decoded_info), &(slice_9112), 3);\
bit_vector_cast_to_bit_vector(0, &(fu1_to_ls), &(slice_9112));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9117_c_macro_ __declare_static_bit_vector(slice_9116,1);\
bit_vector_slice(&(decoded_info), &(slice_9116), 2);\
bit_vector_cast_to_bit_vector(0, &(fu1_to_iu2), &(slice_9116));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9121_c_macro_ __declare_static_bit_vector(slice_9120,1);\
bit_vector_slice(&(decoded_info), &(slice_9120), 1);\
bit_vector_cast_to_bit_vector(0, &(fu1_to_cu2), &(slice_9120));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9125_c_macro_ __declare_static_bit_vector(slice_9124,1);\
bit_vector_slice(&(decoded_info), &(slice_9124), 0);\
bit_vector_cast_to_bit_vector(0, &(skip_fp), &(slice_9124));\
;

#define fpunit_exec_exec__pre_op_preparation_stmt_9129_c_macro_ uint32_t fpunit_exec_exec__pre_op_preparation_stmt_9129_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__pre_op_preparation_stmt_9129_c_macro___print_counter,"fpunit_decode_to_exec");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9129_c_macro___print_counter,"thread_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(thread_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9129_c_macro___print_counter,"stream_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(stream_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9129_c_macro___print_counter,"slot_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(slot_id)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9134_c_macro_ __declare_static_bit_vector(OR_u1_u1_9133,1);\
bit_vector_or(&(vfadd16), &(vfadd32), &(OR_u1_u1_9133));\
bit_vector_cast_to_bit_vector(0, &(issue_vfadd), &(OR_u1_u1_9133));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9139_c_macro_ __declare_static_bit_vector(OR_u1_u1_9138,1);\
bit_vector_or(&(vfsub16), &(vfsub32), &(OR_u1_u1_9138));\
bit_vector_cast_to_bit_vector(0, &(issue_vfsub), &(OR_u1_u1_9138));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9144_c_macro_ __declare_static_bit_vector(OR_u1_u1_9143,1);\
bit_vector_or(&(vfmul16), &(vfmul32), &(OR_u1_u1_9143));\
bit_vector_cast_to_bit_vector(0, &(issue_vfmul), &(OR_u1_u1_9143));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9163_c_macro_ __declare_static_bit_vector(OR_u1_u1_9148,1);\
__declare_static_bit_vector(OR_u1_u1_9150,1);\
__declare_static_bit_vector(konst_9151,3);\
bit_vector_clear(&konst_9151);\
konst_9151.val.byte_array[0] = 2;\
__declare_static_bit_vector(konst_9152,3);\
bit_vector_clear(&konst_9152);\
__declare_static_bit_vector(MUX_9153,3);\
__declare_static_bit_vector(OR_u1_u1_9156,1);\
__declare_static_bit_vector(OR_u1_u1_9158,1);\
__declare_static_bit_vector(konst_9159,3);\
bit_vector_clear(&konst_9159);\
konst_9159.val.byte_array[0] = 4;\
__declare_static_bit_vector(konst_9160,3);\
bit_vector_clear(&konst_9160);\
__declare_static_bit_vector(MUX_9161,3);\
__declare_static_bit_vector(OR_u3_u3_9162,3);\
bit_vector_or(&(vfadd16), &(vfsub16), &(OR_u1_u1_9148));\
bit_vector_or(&(OR_u1_u1_9148), &(vfmul16), &(OR_u1_u1_9150));\
if (has_undefined_bit(&OR_u1_u1_9150)) {fprintf(stderr, "Error: variable OR_u1_u1_9150 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_9150));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_9150)){bit_vector_clear(&konst_9151);\
konst_9151.val.byte_array[0] = 2;\
bit_vector_cast_to_bit_vector(0, &(MUX_9153), &(konst_9151));\
}else {bit_vector_clear(&konst_9152);\
bit_vector_cast_to_bit_vector(0, &(MUX_9153), &(konst_9152));\
}bit_vector_or(&(vfadd32), &(vfsub32), &(OR_u1_u1_9156));\
bit_vector_or(&(OR_u1_u1_9156), &(vfmul32), &(OR_u1_u1_9158));\
if (has_undefined_bit(&OR_u1_u1_9158)) {fprintf(stderr, "Error: variable OR_u1_u1_9158 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_9158));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_9158)){bit_vector_clear(&konst_9159);\
konst_9159.val.byte_array[0] = 4;\
bit_vector_cast_to_bit_vector(0, &(MUX_9161), &(konst_9159));\
}else {bit_vector_clear(&konst_9160);\
bit_vector_cast_to_bit_vector(0, &(MUX_9161), &(konst_9160));\
}bit_vector_or(&(MUX_9153), &(MUX_9161), &(OR_u3_u3_9162));\
bit_vector_cast_to_bit_vector(0, &(vf_data_type), &(OR_u3_u3_9162));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9166_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_vfhtoi16), &(vfhtoi16));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9169_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_vfi16toh), &(vfi16toh));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9172_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_faddreduce16), &(faddreduce16));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9175_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fstoh), &(fstoh));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9178_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fhtos), &(fhtos));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9193_c_macro_ __declare_static_bit_vector(OR_u1_u1_9182,1);\
__declare_static_bit_vector(OR_u1_u1_9185,1);\
__declare_static_bit_vector(OR_u1_u1_9186,1);\
__declare_static_bit_vector(OR_u1_u1_9189,1);\
__declare_static_bit_vector(OR_u1_u1_9191,1);\
__declare_static_bit_vector(OR_u1_u1_9192,1);\
bit_vector_or(&(ldf), &(lddf), &(OR_u1_u1_9182));\
bit_vector_or(&(ldfsr), &(stf), &(OR_u1_u1_9185));\
bit_vector_or(&(OR_u1_u1_9182), &(OR_u1_u1_9185), &(OR_u1_u1_9186));\
bit_vector_or(&(stdf), &(stfsr), &(OR_u1_u1_9189));\
bit_vector_or(&(OR_u1_u1_9189), &(stdfq), &(OR_u1_u1_9191));\
bit_vector_or(&(OR_u1_u1_9186), &(OR_u1_u1_9191), &(OR_u1_u1_9192));\
bit_vector_cast_to_bit_vector(0, &(fp_dti), &(OR_u1_u1_9192));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9197_c_macro_ __declare_static_bit_vector(slice_9196,1);\
bit_vector_slice(&(ops), &(slice_9196), 173);\
bit_vector_cast_to_bit_vector(0, &(skip_fp_regs), &(slice_9196));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9201_c_macro_ __declare_static_bit_vector(slice_9200,1);\
bit_vector_slice(&(ops), &(slice_9200), 172);\
bit_vector_cast_to_bit_vector(0, &(ops_valid), &(slice_9200));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9205_c_macro_ __declare_static_bit_vector(slice_9204,4);\
bit_vector_slice(&(ops), &(slice_9204), 168);\
bit_vector_cast_to_bit_vector(0, &(thread_id_1), &(slice_9204));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9209_c_macro_ __declare_static_bit_vector(slice_9208,2);\
bit_vector_slice(&(ops), &(slice_9208), 166);\
bit_vector_cast_to_bit_vector(0, &(stream_id_1), &(slice_9208));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9213_c_macro_ __declare_static_bit_vector(slice_9212,6);\
bit_vector_slice(&(ops), &(slice_9212), 160);\
bit_vector_cast_to_bit_vector(0, &(slot_id_1), &(slice_9212));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9217_c_macro_ __declare_static_bit_vector(slice_9216,32);\
bit_vector_slice(&(ops), &(slice_9216), 128);\
bit_vector_cast_to_bit_vector(0, &(r1_val_h), &(slice_9216));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9221_c_macro_ __declare_static_bit_vector(slice_9220,32);\
bit_vector_slice(&(ops), &(slice_9220), 96);\
bit_vector_cast_to_bit_vector(0, &(r1_val_l), &(slice_9220));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9225_c_macro_ __declare_static_bit_vector(slice_9224,32);\
bit_vector_slice(&(ops), &(slice_9224), 64);\
bit_vector_cast_to_bit_vector(0, &(r2_val_h), &(slice_9224));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9229_c_macro_ __declare_static_bit_vector(slice_9228,32);\
bit_vector_slice(&(ops), &(slice_9228), 32);\
bit_vector_cast_to_bit_vector(0, &(r2_val_l), &(slice_9228));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9233_c_macro_ __declare_static_bit_vector(slice_9232,32);\
bit_vector_slice(&(ops), &(slice_9232), 0);\
bit_vector_cast_to_bit_vector(0, &(fsr_val), &(slice_9232));\
;

#define fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro_ uint32_t fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"fpunit_regs_read_access_response");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"ops_valid");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ops_valid)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"thread_id_1");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(thread_id_1)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"slot_id_1");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(slot_id_1)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"r1_val_h");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(r1_val_h)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"r1_val_l");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(r1_val_l)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"r2_val_h");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(r2_val_h)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"r2_val_l");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(r2_val_l)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"fsr_val");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(fsr_val)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9243_c_macro___print_counter,"skip_fp_regs");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(skip_fp_regs)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9247_c_macro_ __declare_static_bit_vector(slice_9246,5);\
bit_vector_slice(&(fsr_val), &(slice_9246), 23);\
bit_vector_cast_to_bit_vector(0, &(fsr_tem), &(slice_9246));\
;

#define fpunit_exec_exec__pre_op_preparation_stmt_9254_c_macro_ __declare_static_bit_vector(NOT_u1_u1_9249,1);\
__declare_static_bit_vector(EQ_u1_u1_9252,1);\
__declare_static_bit_vector(OR_u1_u1_9253,1);\
bit_vector_not( &(uses_fu1), &(NOT_u1_u1_9249));\
bit_vector_equal(0, &(skip_fp), &(skip_fp_regs), &(EQ_u1_u1_9252));\
bit_vector_or(&(NOT_u1_u1_9249), &(EQ_u1_u1_9252), &(OR_u1_u1_9253));\
if (!bit_vector_to_uint64(0, &OR_u1_u1_9253)) {\
uint32_t fpunit_exec_exec__pre_op_preparation_stmt_9254_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]ASSERTION! fpunit_exec>\t%s\n",fpunit_exec_exec__pre_op_preparation_stmt_9254_c_macro___print_counter,"skip_fp_mismatch");release_file_print_lock(fpunit_exec_exec___report_log_file__);assert(0);};

#define fpunit_exec_exec__pre_op_preparation_stmt_9261_c_macro_ __declare_static_bit_vector(NOT_u1_u1_9256,1);\
__declare_static_bit_vector(EQ_u4_u1_9259,1);\
__declare_static_bit_vector(OR_u1_u1_9260,1);\
bit_vector_not( &(uses_fu1), &(NOT_u1_u1_9256));\
bit_vector_equal(0, &(thread_id), &(thread_id_1), &(EQ_u4_u1_9259));\
bit_vector_or(&(NOT_u1_u1_9256), &(EQ_u4_u1_9259), &(OR_u1_u1_9260));\
if (!bit_vector_to_uint64(0, &OR_u1_u1_9260)) {\
uint32_t fpunit_exec_exec__pre_op_preparation_stmt_9261_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]ASSERTION! fpunit_exec>\t%s\n",fpunit_exec_exec__pre_op_preparation_stmt_9261_c_macro___print_counter,"thread_id_mismatch");release_file_print_lock(fpunit_exec_exec___report_log_file__);assert(0);};

#define fpunit_exec_exec__pre_op_preparation_stmt_9268_c_macro_ __declare_static_bit_vector(NOT_u1_u1_9263,1);\
__declare_static_bit_vector(EQ_u2_u1_9266,1);\
__declare_static_bit_vector(OR_u1_u1_9267,1);\
bit_vector_not( &(uses_fu1), &(NOT_u1_u1_9263));\
bit_vector_equal(0, &(stream_id), &(stream_id_1), &(EQ_u2_u1_9266));\
bit_vector_or(&(NOT_u1_u1_9263), &(EQ_u2_u1_9266), &(OR_u1_u1_9267));\
if (!bit_vector_to_uint64(0, &OR_u1_u1_9267)) {\
uint32_t fpunit_exec_exec__pre_op_preparation_stmt_9268_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]ASSERTION! fpunit_exec>\t%s\n",fpunit_exec_exec__pre_op_preparation_stmt_9268_c_macro___print_counter,"stream_id_mismatch");release_file_print_lock(fpunit_exec_exec___report_log_file__);assert(0);};

#define fpunit_exec_exec__pre_op_preparation_stmt_9275_c_macro_ __declare_static_bit_vector(NOT_u1_u1_9270,1);\
__declare_static_bit_vector(EQ_u6_u1_9273,1);\
__declare_static_bit_vector(OR_u1_u1_9274,1);\
bit_vector_not( &(uses_fu1), &(NOT_u1_u1_9270));\
bit_vector_equal(0, &(slot_id), &(slot_id_1), &(EQ_u6_u1_9273));\
bit_vector_or(&(NOT_u1_u1_9270), &(EQ_u6_u1_9273), &(OR_u1_u1_9274));\
if (!bit_vector_to_uint64(0, &OR_u1_u1_9274)) {\
uint32_t fpunit_exec_exec__pre_op_preparation_stmt_9275_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]ASSERTION! fpunit_exec>\t%s\n",fpunit_exec_exec__pre_op_preparation_stmt_9275_c_macro___print_counter,"slot_id_mismatch");release_file_print_lock(fpunit_exec_exec___report_log_file__);assert(0);};

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9279_c_macro_ static float type_cast_9278;\
bit_vector_bitcast_to_float( &(type_cast_9278),  &(r1_val_l));\
f1_s = type_cast_9278;\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9284_c_macro_ __declare_static_bit_vector(CONCAT_u32_u64_9283,64);\
bit_vector_concatenate( &(r1_val_h), &(r1_val_l), &(CONCAT_u32_u64_9283));\
bit_vector_cast_to_bit_vector(0, &(uf1_d), &(CONCAT_u32_u64_9283));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9288_c_macro_ static double type_cast_9287;\
bit_vector_bitcast_to_double( &(type_cast_9287),  &(uf1_d));\
f1_d = type_cast_9287;\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9292_c_macro_ static float type_cast_9291;\
bit_vector_bitcast_to_float( &(type_cast_9291),  &(r2_val_l));\
f2_s = type_cast_9291;\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9297_c_macro_ __declare_static_bit_vector(CONCAT_u32_u64_9296,64);\
bit_vector_concatenate( &(r2_val_h), &(r2_val_l), &(CONCAT_u32_u64_9296));\
bit_vector_cast_to_bit_vector(0, &(uf2_d), &(CONCAT_u32_u64_9296));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9301_c_macro_ static double type_cast_9300;\
bit_vector_bitcast_to_double( &(type_cast_9300),  &(uf2_d));\
f2_d = type_cast_9300;\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9305_c_macro_ __declare_static_bit_vector(slice_9304,1);\
bit_vector_slice(&(fsr_tem), &(slice_9304), 4);\
bit_vector_cast_to_bit_vector(0, &(NVM), &(slice_9304));\
;

#define fpunit_exec_exec__pre_op_preparation_call_stmt_9343_c_macro_ __declare_static_bit_vector(OR_u1_u1_9313,1);\
bit_vector_or(&(fmuls), &(fsmuld), &(OR_u1_u1_9313));\
_fpunit_exec_exec_generate_pre_compute_exceptions_( &(thread_id),  &(stream_id),  &(slot_id),  &(fadds),  &(fsubs),  &(OR_u1_u1_9313),  &(fdivs),  &(fcmps),  &(fcmpes),  &(fsqrts),  &(fstoi),  &(fitos),  &(fstod),  &(f1_s),  &(f2_s),  &(faddd),  &(fsubd),  &(fmuld),  &(fdivd),  &(fcmpd),  &(fcmped),  &(fsqrtd),  &(fdtoi),  &(fdtos),  &(f1_d),  &(f2_d), &(nvc), &(ofc), &(ufc), &(dzc), &(nxc), &(f1_s_class), &(f2_s_class), &(f1_d_class), &(f2_d_class));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9350_c_macro_ __declare_static_bit_vector(AND_u1_u1_9347,1);\
__declare_static_bit_vector(AND_u1_u1_9349,1);\
bit_vector_and(&(uses_fu1), &(NVM), &(AND_u1_u1_9347));\
bit_vector_and(&(AND_u1_u1_9347), &(nvc), &(AND_u1_u1_9349));\
bit_vector_cast_to_bit_vector(0, &(ieee_754_exception), &(AND_u1_u1_9349));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9361_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_9354,2);\
__declare_static_bit_vector(CONCAT_u2_u3_9356,3);\
__declare_static_bit_vector(CONCAT_u1_u2_9359,2);\
__declare_static_bit_vector(CONCAT_u3_u5_9360,5);\
bit_vector_concatenate( &(nvc), &(ofc), &(CONCAT_u1_u2_9354));\
bit_vector_concatenate( &(CONCAT_u1_u2_9354), &(ufc), &(CONCAT_u2_u3_9356));\
bit_vector_concatenate( &(dzc), &(nxc), &(CONCAT_u1_u2_9359));\
bit_vector_concatenate( &(CONCAT_u2_u3_9356), &(CONCAT_u1_u2_9359), &(CONCAT_u3_u5_9360));\
bit_vector_cast_to_bit_vector(0, &(cexc), &(CONCAT_u3_u5_9360));\
;

#define fpunit_exec_exec__pre_op_preparation_stmt_9367_c_macro_ if (bit_vector_to_uint64(0, &ieee_754_exception)) {\
uint32_t fpunit_exec_exec__pre_op_preparation_stmt_9367_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__pre_op_preparation_stmt_9367_c_macro___print_counter,"snan_exception_found");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9367_c_macro___print_counter,"thread_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(thread_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9367_c_macro___print_counter,"stream_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(stream_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9367_c_macro___print_counter,"slot_id");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(slot_id)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__pre_op_preparation_stmt_9367_c_macro___print_counter,"nvc");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(nvc)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);};

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9373_c_macro_ __declare_static_bit_vector(NOT_u1_u1_9371,1);\
__declare_static_bit_vector(AND_u1_u1_9372,1);\
bit_vector_not( &(decode_trap), &(NOT_u1_u1_9371));\
bit_vector_and(&(uses_fu1), &(NOT_u1_u1_9371), &(AND_u1_u1_9372));\
bit_vector_cast_to_bit_vector(0, &(ok_to_issue), &(AND_u1_u1_9372));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9376_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fmovs), &(fmovs));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9379_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fnegs), &(fnegs));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9382_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fabss), &(fabss));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9385_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fbfcc), &(fbfcc));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9388_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fadds), &(fadds));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9391_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fsubs), &(fsubs));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9394_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fmuls), &(fmuls));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9399_c_macro_ __declare_static_bit_vector(AND_u1_u1_9398,1);\
bit_vector_and(&(ok_to_issue), &(fdivs), &(AND_u1_u1_9398));\
bit_vector_cast_to_bit_vector(0, &(issue_fdivs), &(AND_u1_u1_9398));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9404_c_macro_ __declare_static_bit_vector(AND_u1_u1_9403,1);\
bit_vector_and(&(ok_to_issue), &(fsqrts), &(AND_u1_u1_9403));\
bit_vector_cast_to_bit_vector(0, &(issue_fsqrts), &(AND_u1_u1_9403));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9407_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fcmps), &(fcmps));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9410_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fcmpes), &(fcmpes));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9413_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fitos), &(fitos));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9416_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fstoi), &(fstoi));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9419_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fstod), &(fstod));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9422_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_faddd), &(faddd));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9425_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fsubd), &(fsubd));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9428_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fsmuld), &(fsmuld));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9431_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fmuld), &(fmuld));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9436_c_macro_ __declare_static_bit_vector(AND_u1_u1_9435,1);\
bit_vector_and(&(ok_to_issue), &(fdivd), &(AND_u1_u1_9435));\
bit_vector_cast_to_bit_vector(0, &(issue_fdivd), &(AND_u1_u1_9435));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9441_c_macro_ __declare_static_bit_vector(AND_u1_u1_9440,1);\
bit_vector_and(&(ok_to_issue), &(fsqrtd), &(AND_u1_u1_9440));\
bit_vector_cast_to_bit_vector(0, &(issue_fsqrtd), &(AND_u1_u1_9440));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9444_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fcmpd), &(fcmpd));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9447_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fcmped), &(fcmped));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9450_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fitod), &(fitod));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9453_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fdtoi), &(fdtoi));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9456_c_macro_ bit_vector_cast_to_bit_vector(0, &(issue_fdtos), &(fdtos));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9462_c_macro_ __declare_static_bit_vector(MUX_9461,32);\
if (has_undefined_bit(&stfsr)) {fprintf(stderr, "Error: variable stfsr has undefined value (%s) at test point.\n", to_string(&stfsr));assert(0);} \
if(bit_vector_to_uint64(0, &stfsr)){bit_vector_cast_to_bit_vector(0, &(MUX_9461), &(fsr_val));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_9461), &(r1_val_l));\
}bit_vector_cast_to_bit_vector(0, &(st_val_l), &(MUX_9461));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9465_c_macro_ bit_vector_cast_to_bit_vector(0, &(st_val_h), &(r1_val_h));\
;

#define fpunit_exec_exec__pre_op_preparation_assign_stmt_9472_c_macro_ __declare_static_bit_vector(OR_u1_u1_9469,1);\
__declare_static_bit_vector(OR_u1_u1_9471,1);\
bit_vector_or(&(stf), &(stdf), &(OR_u1_u1_9469));\
bit_vector_or(&(OR_u1_u1_9469), &(stfsr), &(OR_u1_u1_9471));\
bit_vector_cast_to_bit_vector(0, &(is_store), &(OR_u1_u1_9471));\
;

#define fpunit_exec_exec__pre_op_preparation_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pthread_head)), &(thread_head));\
bit_vector_cast_to_bit_vector(0, &((*__pstream_head)), &(stream_head));\
bit_vector_cast_to_bit_vector(0, &((*__pthread_id)), &(thread_id));\
bit_vector_cast_to_bit_vector(0, &((*__pstream_id)), &(stream_id));\
bit_vector_cast_to_bit_vector(0, &((*__pslot_id)), &(slot_id));\
bit_vector_cast_to_bit_vector(0, &((*__pdo_not_bypass)), &(do_not_bypass));\
bit_vector_cast_to_bit_vector(0, &((*__pwrite_reg_id)), &(write_reg_id));\
bit_vector_cast_to_bit_vector(0, &((*__pfbcond)), &(fbcond));\
bit_vector_cast_to_bit_vector(0, &((*__pannul_flag)), &(annul_flag));\
bit_vector_cast_to_bit_vector(0, &((*__pdecode_trap)), &(decode_trap));\
bit_vector_cast_to_bit_vector(0, &((*__punimpl_instr)), &(unimpl_instr));\
bit_vector_cast_to_bit_vector(0, &((*__pinvalid_reg)), &(invalid_reg));\
bit_vector_cast_to_bit_vector(0, &((*__pseq_error)), &(seq_error));\
bit_vector_cast_to_bit_vector(0, &((*__pieee_754_exception)), &(ieee_754_exception));\
bit_vector_cast_to_bit_vector(0, &((*__pcexc)), &(cexc));\
bit_vector_cast_to_bit_vector(0, &((*__pfp_dti)), &(fp_dti));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fmovs)), &(issue_fmovs));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fnegs)), &(issue_fnegs));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fabss)), &(issue_fabss));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fbfcc)), &(issue_fbfcc));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fadds)), &(issue_fadds));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fsubs)), &(issue_fsubs));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fmuls)), &(issue_fmuls));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fdivs)), &(issue_fdivs));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fsqrts)), &(issue_fsqrts));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fcmps)), &(issue_fcmps));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fcmpes)), &(issue_fcmpes));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fitos)), &(issue_fitos));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fstoi)), &(issue_fstoi));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fstod)), &(issue_fstod));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_faddd)), &(issue_faddd));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fsubd)), &(issue_fsubd));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fsmuld)), &(issue_fsmuld));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fmuld)), &(issue_fmuld));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fdivd)), &(issue_fdivd));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fsqrtd)), &(issue_fsqrtd));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fcmpd)), &(issue_fcmpd));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fcmped)), &(issue_fcmped));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fitod)), &(issue_fitod));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fdtoi)), &(issue_fdtoi));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fdtos)), &(issue_fdtos));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_vfadd)), &(issue_vfadd));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_vfsub)), &(issue_vfsub));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_vfmul)), &(issue_vfmul));\
bit_vector_cast_to_bit_vector(0, &((*__pvf_data_type)), &(vf_data_type));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_vfhtoi16)), &(issue_vfhtoi16));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_vfi16toh)), &(issue_vfi16toh));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_faddreduce16)), &(issue_faddreduce16));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fstoh)), &(issue_fstoh));\
bit_vector_cast_to_bit_vector(0, &((*__pissue_fhtos)), &(issue_fhtos));\
bit_vector_cast_to_bit_vector(0, &((*__pis_store)), &(is_store));\
bit_vector_cast_to_bit_vector(0, &((*__pldfsr)), &(ldfsr));\
bit_vector_cast_to_bit_vector(0, &((*__pskip_fp)), &(skip_fp));\
bit_vector_cast_to_bit_vector(0, &((*__pr1_val_h)), &(r1_val_h));\
bit_vector_cast_to_bit_vector(0, &((*__pr1_val_l)), &(r1_val_l));\
bit_vector_cast_to_bit_vector(0, &((*__pr2_val_h)), &(r2_val_h));\
bit_vector_cast_to_bit_vector(0, &((*__pr2_val_l)), &(r2_val_l));\
bit_vector_cast_to_bit_vector(0, &((*__pfsr_val)), &(fsr_val));\
(*__pf1_s) = f1_s;\
(*__pf2_s) = f2_s;\
(*__pf1_d) = f1_d;\
(*__pf2_d) = f2_d;\
bit_vector_cast_to_bit_vector(0, &((*__pst_val_h)), &(st_val_h));\
bit_vector_cast_to_bit_vector(0, &((*__pst_val_l)), &(st_val_l));\
bit_vector_cast_to_bit_vector(0, &((*__puses_fu1)), &(uses_fu1));\
bit_vector_cast_to_bit_vector(0, &((*__pfu1_to_fu2)), &(fu1_to_fu2));\
bit_vector_cast_to_bit_vector(0, &((*__pfu1_to_sc)), &(fu1_to_sc));\
bit_vector_cast_to_bit_vector(0, &((*__pfu1_to_ls)), &(fu1_to_ls));\
bit_vector_cast_to_bit_vector(0, &((*__pfu1_to_iu2)), &(fu1_to_iu2));\
bit_vector_cast_to_bit_vector(0, &((*__pfu1_to_cu2)), &(fu1_to_cu2));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_s_class)), &(f1_s_class));\
bit_vector_cast_to_bit_vector(0, &((*__pf2_s_class)), &(f2_s_class));\
bit_vector_cast_to_bit_vector(0, &((*__pf1_d_class)), &(f1_d_class));\
bit_vector_cast_to_bit_vector(0, &((*__pf2_d_class)), &(f2_d_class));\
;

#define fpunit_exec_exec__round_32_extn_inner_inarg_prep_macro__ __declare_static_bit_vector(sticky,1);\
bit_vector_cast_to_bit_vector(0, &(sticky), &((*__psticky)));\
__declare_static_bit_vector(apply_sticky_correction,1);\
bit_vector_cast_to_bit_vector(0, &(apply_sticky_correction), &((*__papply_sticky_correction)));\
__declare_static_bit_vector(unbiased_exp_13,13);\
bit_vector_cast_to_bit_vector(0, &(unbiased_exp_13), &((*__punbiased_exp_13)));\
__declare_static_bit_vector(mantissa_62,62);\
bit_vector_cast_to_bit_vector(0, &(mantissa_62), &((*__pmantissa_62)));\
__declare_static_bit_vector(sp_biased_exp_13_post_round,13);\
__declare_static_bit_vector(sp_mantissa_23_post_round,23);\
__declare_static_bit_vector(s_exp_13,13);\
__declare_static_bit_vector(SP_frac_temp,25);\
__declare_static_bit_vector(SP_lsb_frac,1);\
__declare_static_bit_vector(SP_round_bits,39);\
__declare_static_bit_vector(SP_round_value_equal,1);\
__declare_static_bit_vector(SP_round_value_greater,1);\
__declare_static_bit_vector(SP_need_to_round,1);\
__declare_static_bit_vector(SP_round_operator,25);\
__declare_static_bit_vector(SP_fraction_rounded,25);\
__declare_static_bit_vector(SP_increase_exponent,1);\

#define fpunit_exec_exec__round_32_extn_stmt_7563_c_macro_ uint32_t fpunit_exec_exec__round_32_extn_stmt_7563_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__round_32_extn_stmt_7563_c_macro___print_counter,"round_32_extn_in_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_32_extn_stmt_7563_c_macro___print_counter,"sticky");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sticky)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_32_extn_stmt_7563_c_macro___print_counter,"unbiased_exp_13");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(unbiased_exp_13)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_32_extn_stmt_7563_c_macro___print_counter,"mantissa_62");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_62)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7567_c_macro_ __declare_static_bit_vector(type_cast_7566,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_7566), &(unbiased_exp_13));\
bit_vector_cast_to_bit_vector(0, &(s_exp_13), &(type_cast_7566));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7575_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_7571,2);\
bit_vector_clear(&CONCAT_u1_u2_7571);\
CONCAT_u1_u2_7571.val.byte_array[0] = 1;\
__declare_static_bit_vector(slice_7573,23);\
__declare_static_bit_vector(CONCAT_u2_u25_7574,25);\
bit_vector_concatenate( &(ZERO_1), &(ONE_1), &(CONCAT_u1_u2_7571));\
bit_vector_slice(&(mantissa_62), &(slice_7573), 39);\
bit_vector_concatenate( &(CONCAT_u1_u2_7571), &(slice_7573), &(CONCAT_u2_u25_7574));\
bit_vector_cast_to_bit_vector(0, &(SP_frac_temp), &(CONCAT_u2_u25_7574));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7580_c_macro_ __declare_static_bit_vector(konst_7578,62);\
bit_vector_clear(&konst_7578);\
konst_7578.val.byte_array[0] = 39;\
__declare_static_bit_vector(BITSEL_u62_u1_7579,1);\
bit_vector_clear(&konst_7578);\
konst_7578.val.byte_array[0] = 39;\
bit_vector_bitsel( &(mantissa_62), &(konst_7578), &(BITSEL_u62_u1_7579));\
bit_vector_cast_to_bit_vector(0, &(SP_lsb_frac), &(BITSEL_u62_u1_7579));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7584_c_macro_ __declare_static_bit_vector(slice_7583,39);\
bit_vector_slice(&(mantissa_62), &(slice_7583), 0);\
bit_vector_cast_to_bit_vector(0, &(SP_round_bits), &(slice_7583));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7589_c_macro_ __declare_static_bit_vector(EQ_u39_u1_7588,1);\
bit_vector_equal(0, &(SP_round_bits), &(SP_round_mid), &(EQ_u39_u1_7588));\
bit_vector_cast_to_bit_vector(0, &(SP_round_value_equal), &(EQ_u39_u1_7588));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7594_c_macro_ __declare_static_bit_vector(UGT_u39_u1_7593,1);\
bit_vector_greater(0, &(SP_round_bits), &(SP_round_mid), &(UGT_u39_u1_7593));\
bit_vector_cast_to_bit_vector(0, &(SP_round_value_greater), &(UGT_u39_u1_7593));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7611_c_macro_ __declare_static_bit_vector(AND_u1_u1_7599,1);\
__declare_static_bit_vector(NOT_u1_u1_7601,1);\
__declare_static_bit_vector(AND_u1_u1_7602,1);\
__declare_static_bit_vector(OR_u1_u1_7603,1);\
__declare_static_bit_vector(AND_u1_u1_7606,1);\
__declare_static_bit_vector(NOT_u1_u1_7608,1);\
__declare_static_bit_vector(AND_u1_u1_7609,1);\
__declare_static_bit_vector(OR_u1_u1_7610,1);\
bit_vector_and(&(SP_round_value_equal), &(SP_lsb_frac), &(AND_u1_u1_7599));\
bit_vector_not( &(apply_sticky_correction), &(NOT_u1_u1_7601));\
bit_vector_and(&(AND_u1_u1_7599), &(NOT_u1_u1_7601), &(AND_u1_u1_7602));\
bit_vector_or(&(SP_round_value_greater), &(AND_u1_u1_7602), &(OR_u1_u1_7603));\
bit_vector_and(&(SP_round_value_equal), &(sticky), &(AND_u1_u1_7606));\
bit_vector_not( &(apply_sticky_correction), &(NOT_u1_u1_7608));\
bit_vector_and(&(AND_u1_u1_7606), &(NOT_u1_u1_7608), &(AND_u1_u1_7609));\
bit_vector_or(&(OR_u1_u1_7603), &(AND_u1_u1_7609), &(OR_u1_u1_7610));\
bit_vector_cast_to_bit_vector(0, &(SP_need_to_round), &(OR_u1_u1_7610));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7617_c_macro_ __declare_static_bit_vector(MUX_7616,25);\
if (has_undefined_bit(&SP_need_to_round)) {fprintf(stderr, "Error: variable SP_need_to_round has undefined value (%s) at test point.\n", to_string(&SP_need_to_round));assert(0);} \
if(bit_vector_to_uint64(0, &SP_need_to_round)){bit_vector_cast_to_bit_vector(0, &(MUX_7616), &(ONE_25));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7616), &(ZERO_25));\
}bit_vector_cast_to_bit_vector(0, &(SP_round_operator), &(MUX_7616));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7622_c_macro_ __declare_static_bit_vector(ADD_u25_u25_7621,25);\
bit_vector_plus( &(SP_frac_temp), &(SP_round_operator), &(ADD_u25_u25_7621));\
bit_vector_cast_to_bit_vector(0, &(SP_fraction_rounded), &(ADD_u25_u25_7621));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7631_c_macro_ __declare_static_bit_vector(slice_7625,23);\
__declare_static_bit_vector(NOT_u23_u23_7626,23);\
__declare_static_bit_vector(konst_7627,23);\
bit_vector_clear(&konst_7627);\
__declare_static_bit_vector(EQ_u23_u1_7628,1);\
__declare_static_bit_vector(AND_u1_u1_7630,1);\
bit_vector_slice(&(SP_frac_temp), &(slice_7625), 0);\
bit_vector_not( &(slice_7625), &(NOT_u23_u23_7626));\
bit_vector_clear(&konst_7627);\
bit_vector_equal(0, &(NOT_u23_u23_7626), &(konst_7627), &(EQ_u23_u1_7628));\
bit_vector_and(&(EQ_u23_u1_7628), &(SP_need_to_round), &(AND_u1_u1_7630));\
bit_vector_cast_to_bit_vector(0, &(SP_increase_exponent), &(AND_u1_u1_7630));\
;

#define fpunit_exec_exec__round_32_extn_stmt_7636_c_macro_ uint32_t fpunit_exec_exec__round_32_extn_stmt_7636_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__round_32_extn_stmt_7636_c_macro___print_counter,"round_32_extn_increase_exponent");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_32_extn_stmt_7636_c_macro___print_counter,"SP_frac_temp");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(SP_frac_temp)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_32_extn_stmt_7636_c_macro___print_counter,"SP_increase_exponent");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(SP_increase_exponent)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_32_extn_stmt_7636_c_macro___print_counter,"SP_fraction_rounded");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(SP_fraction_rounded)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_32_extn_stmt_7636_c_macro___print_counter,"SP_frac_temp");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(SP_frac_temp)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7644_c_macro_ __declare_static_bit_vector(slice_7640,23);\
__declare_static_bit_vector(slice_7642,23);\
__declare_static_bit_vector(MUX_7643,23);\
if (has_undefined_bit(&SP_increase_exponent)) {fprintf(stderr, "Error: variable SP_increase_exponent has undefined value (%s) at test point.\n", to_string(&SP_increase_exponent));assert(0);} \
if(bit_vector_to_uint64(0, &SP_increase_exponent)){bit_vector_slice(&(SP_fraction_rounded), &(slice_7640), 1);\
bit_vector_cast_to_bit_vector(0, &(MUX_7643), &(slice_7640));\
}else {bit_vector_slice(&(SP_fraction_rounded), &(slice_7642), 0);\
bit_vector_cast_to_bit_vector(0, &(MUX_7643), &(slice_7642));\
}bit_vector_cast_to_bit_vector(0, &(sp_mantissa_23_post_round), &(MUX_7643));\
;

#define fpunit_exec_exec__round_32_extn_assign_stmt_7653_c_macro_ __declare_static_bit_vector(konst_7648,13);\
bit_vector_clear(&konst_7648);\
konst_7648.val.byte_array[0] = 128;\
__declare_static_bit_vector(konst_7649,13);\
bit_vector_clear(&konst_7649);\
konst_7649.val.byte_array[0] = 127;\
__declare_static_bit_vector(MUX_7650,13);\
__declare_static_bit_vector(ADD_u13_u13_7651,13);\
__declare_static_bit_vector(type_cast_7652,13);\
if (has_undefined_bit(&SP_increase_exponent)) {fprintf(stderr, "Error: variable SP_increase_exponent has undefined value (%s) at test point.\n", to_string(&SP_increase_exponent));assert(0);} \
if(bit_vector_to_uint64(0, &SP_increase_exponent)){bit_vector_clear(&konst_7648);\
konst_7648.val.byte_array[0] = 128;\
bit_vector_cast_to_bit_vector(0, &(MUX_7650), &(konst_7648));\
}else {bit_vector_clear(&konst_7649);\
konst_7649.val.byte_array[0] = 127;\
bit_vector_cast_to_bit_vector(0, &(MUX_7650), &(konst_7649));\
}bit_vector_plus( &(s_exp_13), &(MUX_7650), &(ADD_u13_u13_7651));\
bit_vector_bitcast_to_bit_vector( &(type_cast_7652), &(ADD_u13_u13_7651));\
bit_vector_cast_to_bit_vector(0, &(sp_biased_exp_13_post_round), &(type_cast_7652));\
;

#define fpunit_exec_exec__round_32_extn_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__psp_biased_exp_13_post_round)), &(sp_biased_exp_13_post_round));\
bit_vector_cast_to_bit_vector(0, &((*__psp_mantissa_23_post_round)), &(sp_mantissa_23_post_round));\
;

#define fpunit_exec_exec__round_64_extn_inner_inarg_prep_macro__ __declare_static_bit_vector(sticky,1);\
bit_vector_cast_to_bit_vector(0, &(sticky), &((*__psticky)));\
__declare_static_bit_vector(apply_sticky_correction,1);\
bit_vector_cast_to_bit_vector(0, &(apply_sticky_correction), &((*__papply_sticky_correction)));\
__declare_static_bit_vector(unbiased_exp_13,13);\
bit_vector_cast_to_bit_vector(0, &(unbiased_exp_13), &((*__punbiased_exp_13)));\
__declare_static_bit_vector(mantissa_62,62);\
bit_vector_cast_to_bit_vector(0, &(mantissa_62), &((*__pmantissa_62)));\
__declare_static_bit_vector(dp_biased_exp_13_post_round,13);\
__declare_static_bit_vector(dp_mantissa_52_post_round,52);\
__declare_static_bit_vector(s_exp_13,13);\
__declare_static_bit_vector(DP_frac_temp,54);\
__declare_static_bit_vector(DP_lsb_frac,1);\
__declare_static_bit_vector(DP_round_bits,10);\
__declare_static_bit_vector(DP_round_value_equal,1);\
__declare_static_bit_vector(DP_round_value_greater,1);\
__declare_static_bit_vector(DP_need_to_round,1);\
__declare_static_bit_vector(DP_round_operator,54);\
__declare_static_bit_vector(DP_fraction_rounded,54);\
__declare_static_bit_vector(DP_increase_exponent,1);\

#define fpunit_exec_exec__round_64_extn_assign_stmt_7707_c_macro_ __declare_static_bit_vector(type_cast_7706,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_7706), &(unbiased_exp_13));\
bit_vector_cast_to_bit_vector(1, &(s_exp_13), &(type_cast_7706));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7715_c_macro_ __declare_static_bit_vector(CONCAT_u1_u2_7711,2);\
bit_vector_clear(&CONCAT_u1_u2_7711);\
CONCAT_u1_u2_7711.val.byte_array[0] = 1;\
__declare_static_bit_vector(slice_7713,52);\
__declare_static_bit_vector(CONCAT_u2_u54_7714,54);\
bit_vector_concatenate( &(ZERO_1), &(ONE_1), &(CONCAT_u1_u2_7711));\
bit_vector_slice(&(mantissa_62), &(slice_7713), 10);\
bit_vector_concatenate( &(CONCAT_u1_u2_7711), &(slice_7713), &(CONCAT_u2_u54_7714));\
bit_vector_cast_to_bit_vector(0, &(DP_frac_temp), &(CONCAT_u2_u54_7714));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7720_c_macro_ __declare_static_bit_vector(konst_7718,62);\
bit_vector_clear(&konst_7718);\
konst_7718.val.byte_array[0] = 10;\
__declare_static_bit_vector(BITSEL_u62_u1_7719,1);\
bit_vector_clear(&konst_7718);\
konst_7718.val.byte_array[0] = 10;\
bit_vector_bitsel( &(mantissa_62), &(konst_7718), &(BITSEL_u62_u1_7719));\
bit_vector_cast_to_bit_vector(0, &(DP_lsb_frac), &(BITSEL_u62_u1_7719));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7724_c_macro_ __declare_static_bit_vector(slice_7723,10);\
bit_vector_slice(&(mantissa_62), &(slice_7723), 0);\
bit_vector_cast_to_bit_vector(0, &(DP_round_bits), &(slice_7723));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7729_c_macro_ __declare_static_bit_vector(EQ_u10_u1_7728,1);\
bit_vector_equal(0, &(DP_round_bits), &(DP_round_mid), &(EQ_u10_u1_7728));\
bit_vector_cast_to_bit_vector(0, &(DP_round_value_equal), &(EQ_u10_u1_7728));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7734_c_macro_ __declare_static_bit_vector(UGT_u10_u1_7733,1);\
bit_vector_greater(0, &(DP_round_bits), &(DP_round_mid), &(UGT_u10_u1_7733));\
bit_vector_cast_to_bit_vector(0, &(DP_round_value_greater), &(UGT_u10_u1_7733));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7751_c_macro_ __declare_static_bit_vector(AND_u1_u1_7739,1);\
__declare_static_bit_vector(NOT_u1_u1_7741,1);\
__declare_static_bit_vector(AND_u1_u1_7742,1);\
__declare_static_bit_vector(OR_u1_u1_7743,1);\
__declare_static_bit_vector(AND_u1_u1_7746,1);\
__declare_static_bit_vector(NOT_u1_u1_7748,1);\
__declare_static_bit_vector(AND_u1_u1_7749,1);\
__declare_static_bit_vector(OR_u1_u1_7750,1);\
bit_vector_and(&(DP_round_value_equal), &(DP_lsb_frac), &(AND_u1_u1_7739));\
bit_vector_not( &(apply_sticky_correction), &(NOT_u1_u1_7741));\
bit_vector_and(&(AND_u1_u1_7739), &(NOT_u1_u1_7741), &(AND_u1_u1_7742));\
bit_vector_or(&(DP_round_value_greater), &(AND_u1_u1_7742), &(OR_u1_u1_7743));\
bit_vector_and(&(DP_round_value_equal), &(sticky), &(AND_u1_u1_7746));\
bit_vector_not( &(apply_sticky_correction), &(NOT_u1_u1_7748));\
bit_vector_and(&(AND_u1_u1_7746), &(NOT_u1_u1_7748), &(AND_u1_u1_7749));\
bit_vector_or(&(OR_u1_u1_7743), &(AND_u1_u1_7749), &(OR_u1_u1_7750));\
bit_vector_cast_to_bit_vector(0, &(DP_need_to_round), &(OR_u1_u1_7750));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7757_c_macro_ __declare_static_bit_vector(MUX_7756,54);\
if (has_undefined_bit(&DP_need_to_round)) {fprintf(stderr, "Error: variable DP_need_to_round has undefined value (%s) at test point.\n", to_string(&DP_need_to_round));assert(0);} \
if(bit_vector_to_uint64(0, &DP_need_to_round)){bit_vector_cast_to_bit_vector(0, &(MUX_7756), &(ONE_54));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_7756), &(ZERO_54));\
}bit_vector_cast_to_bit_vector(0, &(DP_round_operator), &(MUX_7756));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7762_c_macro_ __declare_static_bit_vector(ADD_u54_u54_7761,54);\
bit_vector_plus( &(DP_frac_temp), &(DP_round_operator), &(ADD_u54_u54_7761));\
bit_vector_cast_to_bit_vector(0, &(DP_fraction_rounded), &(ADD_u54_u54_7761));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7771_c_macro_ __declare_static_bit_vector(slice_7765,52);\
__declare_static_bit_vector(NOT_u52_u52_7766,52);\
__declare_static_bit_vector(konst_7767,52);\
bit_vector_clear(&konst_7767);\
__declare_static_bit_vector(EQ_u52_u1_7768,1);\
__declare_static_bit_vector(AND_u1_u1_7770,1);\
bit_vector_slice(&(DP_frac_temp), &(slice_7765), 0);\
bit_vector_not( &(slice_7765), &(NOT_u52_u52_7766));\
bit_vector_clear(&konst_7767);\
bit_vector_equal(0, &(NOT_u52_u52_7766), &(konst_7767), &(EQ_u52_u1_7768));\
bit_vector_and(&(EQ_u52_u1_7768), &(DP_need_to_round), &(AND_u1_u1_7770));\
bit_vector_cast_to_bit_vector(0, &(DP_increase_exponent), &(AND_u1_u1_7770));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7780_c_macro_ __declare_static_bit_vector(konst_7775,13);\
bit_vector_clear(&konst_7775);\
konst_7775.val.byte_array[1] = 4;\
__declare_static_bit_vector(konst_7776,13);\
bit_vector_clear(&konst_7776);\
konst_7776.val.byte_array[0] = 255;\
konst_7776.val.byte_array[1] = 3;\
__declare_static_bit_vector(MUX_7777,13);\
__declare_static_bit_vector(ADD_i13_i13_7778,13);\
__declare_static_bit_vector(type_cast_7779,13);\
if (has_undefined_bit(&DP_increase_exponent)) {fprintf(stderr, "Error: variable DP_increase_exponent has undefined value (%s) at test point.\n", to_string(&DP_increase_exponent));assert(0);} \
if(bit_vector_to_uint64(0, &DP_increase_exponent)){bit_vector_clear(&konst_7775);\
konst_7775.val.byte_array[1] = 4;\
bit_vector_cast_to_bit_vector(1, &(MUX_7777), &(konst_7775));\
}else {bit_vector_clear(&konst_7776);\
konst_7776.val.byte_array[0] = 255;\
konst_7776.val.byte_array[1] = 3;\
bit_vector_cast_to_bit_vector(1, &(MUX_7777), &(konst_7776));\
}bit_vector_plus( &(s_exp_13), &(MUX_7777), &(ADD_i13_i13_7778));\
bit_vector_bitcast_to_bit_vector( &(type_cast_7779), &(ADD_i13_i13_7778));\
bit_vector_cast_to_bit_vector(0, &(dp_biased_exp_13_post_round), &(type_cast_7779));\
;

#define fpunit_exec_exec__round_64_extn_assign_stmt_7788_c_macro_ __declare_static_bit_vector(slice_7784,52);\
__declare_static_bit_vector(slice_7786,52);\
__declare_static_bit_vector(MUX_7787,52);\
if (has_undefined_bit(&DP_increase_exponent)) {fprintf(stderr, "Error: variable DP_increase_exponent has undefined value (%s) at test point.\n", to_string(&DP_increase_exponent));assert(0);} \
if(bit_vector_to_uint64(0, &DP_increase_exponent)){bit_vector_slice(&(DP_fraction_rounded), &(slice_7784), 1);\
bit_vector_cast_to_bit_vector(0, &(MUX_7787), &(slice_7784));\
}else {bit_vector_slice(&(DP_fraction_rounded), &(slice_7786), 0);\
bit_vector_cast_to_bit_vector(0, &(MUX_7787), &(slice_7786));\
}bit_vector_cast_to_bit_vector(0, &(dp_mantissa_52_post_round), &(MUX_7787));\
;

#define fpunit_exec_exec__round_64_extn_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pdp_biased_exp_13_post_round)), &(dp_biased_exp_13_post_round));\
bit_vector_cast_to_bit_vector(0, &((*__pdp_mantissa_52_post_round)), &(dp_mantissa_52_post_round));\
;

#define fpunit_exec_exec__round_e_32_inner_inarg_prep_macro__ __declare_static_bit_vector(sticky_flag,1);\
bit_vector_cast_to_bit_vector(0, &(sticky_flag), &((*__psticky_flag)));\
__declare_static_bit_vector(signed_unbiased_exponent,13);\
bit_vector_cast_to_bit_vector(1, &(signed_unbiased_exponent), &((*__psigned_unbiased_exponent)));\
__declare_static_bit_vector(padded_mantissa,32);\
bit_vector_cast_to_bit_vector(0, &(padded_mantissa), &((*__ppadded_mantissa)));\
static float result;\
__declare_static_bit_vector(ue_13,13);\
__declare_static_bit_vector(m_62,62);\
__declare_static_bit_vector(r_ue_13,13);\
__declare_static_bit_vector(r_m_23,23);\
__declare_static_bit_vector(ur32,32);\

#define fpunit_exec_exec__round_e_32_assign_stmt_15143_c_macro_ __declare_static_bit_vector(type_cast_15142,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15142), &(signed_unbiased_exponent));\
bit_vector_cast_to_bit_vector(0, &(ue_13), &(type_cast_15142));\
;

#define fpunit_exec_exec__round_e_32_assign_stmt_15149_c_macro_ __declare_static_bit_vector(slice_15146,31);\
__declare_static_bit_vector(CONCAT_u31_u62_15148,62);\
bit_vector_slice(&(padded_mantissa), &(slice_15146), 0);\
bit_vector_concatenate( &(slice_15146), &(ZERO_31), &(CONCAT_u31_u62_15148));\
bit_vector_cast_to_bit_vector(0, &(m_62), &(CONCAT_u31_u62_15148));\
;

#define fpunit_exec_exec__round_e_32_stmt_15154_c_macro_ uint32_t fpunit_exec_exec__round_e_32_stmt_15154_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_32>\t%s\n",fpunit_exec_exec__round_e_32_stmt_15154_c_macro___print_counter,"in_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_32>\t\t%s\t\t",fpunit_exec_exec__round_e_32_stmt_15154_c_macro___print_counter,"signed_unbiased_exponent");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(signed_unbiased_exponent)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_32>\t\t%s\t\t",fpunit_exec_exec__round_e_32_stmt_15154_c_macro___print_counter,"padded_mantissa");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(padded_mantissa)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_32>\t\t%s\t\t",fpunit_exec_exec__round_e_32_stmt_15154_c_macro___print_counter,"ue_13");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ue_13)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_32>\t\t%s\t\t",fpunit_exec_exec__round_e_32_stmt_15154_c_macro___print_counter,"m_62");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(m_62)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__round_e_32_call_stmt_15161_c_macro_ _fpunit_exec_exec_round_32_extn_( &(sticky_flag),  &(ZERO_1),  &(ue_13),  &(m_62), &(r_ue_13), &(r_m_23));\
;

#define fpunit_exec_exec__round_e_32_assign_stmt_15169_c_macro_ __declare_static_bit_vector(slice_15165,8);\
__declare_static_bit_vector(CONCAT_u1_u9_15166,9);\
__declare_static_bit_vector(CONCAT_u9_u32_15168,32);\
bit_vector_slice(&(r_ue_13), &(slice_15165), 0);\
bit_vector_concatenate( &(ZERO_1), &(slice_15165), &(CONCAT_u1_u9_15166));\
bit_vector_concatenate( &(CONCAT_u1_u9_15166), &(r_m_23), &(CONCAT_u9_u32_15168));\
bit_vector_cast_to_bit_vector(0, &(ur32), &(CONCAT_u9_u32_15168));\
;

#define fpunit_exec_exec__round_e_32_assign_stmt_15173_c_macro_ static float type_cast_15172;\
bit_vector_bitcast_to_float( &(type_cast_15172),  &(ur32));\
result = type_cast_15172;\
;

#define fpunit_exec_exec__round_e_32_stmt_15175_c_macro_ uint32_t fpunit_exec_exec__round_e_32_stmt_15175_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_32>\t%s\n",fpunit_exec_exec__round_e_32_stmt_15175_c_macro___print_counter,"out_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_32>\t\t%s\t\t",fpunit_exec_exec__round_e_32_stmt_15175_c_macro___print_counter,"ur32");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ur32)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__round_e_32_inner_outarg_prep_macro__ (*__presult) = result;\
;

#define fpunit_exec_exec__round_e_64_inner_inarg_prep_macro__ __declare_static_bit_vector(sticky_flag,1);\
bit_vector_cast_to_bit_vector(0, &(sticky_flag), &((*__psticky_flag)));\
__declare_static_bit_vector(signed_unbiased_exponent,13);\
bit_vector_cast_to_bit_vector(1, &(signed_unbiased_exponent), &((*__psigned_unbiased_exponent)));\
__declare_static_bit_vector(padded_mantissa,56);\
bit_vector_cast_to_bit_vector(0, &(padded_mantissa), &((*__ppadded_mantissa)));\
static double result;\
__declare_static_bit_vector(ue_13,13);\
__declare_static_bit_vector(m_62,62);\
__declare_static_bit_vector(r_ue_13,13);\
__declare_static_bit_vector(r_m_52,52);\
__declare_static_bit_vector(ur64,64);\

#define fpunit_exec_exec__round_e_64_assign_stmt_16221_c_macro_ __declare_static_bit_vector(type_cast_16220,13);\
bit_vector_bitcast_to_bit_vector( &(type_cast_16220), &(signed_unbiased_exponent));\
bit_vector_cast_to_bit_vector(0, &(ue_13), &(type_cast_16220));\
;

#define fpunit_exec_exec__round_e_64_assign_stmt_16227_c_macro_ __declare_static_bit_vector(slice_16224,55);\
__declare_static_bit_vector(CONCAT_u55_u62_16226,62);\
bit_vector_slice(&(padded_mantissa), &(slice_16224), 0);\
bit_vector_concatenate( &(slice_16224), &(ZERO_7), &(CONCAT_u55_u62_16226));\
bit_vector_cast_to_bit_vector(0, &(m_62), &(CONCAT_u55_u62_16226));\
;

#define fpunit_exec_exec__round_e_64_stmt_16232_c_macro_ uint32_t fpunit_exec_exec__round_e_64_stmt_16232_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_64>\t%s\n",fpunit_exec_exec__round_e_64_stmt_16232_c_macro___print_counter,"in_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_64>\t\t%s\t\t",fpunit_exec_exec__round_e_64_stmt_16232_c_macro___print_counter,"signed_unbiased_exponent");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(signed_unbiased_exponent)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_64>\t\t%s\t\t",fpunit_exec_exec__round_e_64_stmt_16232_c_macro___print_counter,"padded_mantissa");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(padded_mantissa)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_64>\t\t%s\t\t",fpunit_exec_exec__round_e_64_stmt_16232_c_macro___print_counter,"ue_13");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ue_13)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_64>\t\t%s\t\t",fpunit_exec_exec__round_e_64_stmt_16232_c_macro___print_counter,"m_62");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(m_62)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__round_e_64_call_stmt_16239_c_macro_ _fpunit_exec_exec_round_64_extn_( &(sticky_flag),  &(ZERO_1),  &(ue_13),  &(m_62), &(r_ue_13), &(r_m_52));\
;

#define fpunit_exec_exec__round_e_64_assign_stmt_16247_c_macro_ __declare_static_bit_vector(slice_16243,11);\
__declare_static_bit_vector(CONCAT_u1_u12_16244,12);\
__declare_static_bit_vector(CONCAT_u12_u64_16246,64);\
bit_vector_slice(&(r_ue_13), &(slice_16243), 0);\
bit_vector_concatenate( &(ZERO_1), &(slice_16243), &(CONCAT_u1_u12_16244));\
bit_vector_concatenate( &(CONCAT_u1_u12_16244), &(r_m_52), &(CONCAT_u12_u64_16246));\
bit_vector_cast_to_bit_vector(0, &(ur64), &(CONCAT_u12_u64_16246));\
;

#define fpunit_exec_exec__round_e_64_assign_stmt_16251_c_macro_ static double type_cast_16250;\
bit_vector_bitcast_to_double( &(type_cast_16250),  &(ur64));\
result = type_cast_16250;\
;

#define fpunit_exec_exec__round_e_64_stmt_16253_c_macro_ uint32_t fpunit_exec_exec__round_e_64_stmt_16253_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_64>\t%s\n",fpunit_exec_exec__round_e_64_stmt_16253_c_macro___print_counter,"out_args__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]round_e_64>\t\t%s\t\t",fpunit_exec_exec__round_e_64_stmt_16253_c_macro___print_counter,"ur64");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(ur64)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__round_e_64_inner_outarg_prep_macro__ (*__presult) = result;\
;

#define fpunit_exec_exec__round_fp_32_inner_inarg_prep_macro__ __declare_static_bit_vector(EXTENDED_RESULT,81);\
bit_vector_cast_to_bit_vector(0, &(EXTENDED_RESULT), &((*__pEXTENDED_RESULT)));\
__declare_static_bit_vector(RESULT_32,32);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(apply_sticky_correction,1);\
__declare_static_bit_vector(sign,1);\
__declare_static_bit_vector(nan,1);\
__declare_static_bit_vector(inf,1);\
__declare_static_bit_vector(zero,1);\
__declare_static_bit_vector(unbiased_exp_13,13);\
__declare_static_bit_vector(mantissa_62,62);\
__declare_static_bit_vector(sp_biased_exp_13_post_round,13);\
__declare_static_bit_vector(sp_mantissa_23_post_round,23);\

#define fpunit_exec_exec__round_fp_32_assign_stmt_12600_c_macro_ __declare_static_bit_vector(slice_12599,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_12599), 80);\
bit_vector_cast_to_bit_vector(0, &(sticky), &(slice_12599));\
;

#define fpunit_exec_exec__round_fp_32_assign_stmt_12604_c_macro_ __declare_static_bit_vector(slice_12603,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_12603), 79);\
bit_vector_cast_to_bit_vector(0, &(apply_sticky_correction), &(slice_12603));\
;

#define fpunit_exec_exec__round_fp_32_assign_stmt_12608_c_macro_ __declare_static_bit_vector(slice_12607,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_12607), 78);\
bit_vector_cast_to_bit_vector(0, &(sign), &(slice_12607));\
;

#define fpunit_exec_exec__round_fp_32_assign_stmt_12612_c_macro_ __declare_static_bit_vector(slice_12611,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_12611), 77);\
bit_vector_cast_to_bit_vector(0, &(nan), &(slice_12611));\
;

#define fpunit_exec_exec__round_fp_32_assign_stmt_12616_c_macro_ __declare_static_bit_vector(slice_12615,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_12615), 76);\
bit_vector_cast_to_bit_vector(0, &(inf), &(slice_12615));\
;

#define fpunit_exec_exec__round_fp_32_assign_stmt_12620_c_macro_ __declare_static_bit_vector(slice_12619,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_12619), 75);\
bit_vector_cast_to_bit_vector(0, &(zero), &(slice_12619));\
;

#define fpunit_exec_exec__round_fp_32_assign_stmt_12624_c_macro_ __declare_static_bit_vector(slice_12623,13);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_12623), 62);\
bit_vector_cast_to_bit_vector(0, &(unbiased_exp_13), &(slice_12623));\
;

#define fpunit_exec_exec__round_fp_32_assign_stmt_12628_c_macro_ __declare_static_bit_vector(slice_12627,62);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_12627), 0);\
bit_vector_cast_to_bit_vector(0, &(mantissa_62), &(slice_12627));\
;

#define fpunit_exec_exec__round_fp_32_stmt_12637_c_macro_ uint32_t fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter,"round_fp_in_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter,"sticky");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sticky)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter,"apply_sticky_correction");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(apply_sticky_correction)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter,"sign");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sign)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter,"nan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(nan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter,"inf");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(inf)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter,"zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter,"unbiased_exp_13");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(unbiased_exp_13)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_32_stmt_12637_c_macro___print_counter,"mantissa_62");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_62)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__round_fp_32_call_stmt_12644_c_macro_ _fpunit_exec_exec_round_32_extn_( &(sticky),  &(apply_sticky_correction),  &(unbiased_exp_13),  &(mantissa_62), &(sp_biased_exp_13_post_round), &(sp_mantissa_23_post_round));\
;

#define fpunit_exec_exec__round_fp_32_assign_stmt_12665_c_macro_ __declare_static_bit_vector(OR_u1_u1_12648,1);\
__declare_static_bit_vector(OR_u1_u1_12650,1);\
__declare_static_bit_vector(slice_12653,8);\
__declare_static_bit_vector(CONCAT_u1_u9_12654,9);\
__declare_static_bit_vector(slice_12656,23);\
__declare_static_bit_vector(CONCAT_u9_u32_12657,32);\
__declare_static_bit_vector(slice_12660,8);\
__declare_static_bit_vector(CONCAT_u1_u9_12661,9);\
__declare_static_bit_vector(CONCAT_u9_u32_12663,32);\
__declare_static_bit_vector(MUX_12664,32);\
bit_vector_or(&(nan), &(inf), &(OR_u1_u1_12648));\
bit_vector_or(&(OR_u1_u1_12648), &(zero), &(OR_u1_u1_12650));\
if (has_undefined_bit(&OR_u1_u1_12650)) {fprintf(stderr, "Error: variable OR_u1_u1_12650 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_12650));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_12650)){bit_vector_slice(&(unbiased_exp_13), &(slice_12653), 0);\
bit_vector_concatenate( &(sign), &(slice_12653), &(CONCAT_u1_u9_12654));\
bit_vector_slice(&(mantissa_62), &(slice_12656), 39);\
bit_vector_concatenate( &(CONCAT_u1_u9_12654), &(slice_12656), &(CONCAT_u9_u32_12657));\
bit_vector_cast_to_bit_vector(0, &(MUX_12664), &(CONCAT_u9_u32_12657));\
}else {bit_vector_slice(&(sp_biased_exp_13_post_round), &(slice_12660), 0);\
bit_vector_concatenate( &(sign), &(slice_12660), &(CONCAT_u1_u9_12661));\
bit_vector_concatenate( &(CONCAT_u1_u9_12661), &(sp_mantissa_23_post_round), &(CONCAT_u9_u32_12663));\
bit_vector_cast_to_bit_vector(0, &(MUX_12664), &(CONCAT_u9_u32_12663));\
}bit_vector_cast_to_bit_vector(0, &(RESULT_32), &(MUX_12664));\
;

#define fpunit_exec_exec__round_fp_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pRESULT_32)), &(RESULT_32));\
;

#define fpunit_exec_exec__round_fp_64_inner_inarg_prep_macro__ __declare_static_bit_vector(EXTENDED_RESULT,81);\
bit_vector_cast_to_bit_vector(0, &(EXTENDED_RESULT), &((*__pEXTENDED_RESULT)));\
__declare_static_bit_vector(RESULT_64,64);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(apply_sticky_correction,1);\
__declare_static_bit_vector(sign,1);\
__declare_static_bit_vector(nan,1);\
__declare_static_bit_vector(inf,1);\
__declare_static_bit_vector(zero,1);\
__declare_static_bit_vector(unbiased_exp_13,13);\
__declare_static_bit_vector(mantissa_62,62);\
__declare_static_bit_vector(dp_biased_exp_13_post_round,13);\
__declare_static_bit_vector(dp_mantissa_52_post_round,52);\

#define fpunit_exec_exec__round_fp_64_assign_stmt_13446_c_macro_ __declare_static_bit_vector(slice_13445,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_13445), 80);\
bit_vector_cast_to_bit_vector(0, &(sticky), &(slice_13445));\
;

#define fpunit_exec_exec__round_fp_64_assign_stmt_13450_c_macro_ __declare_static_bit_vector(slice_13449,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_13449), 79);\
bit_vector_cast_to_bit_vector(0, &(apply_sticky_correction), &(slice_13449));\
;

#define fpunit_exec_exec__round_fp_64_assign_stmt_13454_c_macro_ __declare_static_bit_vector(slice_13453,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_13453), 78);\
bit_vector_cast_to_bit_vector(0, &(sign), &(slice_13453));\
;

#define fpunit_exec_exec__round_fp_64_assign_stmt_13458_c_macro_ __declare_static_bit_vector(slice_13457,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_13457), 77);\
bit_vector_cast_to_bit_vector(0, &(nan), &(slice_13457));\
;

#define fpunit_exec_exec__round_fp_64_assign_stmt_13462_c_macro_ __declare_static_bit_vector(slice_13461,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_13461), 76);\
bit_vector_cast_to_bit_vector(0, &(inf), &(slice_13461));\
;

#define fpunit_exec_exec__round_fp_64_assign_stmt_13466_c_macro_ __declare_static_bit_vector(slice_13465,1);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_13465), 75);\
bit_vector_cast_to_bit_vector(0, &(zero), &(slice_13465));\
;

#define fpunit_exec_exec__round_fp_64_assign_stmt_13470_c_macro_ __declare_static_bit_vector(slice_13469,13);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_13469), 62);\
bit_vector_cast_to_bit_vector(0, &(unbiased_exp_13), &(slice_13469));\
;

#define fpunit_exec_exec__round_fp_64_assign_stmt_13474_c_macro_ __declare_static_bit_vector(slice_13473,62);\
bit_vector_slice(&(EXTENDED_RESULT), &(slice_13473), 0);\
bit_vector_cast_to_bit_vector(0, &(mantissa_62), &(slice_13473));\
;

#define fpunit_exec_exec__round_fp_64_stmt_13483_c_macro_ uint32_t fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t%s\n",fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter,"round_fp_in_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter,"sticky");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sticky)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter,"apply_sticky_correction");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(apply_sticky_correction)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter,"sign");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(sign)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter,"nan");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(nan)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter,"inf");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(inf)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter,"zero");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(zero)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter,"unbiased_exp_13");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(unbiased_exp_13)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpunit_exec>\t\t%s\t\t",fpunit_exec_exec__round_fp_64_stmt_13483_c_macro___print_counter,"mantissa_62");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(mantissa_62)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__round_fp_64_call_stmt_13490_c_macro_ _fpunit_exec_exec_round_64_extn_( &(sticky),  &(apply_sticky_correction),  &(unbiased_exp_13),  &(mantissa_62), &(dp_biased_exp_13_post_round), &(dp_mantissa_52_post_round));\
;

#define fpunit_exec_exec__round_fp_64_assign_stmt_13511_c_macro_ __declare_static_bit_vector(OR_u1_u1_13494,1);\
__declare_static_bit_vector(OR_u1_u1_13496,1);\
__declare_static_bit_vector(slice_13499,11);\
__declare_static_bit_vector(CONCAT_u1_u12_13500,12);\
__declare_static_bit_vector(slice_13502,52);\
__declare_static_bit_vector(CONCAT_u12_u64_13503,64);\
__declare_static_bit_vector(slice_13506,11);\
__declare_static_bit_vector(CONCAT_u1_u12_13507,12);\
__declare_static_bit_vector(CONCAT_u12_u64_13509,64);\
__declare_static_bit_vector(MUX_13510,64);\
bit_vector_or(&(nan), &(inf), &(OR_u1_u1_13494));\
bit_vector_or(&(OR_u1_u1_13494), &(zero), &(OR_u1_u1_13496));\
if (has_undefined_bit(&OR_u1_u1_13496)) {fprintf(stderr, "Error: variable OR_u1_u1_13496 has undefined value (%s) at test point.\n", to_string(&OR_u1_u1_13496));assert(0);} \
if(bit_vector_to_uint64(0, &OR_u1_u1_13496)){bit_vector_slice(&(unbiased_exp_13), &(slice_13499), 0);\
bit_vector_concatenate( &(sign), &(slice_13499), &(CONCAT_u1_u12_13500));\
bit_vector_slice(&(mantissa_62), &(slice_13502), 10);\
bit_vector_concatenate( &(CONCAT_u1_u12_13500), &(slice_13502), &(CONCAT_u12_u64_13503));\
bit_vector_cast_to_bit_vector(0, &(MUX_13510), &(CONCAT_u12_u64_13503));\
}else {bit_vector_slice(&(dp_biased_exp_13_post_round), &(slice_13506), 0);\
bit_vector_concatenate( &(sign), &(slice_13506), &(CONCAT_u1_u12_13507));\
bit_vector_concatenate( &(CONCAT_u1_u12_13507), &(dp_mantissa_52_post_round), &(CONCAT_u12_u64_13509));\
bit_vector_cast_to_bit_vector(0, &(MUX_13510), &(CONCAT_u12_u64_13509));\
}bit_vector_cast_to_bit_vector(0, &(RESULT_64), &(MUX_13510));\
;

#define fpunit_exec_exec__round_fp_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pRESULT_64)), &(RESULT_64));\
;

#define fpunit_exec_exec__shifter_left_right_32_inner_inarg_prep_macro__ __declare_static_bit_vector(op,32);\
bit_vector_cast_to_bit_vector(0, &(op), &((*__pop)));\
__declare_static_bit_vector(shiftx,5);\
bit_vector_cast_to_bit_vector(0, &(shiftx), &((*__pshiftx)));\
__declare_static_bit_vector(left,1);\
bit_vector_cast_to_bit_vector(0, &(left), &((*__pleft)));\
__declare_static_bit_vector(shifted,32);\
__declare_static_bit_vector(l4,1);\
__declare_static_bit_vector(l3,1);\
__declare_static_bit_vector(l2,1);\
__declare_static_bit_vector(l1,1);\
__declare_static_bit_vector(l0,1);\
__declare_static_bit_vector(reversed_input,32);\
__declare_static_bit_vector(level_4_no_shift,32);\
__declare_static_bit_vector(level_4_shift,32);\
__declare_static_bit_vector(level_4_output,32);\
__declare_static_bit_vector(level_3_no_shift,32);\
__declare_static_bit_vector(level_3_shift,32);\
__declare_static_bit_vector(level_3_output,32);\
__declare_static_bit_vector(level_2_no_shift,32);\
__declare_static_bit_vector(level_2_shift,32);\
__declare_static_bit_vector(level_2_output,32);\
__declare_static_bit_vector(level_1_no_shift,32);\
__declare_static_bit_vector(level_1_shift,32);\
__declare_static_bit_vector(level_1_output,32);\
__declare_static_bit_vector(level_0_no_shift,32);\
__declare_static_bit_vector(level_0_shift,32);\
__declare_static_bit_vector(level_0_output,32);\
__declare_static_bit_vector(reversed_output,32);\

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19727_c_macro_ __declare_static_bit_vector(konst_19725,5);\
bit_vector_clear(&konst_19725);\
konst_19725.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u5_u1_19726,1);\
bit_vector_clear(&konst_19725);\
konst_19725.val.byte_array[0] = 4;\
bit_vector_bitsel( &(shiftx), &(konst_19725), &(BITSEL_u5_u1_19726));\
bit_vector_cast_to_bit_vector(0, &(l4), &(BITSEL_u5_u1_19726));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19732_c_macro_ __declare_static_bit_vector(konst_19730,5);\
bit_vector_clear(&konst_19730);\
konst_19730.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u5_u1_19731,1);\
bit_vector_clear(&konst_19730);\
konst_19730.val.byte_array[0] = 3;\
bit_vector_bitsel( &(shiftx), &(konst_19730), &(BITSEL_u5_u1_19731));\
bit_vector_cast_to_bit_vector(0, &(l3), &(BITSEL_u5_u1_19731));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19737_c_macro_ __declare_static_bit_vector(konst_19735,5);\
bit_vector_clear(&konst_19735);\
konst_19735.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u5_u1_19736,1);\
bit_vector_clear(&konst_19735);\
konst_19735.val.byte_array[0] = 2;\
bit_vector_bitsel( &(shiftx), &(konst_19735), &(BITSEL_u5_u1_19736));\
bit_vector_cast_to_bit_vector(0, &(l2), &(BITSEL_u5_u1_19736));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19742_c_macro_ __declare_static_bit_vector(konst_19740,5);\
bit_vector_clear(&konst_19740);\
konst_19740.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u5_u1_19741,1);\
bit_vector_clear(&konst_19740);\
konst_19740.val.byte_array[0] = 1;\
bit_vector_bitsel( &(shiftx), &(konst_19740), &(BITSEL_u5_u1_19741));\
bit_vector_cast_to_bit_vector(0, &(l1), &(BITSEL_u5_u1_19741));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19747_c_macro_ __declare_static_bit_vector(konst_19745,5);\
bit_vector_clear(&konst_19745);\
__declare_static_bit_vector(BITSEL_u5_u1_19746,1);\
bit_vector_clear(&konst_19745);\
bit_vector_bitsel( &(shiftx), &(konst_19745), &(BITSEL_u5_u1_19746));\
bit_vector_cast_to_bit_vector(0, &(l0), &(BITSEL_u5_u1_19746));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19876_c_macro_ __declare_static_bit_vector(konst_19750,32);\
bit_vector_clear(&konst_19750);\
__declare_static_bit_vector(BITSEL_u32_u1_19751,1);\
__declare_static_bit_vector(konst_19753,32);\
bit_vector_clear(&konst_19753);\
konst_19753.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u32_u1_19754,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19755,2);\
__declare_static_bit_vector(konst_19757,32);\
bit_vector_clear(&konst_19757);\
konst_19757.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u32_u1_19758,1);\
__declare_static_bit_vector(konst_19760,32);\
bit_vector_clear(&konst_19760);\
konst_19760.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u32_u1_19761,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19762,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19763,4);\
__declare_static_bit_vector(konst_19765,32);\
bit_vector_clear(&konst_19765);\
konst_19765.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u32_u1_19766,1);\
__declare_static_bit_vector(konst_19768,32);\
bit_vector_clear(&konst_19768);\
konst_19768.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u32_u1_19769,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19770,2);\
__declare_static_bit_vector(konst_19772,32);\
bit_vector_clear(&konst_19772);\
konst_19772.val.byte_array[0] = 6;\
__declare_static_bit_vector(BITSEL_u32_u1_19773,1);\
__declare_static_bit_vector(konst_19775,32);\
bit_vector_clear(&konst_19775);\
konst_19775.val.byte_array[0] = 7;\
__declare_static_bit_vector(BITSEL_u32_u1_19776,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19777,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19778,4);\
__declare_static_bit_vector(CONCAT_u4_u8_19779,8);\
__declare_static_bit_vector(konst_19781,32);\
bit_vector_clear(&konst_19781);\
konst_19781.val.byte_array[0] = 8;\
__declare_static_bit_vector(BITSEL_u32_u1_19782,1);\
__declare_static_bit_vector(konst_19784,32);\
bit_vector_clear(&konst_19784);\
konst_19784.val.byte_array[0] = 9;\
__declare_static_bit_vector(BITSEL_u32_u1_19785,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19786,2);\
__declare_static_bit_vector(konst_19788,32);\
bit_vector_clear(&konst_19788);\
konst_19788.val.byte_array[0] = 10;\
__declare_static_bit_vector(BITSEL_u32_u1_19789,1);\
__declare_static_bit_vector(konst_19791,32);\
bit_vector_clear(&konst_19791);\
konst_19791.val.byte_array[0] = 11;\
__declare_static_bit_vector(BITSEL_u32_u1_19792,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19793,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19794,4);\
__declare_static_bit_vector(konst_19796,32);\
bit_vector_clear(&konst_19796);\
konst_19796.val.byte_array[0] = 12;\
__declare_static_bit_vector(BITSEL_u32_u1_19797,1);\
__declare_static_bit_vector(konst_19799,32);\
bit_vector_clear(&konst_19799);\
konst_19799.val.byte_array[0] = 13;\
__declare_static_bit_vector(BITSEL_u32_u1_19800,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19801,2);\
__declare_static_bit_vector(konst_19803,32);\
bit_vector_clear(&konst_19803);\
konst_19803.val.byte_array[0] = 14;\
__declare_static_bit_vector(BITSEL_u32_u1_19804,1);\
__declare_static_bit_vector(konst_19806,32);\
bit_vector_clear(&konst_19806);\
konst_19806.val.byte_array[0] = 15;\
__declare_static_bit_vector(BITSEL_u32_u1_19807,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19808,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19809,4);\
__declare_static_bit_vector(CONCAT_u4_u8_19810,8);\
__declare_static_bit_vector(CONCAT_u8_u16_19811,16);\
__declare_static_bit_vector(konst_19813,32);\
bit_vector_clear(&konst_19813);\
konst_19813.val.byte_array[0] = 16;\
__declare_static_bit_vector(BITSEL_u32_u1_19814,1);\
__declare_static_bit_vector(konst_19816,32);\
bit_vector_clear(&konst_19816);\
konst_19816.val.byte_array[0] = 17;\
__declare_static_bit_vector(BITSEL_u32_u1_19817,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19818,2);\
__declare_static_bit_vector(konst_19820,32);\
bit_vector_clear(&konst_19820);\
konst_19820.val.byte_array[0] = 18;\
__declare_static_bit_vector(BITSEL_u32_u1_19821,1);\
__declare_static_bit_vector(konst_19823,32);\
bit_vector_clear(&konst_19823);\
konst_19823.val.byte_array[0] = 19;\
__declare_static_bit_vector(BITSEL_u32_u1_19824,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19825,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19826,4);\
__declare_static_bit_vector(konst_19828,32);\
bit_vector_clear(&konst_19828);\
konst_19828.val.byte_array[0] = 20;\
__declare_static_bit_vector(BITSEL_u32_u1_19829,1);\
__declare_static_bit_vector(konst_19831,32);\
bit_vector_clear(&konst_19831);\
konst_19831.val.byte_array[0] = 21;\
__declare_static_bit_vector(BITSEL_u32_u1_19832,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19833,2);\
__declare_static_bit_vector(konst_19835,32);\
bit_vector_clear(&konst_19835);\
konst_19835.val.byte_array[0] = 22;\
__declare_static_bit_vector(BITSEL_u32_u1_19836,1);\
__declare_static_bit_vector(konst_19838,32);\
bit_vector_clear(&konst_19838);\
konst_19838.val.byte_array[0] = 23;\
__declare_static_bit_vector(BITSEL_u32_u1_19839,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19840,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19841,4);\
__declare_static_bit_vector(CONCAT_u4_u8_19842,8);\
__declare_static_bit_vector(konst_19844,32);\
bit_vector_clear(&konst_19844);\
konst_19844.val.byte_array[0] = 24;\
__declare_static_bit_vector(BITSEL_u32_u1_19845,1);\
__declare_static_bit_vector(konst_19847,32);\
bit_vector_clear(&konst_19847);\
konst_19847.val.byte_array[0] = 25;\
__declare_static_bit_vector(BITSEL_u32_u1_19848,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19849,2);\
__declare_static_bit_vector(konst_19851,32);\
bit_vector_clear(&konst_19851);\
konst_19851.val.byte_array[0] = 26;\
__declare_static_bit_vector(BITSEL_u32_u1_19852,1);\
__declare_static_bit_vector(konst_19854,32);\
bit_vector_clear(&konst_19854);\
konst_19854.val.byte_array[0] = 27;\
__declare_static_bit_vector(BITSEL_u32_u1_19855,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19856,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19857,4);\
__declare_static_bit_vector(konst_19859,32);\
bit_vector_clear(&konst_19859);\
konst_19859.val.byte_array[0] = 28;\
__declare_static_bit_vector(BITSEL_u32_u1_19860,1);\
__declare_static_bit_vector(konst_19862,32);\
bit_vector_clear(&konst_19862);\
konst_19862.val.byte_array[0] = 29;\
__declare_static_bit_vector(BITSEL_u32_u1_19863,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19864,2);\
__declare_static_bit_vector(konst_19866,32);\
bit_vector_clear(&konst_19866);\
konst_19866.val.byte_array[0] = 30;\
__declare_static_bit_vector(BITSEL_u32_u1_19867,1);\
__declare_static_bit_vector(konst_19869,32);\
bit_vector_clear(&konst_19869);\
konst_19869.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_19870,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19871,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19872,4);\
__declare_static_bit_vector(CONCAT_u4_u8_19873,8);\
__declare_static_bit_vector(CONCAT_u8_u16_19874,16);\
__declare_static_bit_vector(CONCAT_u16_u32_19875,32);\
bit_vector_clear(&konst_19750);\
bit_vector_bitsel( &(op), &(konst_19750), &(BITSEL_u32_u1_19751));\
bit_vector_clear(&konst_19753);\
konst_19753.val.byte_array[0] = 1;\
bit_vector_bitsel( &(op), &(konst_19753), &(BITSEL_u32_u1_19754));\
bit_vector_concatenate( &(BITSEL_u32_u1_19751), &(BITSEL_u32_u1_19754), &(CONCAT_u1_u2_19755));\
bit_vector_clear(&konst_19757);\
konst_19757.val.byte_array[0] = 2;\
bit_vector_bitsel( &(op), &(konst_19757), &(BITSEL_u32_u1_19758));\
bit_vector_clear(&konst_19760);\
konst_19760.val.byte_array[0] = 3;\
bit_vector_bitsel( &(op), &(konst_19760), &(BITSEL_u32_u1_19761));\
bit_vector_concatenate( &(BITSEL_u32_u1_19758), &(BITSEL_u32_u1_19761), &(CONCAT_u1_u2_19762));\
bit_vector_concatenate( &(CONCAT_u1_u2_19755), &(CONCAT_u1_u2_19762), &(CONCAT_u2_u4_19763));\
bit_vector_clear(&konst_19765);\
konst_19765.val.byte_array[0] = 4;\
bit_vector_bitsel( &(op), &(konst_19765), &(BITSEL_u32_u1_19766));\
bit_vector_clear(&konst_19768);\
konst_19768.val.byte_array[0] = 5;\
bit_vector_bitsel( &(op), &(konst_19768), &(BITSEL_u32_u1_19769));\
bit_vector_concatenate( &(BITSEL_u32_u1_19766), &(BITSEL_u32_u1_19769), &(CONCAT_u1_u2_19770));\
bit_vector_clear(&konst_19772);\
konst_19772.val.byte_array[0] = 6;\
bit_vector_bitsel( &(op), &(konst_19772), &(BITSEL_u32_u1_19773));\
bit_vector_clear(&konst_19775);\
konst_19775.val.byte_array[0] = 7;\
bit_vector_bitsel( &(op), &(konst_19775), &(BITSEL_u32_u1_19776));\
bit_vector_concatenate( &(BITSEL_u32_u1_19773), &(BITSEL_u32_u1_19776), &(CONCAT_u1_u2_19777));\
bit_vector_concatenate( &(CONCAT_u1_u2_19770), &(CONCAT_u1_u2_19777), &(CONCAT_u2_u4_19778));\
bit_vector_concatenate( &(CONCAT_u2_u4_19763), &(CONCAT_u2_u4_19778), &(CONCAT_u4_u8_19779));\
bit_vector_clear(&konst_19781);\
konst_19781.val.byte_array[0] = 8;\
bit_vector_bitsel( &(op), &(konst_19781), &(BITSEL_u32_u1_19782));\
bit_vector_clear(&konst_19784);\
konst_19784.val.byte_array[0] = 9;\
bit_vector_bitsel( &(op), &(konst_19784), &(BITSEL_u32_u1_19785));\
bit_vector_concatenate( &(BITSEL_u32_u1_19782), &(BITSEL_u32_u1_19785), &(CONCAT_u1_u2_19786));\
bit_vector_clear(&konst_19788);\
konst_19788.val.byte_array[0] = 10;\
bit_vector_bitsel( &(op), &(konst_19788), &(BITSEL_u32_u1_19789));\
bit_vector_clear(&konst_19791);\
konst_19791.val.byte_array[0] = 11;\
bit_vector_bitsel( &(op), &(konst_19791), &(BITSEL_u32_u1_19792));\
bit_vector_concatenate( &(BITSEL_u32_u1_19789), &(BITSEL_u32_u1_19792), &(CONCAT_u1_u2_19793));\
bit_vector_concatenate( &(CONCAT_u1_u2_19786), &(CONCAT_u1_u2_19793), &(CONCAT_u2_u4_19794));\
bit_vector_clear(&konst_19796);\
konst_19796.val.byte_array[0] = 12;\
bit_vector_bitsel( &(op), &(konst_19796), &(BITSEL_u32_u1_19797));\
bit_vector_clear(&konst_19799);\
konst_19799.val.byte_array[0] = 13;\
bit_vector_bitsel( &(op), &(konst_19799), &(BITSEL_u32_u1_19800));\
bit_vector_concatenate( &(BITSEL_u32_u1_19797), &(BITSEL_u32_u1_19800), &(CONCAT_u1_u2_19801));\
bit_vector_clear(&konst_19803);\
konst_19803.val.byte_array[0] = 14;\
bit_vector_bitsel( &(op), &(konst_19803), &(BITSEL_u32_u1_19804));\
bit_vector_clear(&konst_19806);\
konst_19806.val.byte_array[0] = 15;\
bit_vector_bitsel( &(op), &(konst_19806), &(BITSEL_u32_u1_19807));\
bit_vector_concatenate( &(BITSEL_u32_u1_19804), &(BITSEL_u32_u1_19807), &(CONCAT_u1_u2_19808));\
bit_vector_concatenate( &(CONCAT_u1_u2_19801), &(CONCAT_u1_u2_19808), &(CONCAT_u2_u4_19809));\
bit_vector_concatenate( &(CONCAT_u2_u4_19794), &(CONCAT_u2_u4_19809), &(CONCAT_u4_u8_19810));\
bit_vector_concatenate( &(CONCAT_u4_u8_19779), &(CONCAT_u4_u8_19810), &(CONCAT_u8_u16_19811));\
bit_vector_clear(&konst_19813);\
konst_19813.val.byte_array[0] = 16;\
bit_vector_bitsel( &(op), &(konst_19813), &(BITSEL_u32_u1_19814));\
bit_vector_clear(&konst_19816);\
konst_19816.val.byte_array[0] = 17;\
bit_vector_bitsel( &(op), &(konst_19816), &(BITSEL_u32_u1_19817));\
bit_vector_concatenate( &(BITSEL_u32_u1_19814), &(BITSEL_u32_u1_19817), &(CONCAT_u1_u2_19818));\
bit_vector_clear(&konst_19820);\
konst_19820.val.byte_array[0] = 18;\
bit_vector_bitsel( &(op), &(konst_19820), &(BITSEL_u32_u1_19821));\
bit_vector_clear(&konst_19823);\
konst_19823.val.byte_array[0] = 19;\
bit_vector_bitsel( &(op), &(konst_19823), &(BITSEL_u32_u1_19824));\
bit_vector_concatenate( &(BITSEL_u32_u1_19821), &(BITSEL_u32_u1_19824), &(CONCAT_u1_u2_19825));\
bit_vector_concatenate( &(CONCAT_u1_u2_19818), &(CONCAT_u1_u2_19825), &(CONCAT_u2_u4_19826));\
bit_vector_clear(&konst_19828);\
konst_19828.val.byte_array[0] = 20;\
bit_vector_bitsel( &(op), &(konst_19828), &(BITSEL_u32_u1_19829));\
bit_vector_clear(&konst_19831);\
konst_19831.val.byte_array[0] = 21;\
bit_vector_bitsel( &(op), &(konst_19831), &(BITSEL_u32_u1_19832));\
bit_vector_concatenate( &(BITSEL_u32_u1_19829), &(BITSEL_u32_u1_19832), &(CONCAT_u1_u2_19833));\
bit_vector_clear(&konst_19835);\
konst_19835.val.byte_array[0] = 22;\
bit_vector_bitsel( &(op), &(konst_19835), &(BITSEL_u32_u1_19836));\
bit_vector_clear(&konst_19838);\
konst_19838.val.byte_array[0] = 23;\
bit_vector_bitsel( &(op), &(konst_19838), &(BITSEL_u32_u1_19839));\
bit_vector_concatenate( &(BITSEL_u32_u1_19836), &(BITSEL_u32_u1_19839), &(CONCAT_u1_u2_19840));\
bit_vector_concatenate( &(CONCAT_u1_u2_19833), &(CONCAT_u1_u2_19840), &(CONCAT_u2_u4_19841));\
bit_vector_concatenate( &(CONCAT_u2_u4_19826), &(CONCAT_u2_u4_19841), &(CONCAT_u4_u8_19842));\
bit_vector_clear(&konst_19844);\
konst_19844.val.byte_array[0] = 24;\
bit_vector_bitsel( &(op), &(konst_19844), &(BITSEL_u32_u1_19845));\
bit_vector_clear(&konst_19847);\
konst_19847.val.byte_array[0] = 25;\
bit_vector_bitsel( &(op), &(konst_19847), &(BITSEL_u32_u1_19848));\
bit_vector_concatenate( &(BITSEL_u32_u1_19845), &(BITSEL_u32_u1_19848), &(CONCAT_u1_u2_19849));\
bit_vector_clear(&konst_19851);\
konst_19851.val.byte_array[0] = 26;\
bit_vector_bitsel( &(op), &(konst_19851), &(BITSEL_u32_u1_19852));\
bit_vector_clear(&konst_19854);\
konst_19854.val.byte_array[0] = 27;\
bit_vector_bitsel( &(op), &(konst_19854), &(BITSEL_u32_u1_19855));\
bit_vector_concatenate( &(BITSEL_u32_u1_19852), &(BITSEL_u32_u1_19855), &(CONCAT_u1_u2_19856));\
bit_vector_concatenate( &(CONCAT_u1_u2_19849), &(CONCAT_u1_u2_19856), &(CONCAT_u2_u4_19857));\
bit_vector_clear(&konst_19859);\
konst_19859.val.byte_array[0] = 28;\
bit_vector_bitsel( &(op), &(konst_19859), &(BITSEL_u32_u1_19860));\
bit_vector_clear(&konst_19862);\
konst_19862.val.byte_array[0] = 29;\
bit_vector_bitsel( &(op), &(konst_19862), &(BITSEL_u32_u1_19863));\
bit_vector_concatenate( &(BITSEL_u32_u1_19860), &(BITSEL_u32_u1_19863), &(CONCAT_u1_u2_19864));\
bit_vector_clear(&konst_19866);\
konst_19866.val.byte_array[0] = 30;\
bit_vector_bitsel( &(op), &(konst_19866), &(BITSEL_u32_u1_19867));\
bit_vector_clear(&konst_19869);\
konst_19869.val.byte_array[0] = 31;\
bit_vector_bitsel( &(op), &(konst_19869), &(BITSEL_u32_u1_19870));\
bit_vector_concatenate( &(BITSEL_u32_u1_19867), &(BITSEL_u32_u1_19870), &(CONCAT_u1_u2_19871));\
bit_vector_concatenate( &(CONCAT_u1_u2_19864), &(CONCAT_u1_u2_19871), &(CONCAT_u2_u4_19872));\
bit_vector_concatenate( &(CONCAT_u2_u4_19857), &(CONCAT_u2_u4_19872), &(CONCAT_u4_u8_19873));\
bit_vector_concatenate( &(CONCAT_u4_u8_19842), &(CONCAT_u4_u8_19873), &(CONCAT_u8_u16_19874));\
bit_vector_concatenate( &(CONCAT_u8_u16_19811), &(CONCAT_u8_u16_19874), &(CONCAT_u16_u32_19875));\
bit_vector_cast_to_bit_vector(0, &(reversed_input), &(CONCAT_u16_u32_19875));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19882_c_macro_ __declare_static_bit_vector(MUX_19881,32);\
if (has_undefined_bit(&left)) {fprintf(stderr, "Error: variable left has undefined value (%s) at test point.\n", to_string(&left));assert(0);} \
if(bit_vector_to_uint64(0, &left)){bit_vector_cast_to_bit_vector(0, &(MUX_19881), &(op));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19881), &(reversed_input));\
}bit_vector_cast_to_bit_vector(0, &(level_4_no_shift), &(MUX_19881));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19888_c_macro_ __declare_static_bit_vector(slice_19885,16);\
__declare_static_bit_vector(CONCAT_u16_u32_19887,32);\
bit_vector_slice(&(level_4_no_shift), &(slice_19885), 0);\
bit_vector_concatenate( &(slice_19885), &(ZERO_16), &(CONCAT_u16_u32_19887));\
bit_vector_cast_to_bit_vector(0, &(level_4_shift), &(CONCAT_u16_u32_19887));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19894_c_macro_ __declare_static_bit_vector(MUX_19893,32);\
if (has_undefined_bit(&l4)) {fprintf(stderr, "Error: variable l4 has undefined value (%s) at test point.\n", to_string(&l4));assert(0);} \
if(bit_vector_to_uint64(0, &l4)){bit_vector_cast_to_bit_vector(0, &(MUX_19893), &(level_4_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19893), &(level_4_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_4_output), &(MUX_19893));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19897_c_macro_ bit_vector_cast_to_bit_vector(0, &(level_3_no_shift), &(level_4_output));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19903_c_macro_ __declare_static_bit_vector(slice_19900,24);\
__declare_static_bit_vector(CONCAT_u24_u32_19902,32);\
bit_vector_slice(&(level_3_no_shift), &(slice_19900), 0);\
bit_vector_concatenate( &(slice_19900), &(ZERO_8), &(CONCAT_u24_u32_19902));\
bit_vector_cast_to_bit_vector(0, &(level_3_shift), &(CONCAT_u24_u32_19902));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19909_c_macro_ __declare_static_bit_vector(MUX_19908,32);\
if (has_undefined_bit(&l3)) {fprintf(stderr, "Error: variable l3 has undefined value (%s) at test point.\n", to_string(&l3));assert(0);} \
if(bit_vector_to_uint64(0, &l3)){bit_vector_cast_to_bit_vector(0, &(MUX_19908), &(level_3_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19908), &(level_3_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_3_output), &(MUX_19908));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19912_c_macro_ bit_vector_cast_to_bit_vector(0, &(level_2_no_shift), &(level_3_output));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19918_c_macro_ __declare_static_bit_vector(slice_19915,28);\
__declare_static_bit_vector(CONCAT_u28_u32_19917,32);\
bit_vector_slice(&(level_2_no_shift), &(slice_19915), 0);\
bit_vector_concatenate( &(slice_19915), &(ZERO_4), &(CONCAT_u28_u32_19917));\
bit_vector_cast_to_bit_vector(0, &(level_2_shift), &(CONCAT_u28_u32_19917));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19924_c_macro_ __declare_static_bit_vector(MUX_19923,32);\
if (has_undefined_bit(&l2)) {fprintf(stderr, "Error: variable l2 has undefined value (%s) at test point.\n", to_string(&l2));assert(0);} \
if(bit_vector_to_uint64(0, &l2)){bit_vector_cast_to_bit_vector(0, &(MUX_19923), &(level_2_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19923), &(level_2_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_2_output), &(MUX_19923));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19927_c_macro_ bit_vector_cast_to_bit_vector(0, &(level_1_no_shift), &(level_2_output));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19933_c_macro_ __declare_static_bit_vector(slice_19930,30);\
__declare_static_bit_vector(CONCAT_u30_u32_19932,32);\
bit_vector_slice(&(level_1_no_shift), &(slice_19930), 0);\
bit_vector_concatenate( &(slice_19930), &(ZERO_2), &(CONCAT_u30_u32_19932));\
bit_vector_cast_to_bit_vector(0, &(level_1_shift), &(CONCAT_u30_u32_19932));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19939_c_macro_ __declare_static_bit_vector(MUX_19938,32);\
if (has_undefined_bit(&l1)) {fprintf(stderr, "Error: variable l1 has undefined value (%s) at test point.\n", to_string(&l1));assert(0);} \
if(bit_vector_to_uint64(0, &l1)){bit_vector_cast_to_bit_vector(0, &(MUX_19938), &(level_1_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19938), &(level_1_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_1_output), &(MUX_19938));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19942_c_macro_ bit_vector_cast_to_bit_vector(0, &(level_0_no_shift), &(level_1_output));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19948_c_macro_ __declare_static_bit_vector(slice_19945,31);\
__declare_static_bit_vector(CONCAT_u31_u32_19947,32);\
bit_vector_slice(&(level_1_output), &(slice_19945), 0);\
bit_vector_concatenate( &(slice_19945), &(ZERO_1), &(CONCAT_u31_u32_19947));\
bit_vector_cast_to_bit_vector(0, &(level_0_shift), &(CONCAT_u31_u32_19947));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_19954_c_macro_ __declare_static_bit_vector(MUX_19953,32);\
if (has_undefined_bit(&l0)) {fprintf(stderr, "Error: variable l0 has undefined value (%s) at test point.\n", to_string(&l0));assert(0);} \
if(bit_vector_to_uint64(0, &l0)){bit_vector_cast_to_bit_vector(0, &(MUX_19953), &(level_0_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_19953), &(level_0_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_0_output), &(MUX_19953));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_20083_c_macro_ __declare_static_bit_vector(konst_19957,32);\
bit_vector_clear(&konst_19957);\
__declare_static_bit_vector(BITSEL_u32_u1_19958,1);\
__declare_static_bit_vector(konst_19960,32);\
bit_vector_clear(&konst_19960);\
konst_19960.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u32_u1_19961,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19962,2);\
__declare_static_bit_vector(konst_19964,32);\
bit_vector_clear(&konst_19964);\
konst_19964.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u32_u1_19965,1);\
__declare_static_bit_vector(konst_19967,32);\
bit_vector_clear(&konst_19967);\
konst_19967.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u32_u1_19968,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19969,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19970,4);\
__declare_static_bit_vector(konst_19972,32);\
bit_vector_clear(&konst_19972);\
konst_19972.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u32_u1_19973,1);\
__declare_static_bit_vector(konst_19975,32);\
bit_vector_clear(&konst_19975);\
konst_19975.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u32_u1_19976,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19977,2);\
__declare_static_bit_vector(konst_19979,32);\
bit_vector_clear(&konst_19979);\
konst_19979.val.byte_array[0] = 6;\
__declare_static_bit_vector(BITSEL_u32_u1_19980,1);\
__declare_static_bit_vector(konst_19982,32);\
bit_vector_clear(&konst_19982);\
konst_19982.val.byte_array[0] = 7;\
__declare_static_bit_vector(BITSEL_u32_u1_19983,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19984,2);\
__declare_static_bit_vector(CONCAT_u2_u4_19985,4);\
__declare_static_bit_vector(CONCAT_u4_u8_19986,8);\
__declare_static_bit_vector(konst_19988,32);\
bit_vector_clear(&konst_19988);\
konst_19988.val.byte_array[0] = 8;\
__declare_static_bit_vector(BITSEL_u32_u1_19989,1);\
__declare_static_bit_vector(konst_19991,32);\
bit_vector_clear(&konst_19991);\
konst_19991.val.byte_array[0] = 9;\
__declare_static_bit_vector(BITSEL_u32_u1_19992,1);\
__declare_static_bit_vector(CONCAT_u1_u2_19993,2);\
__declare_static_bit_vector(konst_19995,32);\
bit_vector_clear(&konst_19995);\
konst_19995.val.byte_array[0] = 10;\
__declare_static_bit_vector(BITSEL_u32_u1_19996,1);\
__declare_static_bit_vector(konst_19998,32);\
bit_vector_clear(&konst_19998);\
konst_19998.val.byte_array[0] = 11;\
__declare_static_bit_vector(BITSEL_u32_u1_19999,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20000,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20001,4);\
__declare_static_bit_vector(konst_20003,32);\
bit_vector_clear(&konst_20003);\
konst_20003.val.byte_array[0] = 12;\
__declare_static_bit_vector(BITSEL_u32_u1_20004,1);\
__declare_static_bit_vector(konst_20006,32);\
bit_vector_clear(&konst_20006);\
konst_20006.val.byte_array[0] = 13;\
__declare_static_bit_vector(BITSEL_u32_u1_20007,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20008,2);\
__declare_static_bit_vector(konst_20010,32);\
bit_vector_clear(&konst_20010);\
konst_20010.val.byte_array[0] = 14;\
__declare_static_bit_vector(BITSEL_u32_u1_20011,1);\
__declare_static_bit_vector(konst_20013,32);\
bit_vector_clear(&konst_20013);\
konst_20013.val.byte_array[0] = 15;\
__declare_static_bit_vector(BITSEL_u32_u1_20014,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20015,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20016,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20017,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20018,16);\
__declare_static_bit_vector(konst_20020,32);\
bit_vector_clear(&konst_20020);\
konst_20020.val.byte_array[0] = 16;\
__declare_static_bit_vector(BITSEL_u32_u1_20021,1);\
__declare_static_bit_vector(konst_20023,32);\
bit_vector_clear(&konst_20023);\
konst_20023.val.byte_array[0] = 17;\
__declare_static_bit_vector(BITSEL_u32_u1_20024,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20025,2);\
__declare_static_bit_vector(konst_20027,32);\
bit_vector_clear(&konst_20027);\
konst_20027.val.byte_array[0] = 18;\
__declare_static_bit_vector(BITSEL_u32_u1_20028,1);\
__declare_static_bit_vector(konst_20030,32);\
bit_vector_clear(&konst_20030);\
konst_20030.val.byte_array[0] = 19;\
__declare_static_bit_vector(BITSEL_u32_u1_20031,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20032,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20033,4);\
__declare_static_bit_vector(konst_20035,32);\
bit_vector_clear(&konst_20035);\
konst_20035.val.byte_array[0] = 20;\
__declare_static_bit_vector(BITSEL_u32_u1_20036,1);\
__declare_static_bit_vector(konst_20038,32);\
bit_vector_clear(&konst_20038);\
konst_20038.val.byte_array[0] = 21;\
__declare_static_bit_vector(BITSEL_u32_u1_20039,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20040,2);\
__declare_static_bit_vector(konst_20042,32);\
bit_vector_clear(&konst_20042);\
konst_20042.val.byte_array[0] = 22;\
__declare_static_bit_vector(BITSEL_u32_u1_20043,1);\
__declare_static_bit_vector(konst_20045,32);\
bit_vector_clear(&konst_20045);\
konst_20045.val.byte_array[0] = 23;\
__declare_static_bit_vector(BITSEL_u32_u1_20046,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20047,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20048,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20049,8);\
__declare_static_bit_vector(konst_20051,32);\
bit_vector_clear(&konst_20051);\
konst_20051.val.byte_array[0] = 24;\
__declare_static_bit_vector(BITSEL_u32_u1_20052,1);\
__declare_static_bit_vector(konst_20054,32);\
bit_vector_clear(&konst_20054);\
konst_20054.val.byte_array[0] = 25;\
__declare_static_bit_vector(BITSEL_u32_u1_20055,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20056,2);\
__declare_static_bit_vector(konst_20058,32);\
bit_vector_clear(&konst_20058);\
konst_20058.val.byte_array[0] = 26;\
__declare_static_bit_vector(BITSEL_u32_u1_20059,1);\
__declare_static_bit_vector(konst_20061,32);\
bit_vector_clear(&konst_20061);\
konst_20061.val.byte_array[0] = 27;\
__declare_static_bit_vector(BITSEL_u32_u1_20062,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20063,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20064,4);\
__declare_static_bit_vector(konst_20066,32);\
bit_vector_clear(&konst_20066);\
konst_20066.val.byte_array[0] = 28;\
__declare_static_bit_vector(BITSEL_u32_u1_20067,1);\
__declare_static_bit_vector(konst_20069,32);\
bit_vector_clear(&konst_20069);\
konst_20069.val.byte_array[0] = 29;\
__declare_static_bit_vector(BITSEL_u32_u1_20070,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20071,2);\
__declare_static_bit_vector(konst_20073,32);\
bit_vector_clear(&konst_20073);\
konst_20073.val.byte_array[0] = 30;\
__declare_static_bit_vector(BITSEL_u32_u1_20074,1);\
__declare_static_bit_vector(konst_20076,32);\
bit_vector_clear(&konst_20076);\
konst_20076.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u32_u1_20077,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20078,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20079,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20080,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20081,16);\
__declare_static_bit_vector(CONCAT_u16_u32_20082,32);\
bit_vector_clear(&konst_19957);\
bit_vector_bitsel( &(level_0_output), &(konst_19957), &(BITSEL_u32_u1_19958));\
bit_vector_clear(&konst_19960);\
konst_19960.val.byte_array[0] = 1;\
bit_vector_bitsel( &(level_0_output), &(konst_19960), &(BITSEL_u32_u1_19961));\
bit_vector_concatenate( &(BITSEL_u32_u1_19958), &(BITSEL_u32_u1_19961), &(CONCAT_u1_u2_19962));\
bit_vector_clear(&konst_19964);\
konst_19964.val.byte_array[0] = 2;\
bit_vector_bitsel( &(level_0_output), &(konst_19964), &(BITSEL_u32_u1_19965));\
bit_vector_clear(&konst_19967);\
konst_19967.val.byte_array[0] = 3;\
bit_vector_bitsel( &(level_0_output), &(konst_19967), &(BITSEL_u32_u1_19968));\
bit_vector_concatenate( &(BITSEL_u32_u1_19965), &(BITSEL_u32_u1_19968), &(CONCAT_u1_u2_19969));\
bit_vector_concatenate( &(CONCAT_u1_u2_19962), &(CONCAT_u1_u2_19969), &(CONCAT_u2_u4_19970));\
bit_vector_clear(&konst_19972);\
konst_19972.val.byte_array[0] = 4;\
bit_vector_bitsel( &(level_0_output), &(konst_19972), &(BITSEL_u32_u1_19973));\
bit_vector_clear(&konst_19975);\
konst_19975.val.byte_array[0] = 5;\
bit_vector_bitsel( &(level_0_output), &(konst_19975), &(BITSEL_u32_u1_19976));\
bit_vector_concatenate( &(BITSEL_u32_u1_19973), &(BITSEL_u32_u1_19976), &(CONCAT_u1_u2_19977));\
bit_vector_clear(&konst_19979);\
konst_19979.val.byte_array[0] = 6;\
bit_vector_bitsel( &(level_0_output), &(konst_19979), &(BITSEL_u32_u1_19980));\
bit_vector_clear(&konst_19982);\
konst_19982.val.byte_array[0] = 7;\
bit_vector_bitsel( &(level_0_output), &(konst_19982), &(BITSEL_u32_u1_19983));\
bit_vector_concatenate( &(BITSEL_u32_u1_19980), &(BITSEL_u32_u1_19983), &(CONCAT_u1_u2_19984));\
bit_vector_concatenate( &(CONCAT_u1_u2_19977), &(CONCAT_u1_u2_19984), &(CONCAT_u2_u4_19985));\
bit_vector_concatenate( &(CONCAT_u2_u4_19970), &(CONCAT_u2_u4_19985), &(CONCAT_u4_u8_19986));\
bit_vector_clear(&konst_19988);\
konst_19988.val.byte_array[0] = 8;\
bit_vector_bitsel( &(level_0_output), &(konst_19988), &(BITSEL_u32_u1_19989));\
bit_vector_clear(&konst_19991);\
konst_19991.val.byte_array[0] = 9;\
bit_vector_bitsel( &(level_0_output), &(konst_19991), &(BITSEL_u32_u1_19992));\
bit_vector_concatenate( &(BITSEL_u32_u1_19989), &(BITSEL_u32_u1_19992), &(CONCAT_u1_u2_19993));\
bit_vector_clear(&konst_19995);\
konst_19995.val.byte_array[0] = 10;\
bit_vector_bitsel( &(level_0_output), &(konst_19995), &(BITSEL_u32_u1_19996));\
bit_vector_clear(&konst_19998);\
konst_19998.val.byte_array[0] = 11;\
bit_vector_bitsel( &(level_0_output), &(konst_19998), &(BITSEL_u32_u1_19999));\
bit_vector_concatenate( &(BITSEL_u32_u1_19996), &(BITSEL_u32_u1_19999), &(CONCAT_u1_u2_20000));\
bit_vector_concatenate( &(CONCAT_u1_u2_19993), &(CONCAT_u1_u2_20000), &(CONCAT_u2_u4_20001));\
bit_vector_clear(&konst_20003);\
konst_20003.val.byte_array[0] = 12;\
bit_vector_bitsel( &(level_0_output), &(konst_20003), &(BITSEL_u32_u1_20004));\
bit_vector_clear(&konst_20006);\
konst_20006.val.byte_array[0] = 13;\
bit_vector_bitsel( &(level_0_output), &(konst_20006), &(BITSEL_u32_u1_20007));\
bit_vector_concatenate( &(BITSEL_u32_u1_20004), &(BITSEL_u32_u1_20007), &(CONCAT_u1_u2_20008));\
bit_vector_clear(&konst_20010);\
konst_20010.val.byte_array[0] = 14;\
bit_vector_bitsel( &(level_0_output), &(konst_20010), &(BITSEL_u32_u1_20011));\
bit_vector_clear(&konst_20013);\
konst_20013.val.byte_array[0] = 15;\
bit_vector_bitsel( &(level_0_output), &(konst_20013), &(BITSEL_u32_u1_20014));\
bit_vector_concatenate( &(BITSEL_u32_u1_20011), &(BITSEL_u32_u1_20014), &(CONCAT_u1_u2_20015));\
bit_vector_concatenate( &(CONCAT_u1_u2_20008), &(CONCAT_u1_u2_20015), &(CONCAT_u2_u4_20016));\
bit_vector_concatenate( &(CONCAT_u2_u4_20001), &(CONCAT_u2_u4_20016), &(CONCAT_u4_u8_20017));\
bit_vector_concatenate( &(CONCAT_u4_u8_19986), &(CONCAT_u4_u8_20017), &(CONCAT_u8_u16_20018));\
bit_vector_clear(&konst_20020);\
konst_20020.val.byte_array[0] = 16;\
bit_vector_bitsel( &(level_0_output), &(konst_20020), &(BITSEL_u32_u1_20021));\
bit_vector_clear(&konst_20023);\
konst_20023.val.byte_array[0] = 17;\
bit_vector_bitsel( &(level_0_output), &(konst_20023), &(BITSEL_u32_u1_20024));\
bit_vector_concatenate( &(BITSEL_u32_u1_20021), &(BITSEL_u32_u1_20024), &(CONCAT_u1_u2_20025));\
bit_vector_clear(&konst_20027);\
konst_20027.val.byte_array[0] = 18;\
bit_vector_bitsel( &(level_0_output), &(konst_20027), &(BITSEL_u32_u1_20028));\
bit_vector_clear(&konst_20030);\
konst_20030.val.byte_array[0] = 19;\
bit_vector_bitsel( &(level_0_output), &(konst_20030), &(BITSEL_u32_u1_20031));\
bit_vector_concatenate( &(BITSEL_u32_u1_20028), &(BITSEL_u32_u1_20031), &(CONCAT_u1_u2_20032));\
bit_vector_concatenate( &(CONCAT_u1_u2_20025), &(CONCAT_u1_u2_20032), &(CONCAT_u2_u4_20033));\
bit_vector_clear(&konst_20035);\
konst_20035.val.byte_array[0] = 20;\
bit_vector_bitsel( &(level_0_output), &(konst_20035), &(BITSEL_u32_u1_20036));\
bit_vector_clear(&konst_20038);\
konst_20038.val.byte_array[0] = 21;\
bit_vector_bitsel( &(level_0_output), &(konst_20038), &(BITSEL_u32_u1_20039));\
bit_vector_concatenate( &(BITSEL_u32_u1_20036), &(BITSEL_u32_u1_20039), &(CONCAT_u1_u2_20040));\
bit_vector_clear(&konst_20042);\
konst_20042.val.byte_array[0] = 22;\
bit_vector_bitsel( &(level_0_output), &(konst_20042), &(BITSEL_u32_u1_20043));\
bit_vector_clear(&konst_20045);\
konst_20045.val.byte_array[0] = 23;\
bit_vector_bitsel( &(level_0_output), &(konst_20045), &(BITSEL_u32_u1_20046));\
bit_vector_concatenate( &(BITSEL_u32_u1_20043), &(BITSEL_u32_u1_20046), &(CONCAT_u1_u2_20047));\
bit_vector_concatenate( &(CONCAT_u1_u2_20040), &(CONCAT_u1_u2_20047), &(CONCAT_u2_u4_20048));\
bit_vector_concatenate( &(CONCAT_u2_u4_20033), &(CONCAT_u2_u4_20048), &(CONCAT_u4_u8_20049));\
bit_vector_clear(&konst_20051);\
konst_20051.val.byte_array[0] = 24;\
bit_vector_bitsel( &(level_0_output), &(konst_20051), &(BITSEL_u32_u1_20052));\
bit_vector_clear(&konst_20054);\
konst_20054.val.byte_array[0] = 25;\
bit_vector_bitsel( &(level_0_output), &(konst_20054), &(BITSEL_u32_u1_20055));\
bit_vector_concatenate( &(BITSEL_u32_u1_20052), &(BITSEL_u32_u1_20055), &(CONCAT_u1_u2_20056));\
bit_vector_clear(&konst_20058);\
konst_20058.val.byte_array[0] = 26;\
bit_vector_bitsel( &(level_0_output), &(konst_20058), &(BITSEL_u32_u1_20059));\
bit_vector_clear(&konst_20061);\
konst_20061.val.byte_array[0] = 27;\
bit_vector_bitsel( &(level_0_output), &(konst_20061), &(BITSEL_u32_u1_20062));\
bit_vector_concatenate( &(BITSEL_u32_u1_20059), &(BITSEL_u32_u1_20062), &(CONCAT_u1_u2_20063));\
bit_vector_concatenate( &(CONCAT_u1_u2_20056), &(CONCAT_u1_u2_20063), &(CONCAT_u2_u4_20064));\
bit_vector_clear(&konst_20066);\
konst_20066.val.byte_array[0] = 28;\
bit_vector_bitsel( &(level_0_output), &(konst_20066), &(BITSEL_u32_u1_20067));\
bit_vector_clear(&konst_20069);\
konst_20069.val.byte_array[0] = 29;\
bit_vector_bitsel( &(level_0_output), &(konst_20069), &(BITSEL_u32_u1_20070));\
bit_vector_concatenate( &(BITSEL_u32_u1_20067), &(BITSEL_u32_u1_20070), &(CONCAT_u1_u2_20071));\
bit_vector_clear(&konst_20073);\
konst_20073.val.byte_array[0] = 30;\
bit_vector_bitsel( &(level_0_output), &(konst_20073), &(BITSEL_u32_u1_20074));\
bit_vector_clear(&konst_20076);\
konst_20076.val.byte_array[0] = 31;\
bit_vector_bitsel( &(level_0_output), &(konst_20076), &(BITSEL_u32_u1_20077));\
bit_vector_concatenate( &(BITSEL_u32_u1_20074), &(BITSEL_u32_u1_20077), &(CONCAT_u1_u2_20078));\
bit_vector_concatenate( &(CONCAT_u1_u2_20071), &(CONCAT_u1_u2_20078), &(CONCAT_u2_u4_20079));\
bit_vector_concatenate( &(CONCAT_u2_u4_20064), &(CONCAT_u2_u4_20079), &(CONCAT_u4_u8_20080));\
bit_vector_concatenate( &(CONCAT_u4_u8_20049), &(CONCAT_u4_u8_20080), &(CONCAT_u8_u16_20081));\
bit_vector_concatenate( &(CONCAT_u8_u16_20018), &(CONCAT_u8_u16_20081), &(CONCAT_u16_u32_20082));\
bit_vector_cast_to_bit_vector(0, &(reversed_output), &(CONCAT_u16_u32_20082));\
;

#define fpunit_exec_exec__shifter_left_right_32_assign_stmt_20089_c_macro_ __declare_static_bit_vector(MUX_20088,32);\
if (has_undefined_bit(&left)) {fprintf(stderr, "Error: variable left has undefined value (%s) at test point.\n", to_string(&left));assert(0);} \
if(bit_vector_to_uint64(0, &left)){bit_vector_cast_to_bit_vector(0, &(MUX_20088), &(level_0_output));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20088), &(reversed_output));\
}bit_vector_cast_to_bit_vector(0, &(shifted), &(MUX_20088));\
;

#define fpunit_exec_exec__shifter_left_right_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pshifted)), &(shifted));\
;

#define fpunit_exec_exec__shifter_left_right_64_inner_inarg_prep_macro__ __declare_static_bit_vector(op,64);\
bit_vector_cast_to_bit_vector(0, &(op), &((*__pop)));\
__declare_static_bit_vector(shiftx,6);\
bit_vector_cast_to_bit_vector(0, &(shiftx), &((*__pshiftx)));\
__declare_static_bit_vector(left,1);\
bit_vector_cast_to_bit_vector(0, &(left), &((*__pleft)));\
__declare_static_bit_vector(shifted,64);\
__declare_static_bit_vector(l5,1);\
__declare_static_bit_vector(l4,1);\
__declare_static_bit_vector(l3,1);\
__declare_static_bit_vector(l2,1);\
__declare_static_bit_vector(l1,1);\
__declare_static_bit_vector(l0,1);\
__declare_static_bit_vector(reversed_input,64);\
__declare_static_bit_vector(level_5_no_shift,64);\
__declare_static_bit_vector(level_5_shift,64);\
__declare_static_bit_vector(level_5_output,64);\
__declare_static_bit_vector(level_4_no_shift,64);\
__declare_static_bit_vector(level_4_shift,64);\
__declare_static_bit_vector(level_4_output,64);\
__declare_static_bit_vector(level_3_no_shift,64);\
__declare_static_bit_vector(level_3_shift,64);\
__declare_static_bit_vector(level_3_output,64);\
__declare_static_bit_vector(level_2_no_shift,64);\
__declare_static_bit_vector(level_2_shift,64);\
__declare_static_bit_vector(level_2_output,64);\
__declare_static_bit_vector(level_1_no_shift,64);\
__declare_static_bit_vector(level_1_shift,64);\
__declare_static_bit_vector(level_1_output,64);\
__declare_static_bit_vector(level_0_no_shift,64);\
__declare_static_bit_vector(level_0_shift,64);\
__declare_static_bit_vector(level_0_output,64);\
__declare_static_bit_vector(reversed_output,64);\

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20100_c_macro_ __declare_static_bit_vector(konst_20098,6);\
bit_vector_clear(&konst_20098);\
konst_20098.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u6_u1_20099,1);\
bit_vector_clear(&konst_20098);\
konst_20098.val.byte_array[0] = 5;\
bit_vector_bitsel( &(shiftx), &(konst_20098), &(BITSEL_u6_u1_20099));\
bit_vector_cast_to_bit_vector(0, &(l5), &(BITSEL_u6_u1_20099));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20105_c_macro_ __declare_static_bit_vector(konst_20103,6);\
bit_vector_clear(&konst_20103);\
konst_20103.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u6_u1_20104,1);\
bit_vector_clear(&konst_20103);\
konst_20103.val.byte_array[0] = 4;\
bit_vector_bitsel( &(shiftx), &(konst_20103), &(BITSEL_u6_u1_20104));\
bit_vector_cast_to_bit_vector(0, &(l4), &(BITSEL_u6_u1_20104));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20110_c_macro_ __declare_static_bit_vector(konst_20108,6);\
bit_vector_clear(&konst_20108);\
konst_20108.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u6_u1_20109,1);\
bit_vector_clear(&konst_20108);\
konst_20108.val.byte_array[0] = 3;\
bit_vector_bitsel( &(shiftx), &(konst_20108), &(BITSEL_u6_u1_20109));\
bit_vector_cast_to_bit_vector(0, &(l3), &(BITSEL_u6_u1_20109));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20115_c_macro_ __declare_static_bit_vector(konst_20113,6);\
bit_vector_clear(&konst_20113);\
konst_20113.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u6_u1_20114,1);\
bit_vector_clear(&konst_20113);\
konst_20113.val.byte_array[0] = 2;\
bit_vector_bitsel( &(shiftx), &(konst_20113), &(BITSEL_u6_u1_20114));\
bit_vector_cast_to_bit_vector(0, &(l2), &(BITSEL_u6_u1_20114));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20120_c_macro_ __declare_static_bit_vector(konst_20118,6);\
bit_vector_clear(&konst_20118);\
konst_20118.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u6_u1_20119,1);\
bit_vector_clear(&konst_20118);\
konst_20118.val.byte_array[0] = 1;\
bit_vector_bitsel( &(shiftx), &(konst_20118), &(BITSEL_u6_u1_20119));\
bit_vector_cast_to_bit_vector(0, &(l1), &(BITSEL_u6_u1_20119));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20125_c_macro_ __declare_static_bit_vector(konst_20123,6);\
bit_vector_clear(&konst_20123);\
__declare_static_bit_vector(BITSEL_u6_u1_20124,1);\
bit_vector_clear(&konst_20123);\
bit_vector_bitsel( &(shiftx), &(konst_20123), &(BITSEL_u6_u1_20124));\
bit_vector_cast_to_bit_vector(0, &(l0), &(BITSEL_u6_u1_20124));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20382_c_macro_ __declare_static_bit_vector(konst_20128,64);\
bit_vector_clear(&konst_20128);\
__declare_static_bit_vector(BITSEL_u64_u1_20129,1);\
__declare_static_bit_vector(konst_20131,64);\
bit_vector_clear(&konst_20131);\
konst_20131.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u64_u1_20132,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20133,2);\
__declare_static_bit_vector(konst_20135,64);\
bit_vector_clear(&konst_20135);\
konst_20135.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u64_u1_20136,1);\
__declare_static_bit_vector(konst_20138,64);\
bit_vector_clear(&konst_20138);\
konst_20138.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u64_u1_20139,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20140,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20141,4);\
__declare_static_bit_vector(konst_20143,64);\
bit_vector_clear(&konst_20143);\
konst_20143.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u64_u1_20144,1);\
__declare_static_bit_vector(konst_20146,64);\
bit_vector_clear(&konst_20146);\
konst_20146.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u64_u1_20147,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20148,2);\
__declare_static_bit_vector(konst_20150,64);\
bit_vector_clear(&konst_20150);\
konst_20150.val.byte_array[0] = 6;\
__declare_static_bit_vector(BITSEL_u64_u1_20151,1);\
__declare_static_bit_vector(konst_20153,64);\
bit_vector_clear(&konst_20153);\
konst_20153.val.byte_array[0] = 7;\
__declare_static_bit_vector(BITSEL_u64_u1_20154,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20155,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20156,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20157,8);\
__declare_static_bit_vector(konst_20159,64);\
bit_vector_clear(&konst_20159);\
konst_20159.val.byte_array[0] = 8;\
__declare_static_bit_vector(BITSEL_u64_u1_20160,1);\
__declare_static_bit_vector(konst_20162,64);\
bit_vector_clear(&konst_20162);\
konst_20162.val.byte_array[0] = 9;\
__declare_static_bit_vector(BITSEL_u64_u1_20163,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20164,2);\
__declare_static_bit_vector(konst_20166,64);\
bit_vector_clear(&konst_20166);\
konst_20166.val.byte_array[0] = 10;\
__declare_static_bit_vector(BITSEL_u64_u1_20167,1);\
__declare_static_bit_vector(konst_20169,64);\
bit_vector_clear(&konst_20169);\
konst_20169.val.byte_array[0] = 11;\
__declare_static_bit_vector(BITSEL_u64_u1_20170,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20171,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20172,4);\
__declare_static_bit_vector(konst_20174,64);\
bit_vector_clear(&konst_20174);\
konst_20174.val.byte_array[0] = 12;\
__declare_static_bit_vector(BITSEL_u64_u1_20175,1);\
__declare_static_bit_vector(konst_20177,64);\
bit_vector_clear(&konst_20177);\
konst_20177.val.byte_array[0] = 13;\
__declare_static_bit_vector(BITSEL_u64_u1_20178,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20179,2);\
__declare_static_bit_vector(konst_20181,64);\
bit_vector_clear(&konst_20181);\
konst_20181.val.byte_array[0] = 14;\
__declare_static_bit_vector(BITSEL_u64_u1_20182,1);\
__declare_static_bit_vector(konst_20184,64);\
bit_vector_clear(&konst_20184);\
konst_20184.val.byte_array[0] = 15;\
__declare_static_bit_vector(BITSEL_u64_u1_20185,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20186,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20187,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20188,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20189,16);\
__declare_static_bit_vector(konst_20191,64);\
bit_vector_clear(&konst_20191);\
konst_20191.val.byte_array[0] = 16;\
__declare_static_bit_vector(BITSEL_u64_u1_20192,1);\
__declare_static_bit_vector(konst_20194,64);\
bit_vector_clear(&konst_20194);\
konst_20194.val.byte_array[0] = 17;\
__declare_static_bit_vector(BITSEL_u64_u1_20195,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20196,2);\
__declare_static_bit_vector(konst_20198,64);\
bit_vector_clear(&konst_20198);\
konst_20198.val.byte_array[0] = 18;\
__declare_static_bit_vector(BITSEL_u64_u1_20199,1);\
__declare_static_bit_vector(konst_20201,64);\
bit_vector_clear(&konst_20201);\
konst_20201.val.byte_array[0] = 19;\
__declare_static_bit_vector(BITSEL_u64_u1_20202,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20203,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20204,4);\
__declare_static_bit_vector(konst_20206,64);\
bit_vector_clear(&konst_20206);\
konst_20206.val.byte_array[0] = 20;\
__declare_static_bit_vector(BITSEL_u64_u1_20207,1);\
__declare_static_bit_vector(konst_20209,64);\
bit_vector_clear(&konst_20209);\
konst_20209.val.byte_array[0] = 21;\
__declare_static_bit_vector(BITSEL_u64_u1_20210,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20211,2);\
__declare_static_bit_vector(konst_20213,64);\
bit_vector_clear(&konst_20213);\
konst_20213.val.byte_array[0] = 22;\
__declare_static_bit_vector(BITSEL_u64_u1_20214,1);\
__declare_static_bit_vector(konst_20216,64);\
bit_vector_clear(&konst_20216);\
konst_20216.val.byte_array[0] = 23;\
__declare_static_bit_vector(BITSEL_u64_u1_20217,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20218,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20219,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20220,8);\
__declare_static_bit_vector(konst_20222,64);\
bit_vector_clear(&konst_20222);\
konst_20222.val.byte_array[0] = 24;\
__declare_static_bit_vector(BITSEL_u64_u1_20223,1);\
__declare_static_bit_vector(konst_20225,64);\
bit_vector_clear(&konst_20225);\
konst_20225.val.byte_array[0] = 25;\
__declare_static_bit_vector(BITSEL_u64_u1_20226,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20227,2);\
__declare_static_bit_vector(konst_20229,64);\
bit_vector_clear(&konst_20229);\
konst_20229.val.byte_array[0] = 26;\
__declare_static_bit_vector(BITSEL_u64_u1_20230,1);\
__declare_static_bit_vector(konst_20232,64);\
bit_vector_clear(&konst_20232);\
konst_20232.val.byte_array[0] = 27;\
__declare_static_bit_vector(BITSEL_u64_u1_20233,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20234,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20235,4);\
__declare_static_bit_vector(konst_20237,64);\
bit_vector_clear(&konst_20237);\
konst_20237.val.byte_array[0] = 28;\
__declare_static_bit_vector(BITSEL_u64_u1_20238,1);\
__declare_static_bit_vector(konst_20240,64);\
bit_vector_clear(&konst_20240);\
konst_20240.val.byte_array[0] = 29;\
__declare_static_bit_vector(BITSEL_u64_u1_20241,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20242,2);\
__declare_static_bit_vector(konst_20244,64);\
bit_vector_clear(&konst_20244);\
konst_20244.val.byte_array[0] = 30;\
__declare_static_bit_vector(BITSEL_u64_u1_20245,1);\
__declare_static_bit_vector(konst_20247,64);\
bit_vector_clear(&konst_20247);\
konst_20247.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u64_u1_20248,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20249,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20250,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20251,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20252,16);\
__declare_static_bit_vector(CONCAT_u16_u32_20253,32);\
__declare_static_bit_vector(konst_20255,64);\
bit_vector_clear(&konst_20255);\
konst_20255.val.byte_array[0] = 32;\
__declare_static_bit_vector(BITSEL_u64_u1_20256,1);\
__declare_static_bit_vector(konst_20258,64);\
bit_vector_clear(&konst_20258);\
konst_20258.val.byte_array[0] = 33;\
__declare_static_bit_vector(BITSEL_u64_u1_20259,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20260,2);\
__declare_static_bit_vector(konst_20262,64);\
bit_vector_clear(&konst_20262);\
konst_20262.val.byte_array[0] = 34;\
__declare_static_bit_vector(BITSEL_u64_u1_20263,1);\
__declare_static_bit_vector(konst_20265,64);\
bit_vector_clear(&konst_20265);\
konst_20265.val.byte_array[0] = 35;\
__declare_static_bit_vector(BITSEL_u64_u1_20266,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20267,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20268,4);\
__declare_static_bit_vector(konst_20270,64);\
bit_vector_clear(&konst_20270);\
konst_20270.val.byte_array[0] = 36;\
__declare_static_bit_vector(BITSEL_u64_u1_20271,1);\
__declare_static_bit_vector(konst_20273,64);\
bit_vector_clear(&konst_20273);\
konst_20273.val.byte_array[0] = 37;\
__declare_static_bit_vector(BITSEL_u64_u1_20274,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20275,2);\
__declare_static_bit_vector(konst_20277,64);\
bit_vector_clear(&konst_20277);\
konst_20277.val.byte_array[0] = 38;\
__declare_static_bit_vector(BITSEL_u64_u1_20278,1);\
__declare_static_bit_vector(konst_20280,64);\
bit_vector_clear(&konst_20280);\
konst_20280.val.byte_array[0] = 39;\
__declare_static_bit_vector(BITSEL_u64_u1_20281,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20282,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20283,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20284,8);\
__declare_static_bit_vector(konst_20286,64);\
bit_vector_clear(&konst_20286);\
konst_20286.val.byte_array[0] = 40;\
__declare_static_bit_vector(BITSEL_u64_u1_20287,1);\
__declare_static_bit_vector(konst_20289,64);\
bit_vector_clear(&konst_20289);\
konst_20289.val.byte_array[0] = 41;\
__declare_static_bit_vector(BITSEL_u64_u1_20290,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20291,2);\
__declare_static_bit_vector(konst_20293,64);\
bit_vector_clear(&konst_20293);\
konst_20293.val.byte_array[0] = 42;\
__declare_static_bit_vector(BITSEL_u64_u1_20294,1);\
__declare_static_bit_vector(konst_20296,64);\
bit_vector_clear(&konst_20296);\
konst_20296.val.byte_array[0] = 43;\
__declare_static_bit_vector(BITSEL_u64_u1_20297,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20298,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20299,4);\
__declare_static_bit_vector(konst_20301,64);\
bit_vector_clear(&konst_20301);\
konst_20301.val.byte_array[0] = 44;\
__declare_static_bit_vector(BITSEL_u64_u1_20302,1);\
__declare_static_bit_vector(konst_20304,64);\
bit_vector_clear(&konst_20304);\
konst_20304.val.byte_array[0] = 45;\
__declare_static_bit_vector(BITSEL_u64_u1_20305,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20306,2);\
__declare_static_bit_vector(konst_20308,64);\
bit_vector_clear(&konst_20308);\
konst_20308.val.byte_array[0] = 46;\
__declare_static_bit_vector(BITSEL_u64_u1_20309,1);\
__declare_static_bit_vector(konst_20311,64);\
bit_vector_clear(&konst_20311);\
konst_20311.val.byte_array[0] = 47;\
__declare_static_bit_vector(BITSEL_u64_u1_20312,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20313,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20314,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20315,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20316,16);\
__declare_static_bit_vector(konst_20318,64);\
bit_vector_clear(&konst_20318);\
konst_20318.val.byte_array[0] = 48;\
__declare_static_bit_vector(BITSEL_u64_u1_20319,1);\
__declare_static_bit_vector(konst_20321,64);\
bit_vector_clear(&konst_20321);\
konst_20321.val.byte_array[0] = 49;\
__declare_static_bit_vector(BITSEL_u64_u1_20322,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20323,2);\
__declare_static_bit_vector(konst_20325,64);\
bit_vector_clear(&konst_20325);\
konst_20325.val.byte_array[0] = 50;\
__declare_static_bit_vector(BITSEL_u64_u1_20326,1);\
__declare_static_bit_vector(konst_20328,64);\
bit_vector_clear(&konst_20328);\
konst_20328.val.byte_array[0] = 51;\
__declare_static_bit_vector(BITSEL_u64_u1_20329,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20330,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20331,4);\
__declare_static_bit_vector(konst_20333,64);\
bit_vector_clear(&konst_20333);\
konst_20333.val.byte_array[0] = 52;\
__declare_static_bit_vector(BITSEL_u64_u1_20334,1);\
__declare_static_bit_vector(konst_20336,64);\
bit_vector_clear(&konst_20336);\
konst_20336.val.byte_array[0] = 53;\
__declare_static_bit_vector(BITSEL_u64_u1_20337,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20338,2);\
__declare_static_bit_vector(konst_20340,64);\
bit_vector_clear(&konst_20340);\
konst_20340.val.byte_array[0] = 54;\
__declare_static_bit_vector(BITSEL_u64_u1_20341,1);\
__declare_static_bit_vector(konst_20343,64);\
bit_vector_clear(&konst_20343);\
konst_20343.val.byte_array[0] = 55;\
__declare_static_bit_vector(BITSEL_u64_u1_20344,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20345,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20346,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20347,8);\
__declare_static_bit_vector(konst_20349,64);\
bit_vector_clear(&konst_20349);\
konst_20349.val.byte_array[0] = 56;\
__declare_static_bit_vector(BITSEL_u64_u1_20350,1);\
__declare_static_bit_vector(konst_20352,64);\
bit_vector_clear(&konst_20352);\
konst_20352.val.byte_array[0] = 57;\
__declare_static_bit_vector(BITSEL_u64_u1_20353,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20354,2);\
__declare_static_bit_vector(konst_20356,64);\
bit_vector_clear(&konst_20356);\
konst_20356.val.byte_array[0] = 58;\
__declare_static_bit_vector(BITSEL_u64_u1_20357,1);\
__declare_static_bit_vector(konst_20359,64);\
bit_vector_clear(&konst_20359);\
konst_20359.val.byte_array[0] = 59;\
__declare_static_bit_vector(BITSEL_u64_u1_20360,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20361,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20362,4);\
__declare_static_bit_vector(konst_20364,64);\
bit_vector_clear(&konst_20364);\
konst_20364.val.byte_array[0] = 60;\
__declare_static_bit_vector(BITSEL_u64_u1_20365,1);\
__declare_static_bit_vector(konst_20367,64);\
bit_vector_clear(&konst_20367);\
konst_20367.val.byte_array[0] = 61;\
__declare_static_bit_vector(BITSEL_u64_u1_20368,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20369,2);\
__declare_static_bit_vector(konst_20371,64);\
bit_vector_clear(&konst_20371);\
konst_20371.val.byte_array[0] = 62;\
__declare_static_bit_vector(BITSEL_u64_u1_20372,1);\
__declare_static_bit_vector(konst_20374,64);\
bit_vector_clear(&konst_20374);\
konst_20374.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_20375,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20376,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20377,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20378,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20379,16);\
__declare_static_bit_vector(CONCAT_u16_u32_20380,32);\
__declare_static_bit_vector(CONCAT_u32_u64_20381,64);\
bit_vector_clear(&konst_20128);\
bit_vector_bitsel( &(op), &(konst_20128), &(BITSEL_u64_u1_20129));\
bit_vector_clear(&konst_20131);\
konst_20131.val.byte_array[0] = 1;\
bit_vector_bitsel( &(op), &(konst_20131), &(BITSEL_u64_u1_20132));\
bit_vector_concatenate( &(BITSEL_u64_u1_20129), &(BITSEL_u64_u1_20132), &(CONCAT_u1_u2_20133));\
bit_vector_clear(&konst_20135);\
konst_20135.val.byte_array[0] = 2;\
bit_vector_bitsel( &(op), &(konst_20135), &(BITSEL_u64_u1_20136));\
bit_vector_clear(&konst_20138);\
konst_20138.val.byte_array[0] = 3;\
bit_vector_bitsel( &(op), &(konst_20138), &(BITSEL_u64_u1_20139));\
bit_vector_concatenate( &(BITSEL_u64_u1_20136), &(BITSEL_u64_u1_20139), &(CONCAT_u1_u2_20140));\
bit_vector_concatenate( &(CONCAT_u1_u2_20133), &(CONCAT_u1_u2_20140), &(CONCAT_u2_u4_20141));\
bit_vector_clear(&konst_20143);\
konst_20143.val.byte_array[0] = 4;\
bit_vector_bitsel( &(op), &(konst_20143), &(BITSEL_u64_u1_20144));\
bit_vector_clear(&konst_20146);\
konst_20146.val.byte_array[0] = 5;\
bit_vector_bitsel( &(op), &(konst_20146), &(BITSEL_u64_u1_20147));\
bit_vector_concatenate( &(BITSEL_u64_u1_20144), &(BITSEL_u64_u1_20147), &(CONCAT_u1_u2_20148));\
bit_vector_clear(&konst_20150);\
konst_20150.val.byte_array[0] = 6;\
bit_vector_bitsel( &(op), &(konst_20150), &(BITSEL_u64_u1_20151));\
bit_vector_clear(&konst_20153);\
konst_20153.val.byte_array[0] = 7;\
bit_vector_bitsel( &(op), &(konst_20153), &(BITSEL_u64_u1_20154));\
bit_vector_concatenate( &(BITSEL_u64_u1_20151), &(BITSEL_u64_u1_20154), &(CONCAT_u1_u2_20155));\
bit_vector_concatenate( &(CONCAT_u1_u2_20148), &(CONCAT_u1_u2_20155), &(CONCAT_u2_u4_20156));\
bit_vector_concatenate( &(CONCAT_u2_u4_20141), &(CONCAT_u2_u4_20156), &(CONCAT_u4_u8_20157));\
bit_vector_clear(&konst_20159);\
konst_20159.val.byte_array[0] = 8;\
bit_vector_bitsel( &(op), &(konst_20159), &(BITSEL_u64_u1_20160));\
bit_vector_clear(&konst_20162);\
konst_20162.val.byte_array[0] = 9;\
bit_vector_bitsel( &(op), &(konst_20162), &(BITSEL_u64_u1_20163));\
bit_vector_concatenate( &(BITSEL_u64_u1_20160), &(BITSEL_u64_u1_20163), &(CONCAT_u1_u2_20164));\
bit_vector_clear(&konst_20166);\
konst_20166.val.byte_array[0] = 10;\
bit_vector_bitsel( &(op), &(konst_20166), &(BITSEL_u64_u1_20167));\
bit_vector_clear(&konst_20169);\
konst_20169.val.byte_array[0] = 11;\
bit_vector_bitsel( &(op), &(konst_20169), &(BITSEL_u64_u1_20170));\
bit_vector_concatenate( &(BITSEL_u64_u1_20167), &(BITSEL_u64_u1_20170), &(CONCAT_u1_u2_20171));\
bit_vector_concatenate( &(CONCAT_u1_u2_20164), &(CONCAT_u1_u2_20171), &(CONCAT_u2_u4_20172));\
bit_vector_clear(&konst_20174);\
konst_20174.val.byte_array[0] = 12;\
bit_vector_bitsel( &(op), &(konst_20174), &(BITSEL_u64_u1_20175));\
bit_vector_clear(&konst_20177);\
konst_20177.val.byte_array[0] = 13;\
bit_vector_bitsel( &(op), &(konst_20177), &(BITSEL_u64_u1_20178));\
bit_vector_concatenate( &(BITSEL_u64_u1_20175), &(BITSEL_u64_u1_20178), &(CONCAT_u1_u2_20179));\
bit_vector_clear(&konst_20181);\
konst_20181.val.byte_array[0] = 14;\
bit_vector_bitsel( &(op), &(konst_20181), &(BITSEL_u64_u1_20182));\
bit_vector_clear(&konst_20184);\
konst_20184.val.byte_array[0] = 15;\
bit_vector_bitsel( &(op), &(konst_20184), &(BITSEL_u64_u1_20185));\
bit_vector_concatenate( &(BITSEL_u64_u1_20182), &(BITSEL_u64_u1_20185), &(CONCAT_u1_u2_20186));\
bit_vector_concatenate( &(CONCAT_u1_u2_20179), &(CONCAT_u1_u2_20186), &(CONCAT_u2_u4_20187));\
bit_vector_concatenate( &(CONCAT_u2_u4_20172), &(CONCAT_u2_u4_20187), &(CONCAT_u4_u8_20188));\
bit_vector_concatenate( &(CONCAT_u4_u8_20157), &(CONCAT_u4_u8_20188), &(CONCAT_u8_u16_20189));\
bit_vector_clear(&konst_20191);\
konst_20191.val.byte_array[0] = 16;\
bit_vector_bitsel( &(op), &(konst_20191), &(BITSEL_u64_u1_20192));\
bit_vector_clear(&konst_20194);\
konst_20194.val.byte_array[0] = 17;\
bit_vector_bitsel( &(op), &(konst_20194), &(BITSEL_u64_u1_20195));\
bit_vector_concatenate( &(BITSEL_u64_u1_20192), &(BITSEL_u64_u1_20195), &(CONCAT_u1_u2_20196));\
bit_vector_clear(&konst_20198);\
konst_20198.val.byte_array[0] = 18;\
bit_vector_bitsel( &(op), &(konst_20198), &(BITSEL_u64_u1_20199));\
bit_vector_clear(&konst_20201);\
konst_20201.val.byte_array[0] = 19;\
bit_vector_bitsel( &(op), &(konst_20201), &(BITSEL_u64_u1_20202));\
bit_vector_concatenate( &(BITSEL_u64_u1_20199), &(BITSEL_u64_u1_20202), &(CONCAT_u1_u2_20203));\
bit_vector_concatenate( &(CONCAT_u1_u2_20196), &(CONCAT_u1_u2_20203), &(CONCAT_u2_u4_20204));\
bit_vector_clear(&konst_20206);\
konst_20206.val.byte_array[0] = 20;\
bit_vector_bitsel( &(op), &(konst_20206), &(BITSEL_u64_u1_20207));\
bit_vector_clear(&konst_20209);\
konst_20209.val.byte_array[0] = 21;\
bit_vector_bitsel( &(op), &(konst_20209), &(BITSEL_u64_u1_20210));\
bit_vector_concatenate( &(BITSEL_u64_u1_20207), &(BITSEL_u64_u1_20210), &(CONCAT_u1_u2_20211));\
bit_vector_clear(&konst_20213);\
konst_20213.val.byte_array[0] = 22;\
bit_vector_bitsel( &(op), &(konst_20213), &(BITSEL_u64_u1_20214));\
bit_vector_clear(&konst_20216);\
konst_20216.val.byte_array[0] = 23;\
bit_vector_bitsel( &(op), &(konst_20216), &(BITSEL_u64_u1_20217));\
bit_vector_concatenate( &(BITSEL_u64_u1_20214), &(BITSEL_u64_u1_20217), &(CONCAT_u1_u2_20218));\
bit_vector_concatenate( &(CONCAT_u1_u2_20211), &(CONCAT_u1_u2_20218), &(CONCAT_u2_u4_20219));\
bit_vector_concatenate( &(CONCAT_u2_u4_20204), &(CONCAT_u2_u4_20219), &(CONCAT_u4_u8_20220));\
bit_vector_clear(&konst_20222);\
konst_20222.val.byte_array[0] = 24;\
bit_vector_bitsel( &(op), &(konst_20222), &(BITSEL_u64_u1_20223));\
bit_vector_clear(&konst_20225);\
konst_20225.val.byte_array[0] = 25;\
bit_vector_bitsel( &(op), &(konst_20225), &(BITSEL_u64_u1_20226));\
bit_vector_concatenate( &(BITSEL_u64_u1_20223), &(BITSEL_u64_u1_20226), &(CONCAT_u1_u2_20227));\
bit_vector_clear(&konst_20229);\
konst_20229.val.byte_array[0] = 26;\
bit_vector_bitsel( &(op), &(konst_20229), &(BITSEL_u64_u1_20230));\
bit_vector_clear(&konst_20232);\
konst_20232.val.byte_array[0] = 27;\
bit_vector_bitsel( &(op), &(konst_20232), &(BITSEL_u64_u1_20233));\
bit_vector_concatenate( &(BITSEL_u64_u1_20230), &(BITSEL_u64_u1_20233), &(CONCAT_u1_u2_20234));\
bit_vector_concatenate( &(CONCAT_u1_u2_20227), &(CONCAT_u1_u2_20234), &(CONCAT_u2_u4_20235));\
bit_vector_clear(&konst_20237);\
konst_20237.val.byte_array[0] = 28;\
bit_vector_bitsel( &(op), &(konst_20237), &(BITSEL_u64_u1_20238));\
bit_vector_clear(&konst_20240);\
konst_20240.val.byte_array[0] = 29;\
bit_vector_bitsel( &(op), &(konst_20240), &(BITSEL_u64_u1_20241));\
bit_vector_concatenate( &(BITSEL_u64_u1_20238), &(BITSEL_u64_u1_20241), &(CONCAT_u1_u2_20242));\
bit_vector_clear(&konst_20244);\
konst_20244.val.byte_array[0] = 30;\
bit_vector_bitsel( &(op), &(konst_20244), &(BITSEL_u64_u1_20245));\
bit_vector_clear(&konst_20247);\
konst_20247.val.byte_array[0] = 31;\
bit_vector_bitsel( &(op), &(konst_20247), &(BITSEL_u64_u1_20248));\
bit_vector_concatenate( &(BITSEL_u64_u1_20245), &(BITSEL_u64_u1_20248), &(CONCAT_u1_u2_20249));\
bit_vector_concatenate( &(CONCAT_u1_u2_20242), &(CONCAT_u1_u2_20249), &(CONCAT_u2_u4_20250));\
bit_vector_concatenate( &(CONCAT_u2_u4_20235), &(CONCAT_u2_u4_20250), &(CONCAT_u4_u8_20251));\
bit_vector_concatenate( &(CONCAT_u4_u8_20220), &(CONCAT_u4_u8_20251), &(CONCAT_u8_u16_20252));\
bit_vector_concatenate( &(CONCAT_u8_u16_20189), &(CONCAT_u8_u16_20252), &(CONCAT_u16_u32_20253));\
bit_vector_clear(&konst_20255);\
konst_20255.val.byte_array[0] = 32;\
bit_vector_bitsel( &(op), &(konst_20255), &(BITSEL_u64_u1_20256));\
bit_vector_clear(&konst_20258);\
konst_20258.val.byte_array[0] = 33;\
bit_vector_bitsel( &(op), &(konst_20258), &(BITSEL_u64_u1_20259));\
bit_vector_concatenate( &(BITSEL_u64_u1_20256), &(BITSEL_u64_u1_20259), &(CONCAT_u1_u2_20260));\
bit_vector_clear(&konst_20262);\
konst_20262.val.byte_array[0] = 34;\
bit_vector_bitsel( &(op), &(konst_20262), &(BITSEL_u64_u1_20263));\
bit_vector_clear(&konst_20265);\
konst_20265.val.byte_array[0] = 35;\
bit_vector_bitsel( &(op), &(konst_20265), &(BITSEL_u64_u1_20266));\
bit_vector_concatenate( &(BITSEL_u64_u1_20263), &(BITSEL_u64_u1_20266), &(CONCAT_u1_u2_20267));\
bit_vector_concatenate( &(CONCAT_u1_u2_20260), &(CONCAT_u1_u2_20267), &(CONCAT_u2_u4_20268));\
bit_vector_clear(&konst_20270);\
konst_20270.val.byte_array[0] = 36;\
bit_vector_bitsel( &(op), &(konst_20270), &(BITSEL_u64_u1_20271));\
bit_vector_clear(&konst_20273);\
konst_20273.val.byte_array[0] = 37;\
bit_vector_bitsel( &(op), &(konst_20273), &(BITSEL_u64_u1_20274));\
bit_vector_concatenate( &(BITSEL_u64_u1_20271), &(BITSEL_u64_u1_20274), &(CONCAT_u1_u2_20275));\
bit_vector_clear(&konst_20277);\
konst_20277.val.byte_array[0] = 38;\
bit_vector_bitsel( &(op), &(konst_20277), &(BITSEL_u64_u1_20278));\
bit_vector_clear(&konst_20280);\
konst_20280.val.byte_array[0] = 39;\
bit_vector_bitsel( &(op), &(konst_20280), &(BITSEL_u64_u1_20281));\
bit_vector_concatenate( &(BITSEL_u64_u1_20278), &(BITSEL_u64_u1_20281), &(CONCAT_u1_u2_20282));\
bit_vector_concatenate( &(CONCAT_u1_u2_20275), &(CONCAT_u1_u2_20282), &(CONCAT_u2_u4_20283));\
bit_vector_concatenate( &(CONCAT_u2_u4_20268), &(CONCAT_u2_u4_20283), &(CONCAT_u4_u8_20284));\
bit_vector_clear(&konst_20286);\
konst_20286.val.byte_array[0] = 40;\
bit_vector_bitsel( &(op), &(konst_20286), &(BITSEL_u64_u1_20287));\
bit_vector_clear(&konst_20289);\
konst_20289.val.byte_array[0] = 41;\
bit_vector_bitsel( &(op), &(konst_20289), &(BITSEL_u64_u1_20290));\
bit_vector_concatenate( &(BITSEL_u64_u1_20287), &(BITSEL_u64_u1_20290), &(CONCAT_u1_u2_20291));\
bit_vector_clear(&konst_20293);\
konst_20293.val.byte_array[0] = 42;\
bit_vector_bitsel( &(op), &(konst_20293), &(BITSEL_u64_u1_20294));\
bit_vector_clear(&konst_20296);\
konst_20296.val.byte_array[0] = 43;\
bit_vector_bitsel( &(op), &(konst_20296), &(BITSEL_u64_u1_20297));\
bit_vector_concatenate( &(BITSEL_u64_u1_20294), &(BITSEL_u64_u1_20297), &(CONCAT_u1_u2_20298));\
bit_vector_concatenate( &(CONCAT_u1_u2_20291), &(CONCAT_u1_u2_20298), &(CONCAT_u2_u4_20299));\
bit_vector_clear(&konst_20301);\
konst_20301.val.byte_array[0] = 44;\
bit_vector_bitsel( &(op), &(konst_20301), &(BITSEL_u64_u1_20302));\
bit_vector_clear(&konst_20304);\
konst_20304.val.byte_array[0] = 45;\
bit_vector_bitsel( &(op), &(konst_20304), &(BITSEL_u64_u1_20305));\
bit_vector_concatenate( &(BITSEL_u64_u1_20302), &(BITSEL_u64_u1_20305), &(CONCAT_u1_u2_20306));\
bit_vector_clear(&konst_20308);\
konst_20308.val.byte_array[0] = 46;\
bit_vector_bitsel( &(op), &(konst_20308), &(BITSEL_u64_u1_20309));\
bit_vector_clear(&konst_20311);\
konst_20311.val.byte_array[0] = 47;\
bit_vector_bitsel( &(op), &(konst_20311), &(BITSEL_u64_u1_20312));\
bit_vector_concatenate( &(BITSEL_u64_u1_20309), &(BITSEL_u64_u1_20312), &(CONCAT_u1_u2_20313));\
bit_vector_concatenate( &(CONCAT_u1_u2_20306), &(CONCAT_u1_u2_20313), &(CONCAT_u2_u4_20314));\
bit_vector_concatenate( &(CONCAT_u2_u4_20299), &(CONCAT_u2_u4_20314), &(CONCAT_u4_u8_20315));\
bit_vector_concatenate( &(CONCAT_u4_u8_20284), &(CONCAT_u4_u8_20315), &(CONCAT_u8_u16_20316));\
bit_vector_clear(&konst_20318);\
konst_20318.val.byte_array[0] = 48;\
bit_vector_bitsel( &(op), &(konst_20318), &(BITSEL_u64_u1_20319));\
bit_vector_clear(&konst_20321);\
konst_20321.val.byte_array[0] = 49;\
bit_vector_bitsel( &(op), &(konst_20321), &(BITSEL_u64_u1_20322));\
bit_vector_concatenate( &(BITSEL_u64_u1_20319), &(BITSEL_u64_u1_20322), &(CONCAT_u1_u2_20323));\
bit_vector_clear(&konst_20325);\
konst_20325.val.byte_array[0] = 50;\
bit_vector_bitsel( &(op), &(konst_20325), &(BITSEL_u64_u1_20326));\
bit_vector_clear(&konst_20328);\
konst_20328.val.byte_array[0] = 51;\
bit_vector_bitsel( &(op), &(konst_20328), &(BITSEL_u64_u1_20329));\
bit_vector_concatenate( &(BITSEL_u64_u1_20326), &(BITSEL_u64_u1_20329), &(CONCAT_u1_u2_20330));\
bit_vector_concatenate( &(CONCAT_u1_u2_20323), &(CONCAT_u1_u2_20330), &(CONCAT_u2_u4_20331));\
bit_vector_clear(&konst_20333);\
konst_20333.val.byte_array[0] = 52;\
bit_vector_bitsel( &(op), &(konst_20333), &(BITSEL_u64_u1_20334));\
bit_vector_clear(&konst_20336);\
konst_20336.val.byte_array[0] = 53;\
bit_vector_bitsel( &(op), &(konst_20336), &(BITSEL_u64_u1_20337));\
bit_vector_concatenate( &(BITSEL_u64_u1_20334), &(BITSEL_u64_u1_20337), &(CONCAT_u1_u2_20338));\
bit_vector_clear(&konst_20340);\
konst_20340.val.byte_array[0] = 54;\
bit_vector_bitsel( &(op), &(konst_20340), &(BITSEL_u64_u1_20341));\
bit_vector_clear(&konst_20343);\
konst_20343.val.byte_array[0] = 55;\
bit_vector_bitsel( &(op), &(konst_20343), &(BITSEL_u64_u1_20344));\
bit_vector_concatenate( &(BITSEL_u64_u1_20341), &(BITSEL_u64_u1_20344), &(CONCAT_u1_u2_20345));\
bit_vector_concatenate( &(CONCAT_u1_u2_20338), &(CONCAT_u1_u2_20345), &(CONCAT_u2_u4_20346));\
bit_vector_concatenate( &(CONCAT_u2_u4_20331), &(CONCAT_u2_u4_20346), &(CONCAT_u4_u8_20347));\
bit_vector_clear(&konst_20349);\
konst_20349.val.byte_array[0] = 56;\
bit_vector_bitsel( &(op), &(konst_20349), &(BITSEL_u64_u1_20350));\
bit_vector_clear(&konst_20352);\
konst_20352.val.byte_array[0] = 57;\
bit_vector_bitsel( &(op), &(konst_20352), &(BITSEL_u64_u1_20353));\
bit_vector_concatenate( &(BITSEL_u64_u1_20350), &(BITSEL_u64_u1_20353), &(CONCAT_u1_u2_20354));\
bit_vector_clear(&konst_20356);\
konst_20356.val.byte_array[0] = 58;\
bit_vector_bitsel( &(op), &(konst_20356), &(BITSEL_u64_u1_20357));\
bit_vector_clear(&konst_20359);\
konst_20359.val.byte_array[0] = 59;\
bit_vector_bitsel( &(op), &(konst_20359), &(BITSEL_u64_u1_20360));\
bit_vector_concatenate( &(BITSEL_u64_u1_20357), &(BITSEL_u64_u1_20360), &(CONCAT_u1_u2_20361));\
bit_vector_concatenate( &(CONCAT_u1_u2_20354), &(CONCAT_u1_u2_20361), &(CONCAT_u2_u4_20362));\
bit_vector_clear(&konst_20364);\
konst_20364.val.byte_array[0] = 60;\
bit_vector_bitsel( &(op), &(konst_20364), &(BITSEL_u64_u1_20365));\
bit_vector_clear(&konst_20367);\
konst_20367.val.byte_array[0] = 61;\
bit_vector_bitsel( &(op), &(konst_20367), &(BITSEL_u64_u1_20368));\
bit_vector_concatenate( &(BITSEL_u64_u1_20365), &(BITSEL_u64_u1_20368), &(CONCAT_u1_u2_20369));\
bit_vector_clear(&konst_20371);\
konst_20371.val.byte_array[0] = 62;\
bit_vector_bitsel( &(op), &(konst_20371), &(BITSEL_u64_u1_20372));\
bit_vector_clear(&konst_20374);\
konst_20374.val.byte_array[0] = 63;\
bit_vector_bitsel( &(op), &(konst_20374), &(BITSEL_u64_u1_20375));\
bit_vector_concatenate( &(BITSEL_u64_u1_20372), &(BITSEL_u64_u1_20375), &(CONCAT_u1_u2_20376));\
bit_vector_concatenate( &(CONCAT_u1_u2_20369), &(CONCAT_u1_u2_20376), &(CONCAT_u2_u4_20377));\
bit_vector_concatenate( &(CONCAT_u2_u4_20362), &(CONCAT_u2_u4_20377), &(CONCAT_u4_u8_20378));\
bit_vector_concatenate( &(CONCAT_u4_u8_20347), &(CONCAT_u4_u8_20378), &(CONCAT_u8_u16_20379));\
bit_vector_concatenate( &(CONCAT_u8_u16_20316), &(CONCAT_u8_u16_20379), &(CONCAT_u16_u32_20380));\
bit_vector_concatenate( &(CONCAT_u16_u32_20253), &(CONCAT_u16_u32_20380), &(CONCAT_u32_u64_20381));\
bit_vector_cast_to_bit_vector(0, &(reversed_input), &(CONCAT_u32_u64_20381));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20388_c_macro_ __declare_static_bit_vector(MUX_20387,64);\
if (has_undefined_bit(&left)) {fprintf(stderr, "Error: variable left has undefined value (%s) at test point.\n", to_string(&left));assert(0);} \
if(bit_vector_to_uint64(0, &left)){bit_vector_cast_to_bit_vector(0, &(MUX_20387), &(op));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20387), &(reversed_input));\
}bit_vector_cast_to_bit_vector(0, &(level_5_no_shift), &(MUX_20387));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20394_c_macro_ __declare_static_bit_vector(slice_20391,32);\
__declare_static_bit_vector(CONCAT_u32_u64_20393,64);\
bit_vector_slice(&(level_5_no_shift), &(slice_20391), 0);\
bit_vector_concatenate( &(slice_20391), &(ZERO_32), &(CONCAT_u32_u64_20393));\
bit_vector_cast_to_bit_vector(0, &(level_5_shift), &(CONCAT_u32_u64_20393));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20400_c_macro_ __declare_static_bit_vector(MUX_20399,64);\
if (has_undefined_bit(&l5)) {fprintf(stderr, "Error: variable l5 has undefined value (%s) at test point.\n", to_string(&l5));assert(0);} \
if(bit_vector_to_uint64(0, &l5)){bit_vector_cast_to_bit_vector(0, &(MUX_20399), &(level_5_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20399), &(level_5_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_5_output), &(MUX_20399));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20403_c_macro_ bit_vector_cast_to_bit_vector(0, &(level_4_no_shift), &(level_5_output));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20409_c_macro_ __declare_static_bit_vector(slice_20406,48);\
__declare_static_bit_vector(CONCAT_u48_u64_20408,64);\
bit_vector_slice(&(level_5_output), &(slice_20406), 0);\
bit_vector_concatenate( &(slice_20406), &(ZERO_16), &(CONCAT_u48_u64_20408));\
bit_vector_cast_to_bit_vector(0, &(level_4_shift), &(CONCAT_u48_u64_20408));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20415_c_macro_ __declare_static_bit_vector(MUX_20414,64);\
if (has_undefined_bit(&l4)) {fprintf(stderr, "Error: variable l4 has undefined value (%s) at test point.\n", to_string(&l4));assert(0);} \
if(bit_vector_to_uint64(0, &l4)){bit_vector_cast_to_bit_vector(0, &(MUX_20414), &(level_4_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20414), &(level_4_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_4_output), &(MUX_20414));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20418_c_macro_ bit_vector_cast_to_bit_vector(0, &(level_3_no_shift), &(level_4_output));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20424_c_macro_ __declare_static_bit_vector(slice_20421,56);\
__declare_static_bit_vector(CONCAT_u56_u64_20423,64);\
bit_vector_slice(&(level_4_output), &(slice_20421), 0);\
bit_vector_concatenate( &(slice_20421), &(ZERO_8), &(CONCAT_u56_u64_20423));\
bit_vector_cast_to_bit_vector(0, &(level_3_shift), &(CONCAT_u56_u64_20423));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20430_c_macro_ __declare_static_bit_vector(MUX_20429,64);\
if (has_undefined_bit(&l3)) {fprintf(stderr, "Error: variable l3 has undefined value (%s) at test point.\n", to_string(&l3));assert(0);} \
if(bit_vector_to_uint64(0, &l3)){bit_vector_cast_to_bit_vector(0, &(MUX_20429), &(level_3_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20429), &(level_3_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_3_output), &(MUX_20429));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20433_c_macro_ bit_vector_cast_to_bit_vector(0, &(level_2_no_shift), &(level_3_output));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20439_c_macro_ __declare_static_bit_vector(slice_20436,60);\
__declare_static_bit_vector(CONCAT_u60_u64_20438,64);\
bit_vector_slice(&(level_3_output), &(slice_20436), 0);\
bit_vector_concatenate( &(slice_20436), &(ZERO_4), &(CONCAT_u60_u64_20438));\
bit_vector_cast_to_bit_vector(0, &(level_2_shift), &(CONCAT_u60_u64_20438));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20445_c_macro_ __declare_static_bit_vector(MUX_20444,64);\
if (has_undefined_bit(&l2)) {fprintf(stderr, "Error: variable l2 has undefined value (%s) at test point.\n", to_string(&l2));assert(0);} \
if(bit_vector_to_uint64(0, &l2)){bit_vector_cast_to_bit_vector(0, &(MUX_20444), &(level_2_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20444), &(level_2_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_2_output), &(MUX_20444));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20448_c_macro_ bit_vector_cast_to_bit_vector(0, &(level_1_no_shift), &(level_2_output));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20454_c_macro_ __declare_static_bit_vector(slice_20451,62);\
__declare_static_bit_vector(CONCAT_u62_u64_20453,64);\
bit_vector_slice(&(level_2_output), &(slice_20451), 0);\
bit_vector_concatenate( &(slice_20451), &(ZERO_2), &(CONCAT_u62_u64_20453));\
bit_vector_cast_to_bit_vector(0, &(level_1_shift), &(CONCAT_u62_u64_20453));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20460_c_macro_ __declare_static_bit_vector(MUX_20459,64);\
if (has_undefined_bit(&l1)) {fprintf(stderr, "Error: variable l1 has undefined value (%s) at test point.\n", to_string(&l1));assert(0);} \
if(bit_vector_to_uint64(0, &l1)){bit_vector_cast_to_bit_vector(0, &(MUX_20459), &(level_1_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20459), &(level_1_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_1_output), &(MUX_20459));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20463_c_macro_ bit_vector_cast_to_bit_vector(0, &(level_0_no_shift), &(level_1_output));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20469_c_macro_ __declare_static_bit_vector(slice_20466,63);\
__declare_static_bit_vector(CONCAT_u63_u64_20468,64);\
bit_vector_slice(&(level_1_output), &(slice_20466), 0);\
bit_vector_concatenate( &(slice_20466), &(ZERO_1), &(CONCAT_u63_u64_20468));\
bit_vector_cast_to_bit_vector(0, &(level_0_shift), &(CONCAT_u63_u64_20468));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20475_c_macro_ __declare_static_bit_vector(MUX_20474,64);\
if (has_undefined_bit(&l0)) {fprintf(stderr, "Error: variable l0 has undefined value (%s) at test point.\n", to_string(&l0));assert(0);} \
if(bit_vector_to_uint64(0, &l0)){bit_vector_cast_to_bit_vector(0, &(MUX_20474), &(level_0_shift));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20474), &(level_0_no_shift));\
}bit_vector_cast_to_bit_vector(0, &(level_0_output), &(MUX_20474));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20732_c_macro_ __declare_static_bit_vector(konst_20478,64);\
bit_vector_clear(&konst_20478);\
__declare_static_bit_vector(BITSEL_u64_u1_20479,1);\
__declare_static_bit_vector(konst_20481,64);\
bit_vector_clear(&konst_20481);\
konst_20481.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u64_u1_20482,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20483,2);\
__declare_static_bit_vector(konst_20485,64);\
bit_vector_clear(&konst_20485);\
konst_20485.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u64_u1_20486,1);\
__declare_static_bit_vector(konst_20488,64);\
bit_vector_clear(&konst_20488);\
konst_20488.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u64_u1_20489,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20490,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20491,4);\
__declare_static_bit_vector(konst_20493,64);\
bit_vector_clear(&konst_20493);\
konst_20493.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u64_u1_20494,1);\
__declare_static_bit_vector(konst_20496,64);\
bit_vector_clear(&konst_20496);\
konst_20496.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u64_u1_20497,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20498,2);\
__declare_static_bit_vector(konst_20500,64);\
bit_vector_clear(&konst_20500);\
konst_20500.val.byte_array[0] = 6;\
__declare_static_bit_vector(BITSEL_u64_u1_20501,1);\
__declare_static_bit_vector(konst_20503,64);\
bit_vector_clear(&konst_20503);\
konst_20503.val.byte_array[0] = 7;\
__declare_static_bit_vector(BITSEL_u64_u1_20504,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20505,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20506,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20507,8);\
__declare_static_bit_vector(konst_20509,64);\
bit_vector_clear(&konst_20509);\
konst_20509.val.byte_array[0] = 8;\
__declare_static_bit_vector(BITSEL_u64_u1_20510,1);\
__declare_static_bit_vector(konst_20512,64);\
bit_vector_clear(&konst_20512);\
konst_20512.val.byte_array[0] = 9;\
__declare_static_bit_vector(BITSEL_u64_u1_20513,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20514,2);\
__declare_static_bit_vector(konst_20516,64);\
bit_vector_clear(&konst_20516);\
konst_20516.val.byte_array[0] = 10;\
__declare_static_bit_vector(BITSEL_u64_u1_20517,1);\
__declare_static_bit_vector(konst_20519,64);\
bit_vector_clear(&konst_20519);\
konst_20519.val.byte_array[0] = 11;\
__declare_static_bit_vector(BITSEL_u64_u1_20520,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20521,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20522,4);\
__declare_static_bit_vector(konst_20524,64);\
bit_vector_clear(&konst_20524);\
konst_20524.val.byte_array[0] = 12;\
__declare_static_bit_vector(BITSEL_u64_u1_20525,1);\
__declare_static_bit_vector(konst_20527,64);\
bit_vector_clear(&konst_20527);\
konst_20527.val.byte_array[0] = 13;\
__declare_static_bit_vector(BITSEL_u64_u1_20528,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20529,2);\
__declare_static_bit_vector(konst_20531,64);\
bit_vector_clear(&konst_20531);\
konst_20531.val.byte_array[0] = 14;\
__declare_static_bit_vector(BITSEL_u64_u1_20532,1);\
__declare_static_bit_vector(konst_20534,64);\
bit_vector_clear(&konst_20534);\
konst_20534.val.byte_array[0] = 15;\
__declare_static_bit_vector(BITSEL_u64_u1_20535,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20536,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20537,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20538,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20539,16);\
__declare_static_bit_vector(konst_20541,64);\
bit_vector_clear(&konst_20541);\
konst_20541.val.byte_array[0] = 16;\
__declare_static_bit_vector(BITSEL_u64_u1_20542,1);\
__declare_static_bit_vector(konst_20544,64);\
bit_vector_clear(&konst_20544);\
konst_20544.val.byte_array[0] = 17;\
__declare_static_bit_vector(BITSEL_u64_u1_20545,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20546,2);\
__declare_static_bit_vector(konst_20548,64);\
bit_vector_clear(&konst_20548);\
konst_20548.val.byte_array[0] = 18;\
__declare_static_bit_vector(BITSEL_u64_u1_20549,1);\
__declare_static_bit_vector(konst_20551,64);\
bit_vector_clear(&konst_20551);\
konst_20551.val.byte_array[0] = 19;\
__declare_static_bit_vector(BITSEL_u64_u1_20552,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20553,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20554,4);\
__declare_static_bit_vector(konst_20556,64);\
bit_vector_clear(&konst_20556);\
konst_20556.val.byte_array[0] = 20;\
__declare_static_bit_vector(BITSEL_u64_u1_20557,1);\
__declare_static_bit_vector(konst_20559,64);\
bit_vector_clear(&konst_20559);\
konst_20559.val.byte_array[0] = 21;\
__declare_static_bit_vector(BITSEL_u64_u1_20560,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20561,2);\
__declare_static_bit_vector(konst_20563,64);\
bit_vector_clear(&konst_20563);\
konst_20563.val.byte_array[0] = 22;\
__declare_static_bit_vector(BITSEL_u64_u1_20564,1);\
__declare_static_bit_vector(konst_20566,64);\
bit_vector_clear(&konst_20566);\
konst_20566.val.byte_array[0] = 23;\
__declare_static_bit_vector(BITSEL_u64_u1_20567,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20568,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20569,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20570,8);\
__declare_static_bit_vector(konst_20572,64);\
bit_vector_clear(&konst_20572);\
konst_20572.val.byte_array[0] = 24;\
__declare_static_bit_vector(BITSEL_u64_u1_20573,1);\
__declare_static_bit_vector(konst_20575,64);\
bit_vector_clear(&konst_20575);\
konst_20575.val.byte_array[0] = 25;\
__declare_static_bit_vector(BITSEL_u64_u1_20576,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20577,2);\
__declare_static_bit_vector(konst_20579,64);\
bit_vector_clear(&konst_20579);\
konst_20579.val.byte_array[0] = 26;\
__declare_static_bit_vector(BITSEL_u64_u1_20580,1);\
__declare_static_bit_vector(konst_20582,64);\
bit_vector_clear(&konst_20582);\
konst_20582.val.byte_array[0] = 27;\
__declare_static_bit_vector(BITSEL_u64_u1_20583,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20584,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20585,4);\
__declare_static_bit_vector(konst_20587,64);\
bit_vector_clear(&konst_20587);\
konst_20587.val.byte_array[0] = 28;\
__declare_static_bit_vector(BITSEL_u64_u1_20588,1);\
__declare_static_bit_vector(konst_20590,64);\
bit_vector_clear(&konst_20590);\
konst_20590.val.byte_array[0] = 29;\
__declare_static_bit_vector(BITSEL_u64_u1_20591,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20592,2);\
__declare_static_bit_vector(konst_20594,64);\
bit_vector_clear(&konst_20594);\
konst_20594.val.byte_array[0] = 30;\
__declare_static_bit_vector(BITSEL_u64_u1_20595,1);\
__declare_static_bit_vector(konst_20597,64);\
bit_vector_clear(&konst_20597);\
konst_20597.val.byte_array[0] = 31;\
__declare_static_bit_vector(BITSEL_u64_u1_20598,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20599,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20600,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20601,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20602,16);\
__declare_static_bit_vector(CONCAT_u16_u32_20603,32);\
__declare_static_bit_vector(konst_20605,64);\
bit_vector_clear(&konst_20605);\
konst_20605.val.byte_array[0] = 32;\
__declare_static_bit_vector(BITSEL_u64_u1_20606,1);\
__declare_static_bit_vector(konst_20608,64);\
bit_vector_clear(&konst_20608);\
konst_20608.val.byte_array[0] = 33;\
__declare_static_bit_vector(BITSEL_u64_u1_20609,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20610,2);\
__declare_static_bit_vector(konst_20612,64);\
bit_vector_clear(&konst_20612);\
konst_20612.val.byte_array[0] = 34;\
__declare_static_bit_vector(BITSEL_u64_u1_20613,1);\
__declare_static_bit_vector(konst_20615,64);\
bit_vector_clear(&konst_20615);\
konst_20615.val.byte_array[0] = 35;\
__declare_static_bit_vector(BITSEL_u64_u1_20616,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20617,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20618,4);\
__declare_static_bit_vector(konst_20620,64);\
bit_vector_clear(&konst_20620);\
konst_20620.val.byte_array[0] = 36;\
__declare_static_bit_vector(BITSEL_u64_u1_20621,1);\
__declare_static_bit_vector(konst_20623,64);\
bit_vector_clear(&konst_20623);\
konst_20623.val.byte_array[0] = 37;\
__declare_static_bit_vector(BITSEL_u64_u1_20624,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20625,2);\
__declare_static_bit_vector(konst_20627,64);\
bit_vector_clear(&konst_20627);\
konst_20627.val.byte_array[0] = 38;\
__declare_static_bit_vector(BITSEL_u64_u1_20628,1);\
__declare_static_bit_vector(konst_20630,64);\
bit_vector_clear(&konst_20630);\
konst_20630.val.byte_array[0] = 39;\
__declare_static_bit_vector(BITSEL_u64_u1_20631,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20632,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20633,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20634,8);\
__declare_static_bit_vector(konst_20636,64);\
bit_vector_clear(&konst_20636);\
konst_20636.val.byte_array[0] = 40;\
__declare_static_bit_vector(BITSEL_u64_u1_20637,1);\
__declare_static_bit_vector(konst_20639,64);\
bit_vector_clear(&konst_20639);\
konst_20639.val.byte_array[0] = 41;\
__declare_static_bit_vector(BITSEL_u64_u1_20640,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20641,2);\
__declare_static_bit_vector(konst_20643,64);\
bit_vector_clear(&konst_20643);\
konst_20643.val.byte_array[0] = 42;\
__declare_static_bit_vector(BITSEL_u64_u1_20644,1);\
__declare_static_bit_vector(konst_20646,64);\
bit_vector_clear(&konst_20646);\
konst_20646.val.byte_array[0] = 43;\
__declare_static_bit_vector(BITSEL_u64_u1_20647,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20648,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20649,4);\
__declare_static_bit_vector(konst_20651,64);\
bit_vector_clear(&konst_20651);\
konst_20651.val.byte_array[0] = 44;\
__declare_static_bit_vector(BITSEL_u64_u1_20652,1);\
__declare_static_bit_vector(konst_20654,64);\
bit_vector_clear(&konst_20654);\
konst_20654.val.byte_array[0] = 45;\
__declare_static_bit_vector(BITSEL_u64_u1_20655,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20656,2);\
__declare_static_bit_vector(konst_20658,64);\
bit_vector_clear(&konst_20658);\
konst_20658.val.byte_array[0] = 46;\
__declare_static_bit_vector(BITSEL_u64_u1_20659,1);\
__declare_static_bit_vector(konst_20661,64);\
bit_vector_clear(&konst_20661);\
konst_20661.val.byte_array[0] = 47;\
__declare_static_bit_vector(BITSEL_u64_u1_20662,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20663,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20664,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20665,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20666,16);\
__declare_static_bit_vector(konst_20668,64);\
bit_vector_clear(&konst_20668);\
konst_20668.val.byte_array[0] = 48;\
__declare_static_bit_vector(BITSEL_u64_u1_20669,1);\
__declare_static_bit_vector(konst_20671,64);\
bit_vector_clear(&konst_20671);\
konst_20671.val.byte_array[0] = 49;\
__declare_static_bit_vector(BITSEL_u64_u1_20672,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20673,2);\
__declare_static_bit_vector(konst_20675,64);\
bit_vector_clear(&konst_20675);\
konst_20675.val.byte_array[0] = 50;\
__declare_static_bit_vector(BITSEL_u64_u1_20676,1);\
__declare_static_bit_vector(konst_20678,64);\
bit_vector_clear(&konst_20678);\
konst_20678.val.byte_array[0] = 51;\
__declare_static_bit_vector(BITSEL_u64_u1_20679,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20680,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20681,4);\
__declare_static_bit_vector(konst_20683,64);\
bit_vector_clear(&konst_20683);\
konst_20683.val.byte_array[0] = 52;\
__declare_static_bit_vector(BITSEL_u64_u1_20684,1);\
__declare_static_bit_vector(konst_20686,64);\
bit_vector_clear(&konst_20686);\
konst_20686.val.byte_array[0] = 53;\
__declare_static_bit_vector(BITSEL_u64_u1_20687,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20688,2);\
__declare_static_bit_vector(konst_20690,64);\
bit_vector_clear(&konst_20690);\
konst_20690.val.byte_array[0] = 54;\
__declare_static_bit_vector(BITSEL_u64_u1_20691,1);\
__declare_static_bit_vector(konst_20693,64);\
bit_vector_clear(&konst_20693);\
konst_20693.val.byte_array[0] = 55;\
__declare_static_bit_vector(BITSEL_u64_u1_20694,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20695,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20696,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20697,8);\
__declare_static_bit_vector(konst_20699,64);\
bit_vector_clear(&konst_20699);\
konst_20699.val.byte_array[0] = 56;\
__declare_static_bit_vector(BITSEL_u64_u1_20700,1);\
__declare_static_bit_vector(konst_20702,64);\
bit_vector_clear(&konst_20702);\
konst_20702.val.byte_array[0] = 57;\
__declare_static_bit_vector(BITSEL_u64_u1_20703,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20704,2);\
__declare_static_bit_vector(konst_20706,64);\
bit_vector_clear(&konst_20706);\
konst_20706.val.byte_array[0] = 58;\
__declare_static_bit_vector(BITSEL_u64_u1_20707,1);\
__declare_static_bit_vector(konst_20709,64);\
bit_vector_clear(&konst_20709);\
konst_20709.val.byte_array[0] = 59;\
__declare_static_bit_vector(BITSEL_u64_u1_20710,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20711,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20712,4);\
__declare_static_bit_vector(konst_20714,64);\
bit_vector_clear(&konst_20714);\
konst_20714.val.byte_array[0] = 60;\
__declare_static_bit_vector(BITSEL_u64_u1_20715,1);\
__declare_static_bit_vector(konst_20717,64);\
bit_vector_clear(&konst_20717);\
konst_20717.val.byte_array[0] = 61;\
__declare_static_bit_vector(BITSEL_u64_u1_20718,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20719,2);\
__declare_static_bit_vector(konst_20721,64);\
bit_vector_clear(&konst_20721);\
konst_20721.val.byte_array[0] = 62;\
__declare_static_bit_vector(BITSEL_u64_u1_20722,1);\
__declare_static_bit_vector(konst_20724,64);\
bit_vector_clear(&konst_20724);\
konst_20724.val.byte_array[0] = 63;\
__declare_static_bit_vector(BITSEL_u64_u1_20725,1);\
__declare_static_bit_vector(CONCAT_u1_u2_20726,2);\
__declare_static_bit_vector(CONCAT_u2_u4_20727,4);\
__declare_static_bit_vector(CONCAT_u4_u8_20728,8);\
__declare_static_bit_vector(CONCAT_u8_u16_20729,16);\
__declare_static_bit_vector(CONCAT_u16_u32_20730,32);\
__declare_static_bit_vector(CONCAT_u32_u64_20731,64);\
bit_vector_clear(&konst_20478);\
bit_vector_bitsel( &(level_0_output), &(konst_20478), &(BITSEL_u64_u1_20479));\
bit_vector_clear(&konst_20481);\
konst_20481.val.byte_array[0] = 1;\
bit_vector_bitsel( &(level_0_output), &(konst_20481), &(BITSEL_u64_u1_20482));\
bit_vector_concatenate( &(BITSEL_u64_u1_20479), &(BITSEL_u64_u1_20482), &(CONCAT_u1_u2_20483));\
bit_vector_clear(&konst_20485);\
konst_20485.val.byte_array[0] = 2;\
bit_vector_bitsel( &(level_0_output), &(konst_20485), &(BITSEL_u64_u1_20486));\
bit_vector_clear(&konst_20488);\
konst_20488.val.byte_array[0] = 3;\
bit_vector_bitsel( &(level_0_output), &(konst_20488), &(BITSEL_u64_u1_20489));\
bit_vector_concatenate( &(BITSEL_u64_u1_20486), &(BITSEL_u64_u1_20489), &(CONCAT_u1_u2_20490));\
bit_vector_concatenate( &(CONCAT_u1_u2_20483), &(CONCAT_u1_u2_20490), &(CONCAT_u2_u4_20491));\
bit_vector_clear(&konst_20493);\
konst_20493.val.byte_array[0] = 4;\
bit_vector_bitsel( &(level_0_output), &(konst_20493), &(BITSEL_u64_u1_20494));\
bit_vector_clear(&konst_20496);\
konst_20496.val.byte_array[0] = 5;\
bit_vector_bitsel( &(level_0_output), &(konst_20496), &(BITSEL_u64_u1_20497));\
bit_vector_concatenate( &(BITSEL_u64_u1_20494), &(BITSEL_u64_u1_20497), &(CONCAT_u1_u2_20498));\
bit_vector_clear(&konst_20500);\
konst_20500.val.byte_array[0] = 6;\
bit_vector_bitsel( &(level_0_output), &(konst_20500), &(BITSEL_u64_u1_20501));\
bit_vector_clear(&konst_20503);\
konst_20503.val.byte_array[0] = 7;\
bit_vector_bitsel( &(level_0_output), &(konst_20503), &(BITSEL_u64_u1_20504));\
bit_vector_concatenate( &(BITSEL_u64_u1_20501), &(BITSEL_u64_u1_20504), &(CONCAT_u1_u2_20505));\
bit_vector_concatenate( &(CONCAT_u1_u2_20498), &(CONCAT_u1_u2_20505), &(CONCAT_u2_u4_20506));\
bit_vector_concatenate( &(CONCAT_u2_u4_20491), &(CONCAT_u2_u4_20506), &(CONCAT_u4_u8_20507));\
bit_vector_clear(&konst_20509);\
konst_20509.val.byte_array[0] = 8;\
bit_vector_bitsel( &(level_0_output), &(konst_20509), &(BITSEL_u64_u1_20510));\
bit_vector_clear(&konst_20512);\
konst_20512.val.byte_array[0] = 9;\
bit_vector_bitsel( &(level_0_output), &(konst_20512), &(BITSEL_u64_u1_20513));\
bit_vector_concatenate( &(BITSEL_u64_u1_20510), &(BITSEL_u64_u1_20513), &(CONCAT_u1_u2_20514));\
bit_vector_clear(&konst_20516);\
konst_20516.val.byte_array[0] = 10;\
bit_vector_bitsel( &(level_0_output), &(konst_20516), &(BITSEL_u64_u1_20517));\
bit_vector_clear(&konst_20519);\
konst_20519.val.byte_array[0] = 11;\
bit_vector_bitsel( &(level_0_output), &(konst_20519), &(BITSEL_u64_u1_20520));\
bit_vector_concatenate( &(BITSEL_u64_u1_20517), &(BITSEL_u64_u1_20520), &(CONCAT_u1_u2_20521));\
bit_vector_concatenate( &(CONCAT_u1_u2_20514), &(CONCAT_u1_u2_20521), &(CONCAT_u2_u4_20522));\
bit_vector_clear(&konst_20524);\
konst_20524.val.byte_array[0] = 12;\
bit_vector_bitsel( &(level_0_output), &(konst_20524), &(BITSEL_u64_u1_20525));\
bit_vector_clear(&konst_20527);\
konst_20527.val.byte_array[0] = 13;\
bit_vector_bitsel( &(level_0_output), &(konst_20527), &(BITSEL_u64_u1_20528));\
bit_vector_concatenate( &(BITSEL_u64_u1_20525), &(BITSEL_u64_u1_20528), &(CONCAT_u1_u2_20529));\
bit_vector_clear(&konst_20531);\
konst_20531.val.byte_array[0] = 14;\
bit_vector_bitsel( &(level_0_output), &(konst_20531), &(BITSEL_u64_u1_20532));\
bit_vector_clear(&konst_20534);\
konst_20534.val.byte_array[0] = 15;\
bit_vector_bitsel( &(level_0_output), &(konst_20534), &(BITSEL_u64_u1_20535));\
bit_vector_concatenate( &(BITSEL_u64_u1_20532), &(BITSEL_u64_u1_20535), &(CONCAT_u1_u2_20536));\
bit_vector_concatenate( &(CONCAT_u1_u2_20529), &(CONCAT_u1_u2_20536), &(CONCAT_u2_u4_20537));\
bit_vector_concatenate( &(CONCAT_u2_u4_20522), &(CONCAT_u2_u4_20537), &(CONCAT_u4_u8_20538));\
bit_vector_concatenate( &(CONCAT_u4_u8_20507), &(CONCAT_u4_u8_20538), &(CONCAT_u8_u16_20539));\
bit_vector_clear(&konst_20541);\
konst_20541.val.byte_array[0] = 16;\
bit_vector_bitsel( &(level_0_output), &(konst_20541), &(BITSEL_u64_u1_20542));\
bit_vector_clear(&konst_20544);\
konst_20544.val.byte_array[0] = 17;\
bit_vector_bitsel( &(level_0_output), &(konst_20544), &(BITSEL_u64_u1_20545));\
bit_vector_concatenate( &(BITSEL_u64_u1_20542), &(BITSEL_u64_u1_20545), &(CONCAT_u1_u2_20546));\
bit_vector_clear(&konst_20548);\
konst_20548.val.byte_array[0] = 18;\
bit_vector_bitsel( &(level_0_output), &(konst_20548), &(BITSEL_u64_u1_20549));\
bit_vector_clear(&konst_20551);\
konst_20551.val.byte_array[0] = 19;\
bit_vector_bitsel( &(level_0_output), &(konst_20551), &(BITSEL_u64_u1_20552));\
bit_vector_concatenate( &(BITSEL_u64_u1_20549), &(BITSEL_u64_u1_20552), &(CONCAT_u1_u2_20553));\
bit_vector_concatenate( &(CONCAT_u1_u2_20546), &(CONCAT_u1_u2_20553), &(CONCAT_u2_u4_20554));\
bit_vector_clear(&konst_20556);\
konst_20556.val.byte_array[0] = 20;\
bit_vector_bitsel( &(level_0_output), &(konst_20556), &(BITSEL_u64_u1_20557));\
bit_vector_clear(&konst_20559);\
konst_20559.val.byte_array[0] = 21;\
bit_vector_bitsel( &(level_0_output), &(konst_20559), &(BITSEL_u64_u1_20560));\
bit_vector_concatenate( &(BITSEL_u64_u1_20557), &(BITSEL_u64_u1_20560), &(CONCAT_u1_u2_20561));\
bit_vector_clear(&konst_20563);\
konst_20563.val.byte_array[0] = 22;\
bit_vector_bitsel( &(level_0_output), &(konst_20563), &(BITSEL_u64_u1_20564));\
bit_vector_clear(&konst_20566);\
konst_20566.val.byte_array[0] = 23;\
bit_vector_bitsel( &(level_0_output), &(konst_20566), &(BITSEL_u64_u1_20567));\
bit_vector_concatenate( &(BITSEL_u64_u1_20564), &(BITSEL_u64_u1_20567), &(CONCAT_u1_u2_20568));\
bit_vector_concatenate( &(CONCAT_u1_u2_20561), &(CONCAT_u1_u2_20568), &(CONCAT_u2_u4_20569));\
bit_vector_concatenate( &(CONCAT_u2_u4_20554), &(CONCAT_u2_u4_20569), &(CONCAT_u4_u8_20570));\
bit_vector_clear(&konst_20572);\
konst_20572.val.byte_array[0] = 24;\
bit_vector_bitsel( &(level_0_output), &(konst_20572), &(BITSEL_u64_u1_20573));\
bit_vector_clear(&konst_20575);\
konst_20575.val.byte_array[0] = 25;\
bit_vector_bitsel( &(level_0_output), &(konst_20575), &(BITSEL_u64_u1_20576));\
bit_vector_concatenate( &(BITSEL_u64_u1_20573), &(BITSEL_u64_u1_20576), &(CONCAT_u1_u2_20577));\
bit_vector_clear(&konst_20579);\
konst_20579.val.byte_array[0] = 26;\
bit_vector_bitsel( &(level_0_output), &(konst_20579), &(BITSEL_u64_u1_20580));\
bit_vector_clear(&konst_20582);\
konst_20582.val.byte_array[0] = 27;\
bit_vector_bitsel( &(level_0_output), &(konst_20582), &(BITSEL_u64_u1_20583));\
bit_vector_concatenate( &(BITSEL_u64_u1_20580), &(BITSEL_u64_u1_20583), &(CONCAT_u1_u2_20584));\
bit_vector_concatenate( &(CONCAT_u1_u2_20577), &(CONCAT_u1_u2_20584), &(CONCAT_u2_u4_20585));\
bit_vector_clear(&konst_20587);\
konst_20587.val.byte_array[0] = 28;\
bit_vector_bitsel( &(level_0_output), &(konst_20587), &(BITSEL_u64_u1_20588));\
bit_vector_clear(&konst_20590);\
konst_20590.val.byte_array[0] = 29;\
bit_vector_bitsel( &(level_0_output), &(konst_20590), &(BITSEL_u64_u1_20591));\
bit_vector_concatenate( &(BITSEL_u64_u1_20588), &(BITSEL_u64_u1_20591), &(CONCAT_u1_u2_20592));\
bit_vector_clear(&konst_20594);\
konst_20594.val.byte_array[0] = 30;\
bit_vector_bitsel( &(level_0_output), &(konst_20594), &(BITSEL_u64_u1_20595));\
bit_vector_clear(&konst_20597);\
konst_20597.val.byte_array[0] = 31;\
bit_vector_bitsel( &(level_0_output), &(konst_20597), &(BITSEL_u64_u1_20598));\
bit_vector_concatenate( &(BITSEL_u64_u1_20595), &(BITSEL_u64_u1_20598), &(CONCAT_u1_u2_20599));\
bit_vector_concatenate( &(CONCAT_u1_u2_20592), &(CONCAT_u1_u2_20599), &(CONCAT_u2_u4_20600));\
bit_vector_concatenate( &(CONCAT_u2_u4_20585), &(CONCAT_u2_u4_20600), &(CONCAT_u4_u8_20601));\
bit_vector_concatenate( &(CONCAT_u4_u8_20570), &(CONCAT_u4_u8_20601), &(CONCAT_u8_u16_20602));\
bit_vector_concatenate( &(CONCAT_u8_u16_20539), &(CONCAT_u8_u16_20602), &(CONCAT_u16_u32_20603));\
bit_vector_clear(&konst_20605);\
konst_20605.val.byte_array[0] = 32;\
bit_vector_bitsel( &(level_0_output), &(konst_20605), &(BITSEL_u64_u1_20606));\
bit_vector_clear(&konst_20608);\
konst_20608.val.byte_array[0] = 33;\
bit_vector_bitsel( &(level_0_output), &(konst_20608), &(BITSEL_u64_u1_20609));\
bit_vector_concatenate( &(BITSEL_u64_u1_20606), &(BITSEL_u64_u1_20609), &(CONCAT_u1_u2_20610));\
bit_vector_clear(&konst_20612);\
konst_20612.val.byte_array[0] = 34;\
bit_vector_bitsel( &(level_0_output), &(konst_20612), &(BITSEL_u64_u1_20613));\
bit_vector_clear(&konst_20615);\
konst_20615.val.byte_array[0] = 35;\
bit_vector_bitsel( &(level_0_output), &(konst_20615), &(BITSEL_u64_u1_20616));\
bit_vector_concatenate( &(BITSEL_u64_u1_20613), &(BITSEL_u64_u1_20616), &(CONCAT_u1_u2_20617));\
bit_vector_concatenate( &(CONCAT_u1_u2_20610), &(CONCAT_u1_u2_20617), &(CONCAT_u2_u4_20618));\
bit_vector_clear(&konst_20620);\
konst_20620.val.byte_array[0] = 36;\
bit_vector_bitsel( &(level_0_output), &(konst_20620), &(BITSEL_u64_u1_20621));\
bit_vector_clear(&konst_20623);\
konst_20623.val.byte_array[0] = 37;\
bit_vector_bitsel( &(level_0_output), &(konst_20623), &(BITSEL_u64_u1_20624));\
bit_vector_concatenate( &(BITSEL_u64_u1_20621), &(BITSEL_u64_u1_20624), &(CONCAT_u1_u2_20625));\
bit_vector_clear(&konst_20627);\
konst_20627.val.byte_array[0] = 38;\
bit_vector_bitsel( &(level_0_output), &(konst_20627), &(BITSEL_u64_u1_20628));\
bit_vector_clear(&konst_20630);\
konst_20630.val.byte_array[0] = 39;\
bit_vector_bitsel( &(level_0_output), &(konst_20630), &(BITSEL_u64_u1_20631));\
bit_vector_concatenate( &(BITSEL_u64_u1_20628), &(BITSEL_u64_u1_20631), &(CONCAT_u1_u2_20632));\
bit_vector_concatenate( &(CONCAT_u1_u2_20625), &(CONCAT_u1_u2_20632), &(CONCAT_u2_u4_20633));\
bit_vector_concatenate( &(CONCAT_u2_u4_20618), &(CONCAT_u2_u4_20633), &(CONCAT_u4_u8_20634));\
bit_vector_clear(&konst_20636);\
konst_20636.val.byte_array[0] = 40;\
bit_vector_bitsel( &(level_0_output), &(konst_20636), &(BITSEL_u64_u1_20637));\
bit_vector_clear(&konst_20639);\
konst_20639.val.byte_array[0] = 41;\
bit_vector_bitsel( &(level_0_output), &(konst_20639), &(BITSEL_u64_u1_20640));\
bit_vector_concatenate( &(BITSEL_u64_u1_20637), &(BITSEL_u64_u1_20640), &(CONCAT_u1_u2_20641));\
bit_vector_clear(&konst_20643);\
konst_20643.val.byte_array[0] = 42;\
bit_vector_bitsel( &(level_0_output), &(konst_20643), &(BITSEL_u64_u1_20644));\
bit_vector_clear(&konst_20646);\
konst_20646.val.byte_array[0] = 43;\
bit_vector_bitsel( &(level_0_output), &(konst_20646), &(BITSEL_u64_u1_20647));\
bit_vector_concatenate( &(BITSEL_u64_u1_20644), &(BITSEL_u64_u1_20647), &(CONCAT_u1_u2_20648));\
bit_vector_concatenate( &(CONCAT_u1_u2_20641), &(CONCAT_u1_u2_20648), &(CONCAT_u2_u4_20649));\
bit_vector_clear(&konst_20651);\
konst_20651.val.byte_array[0] = 44;\
bit_vector_bitsel( &(level_0_output), &(konst_20651), &(BITSEL_u64_u1_20652));\
bit_vector_clear(&konst_20654);\
konst_20654.val.byte_array[0] = 45;\
bit_vector_bitsel( &(level_0_output), &(konst_20654), &(BITSEL_u64_u1_20655));\
bit_vector_concatenate( &(BITSEL_u64_u1_20652), &(BITSEL_u64_u1_20655), &(CONCAT_u1_u2_20656));\
bit_vector_clear(&konst_20658);\
konst_20658.val.byte_array[0] = 46;\
bit_vector_bitsel( &(level_0_output), &(konst_20658), &(BITSEL_u64_u1_20659));\
bit_vector_clear(&konst_20661);\
konst_20661.val.byte_array[0] = 47;\
bit_vector_bitsel( &(level_0_output), &(konst_20661), &(BITSEL_u64_u1_20662));\
bit_vector_concatenate( &(BITSEL_u64_u1_20659), &(BITSEL_u64_u1_20662), &(CONCAT_u1_u2_20663));\
bit_vector_concatenate( &(CONCAT_u1_u2_20656), &(CONCAT_u1_u2_20663), &(CONCAT_u2_u4_20664));\
bit_vector_concatenate( &(CONCAT_u2_u4_20649), &(CONCAT_u2_u4_20664), &(CONCAT_u4_u8_20665));\
bit_vector_concatenate( &(CONCAT_u4_u8_20634), &(CONCAT_u4_u8_20665), &(CONCAT_u8_u16_20666));\
bit_vector_clear(&konst_20668);\
konst_20668.val.byte_array[0] = 48;\
bit_vector_bitsel( &(level_0_output), &(konst_20668), &(BITSEL_u64_u1_20669));\
bit_vector_clear(&konst_20671);\
konst_20671.val.byte_array[0] = 49;\
bit_vector_bitsel( &(level_0_output), &(konst_20671), &(BITSEL_u64_u1_20672));\
bit_vector_concatenate( &(BITSEL_u64_u1_20669), &(BITSEL_u64_u1_20672), &(CONCAT_u1_u2_20673));\
bit_vector_clear(&konst_20675);\
konst_20675.val.byte_array[0] = 50;\
bit_vector_bitsel( &(level_0_output), &(konst_20675), &(BITSEL_u64_u1_20676));\
bit_vector_clear(&konst_20678);\
konst_20678.val.byte_array[0] = 51;\
bit_vector_bitsel( &(level_0_output), &(konst_20678), &(BITSEL_u64_u1_20679));\
bit_vector_concatenate( &(BITSEL_u64_u1_20676), &(BITSEL_u64_u1_20679), &(CONCAT_u1_u2_20680));\
bit_vector_concatenate( &(CONCAT_u1_u2_20673), &(CONCAT_u1_u2_20680), &(CONCAT_u2_u4_20681));\
bit_vector_clear(&konst_20683);\
konst_20683.val.byte_array[0] = 52;\
bit_vector_bitsel( &(level_0_output), &(konst_20683), &(BITSEL_u64_u1_20684));\
bit_vector_clear(&konst_20686);\
konst_20686.val.byte_array[0] = 53;\
bit_vector_bitsel( &(level_0_output), &(konst_20686), &(BITSEL_u64_u1_20687));\
bit_vector_concatenate( &(BITSEL_u64_u1_20684), &(BITSEL_u64_u1_20687), &(CONCAT_u1_u2_20688));\
bit_vector_clear(&konst_20690);\
konst_20690.val.byte_array[0] = 54;\
bit_vector_bitsel( &(level_0_output), &(konst_20690), &(BITSEL_u64_u1_20691));\
bit_vector_clear(&konst_20693);\
konst_20693.val.byte_array[0] = 55;\
bit_vector_bitsel( &(level_0_output), &(konst_20693), &(BITSEL_u64_u1_20694));\
bit_vector_concatenate( &(BITSEL_u64_u1_20691), &(BITSEL_u64_u1_20694), &(CONCAT_u1_u2_20695));\
bit_vector_concatenate( &(CONCAT_u1_u2_20688), &(CONCAT_u1_u2_20695), &(CONCAT_u2_u4_20696));\
bit_vector_concatenate( &(CONCAT_u2_u4_20681), &(CONCAT_u2_u4_20696), &(CONCAT_u4_u8_20697));\
bit_vector_clear(&konst_20699);\
konst_20699.val.byte_array[0] = 56;\
bit_vector_bitsel( &(level_0_output), &(konst_20699), &(BITSEL_u64_u1_20700));\
bit_vector_clear(&konst_20702);\
konst_20702.val.byte_array[0] = 57;\
bit_vector_bitsel( &(level_0_output), &(konst_20702), &(BITSEL_u64_u1_20703));\
bit_vector_concatenate( &(BITSEL_u64_u1_20700), &(BITSEL_u64_u1_20703), &(CONCAT_u1_u2_20704));\
bit_vector_clear(&konst_20706);\
konst_20706.val.byte_array[0] = 58;\
bit_vector_bitsel( &(level_0_output), &(konst_20706), &(BITSEL_u64_u1_20707));\
bit_vector_clear(&konst_20709);\
konst_20709.val.byte_array[0] = 59;\
bit_vector_bitsel( &(level_0_output), &(konst_20709), &(BITSEL_u64_u1_20710));\
bit_vector_concatenate( &(BITSEL_u64_u1_20707), &(BITSEL_u64_u1_20710), &(CONCAT_u1_u2_20711));\
bit_vector_concatenate( &(CONCAT_u1_u2_20704), &(CONCAT_u1_u2_20711), &(CONCAT_u2_u4_20712));\
bit_vector_clear(&konst_20714);\
konst_20714.val.byte_array[0] = 60;\
bit_vector_bitsel( &(level_0_output), &(konst_20714), &(BITSEL_u64_u1_20715));\
bit_vector_clear(&konst_20717);\
konst_20717.val.byte_array[0] = 61;\
bit_vector_bitsel( &(level_0_output), &(konst_20717), &(BITSEL_u64_u1_20718));\
bit_vector_concatenate( &(BITSEL_u64_u1_20715), &(BITSEL_u64_u1_20718), &(CONCAT_u1_u2_20719));\
bit_vector_clear(&konst_20721);\
konst_20721.val.byte_array[0] = 62;\
bit_vector_bitsel( &(level_0_output), &(konst_20721), &(BITSEL_u64_u1_20722));\
bit_vector_clear(&konst_20724);\
konst_20724.val.byte_array[0] = 63;\
bit_vector_bitsel( &(level_0_output), &(konst_20724), &(BITSEL_u64_u1_20725));\
bit_vector_concatenate( &(BITSEL_u64_u1_20722), &(BITSEL_u64_u1_20725), &(CONCAT_u1_u2_20726));\
bit_vector_concatenate( &(CONCAT_u1_u2_20719), &(CONCAT_u1_u2_20726), &(CONCAT_u2_u4_20727));\
bit_vector_concatenate( &(CONCAT_u2_u4_20712), &(CONCAT_u2_u4_20727), &(CONCAT_u4_u8_20728));\
bit_vector_concatenate( &(CONCAT_u4_u8_20697), &(CONCAT_u4_u8_20728), &(CONCAT_u8_u16_20729));\
bit_vector_concatenate( &(CONCAT_u8_u16_20666), &(CONCAT_u8_u16_20729), &(CONCAT_u16_u32_20730));\
bit_vector_concatenate( &(CONCAT_u16_u32_20603), &(CONCAT_u16_u32_20730), &(CONCAT_u32_u64_20731));\
bit_vector_cast_to_bit_vector(0, &(reversed_output), &(CONCAT_u32_u64_20731));\
;

#define fpunit_exec_exec__shifter_left_right_64_assign_stmt_20738_c_macro_ __declare_static_bit_vector(MUX_20737,64);\
if (has_undefined_bit(&left)) {fprintf(stderr, "Error: variable left has undefined value (%s) at test point.\n", to_string(&left));assert(0);} \
if(bit_vector_to_uint64(0, &left)){bit_vector_cast_to_bit_vector(0, &(MUX_20737), &(level_0_output));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20737), &(reversed_output));\
}bit_vector_cast_to_bit_vector(0, &(shifted), &(MUX_20737));\
;

#define fpunit_exec_exec__shifter_left_right_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pshifted)), &(shifted));\
;

#define fpunit_exec_exec__short_divide_24_core_inner_inarg_prep_macro__ __declare_static_bit_vector(divisorx1,26);\
bit_vector_cast_to_bit_vector(0, &(divisorx1), &((*__pdivisorx1)));\
__declare_static_bit_vector(divisorx2,26);\
bit_vector_cast_to_bit_vector(0, &(divisorx2), &((*__pdivisorx2)));\
__declare_static_bit_vector(divisorx3,26);\
bit_vector_cast_to_bit_vector(0, &(divisorx3), &((*__pdivisorx3)));\
__declare_static_bit_vector(P,26);\
bit_vector_cast_to_bit_vector(0, &(P), &((*__pP)));\
__declare_static_bit_vector(A,30);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(P_shift,26);\
__declare_static_bit_vector(A_shift,30);\
__declare_static_bit_vector(P_23_0,24);\
__declare_static_bit_vector(A_29_28,2);\
__declare_static_bit_vector(P_shift_start,26);\
__declare_static_bit_vector(cond_greater_than_B,1);\
__declare_static_bit_vector(cond_less_than_B,1);\
__declare_static_bit_vector(cond_greater_than_2B,1);\
__declare_static_bit_vector(cond_lesser_than_2B,1);\
__declare_static_bit_vector(cond_greater_than_3B,1);\
__declare_static_bit_vector(cond_lesser_than_3B,1);\
__declare_static_bit_vector(condition_1,1);\
__declare_static_bit_vector(condition_0,1);\
__declare_static_bit_vector(diff_operand,26);\

#define fpunit_exec_exec__short_divide_24_core_assign_stmt_14273_c_macro_ __declare_static_bit_vector(slice_14272,24);\
bit_vector_slice(&(P), &(slice_14272), 0);\
bit_vector_cast_to_bit_vector(0, &(P_23_0), &(slice_14272));\
;

#define fpunit_exec_exec__short_divide_24_core_assign_stmt_14277_c_macro_ __declare_static_bit_vector(slice_14276,2);\
bit_vector_slice(&(A), &(slice_14276), 28);\
bit_vector_cast_to_bit_vector(0, &(A_29_28), &(slice_14276));\
;

#define fpunit_exec_exec__short_divide_24_core_assign_stmt_14282_c_macro_ __declare_static_bit_vector(CONCAT_u24_u26_14281,26);\
bit_vector_concatenate( &(P_23_0), &(A_29_28), &(CONCAT_u24_u26_14281));\
bit_vector_cast_to_bit_vector(0, &(P_shift_start), &(CONCAT_u24_u26_14281));\
;

#define fpunit_exec_exec__short_divide_24_core_call_stmt_14287_c_macro_ _fpunit_exec_exec_comparison_greater_equal_less_26_( &(P_shift_start),  &(divisorx1), &(cond_greater_than_B), &(cond_less_than_B));\
;

#define fpunit_exec_exec__short_divide_24_core_call_stmt_14292_c_macro_ _fpunit_exec_exec_comparison_greater_equal_less_26_( &(P_shift_start),  &(divisorx2), &(cond_greater_than_2B), &(cond_lesser_than_2B));\
;

#define fpunit_exec_exec__short_divide_24_core_call_stmt_14297_c_macro_ _fpunit_exec_exec_comparison_greater_equal_less_26_( &(P_shift_start),  &(divisorx3), &(cond_greater_than_3B), &(cond_lesser_than_3B));\
;

#define fpunit_exec_exec__short_divide_24_core_assign_stmt_14300_c_macro_ bit_vector_cast_to_bit_vector(0, &(condition_1), &(cond_greater_than_2B));\
;

#define fpunit_exec_exec__short_divide_24_core_assign_stmt_14309_c_macro_ __declare_static_bit_vector(AND_u1_u1_14304,1);\
__declare_static_bit_vector(AND_u1_u1_14307,1);\
__declare_static_bit_vector(OR_u1_u1_14308,1);\
bit_vector_and(&(cond_greater_than_2B), &(cond_greater_than_3B), &(AND_u1_u1_14304));\
bit_vector_and(&(cond_lesser_than_2B), &(cond_greater_than_B), &(AND_u1_u1_14307));\
bit_vector_or(&(AND_u1_u1_14304), &(AND_u1_u1_14307), &(OR_u1_u1_14308));\
bit_vector_cast_to_bit_vector(0, &(condition_0), &(OR_u1_u1_14308));\
;

#define fpunit_exec_exec__short_divide_24_core_assign_stmt_14321_c_macro_ __declare_static_bit_vector(MUX_14318,26);\
__declare_static_bit_vector(MUX_14319,26);\
__declare_static_bit_vector(MUX_14320,26);\
if (has_undefined_bit(&cond_greater_than_3B)) {fprintf(stderr, "Error: variable cond_greater_than_3B has undefined value (%s) at test point.\n", to_string(&cond_greater_than_3B));assert(0);} \
if(bit_vector_to_uint64(0, &cond_greater_than_3B)){bit_vector_cast_to_bit_vector(0, &(MUX_14320), &(divisorx3));\
}else {if (has_undefined_bit(&cond_greater_than_2B)) {fprintf(stderr, "Error: variable cond_greater_than_2B has undefined value (%s) at test point.\n", to_string(&cond_greater_than_2B));assert(0);} \
if(bit_vector_to_uint64(0, &cond_greater_than_2B)){bit_vector_cast_to_bit_vector(0, &(MUX_14319), &(divisorx2));\
}else {if (has_undefined_bit(&cond_greater_than_B)) {fprintf(stderr, "Error: variable cond_greater_than_B has undefined value (%s) at test point.\n", to_string(&cond_greater_than_B));assert(0);} \
if(bit_vector_to_uint64(0, &cond_greater_than_B)){bit_vector_cast_to_bit_vector(0, &(MUX_14318), &(divisorx1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14318), &(ZERO_26));\
}bit_vector_cast_to_bit_vector(0, &(MUX_14319), &(MUX_14318));\
}bit_vector_cast_to_bit_vector(0, &(MUX_14320), &(MUX_14319));\
}bit_vector_cast_to_bit_vector(0, &(diff_operand), &(MUX_14320));\
;

#define fpunit_exec_exec__short_divide_24_core_assign_stmt_14329_c_macro_ __declare_static_bit_vector(slice_14324,28);\
__declare_static_bit_vector(CONCAT_u28_u29_14326,29);\
__declare_static_bit_vector(CONCAT_u29_u30_14328,30);\
bit_vector_slice(&(A), &(slice_14324), 0);\
bit_vector_concatenate( &(slice_14324), &(condition_1), &(CONCAT_u28_u29_14326));\
bit_vector_concatenate( &(CONCAT_u28_u29_14326), &(condition_0), &(CONCAT_u29_u30_14328));\
bit_vector_cast_to_bit_vector(0, &(A_shift), &(CONCAT_u29_u30_14328));\
;

#define fpunit_exec_exec__short_divide_24_core_assign_stmt_14334_c_macro_ __declare_static_bit_vector(SUB_u26_u26_14333,26);\
bit_vector_minus( &(P_shift_start), &(diff_operand), &(SUB_u26_u26_14333));\
bit_vector_cast_to_bit_vector(0, &(P_shift), &(SUB_u26_u26_14333));\
;

#define fpunit_exec_exec__short_divide_24_core_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pP_shift)), &(P_shift));\
bit_vector_cast_to_bit_vector(0, &((*__pA_shift)), &(A_shift));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_inner_inarg_prep_macro__ __declare_static_bit_vector(dividend,24);\
bit_vector_cast_to_bit_vector(0, &(dividend), &((*__pdividend)));\
__declare_static_bit_vector(divisor_24,24);\
bit_vector_cast_to_bit_vector(0, &(divisor_24), &((*__pdivisor_24)));\
__declare_static_bit_vector(quo,29);\
__declare_static_bit_vector(divisorx2,26);\
__declare_static_bit_vector(divisorx1,26);\
__declare_static_bit_vector(divisorx3,26);\

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14345_c_macro_ __declare_static_bit_vector(CONCAT_u24_u25_14343,25);\
__declare_static_bit_vector(type_cast_14344,26);\
bit_vector_concatenate( &(divisor_24), &(ZERO_1), &(CONCAT_u24_u25_14343));\
bit_vector_bitcast_to_bit_vector( &(type_cast_14344), &(CONCAT_u24_u25_14343));\
bit_vector_cast_to_bit_vector(0, &(divisorx2), &(type_cast_14344));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14349_c_macro_ __declare_static_bit_vector(type_cast_14348,26);\
bit_vector_bitcast_to_bit_vector( &(type_cast_14348), &(divisor_24));\
bit_vector_cast_to_bit_vector(0, &(divisorx1), &(type_cast_14348));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14358_c_macro_ __declare_static_bit_vector(CONCAT_u24_u25_14353,25);\
__declare_static_bit_vector(type_cast_14354,26);\
__declare_static_bit_vector(type_cast_14356,26);\
__declare_static_bit_vector(ADD_u26_u26_14357,26);\
bit_vector_concatenate( &(divisor_24), &(ZERO_1), &(CONCAT_u24_u25_14353));\
bit_vector_bitcast_to_bit_vector( &(type_cast_14354), &(CONCAT_u24_u25_14353));\
bit_vector_bitcast_to_bit_vector( &(type_cast_14356), &(divisor_24));\
bit_vector_plus( &(type_cast_14354), &(type_cast_14356), &(ADD_u26_u26_14357));\
bit_vector_cast_to_bit_vector(0, &(divisorx3), &(ADD_u26_u26_14357));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_branch_block_stmt_14359_c_export_decl_macro_ __declare_static_bit_vector(A__next_A_0,30);\
__declare_static_bit_vector(N,6);\
__declare_static_bit_vector(P,26);\
__declare_static_bit_vector(A,30);\
__declare_static_bit_vector(P_shift_0,26);\
__declare_static_bit_vector(A_shift_0,30);\
__declare_static_bit_vector(next_P_0,26);\
__declare_static_bit_vector(next_A_0,30);\
__declare_static_bit_vector(NN_0,6);\
__declare_static_bit_vector(P_shift_1,26);\
__declare_static_bit_vector(A_shift_1,30);\
__declare_static_bit_vector(next_P_1,26);\
__declare_static_bit_vector(next_A_1,30);\
__declare_static_bit_vector(NN_1,6);\
__declare_static_bit_vector(continue_flag,1);\


#define fpunit_exec_exec__short_divide_24_pipelined_optimised_merge_stmt_14361_c_preamble_macro_ uint8_t merge_stmt_14361_entry_flag;\
merge_stmt_14361_entry_flag = do_while_entry_flag;\
goto merge_stmt_14361_run;\
merge_stmt_14361_run: ;\

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_phi_stmt_14362_c_macro_ __declare_static_bit_vector(konst_14364,6);\
bit_vector_clear(&konst_14364);\
__declare_static_bit_vector(type_cast_14365,6);\
bit_vector_clear(&type_cast_14365);\
if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(N), &(NN_1));\
}\
else {\
__declare_static_bit_vector(konst_14364,6);\
bit_vector_clear(&konst_14364);\
__declare_static_bit_vector(type_cast_14365,6);\
bit_vector_clear(&type_cast_14365);\
bit_vector_clear(&konst_14364);\
bit_vector_bitcast_to_bit_vector( &(type_cast_14365), &(konst_14364));\
bit_vector_cast_to_bit_vector(0, &(N), &(type_cast_14365));\
}\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_phi_stmt_14367_c_macro_ __declare_static_bit_vector(slice_14371,22);\
__declare_static_bit_vector(CONCAT_u4_u26_14372,26);\
if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(P), &(next_P_1));\
}\
else {\
__declare_static_bit_vector(slice_14371,22);\
__declare_static_bit_vector(CONCAT_u4_u26_14372,26);\
bit_vector_slice(&(dividend), &(slice_14371), 2);\
bit_vector_concatenate( &(ZERO_4), &(slice_14371), &(CONCAT_u4_u26_14372));\
bit_vector_cast_to_bit_vector(0, &(P), &(CONCAT_u4_u26_14372));\
}\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_phi_stmt_14374_c_macro_ __declare_static_bit_vector(slice_14377,2);\
__declare_static_bit_vector(CONCAT_u2_u30_14379,30);\
if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(A), &(next_A_1));\
}\
else {\
__declare_static_bit_vector(slice_14377,2);\
__declare_static_bit_vector(CONCAT_u2_u30_14379,30);\
bit_vector_slice(&(dividend), &(slice_14377), 0);\
bit_vector_concatenate( &(slice_14377), &(ZERO_28), &(CONCAT_u2_u30_14379));\
bit_vector_cast_to_bit_vector(0, &(A), &(CONCAT_u2_u30_14379));\
}\
;
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_merge_stmt_14361_c_postamble_macro_ merge_stmt_14361_entry_flag = 0;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_call_stmt_14389_c_macro_ _fpunit_exec_exec_short_divide_24_core_( &(divisorx1),  &(divisorx2),  &(divisorx3),  &(P),  &(A), &(P_shift_0), &(A_shift_0));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14392_c_macro_ bit_vector_cast_to_bit_vector(0, &(next_P_0), &(P_shift_0));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14395_c_macro_ bit_vector_cast_to_bit_vector(0, &(next_A_0), &(A_shift_0));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14400_c_macro_ __declare_static_bit_vector(konst_14398,6);\
bit_vector_clear(&konst_14398);\
konst_14398.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u6_u6_14399,6);\
bit_vector_clear(&konst_14398);\
konst_14398.val.byte_array[0] = 1;\
bit_vector_plus( &(N), &(konst_14398), &(ADD_u6_u6_14399));\
bit_vector_cast_to_bit_vector(0, &(NN_0), &(ADD_u6_u6_14399));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_call_stmt_14408_c_macro_ _fpunit_exec_exec_short_divide_24_core_( &(divisorx1),  &(divisorx2),  &(divisorx3),  &(next_P_0),  &(next_A_0), &(P_shift_1), &(A_shift_1));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14411_c_macro_ bit_vector_cast_to_bit_vector(0, &(next_P_1), &(P_shift_1));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14414_c_macro_ bit_vector_cast_to_bit_vector(0, &(next_A_1), &(A_shift_1));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14419_c_macro_ __declare_static_bit_vector(konst_14417,6);\
bit_vector_clear(&konst_14417);\
konst_14417.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u6_u6_14418,6);\
bit_vector_clear(&konst_14417);\
konst_14417.val.byte_array[0] = 1;\
bit_vector_plus( &(NN_0), &(konst_14417), &(ADD_u6_u6_14418));\
bit_vector_cast_to_bit_vector(0, &(NN_1), &(ADD_u6_u6_14418));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14424_c_macro_ __declare_static_bit_vector(konst_14422,6);\
bit_vector_clear(&konst_14422);\
konst_14422.val.byte_array[0] = 12;\
__declare_static_bit_vector(ULE_u6_u1_14423,1);\
bit_vector_clear(&konst_14422);\
konst_14422.val.byte_array[0] = 12;\
bit_vector_less_equal(0, &(N), &(konst_14422), &(ULE_u6_u1_14423));\
bit_vector_cast_to_bit_vector(0, &(continue_flag), &(ULE_u6_u1_14423));\
;
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_branch_block_stmt_14359_c_export_apply_macro_ bit_vector_cast_to_bit_vector(0, &(A__next_A_0), &(next_A_0));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_assign_stmt_14431_c_macro_ __declare_static_bit_vector(slice_14430,29);\
bit_vector_slice(&(A__next_A_0), &(slice_14430), 0);\
bit_vector_cast_to_bit_vector(0, &(quo), &(slice_14430));\
;

#define fpunit_exec_exec__short_divide_24_pipelined_optimised_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pquo)), &(quo));\
;

#define fpunit_exec_exec__short_divide_53_core_inner_inarg_prep_macro__ __declare_static_bit_vector(divisorx1,55);\
bit_vector_cast_to_bit_vector(0, &(divisorx1), &((*__pdivisorx1)));\
__declare_static_bit_vector(divisorx2,55);\
bit_vector_cast_to_bit_vector(0, &(divisorx2), &((*__pdivisorx2)));\
__declare_static_bit_vector(divisorx3,55);\
bit_vector_cast_to_bit_vector(0, &(divisorx3), &((*__pdivisorx3)));\
__declare_static_bit_vector(P,55);\
bit_vector_cast_to_bit_vector(0, &(P), &((*__pP)));\
__declare_static_bit_vector(A,106);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(next_P,55);\
__declare_static_bit_vector(next_A,106);\
__declare_static_bit_vector(P_52_0,53);\
__declare_static_bit_vector(A_105_104,2);\
__declare_static_bit_vector(P_shift_start,55);\
__declare_static_bit_vector(cond_greater_than_B,1);\
__declare_static_bit_vector(cond_less_than_B,1);\
__declare_static_bit_vector(cond_greater_than_2B,1);\
__declare_static_bit_vector(cond_lesser_than_2B,1);\
__declare_static_bit_vector(cond_greater_than_3B,1);\
__declare_static_bit_vector(cond_lesser_than_3B,1);\
__declare_static_bit_vector(condition_1,1);\
__declare_static_bit_vector(condition_0,1);\
__declare_static_bit_vector(diff_operand,55);\

#define fpunit_exec_exec__short_divide_53_core_assign_stmt_15350_c_macro_ __declare_static_bit_vector(slice_15349,53);\
bit_vector_slice(&(P), &(slice_15349), 0);\
bit_vector_cast_to_bit_vector(0, &(P_52_0), &(slice_15349));\
;

#define fpunit_exec_exec__short_divide_53_core_assign_stmt_15354_c_macro_ __declare_static_bit_vector(slice_15353,2);\
bit_vector_slice(&(A), &(slice_15353), 104);\
bit_vector_cast_to_bit_vector(0, &(A_105_104), &(slice_15353));\
;

#define fpunit_exec_exec__short_divide_53_core_assign_stmt_15359_c_macro_ __declare_static_bit_vector(CONCAT_u53_u55_15358,55);\
bit_vector_concatenate( &(P_52_0), &(A_105_104), &(CONCAT_u53_u55_15358));\
bit_vector_cast_to_bit_vector(0, &(P_shift_start), &(CONCAT_u53_u55_15358));\
;

#define fpunit_exec_exec__short_divide_53_core_call_stmt_15364_c_macro_ _fpunit_exec_exec_comparison_greater_equal_less_55_( &(P_shift_start),  &(divisorx1), &(cond_greater_than_B), &(cond_less_than_B));\
;

#define fpunit_exec_exec__short_divide_53_core_call_stmt_15369_c_macro_ _fpunit_exec_exec_comparison_greater_equal_less_55_( &(P_shift_start),  &(divisorx2), &(cond_greater_than_2B), &(cond_lesser_than_2B));\
;

#define fpunit_exec_exec__short_divide_53_core_call_stmt_15374_c_macro_ _fpunit_exec_exec_comparison_greater_equal_less_55_( &(P_shift_start),  &(divisorx3), &(cond_greater_than_3B), &(cond_lesser_than_3B));\
;

#define fpunit_exec_exec__short_divide_53_core_assign_stmt_15377_c_macro_ bit_vector_cast_to_bit_vector(0, &(condition_1), &(cond_greater_than_2B));\
;

#define fpunit_exec_exec__short_divide_53_core_assign_stmt_15386_c_macro_ __declare_static_bit_vector(AND_u1_u1_15381,1);\
__declare_static_bit_vector(AND_u1_u1_15384,1);\
__declare_static_bit_vector(OR_u1_u1_15385,1);\
bit_vector_and(&(cond_greater_than_2B), &(cond_greater_than_3B), &(AND_u1_u1_15381));\
bit_vector_and(&(cond_lesser_than_2B), &(cond_greater_than_B), &(AND_u1_u1_15384));\
bit_vector_or(&(AND_u1_u1_15381), &(AND_u1_u1_15384), &(OR_u1_u1_15385));\
bit_vector_cast_to_bit_vector(0, &(condition_0), &(OR_u1_u1_15385));\
;

#define fpunit_exec_exec__short_divide_53_core_assign_stmt_15398_c_macro_ __declare_static_bit_vector(MUX_15395,55);\
__declare_static_bit_vector(MUX_15396,55);\
__declare_static_bit_vector(MUX_15397,55);\
if (has_undefined_bit(&cond_greater_than_3B)) {fprintf(stderr, "Error: variable cond_greater_than_3B has undefined value (%s) at test point.\n", to_string(&cond_greater_than_3B));assert(0);} \
if(bit_vector_to_uint64(0, &cond_greater_than_3B)){bit_vector_cast_to_bit_vector(0, &(MUX_15397), &(divisorx3));\
}else {if (has_undefined_bit(&cond_greater_than_2B)) {fprintf(stderr, "Error: variable cond_greater_than_2B has undefined value (%s) at test point.\n", to_string(&cond_greater_than_2B));assert(0);} \
if(bit_vector_to_uint64(0, &cond_greater_than_2B)){bit_vector_cast_to_bit_vector(0, &(MUX_15396), &(divisorx2));\
}else {if (has_undefined_bit(&cond_greater_than_B)) {fprintf(stderr, "Error: variable cond_greater_than_B has undefined value (%s) at test point.\n", to_string(&cond_greater_than_B));assert(0);} \
if(bit_vector_to_uint64(0, &cond_greater_than_B)){bit_vector_cast_to_bit_vector(0, &(MUX_15395), &(divisorx1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_15395), &(ZERO_55));\
}bit_vector_cast_to_bit_vector(0, &(MUX_15396), &(MUX_15395));\
}bit_vector_cast_to_bit_vector(0, &(MUX_15397), &(MUX_15396));\
}bit_vector_cast_to_bit_vector(0, &(diff_operand), &(MUX_15397));\
;

#define fpunit_exec_exec__short_divide_53_core_assign_stmt_15403_c_macro_ __declare_static_bit_vector(SUB_u55_u55_15402,55);\
bit_vector_minus( &(P_shift_start), &(diff_operand), &(SUB_u55_u55_15402));\
bit_vector_cast_to_bit_vector(0, &(next_P), &(SUB_u55_u55_15402));\
;

#define fpunit_exec_exec__short_divide_53_core_assign_stmt_15411_c_macro_ __declare_static_bit_vector(slice_15406,104);\
__declare_static_bit_vector(CONCAT_u104_u105_15408,105);\
__declare_static_bit_vector(CONCAT_u105_u106_15410,106);\
bit_vector_slice(&(A), &(slice_15406), 0);\
bit_vector_concatenate( &(slice_15406), &(condition_1), &(CONCAT_u104_u105_15408));\
bit_vector_concatenate( &(CONCAT_u104_u105_15408), &(condition_0), &(CONCAT_u105_u106_15410));\
bit_vector_cast_to_bit_vector(0, &(next_A), &(CONCAT_u105_u106_15410));\
;

#define fpunit_exec_exec__short_divide_53_core_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pnext_P)), &(next_P));\
bit_vector_cast_to_bit_vector(0, &((*__pnext_A)), &(next_A));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_inner_inarg_prep_macro__ __declare_static_bit_vector(dividend,53);\
bit_vector_cast_to_bit_vector(0, &(dividend), &((*__pdividend)));\
__declare_static_bit_vector(divisor,53);\
bit_vector_cast_to_bit_vector(0, &(divisor), &((*__pdivisor)));\
__declare_static_bit_vector(quo,58);\
__declare_static_bit_vector(divisorx2,55);\
__declare_static_bit_vector(divisorx1,55);\
__declare_static_bit_vector(divisorx3,55);\

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15422_c_macro_ __declare_static_bit_vector(CONCAT_u53_u54_15420,54);\
__declare_static_bit_vector(type_cast_15421,55);\
bit_vector_concatenate( &(divisor), &(ZERO_1), &(CONCAT_u53_u54_15420));\
bit_vector_bitcast_to_bit_vector( &(type_cast_15421), &(CONCAT_u53_u54_15420));\
bit_vector_cast_to_bit_vector(0, &(divisorx2), &(type_cast_15421));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15426_c_macro_ __declare_static_bit_vector(type_cast_15425,55);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15425), &(divisor));\
bit_vector_cast_to_bit_vector(0, &(divisorx1), &(type_cast_15425));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15435_c_macro_ __declare_static_bit_vector(type_cast_15429,55);\
__declare_static_bit_vector(CONCAT_u53_u54_15432,54);\
__declare_static_bit_vector(type_cast_15433,55);\
__declare_static_bit_vector(ADD_u55_u55_15434,55);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15429), &(divisor));\
bit_vector_concatenate( &(divisor), &(ZERO_1), &(CONCAT_u53_u54_15432));\
bit_vector_bitcast_to_bit_vector( &(type_cast_15433), &(CONCAT_u53_u54_15432));\
bit_vector_plus( &(type_cast_15429), &(type_cast_15433), &(ADD_u55_u55_15434));\
bit_vector_cast_to_bit_vector(0, &(divisorx3), &(ADD_u55_u55_15434));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_branch_block_stmt_15436_c_export_decl_macro_ __declare_static_bit_vector(A__next_A_1,106);\
__declare_static_bit_vector(N,8);\
__declare_static_bit_vector(P,55);\
__declare_static_bit_vector(A,106);\
__declare_static_bit_vector(next_P_0_v,55);\
__declare_static_bit_vector(next_A_0_v,106);\
__declare_static_bit_vector(NN_0,8);\
__declare_static_bit_vector(next_P_0,55);\
__declare_static_bit_vector(next_A_0,106);\
__declare_static_bit_vector(next_P_1_v,55);\
__declare_static_bit_vector(next_A_1_v,106);\
__declare_static_bit_vector(NN_1,8);\
__declare_static_bit_vector(next_P_1,55);\
__declare_static_bit_vector(next_A_1,106);\
__declare_static_bit_vector(continue_flag,1);\


#define fpunit_exec_exec__short_divide_53_pipelined_optimised_merge_stmt_15438_c_preamble_macro_ uint8_t merge_stmt_15438_entry_flag;\
merge_stmt_15438_entry_flag = do_while_entry_flag;\
goto merge_stmt_15438_run;\
merge_stmt_15438_run: ;\

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_phi_stmt_15439_c_macro_ __declare_static_bit_vector(konst_15441,8);\
bit_vector_clear(&konst_15441);\
__declare_static_bit_vector(type_cast_15442,8);\
bit_vector_clear(&type_cast_15442);\
if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(N), &(NN_1));\
}\
else {\
__declare_static_bit_vector(konst_15441,8);\
bit_vector_clear(&konst_15441);\
__declare_static_bit_vector(type_cast_15442,8);\
bit_vector_clear(&type_cast_15442);\
bit_vector_clear(&konst_15441);\
bit_vector_bitcast_to_bit_vector( &(type_cast_15442), &(konst_15441));\
bit_vector_cast_to_bit_vector(0, &(N), &(type_cast_15442));\
}\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_phi_stmt_15444_c_macro_ __declare_static_bit_vector(slice_15448,51);\
__declare_static_bit_vector(CONCAT_u4_u55_15449,55);\
if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(P), &(next_P_1));\
}\
else {\
__declare_static_bit_vector(slice_15448,51);\
__declare_static_bit_vector(CONCAT_u4_u55_15449,55);\
bit_vector_slice(&(dividend), &(slice_15448), 2);\
bit_vector_concatenate( &(ZERO_4), &(slice_15448), &(CONCAT_u4_u55_15449));\
bit_vector_cast_to_bit_vector(0, &(P), &(CONCAT_u4_u55_15449));\
}\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_phi_stmt_15451_c_macro_ __declare_static_bit_vector(slice_15454,2);\
__declare_static_bit_vector(CONCAT_u2_u106_15456,106);\
if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(A), &(next_A_1));\
}\
else {\
__declare_static_bit_vector(slice_15454,2);\
__declare_static_bit_vector(CONCAT_u2_u106_15456,106);\
bit_vector_slice(&(dividend), &(slice_15454), 0);\
bit_vector_concatenate( &(slice_15454), &(ZERO_104), &(CONCAT_u2_u106_15456));\
bit_vector_cast_to_bit_vector(0, &(A), &(CONCAT_u2_u106_15456));\
}\
;
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_merge_stmt_15438_c_postamble_macro_ merge_stmt_15438_entry_flag = 0;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_call_stmt_15466_c_macro_ _fpunit_exec_exec_short_divide_53_core_( &(divisorx1),  &(divisorx2),  &(divisorx3),  &(P),  &(A), &(next_P_0_v), &(next_A_0_v));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15471_c_macro_ __declare_static_bit_vector(konst_15469,8);\
bit_vector_clear(&konst_15469);\
konst_15469.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u8_u8_15470,8);\
bit_vector_clear(&konst_15469);\
konst_15469.val.byte_array[0] = 1;\
bit_vector_plus( &(N), &(konst_15469), &(ADD_u8_u8_15470));\
bit_vector_cast_to_bit_vector(0, &(NN_0), &(ADD_u8_u8_15470));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15474_c_macro_ bit_vector_cast_to_bit_vector(0, &(next_P_0), &(next_P_0_v));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15477_c_macro_ bit_vector_cast_to_bit_vector(0, &(next_A_0), &(next_A_0_v));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_call_stmt_15485_c_macro_ _fpunit_exec_exec_short_divide_53_core_( &(divisorx1),  &(divisorx2),  &(divisorx3),  &(next_P_0),  &(next_A_0), &(next_P_1_v), &(next_A_1_v));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15490_c_macro_ __declare_static_bit_vector(konst_15488,8);\
bit_vector_clear(&konst_15488);\
konst_15488.val.byte_array[0] = 1;\
__declare_static_bit_vector(ADD_u8_u8_15489,8);\
bit_vector_clear(&konst_15488);\
konst_15488.val.byte_array[0] = 1;\
bit_vector_plus( &(NN_0), &(konst_15488), &(ADD_u8_u8_15489));\
bit_vector_cast_to_bit_vector(0, &(NN_1), &(ADD_u8_u8_15489));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15493_c_macro_ bit_vector_cast_to_bit_vector(0, &(next_P_1), &(next_P_1_v));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15496_c_macro_ bit_vector_cast_to_bit_vector(0, &(next_A_1), &(next_A_1_v));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15501_c_macro_ __declare_static_bit_vector(konst_15499,8);\
bit_vector_clear(&konst_15499);\
konst_15499.val.byte_array[0] = 26;\
__declare_static_bit_vector(ULE_u8_u1_15500,1);\
bit_vector_clear(&konst_15499);\
konst_15499.val.byte_array[0] = 26;\
bit_vector_less_equal(0, &(N), &(konst_15499), &(ULE_u8_u1_15500));\
bit_vector_cast_to_bit_vector(0, &(continue_flag), &(ULE_u8_u1_15500));\
;
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_branch_block_stmt_15436_c_export_apply_macro_ bit_vector_cast_to_bit_vector(0, &(A__next_A_1), &(next_A_1));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_assign_stmt_15508_c_macro_ __declare_static_bit_vector(slice_15507,58);\
bit_vector_slice(&(A__next_A_1), &(slice_15507), 1);\
bit_vector_cast_to_bit_vector(0, &(quo), &(slice_15507));\
;

#define fpunit_exec_exec__short_divide_53_pipelined_optimised_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pquo)), &(quo));\
;

#define fpunit_exec_exec__short_sqrt_32_inner_inarg_prep_macro__ __declare_static_bit_vector(X,32);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(root_X,32);\
__declare_static_bit_vector(start_index,8);\
bit_vector_clear(&start_index);\
start_index.val.byte_array[0] = 31;\
__declare_static_bit_vector(start_root_estimate,32);\
bit_vector_clear(&start_root_estimate);\
start_root_estimate.val.byte_array[3] = 128;\
__declare_static_bit_vector(start_residue,34);\
__declare_static_bit_vector(start_shifted_index_word,32);\
bit_vector_clear(&start_shifted_index_word);\
start_shifted_index_word.val.byte_array[3] = 128;\

#define fpunit_exec_exec__short_sqrt_32_stmt_15005_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_32_stmt_15005_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_32_stmt_15005_c_macro___print_counter,"X__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_stmt_15005_c_macro___print_counter,"X");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(X)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15008_c_macro_ __declare_static_bit_vector(konst_15007,8);\
bit_vector_clear(&konst_15007);\
konst_15007.val.byte_array[0] = 31;\
bit_vector_clear(&konst_15007);\
konst_15007.val.byte_array[0] = 31;\
bit_vector_cast_to_bit_vector(0, &(start_index), &(konst_15007));\
;

#define fpunit_exec_exec__short_sqrt_32_stmt_15010_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_32_stmt_15010_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_32_stmt_15010_c_macro___print_counter,"start_index__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_stmt_15010_c_macro___print_counter,"start_index");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(start_index)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15013_c_macro_ __declare_static_bit_vector(konst_15012,32);\
bit_vector_clear(&konst_15012);\
konst_15012.val.byte_array[3] = 128;\
bit_vector_clear(&konst_15012);\
konst_15012.val.byte_array[3] = 128;\
bit_vector_cast_to_bit_vector(0, &(start_root_estimate), &(konst_15012));\
;

#define fpunit_exec_exec__short_sqrt_32_stmt_15015_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_32_stmt_15015_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_32_stmt_15015_c_macro___print_counter,"start_root_estimate__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_stmt_15015_c_macro___print_counter,"start_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(start_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15026_c_macro_ __declare_static_bit_vector(slice_15018,2);\
__declare_static_bit_vector(konst_15019,2);\
bit_vector_clear(&konst_15019);\
konst_15019.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_u2_u2_15020,2);\
__declare_static_bit_vector(slice_15022,30);\
__declare_static_bit_vector(CONCAT_u2_u32_15023,32);\
__declare_static_bit_vector(CONCAT_u32_u34_15025,34);\
bit_vector_slice(&(X), &(slice_15018), 30);\
bit_vector_clear(&konst_15019);\
konst_15019.val.byte_array[0] = 1;\
bit_vector_minus( &(slice_15018), &(konst_15019), &(SUB_u2_u2_15020));\
bit_vector_slice(&(X), &(slice_15022), 0);\
bit_vector_concatenate( &(SUB_u2_u2_15020), &(slice_15022), &(CONCAT_u2_u32_15023));\
bit_vector_concatenate( &(CONCAT_u2_u32_15023), &(ZERO_2), &(CONCAT_u32_u34_15025));\
bit_vector_cast_to_bit_vector(0, &(start_residue), &(CONCAT_u32_u34_15025));\
;

#define fpunit_exec_exec__short_sqrt_32_stmt_15028_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_32_stmt_15028_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_32_stmt_15028_c_macro___print_counter,"start_residue__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_stmt_15028_c_macro___print_counter,"start_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(start_residue)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15031_c_macro_ __declare_static_bit_vector(konst_15030,32);\
bit_vector_clear(&konst_15030);\
konst_15030.val.byte_array[3] = 128;\
bit_vector_clear(&konst_15030);\
konst_15030.val.byte_array[3] = 128;\
bit_vector_cast_to_bit_vector(0, &(start_shifted_index_word), &(konst_15030));\
;

#define fpunit_exec_exec__short_sqrt_32_stmt_15033_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_32_stmt_15033_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_32_stmt_15033_c_macro___print_counter,"start_shifted_index_word__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_stmt_15033_c_macro___print_counter,"start_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(start_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_32_branch_block_stmt_15034_c_export_decl_macro_ __declare_static_bit_vector(root_estimate__next_root_estimate,32);\
__declare_static_bit_vector(sticky_out__sticky_flag,1);\
__declare_static_bit_vector(last_root_estimate,32);\
__declare_static_bit_vector(last_residue,34);\
__declare_static_bit_vector(last_shifted_index_word,32);\
__declare_static_bit_vector(last_index,8);\
__declare_static_bit_vector(next_last_index_0,8);\
__declare_static_bit_vector(next_last_index_1,8);\
__declare_static_bit_vector(next_last_index,8);\
__declare_static_bit_vector(continue_flag,1);\
__declare_static_bit_vector(next_root_estimate_0,32);\
__declare_static_bit_vector(next_last_residue_0,34);\
__declare_static_bit_vector(next_last_shifted_index_word_0,32);\
__declare_static_bit_vector(sticky_flag_0,1);\
__declare_static_bit_vector(next_root_estimate_1,32);\
__declare_static_bit_vector(next_last_residue_1,34);\
__declare_static_bit_vector(next_last_shifted_index_word_1,32);\
__declare_static_bit_vector(sticky_flag_1,1);\
__declare_static_bit_vector(next_root_estimate,32);\
__declare_static_bit_vector(next_last_residue,34);\
__declare_static_bit_vector(next_last_shifted_index_word,32);\
__declare_static_bit_vector(sticky_flag,1);\


#define fpunit_exec_exec__short_sqrt_32_merge_stmt_15036_c_preamble_macro_ uint8_t merge_stmt_15036_entry_flag;\
merge_stmt_15036_entry_flag = do_while_entry_flag;\
goto merge_stmt_15036_run;\
merge_stmt_15036_run: ;\

#define fpunit_exec_exec__short_sqrt_32_phi_stmt_15037_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(last_root_estimate), &(next_root_estimate));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(last_root_estimate), &(start_root_estimate));\
}\
;

#define fpunit_exec_exec__short_sqrt_32_phi_stmt_15041_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(last_residue), &(next_last_residue));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(last_residue), &(start_residue));\
}\
;

#define fpunit_exec_exec__short_sqrt_32_phi_stmt_15045_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(last_shifted_index_word), &(next_last_shifted_index_word));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(last_shifted_index_word), &(start_shifted_index_word));\
}\
;

#define fpunit_exec_exec__short_sqrt_32_phi_stmt_15049_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(last_index), &(next_last_index));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(last_index), &(start_index));\
}\
;
;

#define fpunit_exec_exec__short_sqrt_32_merge_stmt_15036_c_postamble_macro_ merge_stmt_15036_entry_flag = 0;

#define fpunit_exec_exec__short_sqrt_32_stmt_15058_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_32_stmt_15058_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_32_stmt_15058_c_macro___print_counter,"short_sqrt_32_status");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_stmt_15058_c_macro___print_counter,"last_index");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_index)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_stmt_15058_c_macro___print_counter,"last_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_stmt_15058_c_macro___print_counter,"last_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_stmt_15058_c_macro___print_counter,"last_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15068_c_macro_ __declare_static_bit_vector(konst_15061,8);\
bit_vector_clear(&konst_15061);\
__declare_static_bit_vector(UGT_u8_u1_15062,1);\
__declare_static_bit_vector(konst_15064,8);\
bit_vector_clear(&konst_15064);\
konst_15064.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_u8_u8_15065,8);\
__declare_static_bit_vector(konst_15066,8);\
bit_vector_clear(&konst_15066);\
__declare_static_bit_vector(MUX_15067,8);\
bit_vector_clear(&konst_15061);\
bit_vector_greater(0, &(last_index), &(konst_15061), &(UGT_u8_u1_15062));\
if (has_undefined_bit(&UGT_u8_u1_15062)) {fprintf(stderr, "Error: variable UGT_u8_u1_15062 has undefined value (%s) at test point.\n", to_string(&UGT_u8_u1_15062));assert(0);} \
if(bit_vector_to_uint64(0, &UGT_u8_u1_15062)){bit_vector_clear(&konst_15064);\
konst_15064.val.byte_array[0] = 1;\
bit_vector_minus( &(last_index), &(konst_15064), &(SUB_u8_u8_15065));\
bit_vector_cast_to_bit_vector(0, &(MUX_15067), &(SUB_u8_u8_15065));\
}else {bit_vector_clear(&konst_15066);\
bit_vector_cast_to_bit_vector(0, &(MUX_15067), &(konst_15066));\
}bit_vector_cast_to_bit_vector(0, &(next_last_index_0), &(MUX_15067));\
;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15078_c_macro_ __declare_static_bit_vector(konst_15071,8);\
bit_vector_clear(&konst_15071);\
konst_15071.val.byte_array[0] = 1;\
__declare_static_bit_vector(UGT_u8_u1_15072,1);\
__declare_static_bit_vector(konst_15074,8);\
bit_vector_clear(&konst_15074);\
konst_15074.val.byte_array[0] = 2;\
__declare_static_bit_vector(SUB_u8_u8_15075,8);\
__declare_static_bit_vector(konst_15076,8);\
bit_vector_clear(&konst_15076);\
__declare_static_bit_vector(MUX_15077,8);\
bit_vector_clear(&konst_15071);\
konst_15071.val.byte_array[0] = 1;\
bit_vector_greater(0, &(last_index), &(konst_15071), &(UGT_u8_u1_15072));\
if (has_undefined_bit(&UGT_u8_u1_15072)) {fprintf(stderr, "Error: variable UGT_u8_u1_15072 has undefined value (%s) at test point.\n", to_string(&UGT_u8_u1_15072));assert(0);} \
if(bit_vector_to_uint64(0, &UGT_u8_u1_15072)){bit_vector_clear(&konst_15074);\
konst_15074.val.byte_array[0] = 2;\
bit_vector_minus( &(last_index), &(konst_15074), &(SUB_u8_u8_15075));\
bit_vector_cast_to_bit_vector(0, &(MUX_15077), &(SUB_u8_u8_15075));\
}else {bit_vector_clear(&konst_15076);\
bit_vector_cast_to_bit_vector(0, &(MUX_15077), &(konst_15076));\
}bit_vector_cast_to_bit_vector(0, &(next_last_index_1), &(MUX_15077));\
;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15088_c_macro_ __declare_static_bit_vector(konst_15081,8);\
bit_vector_clear(&konst_15081);\
konst_15081.val.byte_array[0] = 2;\
__declare_static_bit_vector(UGT_u8_u1_15082,1);\
__declare_static_bit_vector(konst_15084,8);\
bit_vector_clear(&konst_15084);\
konst_15084.val.byte_array[0] = 3;\
__declare_static_bit_vector(SUB_u8_u8_15085,8);\
__declare_static_bit_vector(konst_15086,8);\
bit_vector_clear(&konst_15086);\
__declare_static_bit_vector(MUX_15087,8);\
bit_vector_clear(&konst_15081);\
konst_15081.val.byte_array[0] = 2;\
bit_vector_greater(0, &(last_index), &(konst_15081), &(UGT_u8_u1_15082));\
if (has_undefined_bit(&UGT_u8_u1_15082)) {fprintf(stderr, "Error: variable UGT_u8_u1_15082 has undefined value (%s) at test point.\n", to_string(&UGT_u8_u1_15082));assert(0);} \
if(bit_vector_to_uint64(0, &UGT_u8_u1_15082)){bit_vector_clear(&konst_15084);\
konst_15084.val.byte_array[0] = 3;\
bit_vector_minus( &(last_index), &(konst_15084), &(SUB_u8_u8_15085));\
bit_vector_cast_to_bit_vector(0, &(MUX_15087), &(SUB_u8_u8_15085));\
}else {bit_vector_clear(&konst_15086);\
bit_vector_cast_to_bit_vector(0, &(MUX_15087), &(konst_15086));\
}bit_vector_cast_to_bit_vector(0, &(next_last_index), &(MUX_15087));\
;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15097_c_macro_ __declare_static_bit_vector(konst_15091,8);\
bit_vector_clear(&konst_15091);\
__declare_static_bit_vector(UGT_u8_u1_15092,1);\
__declare_static_bit_vector(konst_15094,34);\
bit_vector_clear(&konst_15094);\
__declare_static_bit_vector(NEQ_u34_u1_15095,1);\
__declare_static_bit_vector(AND_u1_u1_15096,1);\
bit_vector_clear(&konst_15091);\
bit_vector_greater(0, &(next_last_index), &(konst_15091), &(UGT_u8_u1_15092));\
bit_vector_clear(&konst_15094);\
bit_vector_not_equal(0, &(last_residue), &(konst_15094), &NEQ_u34_u1_15095);\
bit_vector_and(&(UGT_u8_u1_15092), &(NEQ_u34_u1_15095), &(AND_u1_u1_15096));\
bit_vector_cast_to_bit_vector(0, &(continue_flag), &(AND_u1_u1_15096));\
;

#define fpunit_exec_exec__short_sqrt_32_call_stmt_15106_c_macro_ _fpunit_exec_exec_short_sqrt_32_core_( &(last_root_estimate),  &(last_residue),  &(last_shifted_index_word),  &(last_index), &(next_root_estimate_0), &(next_last_residue_0), &(next_last_shifted_index_word_0), &(sticky_flag_0));\
;

#define fpunit_exec_exec__short_sqrt_32_call_stmt_15115_c_macro_ _fpunit_exec_exec_short_sqrt_32_core_( &(next_root_estimate_0),  &(next_last_residue_0),  &(next_last_shifted_index_word_0),  &(next_last_index_0), &(next_root_estimate_1), &(next_last_residue_1), &(next_last_shifted_index_word_1), &(sticky_flag_1));\
;

#define fpunit_exec_exec__short_sqrt_32_call_stmt_15124_c_macro_ _fpunit_exec_exec_short_sqrt_32_core_( &(next_root_estimate_1),  &(next_last_residue_1),  &(next_last_shifted_index_word_1),  &(next_last_index_1), &(next_root_estimate), &(next_last_residue), &(next_last_shifted_index_word), &(sticky_flag));\
;
;

#define fpunit_exec_exec__short_sqrt_32_branch_block_stmt_15034_c_export_apply_macro_ bit_vector_cast_to_bit_vector(0, &(root_estimate__next_root_estimate), &(next_root_estimate));\
bit_vector_cast_to_bit_vector(0, &(sticky_out__sticky_flag), &(sticky_flag));\
;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15130_c_macro_ bit_vector_cast_to_bit_vector(0, &(sticky), &(sticky_out__sticky_flag));\
;

#define fpunit_exec_exec__short_sqrt_32_assign_stmt_15133_c_macro_ bit_vector_cast_to_bit_vector(0, &(root_X), &(root_estimate__next_root_estimate));\
;

#define fpunit_exec_exec__short_sqrt_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__psticky)), &(sticky));\
bit_vector_cast_to_bit_vector(0, &((*__proot_X)), &(root_X));\
;

#define fpunit_exec_exec__short_sqrt_32_core_inner_inarg_prep_macro__ __declare_static_bit_vector(last_root_estimate,32);\
bit_vector_cast_to_bit_vector(0, &(last_root_estimate), &((*__plast_root_estimate)));\
__declare_static_bit_vector(last_residue,34);\
bit_vector_cast_to_bit_vector(0, &(last_residue), &((*__plast_residue)));\
__declare_static_bit_vector(last_shifted_index_word,32);\
bit_vector_cast_to_bit_vector(0, &(last_shifted_index_word), &((*__plast_shifted_index_word)));\
__declare_static_bit_vector(last_index,8);\
bit_vector_cast_to_bit_vector(0, &(last_index), &((*__plast_index)));\
__declare_static_bit_vector(next_root_estimate,32);\
__declare_static_bit_vector(next_residue,34);\
__declare_static_bit_vector(next_last_shifted_index_word,32);\
__declare_static_bit_vector(sticky_flag,1);\
__declare_static_bit_vector(current_index,8);\
__declare_static_bit_vector(current_root_estimate,32);\
__declare_static_bit_vector(current_residue,34);\
__declare_static_bit_vector(current_residue_sign,1);\
__declare_static_bit_vector(next_residue_before_shift,34);\

#define fpunit_exec_exec__short_sqrt_32_core_assign_stmt_14950_c_macro_ __declare_static_bit_vector(konst_14943,8);\
bit_vector_clear(&konst_14943);\
__declare_static_bit_vector(UGT_u8_u1_14944,1);\
__declare_static_bit_vector(konst_14946,8);\
bit_vector_clear(&konst_14946);\
konst_14946.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_u8_u8_14947,8);\
__declare_static_bit_vector(konst_14948,8);\
bit_vector_clear(&konst_14948);\
__declare_static_bit_vector(MUX_14949,8);\
bit_vector_clear(&konst_14943);\
bit_vector_greater(0, &(last_index), &(konst_14943), &(UGT_u8_u1_14944));\
if (has_undefined_bit(&UGT_u8_u1_14944)) {fprintf(stderr, "Error: variable UGT_u8_u1_14944 has undefined value (%s) at test point.\n", to_string(&UGT_u8_u1_14944));assert(0);} \
if(bit_vector_to_uint64(0, &UGT_u8_u1_14944)){bit_vector_clear(&konst_14946);\
konst_14946.val.byte_array[0] = 1;\
bit_vector_minus( &(last_index), &(konst_14946), &(SUB_u8_u8_14947));\
bit_vector_cast_to_bit_vector(0, &(MUX_14949), &(SUB_u8_u8_14947));\
}else {bit_vector_clear(&konst_14948);\
bit_vector_cast_to_bit_vector(0, &(MUX_14949), &(konst_14948));\
}bit_vector_cast_to_bit_vector(0, &(current_index), &(MUX_14949));\
;

#define fpunit_exec_exec__short_sqrt_32_core_stmt_14956_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_32_core_stmt_14956_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_32_core_stmt_14956_c_macro___print_counter,"short_sqrt_32_core_in_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_core_stmt_14956_c_macro___print_counter,"last_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_core_stmt_14956_c_macro___print_counter,"last_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_core_stmt_14956_c_macro___print_counter,"last_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_core_stmt_14956_c_macro___print_counter,"last_index");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_index)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_core_stmt_14956_c_macro___print_counter,"current_index");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_index)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_32_core_call_stmt_14963_c_macro_ _fpunit_exec_exec_make_new_estimate_32_( &(last_root_estimate),  &(last_residue),  &(last_shifted_index_word), &(current_root_estimate), &(current_residue), &(current_residue_sign));\
;

#define fpunit_exec_exec__short_sqrt_32_core_assign_stmt_14970_c_macro_ __declare_static_bit_vector(NOT_u1_u1_14966,1);\
__declare_static_bit_vector(MUX_14969,32);\
bit_vector_not( &(current_residue_sign), &(NOT_u1_u1_14966));\
if (has_undefined_bit(&NOT_u1_u1_14966)) {fprintf(stderr, "Error: variable NOT_u1_u1_14966 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_14966));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_14966)){bit_vector_cast_to_bit_vector(0, &(MUX_14969), &(current_root_estimate));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14969), &(last_root_estimate));\
}bit_vector_cast_to_bit_vector(0, &(next_root_estimate), &(MUX_14969));\
;

#define fpunit_exec_exec__short_sqrt_32_core_assign_stmt_14977_c_macro_ __declare_static_bit_vector(NOT_u1_u1_14973,1);\
__declare_static_bit_vector(MUX_14976,34);\
bit_vector_not( &(current_residue_sign), &(NOT_u1_u1_14973));\
if (has_undefined_bit(&NOT_u1_u1_14973)) {fprintf(stderr, "Error: variable NOT_u1_u1_14973 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_14973));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_14973)){bit_vector_cast_to_bit_vector(0, &(MUX_14976), &(current_residue));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_14976), &(last_residue));\
}bit_vector_cast_to_bit_vector(0, &(next_residue_before_shift), &(MUX_14976));\
;

#define fpunit_exec_exec__short_sqrt_32_core_assign_stmt_14983_c_macro_ __declare_static_bit_vector(slice_14980,33);\
__declare_static_bit_vector(CONCAT_u33_u34_14982,34);\
bit_vector_slice(&(next_residue_before_shift), &(slice_14980), 0);\
bit_vector_concatenate( &(slice_14980), &(ZERO_1), &(CONCAT_u33_u34_14982));\
bit_vector_cast_to_bit_vector(0, &(next_residue), &(CONCAT_u33_u34_14982));\
;

#define fpunit_exec_exec__short_sqrt_32_core_assign_stmt_14988_c_macro_ __declare_static_bit_vector(konst_14986,34);\
bit_vector_clear(&konst_14986);\
__declare_static_bit_vector(NEQ_u34_u1_14987,1);\
bit_vector_clear(&konst_14986);\
bit_vector_not_equal(0, &(next_residue), &(konst_14986), &NEQ_u34_u1_14987);\
bit_vector_cast_to_bit_vector(0, &(sticky_flag), &(NEQ_u34_u1_14987));\
;

#define fpunit_exec_exec__short_sqrt_32_core_assign_stmt_14994_c_macro_ __declare_static_bit_vector(slice_14992,31);\
__declare_static_bit_vector(CONCAT_u1_u32_14993,32);\
bit_vector_slice(&(last_shifted_index_word), &(slice_14992), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_14992), &(CONCAT_u1_u32_14993));\
bit_vector_cast_to_bit_vector(0, &(next_last_shifted_index_word), &(CONCAT_u1_u32_14993));\
;

#define fpunit_exec_exec__short_sqrt_32_core_stmt_14998_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_32_core_stmt_14998_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_32_core_stmt_14998_c_macro___print_counter,"short_sqrt_32_core_out_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_core_stmt_14998_c_macro___print_counter,"next_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(next_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_core_stmt_14998_c_macro___print_counter,"next_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(next_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_32_core_stmt_14998_c_macro___print_counter,"next_last_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(next_last_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_32_core_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pnext_root_estimate)), &(next_root_estimate));\
bit_vector_cast_to_bit_vector(0, &((*__pnext_residue)), &(next_residue));\
bit_vector_cast_to_bit_vector(0, &((*__pnext_last_shifted_index_word)), &(next_last_shifted_index_word));\
bit_vector_cast_to_bit_vector(0, &((*__psticky_flag)), &(sticky_flag));\
;

#define fpunit_exec_exec__short_sqrt_56_inner_inarg_prep_macro__ __declare_static_bit_vector(X,56);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(root_X,56);\
__declare_static_bit_vector(start_index,8);\
bit_vector_clear(&start_index);\
start_index.val.byte_array[0] = 55;\
__declare_static_bit_vector(start_root_estimate,56);\
bit_vector_clear(&start_root_estimate);\
start_root_estimate.val.byte_array[6] = 128;\
__declare_static_bit_vector(start_residue,58);\
__declare_static_bit_vector(start_shifted_index_word,56);\
bit_vector_clear(&start_shifted_index_word);\
start_shifted_index_word.val.byte_array[6] = 128;\

#define fpunit_exec_exec__short_sqrt_56_stmt_16083_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_56_stmt_16083_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_56_stmt_16083_c_macro___print_counter,"X__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_stmt_16083_c_macro___print_counter,"X");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(X)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16086_c_macro_ __declare_static_bit_vector(konst_16085,8);\
bit_vector_clear(&konst_16085);\
konst_16085.val.byte_array[0] = 55;\
bit_vector_clear(&konst_16085);\
konst_16085.val.byte_array[0] = 55;\
bit_vector_cast_to_bit_vector(0, &(start_index), &(konst_16085));\
;

#define fpunit_exec_exec__short_sqrt_56_stmt_16088_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_56_stmt_16088_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_56_stmt_16088_c_macro___print_counter,"start_index__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_stmt_16088_c_macro___print_counter,"start_index");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(start_index)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16091_c_macro_ __declare_static_bit_vector(konst_16090,56);\
bit_vector_clear(&konst_16090);\
konst_16090.val.byte_array[6] = 128;\
bit_vector_clear(&konst_16090);\
konst_16090.val.byte_array[6] = 128;\
bit_vector_cast_to_bit_vector(0, &(start_root_estimate), &(konst_16090));\
;

#define fpunit_exec_exec__short_sqrt_56_stmt_16093_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_56_stmt_16093_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_56_stmt_16093_c_macro___print_counter,"start_root_estimate__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_stmt_16093_c_macro___print_counter,"start_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(start_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16104_c_macro_ __declare_static_bit_vector(slice_16096,2);\
__declare_static_bit_vector(konst_16097,2);\
bit_vector_clear(&konst_16097);\
konst_16097.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_u2_u2_16098,2);\
__declare_static_bit_vector(slice_16100,54);\
__declare_static_bit_vector(CONCAT_u2_u56_16101,56);\
__declare_static_bit_vector(CONCAT_u56_u58_16103,58);\
bit_vector_slice(&(X), &(slice_16096), 54);\
bit_vector_clear(&konst_16097);\
konst_16097.val.byte_array[0] = 1;\
bit_vector_minus( &(slice_16096), &(konst_16097), &(SUB_u2_u2_16098));\
bit_vector_slice(&(X), &(slice_16100), 0);\
bit_vector_concatenate( &(SUB_u2_u2_16098), &(slice_16100), &(CONCAT_u2_u56_16101));\
bit_vector_concatenate( &(CONCAT_u2_u56_16101), &(ZERO_2), &(CONCAT_u56_u58_16103));\
bit_vector_cast_to_bit_vector(0, &(start_residue), &(CONCAT_u56_u58_16103));\
;

#define fpunit_exec_exec__short_sqrt_56_stmt_16106_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_56_stmt_16106_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_56_stmt_16106_c_macro___print_counter,"start_residue__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_stmt_16106_c_macro___print_counter,"start_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(start_residue)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16109_c_macro_ __declare_static_bit_vector(konst_16108,56);\
bit_vector_clear(&konst_16108);\
konst_16108.val.byte_array[6] = 128;\
bit_vector_clear(&konst_16108);\
konst_16108.val.byte_array[6] = 128;\
bit_vector_cast_to_bit_vector(0, &(start_shifted_index_word), &(konst_16108));\
;

#define fpunit_exec_exec__short_sqrt_56_stmt_16111_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_56_stmt_16111_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_56_stmt_16111_c_macro___print_counter,"start_shifted_index_word__");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_stmt_16111_c_macro___print_counter,"start_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(start_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_56_branch_block_stmt_16112_c_export_decl_macro_ __declare_static_bit_vector(root_estimate__next_root_estimate,56);\
__declare_static_bit_vector(sticky_out__sticky_flag,1);\
__declare_static_bit_vector(last_root_estimate,56);\
__declare_static_bit_vector(last_residue,58);\
__declare_static_bit_vector(last_shifted_index_word,56);\
__declare_static_bit_vector(last_index,8);\
__declare_static_bit_vector(next_last_index_0,8);\
__declare_static_bit_vector(next_last_index_1,8);\
__declare_static_bit_vector(next_last_index,8);\
__declare_static_bit_vector(continue_flag,1);\
__declare_static_bit_vector(next_root_estimate_0,56);\
__declare_static_bit_vector(next_last_residue_0,58);\
__declare_static_bit_vector(next_last_shifted_index_word_0,56);\
__declare_static_bit_vector(sticky_flag_0,1);\
__declare_static_bit_vector(next_root_estimate_1,56);\
__declare_static_bit_vector(next_last_residue_1,58);\
__declare_static_bit_vector(next_last_shifted_index_word_1,56);\
__declare_static_bit_vector(sticky_flag_1,1);\
__declare_static_bit_vector(next_root_estimate,56);\
__declare_static_bit_vector(next_last_residue,58);\
__declare_static_bit_vector(next_last_shifted_index_word,56);\
__declare_static_bit_vector(sticky_flag,1);\


#define fpunit_exec_exec__short_sqrt_56_merge_stmt_16114_c_preamble_macro_ uint8_t merge_stmt_16114_entry_flag;\
merge_stmt_16114_entry_flag = do_while_entry_flag;\
goto merge_stmt_16114_run;\
merge_stmt_16114_run: ;\

#define fpunit_exec_exec__short_sqrt_56_phi_stmt_16115_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(last_root_estimate), &(next_root_estimate));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(last_root_estimate), &(start_root_estimate));\
}\
;

#define fpunit_exec_exec__short_sqrt_56_phi_stmt_16119_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(last_residue), &(next_last_residue));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(last_residue), &(start_residue));\
}\
;

#define fpunit_exec_exec__short_sqrt_56_phi_stmt_16123_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(last_shifted_index_word), &(next_last_shifted_index_word));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(last_shifted_index_word), &(start_shifted_index_word));\
}\
;

#define fpunit_exec_exec__short_sqrt_56_phi_stmt_16127_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(last_index), &(next_last_index));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(last_index), &(start_index));\
}\
;
;

#define fpunit_exec_exec__short_sqrt_56_merge_stmt_16114_c_postamble_macro_ merge_stmt_16114_entry_flag = 0;

#define fpunit_exec_exec__short_sqrt_56_stmt_16136_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_56_stmt_16136_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_56_stmt_16136_c_macro___print_counter,"short_sqrt_64_status");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_stmt_16136_c_macro___print_counter,"last_index");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_index)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_stmt_16136_c_macro___print_counter,"last_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_stmt_16136_c_macro___print_counter,"last_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_stmt_16136_c_macro___print_counter,"last_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16146_c_macro_ __declare_static_bit_vector(konst_16139,8);\
bit_vector_clear(&konst_16139);\
__declare_static_bit_vector(UGT_u8_u1_16140,1);\
__declare_static_bit_vector(konst_16142,8);\
bit_vector_clear(&konst_16142);\
konst_16142.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_u8_u8_16143,8);\
__declare_static_bit_vector(konst_16144,8);\
bit_vector_clear(&konst_16144);\
__declare_static_bit_vector(MUX_16145,8);\
bit_vector_clear(&konst_16139);\
bit_vector_greater(0, &(last_index), &(konst_16139), &(UGT_u8_u1_16140));\
if (has_undefined_bit(&UGT_u8_u1_16140)) {fprintf(stderr, "Error: variable UGT_u8_u1_16140 has undefined value (%s) at test point.\n", to_string(&UGT_u8_u1_16140));assert(0);} \
if(bit_vector_to_uint64(0, &UGT_u8_u1_16140)){bit_vector_clear(&konst_16142);\
konst_16142.val.byte_array[0] = 1;\
bit_vector_minus( &(last_index), &(konst_16142), &(SUB_u8_u8_16143));\
bit_vector_cast_to_bit_vector(0, &(MUX_16145), &(SUB_u8_u8_16143));\
}else {bit_vector_clear(&konst_16144);\
bit_vector_cast_to_bit_vector(0, &(MUX_16145), &(konst_16144));\
}bit_vector_cast_to_bit_vector(0, &(next_last_index_0), &(MUX_16145));\
;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16156_c_macro_ __declare_static_bit_vector(konst_16149,8);\
bit_vector_clear(&konst_16149);\
konst_16149.val.byte_array[0] = 1;\
__declare_static_bit_vector(UGT_u8_u1_16150,1);\
__declare_static_bit_vector(konst_16152,8);\
bit_vector_clear(&konst_16152);\
konst_16152.val.byte_array[0] = 2;\
__declare_static_bit_vector(SUB_u8_u8_16153,8);\
__declare_static_bit_vector(konst_16154,8);\
bit_vector_clear(&konst_16154);\
__declare_static_bit_vector(MUX_16155,8);\
bit_vector_clear(&konst_16149);\
konst_16149.val.byte_array[0] = 1;\
bit_vector_greater(0, &(last_index), &(konst_16149), &(UGT_u8_u1_16150));\
if (has_undefined_bit(&UGT_u8_u1_16150)) {fprintf(stderr, "Error: variable UGT_u8_u1_16150 has undefined value (%s) at test point.\n", to_string(&UGT_u8_u1_16150));assert(0);} \
if(bit_vector_to_uint64(0, &UGT_u8_u1_16150)){bit_vector_clear(&konst_16152);\
konst_16152.val.byte_array[0] = 2;\
bit_vector_minus( &(last_index), &(konst_16152), &(SUB_u8_u8_16153));\
bit_vector_cast_to_bit_vector(0, &(MUX_16155), &(SUB_u8_u8_16153));\
}else {bit_vector_clear(&konst_16154);\
bit_vector_cast_to_bit_vector(0, &(MUX_16155), &(konst_16154));\
}bit_vector_cast_to_bit_vector(0, &(next_last_index_1), &(MUX_16155));\
;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16166_c_macro_ __declare_static_bit_vector(konst_16159,8);\
bit_vector_clear(&konst_16159);\
konst_16159.val.byte_array[0] = 2;\
__declare_static_bit_vector(UGT_u8_u1_16160,1);\
__declare_static_bit_vector(konst_16162,8);\
bit_vector_clear(&konst_16162);\
konst_16162.val.byte_array[0] = 3;\
__declare_static_bit_vector(SUB_u8_u8_16163,8);\
__declare_static_bit_vector(konst_16164,8);\
bit_vector_clear(&konst_16164);\
__declare_static_bit_vector(MUX_16165,8);\
bit_vector_clear(&konst_16159);\
konst_16159.val.byte_array[0] = 2;\
bit_vector_greater(0, &(last_index), &(konst_16159), &(UGT_u8_u1_16160));\
if (has_undefined_bit(&UGT_u8_u1_16160)) {fprintf(stderr, "Error: variable UGT_u8_u1_16160 has undefined value (%s) at test point.\n", to_string(&UGT_u8_u1_16160));assert(0);} \
if(bit_vector_to_uint64(0, &UGT_u8_u1_16160)){bit_vector_clear(&konst_16162);\
konst_16162.val.byte_array[0] = 3;\
bit_vector_minus( &(last_index), &(konst_16162), &(SUB_u8_u8_16163));\
bit_vector_cast_to_bit_vector(0, &(MUX_16165), &(SUB_u8_u8_16163));\
}else {bit_vector_clear(&konst_16164);\
bit_vector_cast_to_bit_vector(0, &(MUX_16165), &(konst_16164));\
}bit_vector_cast_to_bit_vector(0, &(next_last_index), &(MUX_16165));\
;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16175_c_macro_ __declare_static_bit_vector(konst_16169,8);\
bit_vector_clear(&konst_16169);\
__declare_static_bit_vector(UGT_u8_u1_16170,1);\
__declare_static_bit_vector(konst_16172,58);\
bit_vector_clear(&konst_16172);\
__declare_static_bit_vector(NEQ_u58_u1_16173,1);\
__declare_static_bit_vector(AND_u1_u1_16174,1);\
bit_vector_clear(&konst_16169);\
bit_vector_greater(0, &(next_last_index), &(konst_16169), &(UGT_u8_u1_16170));\
bit_vector_clear(&konst_16172);\
bit_vector_not_equal(0, &(last_residue), &(konst_16172), &NEQ_u58_u1_16173);\
bit_vector_and(&(UGT_u8_u1_16170), &(NEQ_u58_u1_16173), &(AND_u1_u1_16174));\
bit_vector_cast_to_bit_vector(0, &(continue_flag), &(AND_u1_u1_16174));\
;

#define fpunit_exec_exec__short_sqrt_56_call_stmt_16184_c_macro_ _fpunit_exec_exec_short_sqrt_56_core_( &(last_root_estimate),  &(last_residue),  &(last_shifted_index_word),  &(last_index), &(next_root_estimate_0), &(next_last_residue_0), &(next_last_shifted_index_word_0), &(sticky_flag_0));\
;

#define fpunit_exec_exec__short_sqrt_56_call_stmt_16193_c_macro_ _fpunit_exec_exec_short_sqrt_56_core_( &(next_root_estimate_0),  &(next_last_residue_0),  &(next_last_shifted_index_word_0),  &(next_last_index_0), &(next_root_estimate_1), &(next_last_residue_1), &(next_last_shifted_index_word_1), &(sticky_flag_1));\
;

#define fpunit_exec_exec__short_sqrt_56_call_stmt_16202_c_macro_ _fpunit_exec_exec_short_sqrt_56_core_( &(next_root_estimate_1),  &(next_last_residue_1),  &(next_last_shifted_index_word_1),  &(next_last_index_1), &(next_root_estimate), &(next_last_residue), &(next_last_shifted_index_word), &(sticky_flag));\
;
;

#define fpunit_exec_exec__short_sqrt_56_branch_block_stmt_16112_c_export_apply_macro_ bit_vector_cast_to_bit_vector(0, &(root_estimate__next_root_estimate), &(next_root_estimate));\
bit_vector_cast_to_bit_vector(0, &(sticky_out__sticky_flag), &(sticky_flag));\
;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16208_c_macro_ bit_vector_cast_to_bit_vector(0, &(sticky), &(sticky_out__sticky_flag));\
;

#define fpunit_exec_exec__short_sqrt_56_assign_stmt_16211_c_macro_ bit_vector_cast_to_bit_vector(0, &(root_X), &(root_estimate__next_root_estimate));\
;

#define fpunit_exec_exec__short_sqrt_56_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__psticky)), &(sticky));\
bit_vector_cast_to_bit_vector(0, &((*__proot_X)), &(root_X));\
;

#define fpunit_exec_exec__short_sqrt_56_core_inner_inarg_prep_macro__ __declare_static_bit_vector(last_root_estimate,56);\
bit_vector_cast_to_bit_vector(0, &(last_root_estimate), &((*__plast_root_estimate)));\
__declare_static_bit_vector(last_residue,58);\
bit_vector_cast_to_bit_vector(0, &(last_residue), &((*__plast_residue)));\
__declare_static_bit_vector(last_shifted_index_word,56);\
bit_vector_cast_to_bit_vector(0, &(last_shifted_index_word), &((*__plast_shifted_index_word)));\
__declare_static_bit_vector(last_index,8);\
bit_vector_cast_to_bit_vector(0, &(last_index), &((*__plast_index)));\
__declare_static_bit_vector(next_root_estimate,56);\
__declare_static_bit_vector(next_residue,58);\
__declare_static_bit_vector(next_last_shifted_index_word,56);\
__declare_static_bit_vector(sticky_flag,1);\
__declare_static_bit_vector(current_index,8);\
__declare_static_bit_vector(current_root_estimate,56);\
__declare_static_bit_vector(current_residue,58);\
__declare_static_bit_vector(current_residue_sign,1);\
__declare_static_bit_vector(next_residue_before_shift,58);\

#define fpunit_exec_exec__short_sqrt_56_core_assign_stmt_16027_c_macro_ __declare_static_bit_vector(konst_16020,8);\
bit_vector_clear(&konst_16020);\
__declare_static_bit_vector(UGT_u8_u1_16021,1);\
__declare_static_bit_vector(konst_16023,8);\
bit_vector_clear(&konst_16023);\
konst_16023.val.byte_array[0] = 1;\
__declare_static_bit_vector(SUB_u8_u8_16024,8);\
__declare_static_bit_vector(konst_16025,8);\
bit_vector_clear(&konst_16025);\
__declare_static_bit_vector(MUX_16026,8);\
bit_vector_clear(&konst_16020);\
bit_vector_greater(0, &(last_index), &(konst_16020), &(UGT_u8_u1_16021));\
if (has_undefined_bit(&UGT_u8_u1_16021)) {fprintf(stderr, "Error: variable UGT_u8_u1_16021 has undefined value (%s) at test point.\n", to_string(&UGT_u8_u1_16021));assert(0);} \
if(bit_vector_to_uint64(0, &UGT_u8_u1_16021)){bit_vector_clear(&konst_16023);\
konst_16023.val.byte_array[0] = 1;\
bit_vector_minus( &(last_index), &(konst_16023), &(SUB_u8_u8_16024));\
bit_vector_cast_to_bit_vector(0, &(MUX_16026), &(SUB_u8_u8_16024));\
}else {bit_vector_clear(&konst_16025);\
bit_vector_cast_to_bit_vector(0, &(MUX_16026), &(konst_16025));\
}bit_vector_cast_to_bit_vector(0, &(current_index), &(MUX_16026));\
;

#define fpunit_exec_exec__short_sqrt_56_core_stmt_16033_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_56_core_stmt_16033_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_56_core_stmt_16033_c_macro___print_counter,"short_sqrt_56_core_in_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_core_stmt_16033_c_macro___print_counter,"last_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_core_stmt_16033_c_macro___print_counter,"last_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_core_stmt_16033_c_macro___print_counter,"last_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_core_stmt_16033_c_macro___print_counter,"last_index");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(last_index)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv64bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_core_stmt_16033_c_macro___print_counter,"current_index");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(current_index)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_56_core_call_stmt_16040_c_macro_ _fpunit_exec_exec_make_new_estimate_56_( &(last_root_estimate),  &(last_residue),  &(last_shifted_index_word), &(current_root_estimate), &(current_residue), &(current_residue_sign));\
;

#define fpunit_exec_exec__short_sqrt_56_core_assign_stmt_16047_c_macro_ __declare_static_bit_vector(NOT_u1_u1_16043,1);\
__declare_static_bit_vector(MUX_16046,56);\
bit_vector_not( &(current_residue_sign), &(NOT_u1_u1_16043));\
if (has_undefined_bit(&NOT_u1_u1_16043)) {fprintf(stderr, "Error: variable NOT_u1_u1_16043 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_16043));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_16043)){bit_vector_cast_to_bit_vector(0, &(MUX_16046), &(current_root_estimate));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_16046), &(last_root_estimate));\
}bit_vector_cast_to_bit_vector(0, &(next_root_estimate), &(MUX_16046));\
;

#define fpunit_exec_exec__short_sqrt_56_core_assign_stmt_16054_c_macro_ __declare_static_bit_vector(NOT_u1_u1_16050,1);\
__declare_static_bit_vector(MUX_16053,58);\
bit_vector_not( &(current_residue_sign), &(NOT_u1_u1_16050));\
if (has_undefined_bit(&NOT_u1_u1_16050)) {fprintf(stderr, "Error: variable NOT_u1_u1_16050 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_16050));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_16050)){bit_vector_cast_to_bit_vector(0, &(MUX_16053), &(current_residue));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_16053), &(last_residue));\
}bit_vector_cast_to_bit_vector(0, &(next_residue_before_shift), &(MUX_16053));\
;

#define fpunit_exec_exec__short_sqrt_56_core_assign_stmt_16061_c_macro_ __declare_static_bit_vector(slice_16058,57);\
__declare_static_bit_vector(CONCAT_u57_u58_16060,58);\
bit_vector_slice(&(next_residue_before_shift), &(slice_16058), 0);\
bit_vector_concatenate( &(slice_16058), &(ZERO_1), &(CONCAT_u57_u58_16060));\
bit_vector_cast_to_bit_vector(0, &(next_residue), &(CONCAT_u57_u58_16060));\
;

#define fpunit_exec_exec__short_sqrt_56_core_assign_stmt_16066_c_macro_ __declare_static_bit_vector(konst_16064,58);\
bit_vector_clear(&konst_16064);\
__declare_static_bit_vector(NEQ_u58_u1_16065,1);\
bit_vector_clear(&konst_16064);\
bit_vector_not_equal(0, &(next_residue), &(konst_16064), &NEQ_u58_u1_16065);\
bit_vector_cast_to_bit_vector(0, &(sticky_flag), &(NEQ_u58_u1_16065));\
;

#define fpunit_exec_exec__short_sqrt_56_core_assign_stmt_16072_c_macro_ __declare_static_bit_vector(slice_16070,55);\
__declare_static_bit_vector(CONCAT_u1_u56_16071,56);\
bit_vector_slice(&(last_shifted_index_word), &(slice_16070), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_16070), &(CONCAT_u1_u56_16071));\
bit_vector_cast_to_bit_vector(0, &(next_last_shifted_index_word), &(CONCAT_u1_u56_16071));\
;

#define fpunit_exec_exec__short_sqrt_56_core_stmt_16076_c_macro_ uint32_t fpunit_exec_exec__short_sqrt_56_core_stmt_16076_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t%s\n",fpunit_exec_exec__short_sqrt_56_core_stmt_16076_c_macro___print_counter,"short_sqrt_56_core_out_args");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_core_stmt_16076_c_macro___print_counter,"next_residue");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(next_residue)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_core_stmt_16076_c_macro___print_counter,"next_root_estimate");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(next_root_estimate)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]fpdiv32bitwise>\t\t%s\t\t",fpunit_exec_exec__short_sqrt_56_core_stmt_16076_c_macro___print_counter,"next_last_shifted_index_word");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(next_last_shifted_index_word)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__short_sqrt_56_core_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pnext_root_estimate)), &(next_root_estimate));\
bit_vector_cast_to_bit_vector(0, &((*__pnext_residue)), &(next_residue));\
bit_vector_cast_to_bit_vector(0, &((*__pnext_last_shifted_index_word)), &(next_last_shifted_index_word));\
bit_vector_cast_to_bit_vector(0, &((*__psticky_flag)), &(sticky_flag));\
;

#define fpunit_exec_exec__signature_8_inner_inarg_prep_macro__ __declare_static_bit_vector(A,32);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(AS,8);\

#define fpunit_exec_exec__signature_8_assign_stmt_20755_c_macro_ __declare_static_bit_vector(slice_20745,8);\
__declare_static_bit_vector(slice_20747,8);\
__declare_static_bit_vector(XOR_u8_u8_20748,8);\
__declare_static_bit_vector(slice_20750,8);\
__declare_static_bit_vector(slice_20752,8);\
__declare_static_bit_vector(XOR_u8_u8_20753,8);\
__declare_static_bit_vector(XOR_u8_u8_20754,8);\
bit_vector_slice(&(A), &(slice_20745), 0);\
bit_vector_slice(&(A), &(slice_20747), 8);\
bit_vector_xor(&(slice_20745), &(slice_20747), &(XOR_u8_u8_20748));\
bit_vector_slice(&(A), &(slice_20750), 16);\
bit_vector_slice(&(A), &(slice_20752), 24);\
bit_vector_xor(&(slice_20750), &(slice_20752), &(XOR_u8_u8_20753));\
bit_vector_xor(&(XOR_u8_u8_20748), &(XOR_u8_u8_20753), &(XOR_u8_u8_20754));\
bit_vector_cast_to_bit_vector(0, &(AS), &(XOR_u8_u8_20754));\
;

#define fpunit_exec_exec__signature_8_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pAS)), &(AS));\
;

#define fpunit_exec_exec__signature_8_outer_arg_decl_macro__ __declare_static_bit_vector(__A, 32);\
bit_vector_assign_uint64(0, &__A, A);\
__declare_static_bit_vector(__AS, 8);\
;

#define fpunit_exec_exec__signature_8_outer_op_xfer_macro__  *AS =  bit_vector_to_uint64(0, &__AS);\
;

#define fpunit_exec_exec__splitFp16_inner_inarg_prep_macro__ __declare_static_bit_vector(ua,16);\
bit_vector_cast_to_bit_vector(0, &(ua), &((*__pua)));\
__declare_static_bit_vector(sign,1);\
__declare_static_bit_vector(exponent,5);\
__declare_static_bit_vector(mantissa,10);\

#define fpunit_exec_exec__splitFp16_assign_stmt_3718_c_macro_ __declare_static_bit_vector(konst_3716,16);\
bit_vector_clear(&konst_3716);\
konst_3716.val.byte_array[0] = 15;\
__declare_static_bit_vector(BITSEL_u16_u1_3717,1);\
bit_vector_clear(&konst_3716);\
konst_3716.val.byte_array[0] = 15;\
bit_vector_bitsel( &(ua), &(konst_3716), &(BITSEL_u16_u1_3717));\
bit_vector_cast_to_bit_vector(0, &(sign), &(BITSEL_u16_u1_3717));\
;

#define fpunit_exec_exec__splitFp16_assign_stmt_3722_c_macro_ __declare_static_bit_vector(slice_3721,5);\
bit_vector_slice(&(ua), &(slice_3721), 10);\
bit_vector_cast_to_bit_vector(0, &(exponent), &(slice_3721));\
;

#define fpunit_exec_exec__splitFp16_assign_stmt_3726_c_macro_ __declare_static_bit_vector(slice_3725,10);\
bit_vector_slice(&(ua), &(slice_3725), 0);\
bit_vector_cast_to_bit_vector(0, &(mantissa), &(slice_3725));\
;

#define fpunit_exec_exec__splitFp16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__psign)), &(sign));\
bit_vector_cast_to_bit_vector(0, &((*__pexponent)), &(exponent));\
bit_vector_cast_to_bit_vector(0, &((*__pmantissa)), &(mantissa));\
;

#define fpunit_exec_exec__twos_complement_16_inner_inarg_prep_macro__ __declare_static_bit_vector(A,16);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,16);\
__declare_static_bit_vector(cA,16);\

#define fpunit_exec_exec__twos_complement_16_assign_stmt_9633_c_macro_ __declare_static_bit_vector(NOT_u16_u16_9632,16);\
bit_vector_not( &(A), &(NOT_u16_u16_9632));\
bit_vector_cast_to_bit_vector(0, &(cA), &(NOT_u16_u16_9632));\
;

#define fpunit_exec_exec__twos_complement_16_call_stmt_9636_c_macro_ _fpunit_exec_exec_increment_16_( &(cA), &(B));\
;

#define fpunit_exec_exec__twos_complement_16_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pB)), &(B));\
;

#define fpunit_exec_exec__twos_complement_16_outer_arg_decl_macro__ __declare_static_bit_vector(__A, 16);\
bit_vector_assign_uint64(0, &__A, A);\
__declare_static_bit_vector(__B, 16);\
;

#define fpunit_exec_exec__twos_complement_16_outer_op_xfer_macro__  *B =  bit_vector_to_uint64(0, &__B);\
;

#define fpunit_exec_exec__twos_complement_32_inner_inarg_prep_macro__ __declare_static_bit_vector(A,32);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,32);\
__declare_static_bit_vector(cA,32);\

#define fpunit_exec_exec__twos_complement_32_assign_stmt_20763_c_macro_ __declare_static_bit_vector(NOT_u32_u32_20762,32);\
bit_vector_not( &(A), &(NOT_u32_u32_20762));\
bit_vector_cast_to_bit_vector(0, &(cA), &(NOT_u32_u32_20762));\
;

#define fpunit_exec_exec__twos_complement_32_call_stmt_20766_c_macro_ _fpunit_exec_exec_increment_32_( &(cA), &(B));\
;

#define fpunit_exec_exec__twos_complement_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pB)), &(B));\
;

#define fpunit_exec_exec__twos_complement_32_outer_arg_decl_macro__ __declare_static_bit_vector(__A, 32);\
bit_vector_assign_uint64(0, &__A, A);\
__declare_static_bit_vector(__B, 32);\
;

#define fpunit_exec_exec__twos_complement_32_outer_op_xfer_macro__  *B =  bit_vector_to_uint64(0, &__B);\
;

#define fpunit_exec_exec__twos_complement_64_inner_inarg_prep_macro__ __declare_static_bit_vector(A,64);\
bit_vector_cast_to_bit_vector(0, &(A), &((*__pA)));\
__declare_static_bit_vector(B,64);\
__declare_static_bit_vector(cA,64);\

#define fpunit_exec_exec__twos_complement_64_assign_stmt_20774_c_macro_ __declare_static_bit_vector(NOT_u64_u64_20773,64);\
bit_vector_not( &(A), &(NOT_u64_u64_20773));\
bit_vector_cast_to_bit_vector(0, &(cA), &(NOT_u64_u64_20773));\
;

#define fpunit_exec_exec__twos_complement_64_call_stmt_20777_c_macro_ _fpunit_exec_exec_increment_64_( &(cA), &(B));\
;

#define fpunit_exec_exec__twos_complement_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pB)), &(B));\
;

#define fpunit_exec_exec__twos_complement_64_outer_arg_decl_macro__ __declare_static_bit_vector(__A, 64);\
bit_vector_assign_uint64(0, &__A, A);\
__declare_static_bit_vector(__B, 64);\
;

#define fpunit_exec_exec__twos_complement_64_outer_op_xfer_macro__  *B =  bit_vector_to_uint64(0, &__B);\
;

#define fpunit_exec_exec__u32_sll_inner_inarg_prep_macro__ __declare_static_bit_vector(X,32);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,6);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,32);\
__declare_static_bit_vector(X0,32);\
__declare_static_bit_vector(X1,32);\
__declare_static_bit_vector(X2,32);\
__declare_static_bit_vector(X3,32);\
__declare_static_bit_vector(X4,32);\

#define fpunit_exec_exec__u32_sll_assign_stmt_20793_c_macro_ __declare_static_bit_vector(konst_20785,6);\
bit_vector_clear(&konst_20785);\
__declare_static_bit_vector(BITSEL_u6_u1_20786,1);\
__declare_static_bit_vector(slice_20788,31);\
__declare_static_bit_vector(CONCAT_u31_u32_20790,32);\
__declare_static_bit_vector(MUX_20792,32);\
bit_vector_clear(&konst_20785);\
bit_vector_bitsel( &(S), &(konst_20785), &(BITSEL_u6_u1_20786));\
if (has_undefined_bit(&BITSEL_u6_u1_20786)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_20786 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_20786));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_20786)){bit_vector_slice(&(X), &(slice_20788), 0);\
bit_vector_concatenate( &(slice_20788), &(ZERO_1), &(CONCAT_u31_u32_20790));\
bit_vector_cast_to_bit_vector(0, &(MUX_20792), &(CONCAT_u31_u32_20790));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20792), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_20792));\
;

#define fpunit_exec_exec__u32_sll_assign_stmt_20804_c_macro_ __declare_static_bit_vector(konst_20796,6);\
bit_vector_clear(&konst_20796);\
konst_20796.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u6_u1_20797,1);\
__declare_static_bit_vector(slice_20799,30);\
__declare_static_bit_vector(CONCAT_u30_u32_20801,32);\
__declare_static_bit_vector(MUX_20803,32);\
bit_vector_clear(&konst_20796);\
konst_20796.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_20796), &(BITSEL_u6_u1_20797));\
if (has_undefined_bit(&BITSEL_u6_u1_20797)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_20797 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_20797));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_20797)){bit_vector_slice(&(X0), &(slice_20799), 0);\
bit_vector_concatenate( &(slice_20799), &(ZERO_2), &(CONCAT_u30_u32_20801));\
bit_vector_cast_to_bit_vector(0, &(MUX_20803), &(CONCAT_u30_u32_20801));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20803), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_20803));\
;

#define fpunit_exec_exec__u32_sll_assign_stmt_20815_c_macro_ __declare_static_bit_vector(konst_20807,6);\
bit_vector_clear(&konst_20807);\
konst_20807.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u6_u1_20808,1);\
__declare_static_bit_vector(slice_20810,28);\
__declare_static_bit_vector(CONCAT_u28_u32_20812,32);\
__declare_static_bit_vector(MUX_20814,32);\
bit_vector_clear(&konst_20807);\
konst_20807.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_20807), &(BITSEL_u6_u1_20808));\
if (has_undefined_bit(&BITSEL_u6_u1_20808)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_20808 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_20808));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_20808)){bit_vector_slice(&(X1), &(slice_20810), 0);\
bit_vector_concatenate( &(slice_20810), &(ZERO_4), &(CONCAT_u28_u32_20812));\
bit_vector_cast_to_bit_vector(0, &(MUX_20814), &(CONCAT_u28_u32_20812));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20814), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_20814));\
;

#define fpunit_exec_exec__u32_sll_assign_stmt_20826_c_macro_ __declare_static_bit_vector(konst_20818,6);\
bit_vector_clear(&konst_20818);\
konst_20818.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u6_u1_20819,1);\
__declare_static_bit_vector(slice_20821,24);\
__declare_static_bit_vector(CONCAT_u24_u32_20823,32);\
__declare_static_bit_vector(MUX_20825,32);\
bit_vector_clear(&konst_20818);\
konst_20818.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_20818), &(BITSEL_u6_u1_20819));\
if (has_undefined_bit(&BITSEL_u6_u1_20819)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_20819 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_20819));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_20819)){bit_vector_slice(&(X2), &(slice_20821), 0);\
bit_vector_concatenate( &(slice_20821), &(ZERO_8), &(CONCAT_u24_u32_20823));\
bit_vector_cast_to_bit_vector(0, &(MUX_20825), &(CONCAT_u24_u32_20823));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20825), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_20825));\
;

#define fpunit_exec_exec__u32_sll_assign_stmt_20837_c_macro_ __declare_static_bit_vector(konst_20829,6);\
bit_vector_clear(&konst_20829);\
konst_20829.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u6_u1_20830,1);\
__declare_static_bit_vector(slice_20832,16);\
__declare_static_bit_vector(CONCAT_u16_u32_20834,32);\
__declare_static_bit_vector(MUX_20836,32);\
bit_vector_clear(&konst_20829);\
konst_20829.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_20829), &(BITSEL_u6_u1_20830));\
if (has_undefined_bit(&BITSEL_u6_u1_20830)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_20830 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_20830));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_20830)){bit_vector_slice(&(X3), &(slice_20832), 0);\
bit_vector_concatenate( &(slice_20832), &(ZERO_16), &(CONCAT_u16_u32_20834));\
bit_vector_cast_to_bit_vector(0, &(MUX_20836), &(CONCAT_u16_u32_20834));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20836), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_20836));\
;

#define fpunit_exec_exec__u32_sll_assign_stmt_20845_c_macro_ __declare_static_bit_vector(konst_20840,6);\
bit_vector_clear(&konst_20840);\
konst_20840.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u6_u1_20841,1);\
__declare_static_bit_vector(konst_20842,32);\
bit_vector_clear(&konst_20842);\
__declare_static_bit_vector(MUX_20844,32);\
bit_vector_clear(&konst_20840);\
konst_20840.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_20840), &(BITSEL_u6_u1_20841));\
if (has_undefined_bit(&BITSEL_u6_u1_20841)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_20841 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_20841));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_20841)){bit_vector_clear(&konst_20842);\
bit_vector_cast_to_bit_vector(0, &(MUX_20844), &(konst_20842));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20844), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_20844));\
;

#define fpunit_exec_exec__u32_sll_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__u35_sr_special_inner_inarg_prep_macro__ __declare_static_bit_vector(X,35);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,6);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,35);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(X0,35);\
__declare_static_bit_vector(t0,1);\
__declare_static_bit_vector(X1,35);\
__declare_static_bit_vector(t1,1);\
__declare_static_bit_vector(X2,35);\
__declare_static_bit_vector(t2,1);\
__declare_static_bit_vector(X3,35);\
__declare_static_bit_vector(t3,1);\
__declare_static_bit_vector(X4,35);\
__declare_static_bit_vector(t4,1);\
__declare_static_bit_vector(t5,1);\

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11192_c_macro_ __declare_static_bit_vector(konst_11183,6);\
bit_vector_clear(&konst_11183);\
__declare_static_bit_vector(BITSEL_u6_u1_11184,1);\
__declare_static_bit_vector(slice_11188,34);\
__declare_static_bit_vector(CONCAT_u1_u35_11189,35);\
__declare_static_bit_vector(MUX_11191,35);\
bit_vector_clear(&konst_11183);\
bit_vector_bitsel( &(S), &(konst_11183), &(BITSEL_u6_u1_11184));\
if (has_undefined_bit(&BITSEL_u6_u1_11184)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11184 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11184));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11184)){bit_vector_slice(&(X), &(slice_11188), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_11188), &(CONCAT_u1_u35_11189));\
bit_vector_cast_to_bit_vector(0, &(MUX_11191), &(CONCAT_u1_u35_11189));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11191), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_11191));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11202_c_macro_ __declare_static_bit_vector(konst_11195,6);\
bit_vector_clear(&konst_11195);\
__declare_static_bit_vector(BITSEL_u6_u1_11196,1);\
__declare_static_bit_vector(konst_11198,35);\
bit_vector_clear(&konst_11198);\
__declare_static_bit_vector(BITSEL_u35_u1_11199,1);\
__declare_static_bit_vector(konst_11200,1);\
bit_vector_clear(&konst_11200);\
__declare_static_bit_vector(MUX_11201,1);\
bit_vector_clear(&konst_11195);\
bit_vector_bitsel( &(S), &(konst_11195), &(BITSEL_u6_u1_11196));\
if (has_undefined_bit(&BITSEL_u6_u1_11196)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11196 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11196));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11196)){bit_vector_clear(&konst_11198);\
bit_vector_bitsel( &(X), &(konst_11198), &(BITSEL_u35_u1_11199));\
bit_vector_cast_to_bit_vector(0, &(MUX_11201), &(BITSEL_u35_u1_11199));\
}else {bit_vector_clear(&konst_11200);\
bit_vector_cast_to_bit_vector(0, &(MUX_11201), &(konst_11200));\
}bit_vector_cast_to_bit_vector(0, &(t0), &(MUX_11201));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11213_c_macro_ __declare_static_bit_vector(konst_11205,6);\
bit_vector_clear(&konst_11205);\
konst_11205.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u6_u1_11206,1);\
__declare_static_bit_vector(slice_11209,33);\
__declare_static_bit_vector(CONCAT_u2_u35_11210,35);\
__declare_static_bit_vector(MUX_11212,35);\
bit_vector_clear(&konst_11205);\
konst_11205.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_11205), &(BITSEL_u6_u1_11206));\
if (has_undefined_bit(&BITSEL_u6_u1_11206)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11206 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11206));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11206)){bit_vector_slice(&(X0), &(slice_11209), 2);\
bit_vector_concatenate( &(ZERO_2), &(slice_11209), &(CONCAT_u2_u35_11210));\
bit_vector_cast_to_bit_vector(0, &(MUX_11212), &(CONCAT_u2_u35_11210));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11212), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_11212));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11225_c_macro_ __declare_static_bit_vector(konst_11216,6);\
bit_vector_clear(&konst_11216);\
konst_11216.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u6_u1_11217,1);\
__declare_static_bit_vector(slice_11219,2);\
__declare_static_bit_vector(konst_11220,2);\
bit_vector_clear(&konst_11220);\
__declare_static_bit_vector(EQ_u2_u1_11221,1);\
__declare_static_bit_vector(NOT_u1_u1_11222,1);\
__declare_static_bit_vector(konst_11223,1);\
bit_vector_clear(&konst_11223);\
__declare_static_bit_vector(MUX_11224,1);\
bit_vector_clear(&konst_11216);\
konst_11216.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_11216), &(BITSEL_u6_u1_11217));\
if (has_undefined_bit(&BITSEL_u6_u1_11217)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11217 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11217));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11217)){bit_vector_slice(&(X0), &(slice_11219), 0);\
bit_vector_clear(&konst_11220);\
bit_vector_equal(0, &(slice_11219), &(konst_11220), &(EQ_u2_u1_11221));\
bit_vector_not( &(EQ_u2_u1_11221), &(NOT_u1_u1_11222));\
bit_vector_cast_to_bit_vector(0, &(MUX_11224), &(NOT_u1_u1_11222));\
}else {bit_vector_clear(&konst_11223);\
bit_vector_cast_to_bit_vector(0, &(MUX_11224), &(konst_11223));\
}bit_vector_cast_to_bit_vector(0, &(t1), &(MUX_11224));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11236_c_macro_ __declare_static_bit_vector(konst_11228,6);\
bit_vector_clear(&konst_11228);\
konst_11228.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u6_u1_11229,1);\
__declare_static_bit_vector(slice_11232,31);\
__declare_static_bit_vector(CONCAT_u4_u35_11233,35);\
__declare_static_bit_vector(MUX_11235,35);\
bit_vector_clear(&konst_11228);\
konst_11228.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_11228), &(BITSEL_u6_u1_11229));\
if (has_undefined_bit(&BITSEL_u6_u1_11229)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11229 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11229));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11229)){bit_vector_slice(&(X1), &(slice_11232), 4);\
bit_vector_concatenate( &(ZERO_4), &(slice_11232), &(CONCAT_u4_u35_11233));\
bit_vector_cast_to_bit_vector(0, &(MUX_11235), &(CONCAT_u4_u35_11233));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11235), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_11235));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11248_c_macro_ __declare_static_bit_vector(konst_11239,6);\
bit_vector_clear(&konst_11239);\
konst_11239.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u6_u1_11240,1);\
__declare_static_bit_vector(slice_11242,4);\
__declare_static_bit_vector(konst_11243,4);\
bit_vector_clear(&konst_11243);\
__declare_static_bit_vector(EQ_u4_u1_11244,1);\
__declare_static_bit_vector(NOT_u1_u1_11245,1);\
__declare_static_bit_vector(konst_11246,1);\
bit_vector_clear(&konst_11246);\
__declare_static_bit_vector(MUX_11247,1);\
bit_vector_clear(&konst_11239);\
konst_11239.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_11239), &(BITSEL_u6_u1_11240));\
if (has_undefined_bit(&BITSEL_u6_u1_11240)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11240 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11240));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11240)){bit_vector_slice(&(X1), &(slice_11242), 0);\
bit_vector_clear(&konst_11243);\
bit_vector_equal(0, &(slice_11242), &(konst_11243), &(EQ_u4_u1_11244));\
bit_vector_not( &(EQ_u4_u1_11244), &(NOT_u1_u1_11245));\
bit_vector_cast_to_bit_vector(0, &(MUX_11247), &(NOT_u1_u1_11245));\
}else {bit_vector_clear(&konst_11246);\
bit_vector_cast_to_bit_vector(0, &(MUX_11247), &(konst_11246));\
}bit_vector_cast_to_bit_vector(0, &(t2), &(MUX_11247));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11259_c_macro_ __declare_static_bit_vector(konst_11251,6);\
bit_vector_clear(&konst_11251);\
konst_11251.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u6_u1_11252,1);\
__declare_static_bit_vector(slice_11255,27);\
__declare_static_bit_vector(CONCAT_u8_u35_11256,35);\
__declare_static_bit_vector(MUX_11258,35);\
bit_vector_clear(&konst_11251);\
konst_11251.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_11251), &(BITSEL_u6_u1_11252));\
if (has_undefined_bit(&BITSEL_u6_u1_11252)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11252 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11252));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11252)){bit_vector_slice(&(X2), &(slice_11255), 8);\
bit_vector_concatenate( &(ZERO_8), &(slice_11255), &(CONCAT_u8_u35_11256));\
bit_vector_cast_to_bit_vector(0, &(MUX_11258), &(CONCAT_u8_u35_11256));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11258), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_11258));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11271_c_macro_ __declare_static_bit_vector(konst_11262,6);\
bit_vector_clear(&konst_11262);\
konst_11262.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u6_u1_11263,1);\
__declare_static_bit_vector(slice_11265,8);\
__declare_static_bit_vector(konst_11266,8);\
bit_vector_clear(&konst_11266);\
__declare_static_bit_vector(EQ_u8_u1_11267,1);\
__declare_static_bit_vector(NOT_u1_u1_11268,1);\
__declare_static_bit_vector(konst_11269,1);\
bit_vector_clear(&konst_11269);\
__declare_static_bit_vector(MUX_11270,1);\
bit_vector_clear(&konst_11262);\
konst_11262.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_11262), &(BITSEL_u6_u1_11263));\
if (has_undefined_bit(&BITSEL_u6_u1_11263)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11263 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11263));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11263)){bit_vector_slice(&(X2), &(slice_11265), 0);\
bit_vector_clear(&konst_11266);\
bit_vector_equal(0, &(slice_11265), &(konst_11266), &(EQ_u8_u1_11267));\
bit_vector_not( &(EQ_u8_u1_11267), &(NOT_u1_u1_11268));\
bit_vector_cast_to_bit_vector(0, &(MUX_11270), &(NOT_u1_u1_11268));\
}else {bit_vector_clear(&konst_11269);\
bit_vector_cast_to_bit_vector(0, &(MUX_11270), &(konst_11269));\
}bit_vector_cast_to_bit_vector(0, &(t3), &(MUX_11270));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11282_c_macro_ __declare_static_bit_vector(konst_11274,6);\
bit_vector_clear(&konst_11274);\
konst_11274.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u6_u1_11275,1);\
__declare_static_bit_vector(slice_11278,19);\
__declare_static_bit_vector(CONCAT_u16_u35_11279,35);\
__declare_static_bit_vector(MUX_11281,35);\
bit_vector_clear(&konst_11274);\
konst_11274.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_11274), &(BITSEL_u6_u1_11275));\
if (has_undefined_bit(&BITSEL_u6_u1_11275)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11275 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11275));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11275)){bit_vector_slice(&(X3), &(slice_11278), 16);\
bit_vector_concatenate( &(ZERO_16), &(slice_11278), &(CONCAT_u16_u35_11279));\
bit_vector_cast_to_bit_vector(0, &(MUX_11281), &(CONCAT_u16_u35_11279));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11281), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_11281));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11294_c_macro_ __declare_static_bit_vector(konst_11285,6);\
bit_vector_clear(&konst_11285);\
konst_11285.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u6_u1_11286,1);\
__declare_static_bit_vector(slice_11288,16);\
__declare_static_bit_vector(konst_11289,16);\
bit_vector_clear(&konst_11289);\
__declare_static_bit_vector(EQ_u16_u1_11290,1);\
__declare_static_bit_vector(NOT_u1_u1_11291,1);\
__declare_static_bit_vector(konst_11292,1);\
bit_vector_clear(&konst_11292);\
__declare_static_bit_vector(MUX_11293,1);\
bit_vector_clear(&konst_11285);\
konst_11285.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_11285), &(BITSEL_u6_u1_11286));\
if (has_undefined_bit(&BITSEL_u6_u1_11286)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11286 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11286));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11286)){bit_vector_slice(&(X3), &(slice_11288), 0);\
bit_vector_clear(&konst_11289);\
bit_vector_equal(0, &(slice_11288), &(konst_11289), &(EQ_u16_u1_11290));\
bit_vector_not( &(EQ_u16_u1_11290), &(NOT_u1_u1_11291));\
bit_vector_cast_to_bit_vector(0, &(MUX_11293), &(NOT_u1_u1_11291));\
}else {bit_vector_clear(&konst_11292);\
bit_vector_cast_to_bit_vector(0, &(MUX_11293), &(konst_11292));\
}bit_vector_cast_to_bit_vector(0, &(t4), &(MUX_11293));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11305_c_macro_ __declare_static_bit_vector(konst_11297,6);\
bit_vector_clear(&konst_11297);\
konst_11297.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u6_u1_11298,1);\
__declare_static_bit_vector(slice_11301,3);\
__declare_static_bit_vector(CONCAT_u32_u35_11302,35);\
__declare_static_bit_vector(MUX_11304,35);\
bit_vector_clear(&konst_11297);\
konst_11297.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_11297), &(BITSEL_u6_u1_11298));\
if (has_undefined_bit(&BITSEL_u6_u1_11298)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11298 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11298));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11298)){bit_vector_slice(&(X4), &(slice_11301), 32);\
bit_vector_concatenate( &(ZERO_32), &(slice_11301), &(CONCAT_u32_u35_11302));\
bit_vector_cast_to_bit_vector(0, &(MUX_11304), &(CONCAT_u32_u35_11302));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_11304), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_11304));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11317_c_macro_ __declare_static_bit_vector(konst_11308,6);\
bit_vector_clear(&konst_11308);\
konst_11308.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u6_u1_11309,1);\
__declare_static_bit_vector(slice_11311,32);\
__declare_static_bit_vector(konst_11312,32);\
bit_vector_clear(&konst_11312);\
__declare_static_bit_vector(EQ_u32_u1_11313,1);\
__declare_static_bit_vector(NOT_u1_u1_11314,1);\
__declare_static_bit_vector(konst_11315,1);\
bit_vector_clear(&konst_11315);\
__declare_static_bit_vector(MUX_11316,1);\
bit_vector_clear(&konst_11308);\
konst_11308.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_11308), &(BITSEL_u6_u1_11309));\
if (has_undefined_bit(&BITSEL_u6_u1_11309)) {fprintf(stderr, "Error: variable BITSEL_u6_u1_11309 has undefined value (%s) at test point.\n", to_string(&BITSEL_u6_u1_11309));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u6_u1_11309)){bit_vector_slice(&(X4), &(slice_11311), 0);\
bit_vector_clear(&konst_11312);\
bit_vector_equal(0, &(slice_11311), &(konst_11312), &(EQ_u32_u1_11313));\
bit_vector_not( &(EQ_u32_u1_11313), &(NOT_u1_u1_11314));\
bit_vector_cast_to_bit_vector(0, &(MUX_11316), &(NOT_u1_u1_11314));\
}else {bit_vector_clear(&konst_11315);\
bit_vector_cast_to_bit_vector(0, &(MUX_11316), &(konst_11315));\
}bit_vector_cast_to_bit_vector(0, &(t5), &(MUX_11316));\
;

#define fpunit_exec_exec__u35_sr_special_assign_stmt_11330_c_macro_ __declare_static_bit_vector(OR_u1_u1_11321,1);\
__declare_static_bit_vector(OR_u1_u1_11323,1);\
__declare_static_bit_vector(OR_u1_u1_11326,1);\
__declare_static_bit_vector(OR_u1_u1_11328,1);\
__declare_static_bit_vector(OR_u1_u1_11329,1);\
bit_vector_or(&(t0), &(t1), &(OR_u1_u1_11321));\
bit_vector_or(&(OR_u1_u1_11321), &(t2), &(OR_u1_u1_11323));\
bit_vector_or(&(t3), &(t4), &(OR_u1_u1_11326));\
bit_vector_or(&(OR_u1_u1_11326), &(t5), &(OR_u1_u1_11328));\
bit_vector_or(&(OR_u1_u1_11323), &(OR_u1_u1_11328), &(OR_u1_u1_11329));\
bit_vector_cast_to_bit_vector(0, &(sticky), &(OR_u1_u1_11329));\
;

#define fpunit_exec_exec__u35_sr_special_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
bit_vector_cast_to_bit_vector(0, &((*__psticky)), &(sticky));\
;

#define fpunit_exec_exec__u64_shift_inner_inarg_prep_macro__ __declare_static_bit_vector(is_sll,1);\
bit_vector_cast_to_bit_vector(0, &(is_sll), &((*__pis_sll)));\
__declare_static_bit_vector(is_srl,1);\
bit_vector_cast_to_bit_vector(0, &(is_srl), &((*__pis_srl)));\
__declare_static_bit_vector(x,64);\
bit_vector_cast_to_bit_vector(0, &(x), &((*__px)));\
__declare_static_bit_vector(shift_amount,7);\
bit_vector_cast_to_bit_vector(0, &(shift_amount), &((*__pshift_amount)));\
__declare_static_bit_vector(result,64);\
__declare_static_bit_vector(result_sll,64);\
__declare_static_bit_vector(result_srl,64);\

#define fpunit_exec_exec__u64_shift_call_stmt_21014_c_macro_ _fpunit_exec_exec_u64_sll_( &(x),  &(shift_amount), &(result_sll));\
;

#define fpunit_exec_exec__u64_shift_call_stmt_21018_c_macro_ _fpunit_exec_exec_u64_srl_( &(x),  &(shift_amount), &(result_srl));\
;

#define fpunit_exec_exec__u64_shift_assign_stmt_21024_c_macro_ __declare_static_bit_vector(MUX_21023,64);\
if (has_undefined_bit(&is_sll)) {fprintf(stderr, "Error: variable is_sll has undefined value (%s) at test point.\n", to_string(&is_sll));assert(0);} \
if(bit_vector_to_uint64(0, &is_sll)){bit_vector_cast_to_bit_vector(0, &(MUX_21023), &(result_sll));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21023), &(result_srl));\
}bit_vector_cast_to_bit_vector(0, &(result), &(MUX_21023));\
;

#define fpunit_exec_exec__u64_shift_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__u64_shift_sticky_inner_inarg_prep_macro__ __declare_static_bit_vector(is_sll,1);\
bit_vector_cast_to_bit_vector(0, &(is_sll), &((*__pis_sll)));\
__declare_static_bit_vector(is_srl,1);\
bit_vector_cast_to_bit_vector(0, &(is_srl), &((*__pis_srl)));\
__declare_static_bit_vector(x,64);\
bit_vector_cast_to_bit_vector(0, &(x), &((*__px)));\
__declare_static_bit_vector(shift_amount,7);\
bit_vector_cast_to_bit_vector(0, &(shift_amount), &((*__pshift_amount)));\
__declare_static_bit_vector(result,64);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(result_sll,64);\
__declare_static_bit_vector(result_srl,64);\
__declare_static_bit_vector(shifted_bit_rep,1);\

#define fpunit_exec_exec__u64_shift_sticky_call_stmt_21036_c_macro_ _fpunit_exec_exec_u64_sll_( &(x),  &(shift_amount), &(result_sll));\
;

#define fpunit_exec_exec__u64_shift_sticky_call_stmt_21041_c_macro_ _fpunit_exec_exec_u64_sr_special_( &(x),  &(shift_amount), &(result_srl), &(shifted_bit_rep));\
;

#define fpunit_exec_exec__u64_shift_sticky_assign_stmt_21047_c_macro_ __declare_static_bit_vector(konst_21045,1);\
bit_vector_clear(&konst_21045);\
__declare_static_bit_vector(MUX_21046,1);\
if (has_undefined_bit(&is_srl)) {fprintf(stderr, "Error: variable is_srl has undefined value (%s) at test point.\n", to_string(&is_srl));assert(0);} \
if(bit_vector_to_uint64(0, &is_srl)){bit_vector_cast_to_bit_vector(0, &(MUX_21046), &(shifted_bit_rep));\
}else {bit_vector_clear(&konst_21045);\
bit_vector_cast_to_bit_vector(0, &(MUX_21046), &(konst_21045));\
}bit_vector_cast_to_bit_vector(0, &(sticky), &(MUX_21046));\
;

#define fpunit_exec_exec__u64_shift_sticky_assign_stmt_21053_c_macro_ __declare_static_bit_vector(MUX_21052,64);\
if (has_undefined_bit(&is_sll)) {fprintf(stderr, "Error: variable is_sll has undefined value (%s) at test point.\n", to_string(&is_sll));assert(0);} \
if(bit_vector_to_uint64(0, &is_sll)){bit_vector_cast_to_bit_vector(0, &(MUX_21052), &(result_sll));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21052), &(result_srl));\
}bit_vector_cast_to_bit_vector(0, &(result), &(MUX_21052));\
;

#define fpunit_exec_exec__u64_shift_sticky_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
bit_vector_cast_to_bit_vector(0, &((*__psticky)), &(sticky));\
;

#define fpunit_exec_exec__u64_sll_inner_inarg_prep_macro__ __declare_static_bit_vector(X,64);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,7);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,64);\
__declare_static_bit_vector(X0,64);\
__declare_static_bit_vector(X1,64);\
__declare_static_bit_vector(X2,64);\
__declare_static_bit_vector(X3,64);\
__declare_static_bit_vector(X4,64);\
__declare_static_bit_vector(X5,64);\

#define fpunit_exec_exec__u64_sll_assign_stmt_20861_c_macro_ __declare_static_bit_vector(konst_20853,7);\
bit_vector_clear(&konst_20853);\
__declare_static_bit_vector(BITSEL_u7_u1_20854,1);\
__declare_static_bit_vector(slice_20856,63);\
__declare_static_bit_vector(CONCAT_u63_u64_20858,64);\
__declare_static_bit_vector(MUX_20860,64);\
bit_vector_clear(&konst_20853);\
bit_vector_bitsel( &(S), &(konst_20853), &(BITSEL_u7_u1_20854));\
if (has_undefined_bit(&BITSEL_u7_u1_20854)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20854 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20854));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20854)){bit_vector_slice(&(X), &(slice_20856), 0);\
bit_vector_concatenate( &(slice_20856), &(ZERO_1), &(CONCAT_u63_u64_20858));\
bit_vector_cast_to_bit_vector(0, &(MUX_20860), &(CONCAT_u63_u64_20858));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20860), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_20860));\
;

#define fpunit_exec_exec__u64_sll_assign_stmt_20872_c_macro_ __declare_static_bit_vector(konst_20864,7);\
bit_vector_clear(&konst_20864);\
konst_20864.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u7_u1_20865,1);\
__declare_static_bit_vector(slice_20867,62);\
__declare_static_bit_vector(CONCAT_u62_u64_20869,64);\
__declare_static_bit_vector(MUX_20871,64);\
bit_vector_clear(&konst_20864);\
konst_20864.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_20864), &(BITSEL_u7_u1_20865));\
if (has_undefined_bit(&BITSEL_u7_u1_20865)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20865 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20865));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20865)){bit_vector_slice(&(X0), &(slice_20867), 0);\
bit_vector_concatenate( &(slice_20867), &(ZERO_2), &(CONCAT_u62_u64_20869));\
bit_vector_cast_to_bit_vector(0, &(MUX_20871), &(CONCAT_u62_u64_20869));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20871), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_20871));\
;

#define fpunit_exec_exec__u64_sll_assign_stmt_20883_c_macro_ __declare_static_bit_vector(konst_20875,7);\
bit_vector_clear(&konst_20875);\
konst_20875.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u7_u1_20876,1);\
__declare_static_bit_vector(slice_20878,60);\
__declare_static_bit_vector(CONCAT_u60_u64_20880,64);\
__declare_static_bit_vector(MUX_20882,64);\
bit_vector_clear(&konst_20875);\
konst_20875.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_20875), &(BITSEL_u7_u1_20876));\
if (has_undefined_bit(&BITSEL_u7_u1_20876)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20876 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20876));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20876)){bit_vector_slice(&(X1), &(slice_20878), 0);\
bit_vector_concatenate( &(slice_20878), &(ZERO_4), &(CONCAT_u60_u64_20880));\
bit_vector_cast_to_bit_vector(0, &(MUX_20882), &(CONCAT_u60_u64_20880));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20882), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_20882));\
;

#define fpunit_exec_exec__u64_sll_assign_stmt_20894_c_macro_ __declare_static_bit_vector(konst_20886,7);\
bit_vector_clear(&konst_20886);\
konst_20886.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u7_u1_20887,1);\
__declare_static_bit_vector(slice_20889,56);\
__declare_static_bit_vector(CONCAT_u56_u64_20891,64);\
__declare_static_bit_vector(MUX_20893,64);\
bit_vector_clear(&konst_20886);\
konst_20886.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_20886), &(BITSEL_u7_u1_20887));\
if (has_undefined_bit(&BITSEL_u7_u1_20887)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20887 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20887));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20887)){bit_vector_slice(&(X2), &(slice_20889), 0);\
bit_vector_concatenate( &(slice_20889), &(ZERO_8), &(CONCAT_u56_u64_20891));\
bit_vector_cast_to_bit_vector(0, &(MUX_20893), &(CONCAT_u56_u64_20891));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20893), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_20893));\
;

#define fpunit_exec_exec__u64_sll_assign_stmt_20905_c_macro_ __declare_static_bit_vector(konst_20897,7);\
bit_vector_clear(&konst_20897);\
konst_20897.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u7_u1_20898,1);\
__declare_static_bit_vector(slice_20900,48);\
__declare_static_bit_vector(CONCAT_u48_u64_20902,64);\
__declare_static_bit_vector(MUX_20904,64);\
bit_vector_clear(&konst_20897);\
konst_20897.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_20897), &(BITSEL_u7_u1_20898));\
if (has_undefined_bit(&BITSEL_u7_u1_20898)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20898 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20898));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20898)){bit_vector_slice(&(X3), &(slice_20900), 0);\
bit_vector_concatenate( &(slice_20900), &(ZERO_16), &(CONCAT_u48_u64_20902));\
bit_vector_cast_to_bit_vector(0, &(MUX_20904), &(CONCAT_u48_u64_20902));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20904), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_20904));\
;

#define fpunit_exec_exec__u64_sll_assign_stmt_20916_c_macro_ __declare_static_bit_vector(konst_20908,7);\
bit_vector_clear(&konst_20908);\
konst_20908.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u7_u1_20909,1);\
__declare_static_bit_vector(slice_20911,32);\
__declare_static_bit_vector(CONCAT_u32_u64_20913,64);\
__declare_static_bit_vector(MUX_20915,64);\
bit_vector_clear(&konst_20908);\
konst_20908.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_20908), &(BITSEL_u7_u1_20909));\
if (has_undefined_bit(&BITSEL_u7_u1_20909)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20909 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20909));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20909)){bit_vector_slice(&(X4), &(slice_20911), 0);\
bit_vector_concatenate( &(slice_20911), &(ZERO_32), &(CONCAT_u32_u64_20913));\
bit_vector_cast_to_bit_vector(0, &(MUX_20915), &(CONCAT_u32_u64_20913));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20915), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(X5), &(MUX_20915));\
;

#define fpunit_exec_exec__u64_sll_assign_stmt_20924_c_macro_ __declare_static_bit_vector(konst_20919,7);\
bit_vector_clear(&konst_20919);\
konst_20919.val.byte_array[0] = 6;\
__declare_static_bit_vector(BITSEL_u7_u1_20920,1);\
__declare_static_bit_vector(konst_20921,64);\
bit_vector_clear(&konst_20921);\
__declare_static_bit_vector(MUX_20923,64);\
bit_vector_clear(&konst_20919);\
konst_20919.val.byte_array[0] = 6;\
bit_vector_bitsel( &(S), &(konst_20919), &(BITSEL_u7_u1_20920));\
if (has_undefined_bit(&BITSEL_u7_u1_20920)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20920 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20920));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20920)){bit_vector_clear(&konst_20921);\
bit_vector_cast_to_bit_vector(0, &(MUX_20923), &(konst_20921));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20923), &(X5));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_20923));\
;

#define fpunit_exec_exec__u64_sll_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__u64_sr_special_inner_inarg_prep_macro__ __declare_static_bit_vector(X,64);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,7);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,64);\
__declare_static_bit_vector(sticky,1);\
__declare_static_bit_vector(X0,64);\
__declare_static_bit_vector(t0,1);\
__declare_static_bit_vector(X1,64);\
__declare_static_bit_vector(t1,1);\
__declare_static_bit_vector(X2,64);\
__declare_static_bit_vector(t2,1);\
__declare_static_bit_vector(X3,64);\
__declare_static_bit_vector(t3,1);\
__declare_static_bit_vector(X4,64);\
__declare_static_bit_vector(t4,1);\
__declare_static_bit_vector(X5,64);\
__declare_static_bit_vector(t5,1);\

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10234_c_macro_ __declare_static_bit_vector(konst_10226,7);\
bit_vector_clear(&konst_10226);\
__declare_static_bit_vector(BITSEL_u7_u1_10227,1);\
__declare_static_bit_vector(slice_10230,63);\
__declare_static_bit_vector(CONCAT_u1_u64_10231,64);\
__declare_static_bit_vector(MUX_10233,64);\
bit_vector_clear(&konst_10226);\
bit_vector_bitsel( &(S), &(konst_10226), &(BITSEL_u7_u1_10227));\
if (has_undefined_bit(&BITSEL_u7_u1_10227)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10227 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10227));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10227)){bit_vector_slice(&(X), &(slice_10230), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_10230), &(CONCAT_u1_u64_10231));\
bit_vector_cast_to_bit_vector(0, &(MUX_10233), &(CONCAT_u1_u64_10231));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10233), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_10233));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10244_c_macro_ __declare_static_bit_vector(konst_10237,7);\
bit_vector_clear(&konst_10237);\
__declare_static_bit_vector(BITSEL_u7_u1_10238,1);\
__declare_static_bit_vector(konst_10240,64);\
bit_vector_clear(&konst_10240);\
__declare_static_bit_vector(BITSEL_u64_u1_10241,1);\
__declare_static_bit_vector(konst_10242,1);\
bit_vector_clear(&konst_10242);\
__declare_static_bit_vector(MUX_10243,1);\
bit_vector_clear(&konst_10237);\
bit_vector_bitsel( &(S), &(konst_10237), &(BITSEL_u7_u1_10238));\
if (has_undefined_bit(&BITSEL_u7_u1_10238)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10238 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10238));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10238)){bit_vector_clear(&konst_10240);\
bit_vector_bitsel( &(X), &(konst_10240), &(BITSEL_u64_u1_10241));\
bit_vector_cast_to_bit_vector(0, &(MUX_10243), &(BITSEL_u64_u1_10241));\
}else {bit_vector_clear(&konst_10242);\
bit_vector_cast_to_bit_vector(0, &(MUX_10243), &(konst_10242));\
}bit_vector_cast_to_bit_vector(0, &(t0), &(MUX_10243));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10255_c_macro_ __declare_static_bit_vector(konst_10247,7);\
bit_vector_clear(&konst_10247);\
konst_10247.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u7_u1_10248,1);\
__declare_static_bit_vector(slice_10251,62);\
__declare_static_bit_vector(CONCAT_u2_u64_10252,64);\
__declare_static_bit_vector(MUX_10254,64);\
bit_vector_clear(&konst_10247);\
konst_10247.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_10247), &(BITSEL_u7_u1_10248));\
if (has_undefined_bit(&BITSEL_u7_u1_10248)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10248 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10248));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10248)){bit_vector_slice(&(X0), &(slice_10251), 2);\
bit_vector_concatenate( &(ZERO_2), &(slice_10251), &(CONCAT_u2_u64_10252));\
bit_vector_cast_to_bit_vector(0, &(MUX_10254), &(CONCAT_u2_u64_10252));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10254), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_10254));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10267_c_macro_ __declare_static_bit_vector(konst_10258,7);\
bit_vector_clear(&konst_10258);\
konst_10258.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u7_u1_10259,1);\
__declare_static_bit_vector(slice_10261,2);\
__declare_static_bit_vector(konst_10262,2);\
bit_vector_clear(&konst_10262);\
__declare_static_bit_vector(EQ_u2_u1_10263,1);\
__declare_static_bit_vector(NOT_u1_u1_10264,1);\
__declare_static_bit_vector(konst_10265,1);\
bit_vector_clear(&konst_10265);\
__declare_static_bit_vector(MUX_10266,1);\
bit_vector_clear(&konst_10258);\
konst_10258.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_10258), &(BITSEL_u7_u1_10259));\
if (has_undefined_bit(&BITSEL_u7_u1_10259)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10259 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10259));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10259)){bit_vector_slice(&(X0), &(slice_10261), 0);\
bit_vector_clear(&konst_10262);\
bit_vector_equal(0, &(slice_10261), &(konst_10262), &(EQ_u2_u1_10263));\
bit_vector_not( &(EQ_u2_u1_10263), &(NOT_u1_u1_10264));\
bit_vector_cast_to_bit_vector(0, &(MUX_10266), &(NOT_u1_u1_10264));\
}else {bit_vector_clear(&konst_10265);\
bit_vector_cast_to_bit_vector(0, &(MUX_10266), &(konst_10265));\
}bit_vector_cast_to_bit_vector(0, &(t1), &(MUX_10266));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10278_c_macro_ __declare_static_bit_vector(konst_10270,7);\
bit_vector_clear(&konst_10270);\
konst_10270.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u7_u1_10271,1);\
__declare_static_bit_vector(slice_10274,60);\
__declare_static_bit_vector(CONCAT_u4_u64_10275,64);\
__declare_static_bit_vector(MUX_10277,64);\
bit_vector_clear(&konst_10270);\
konst_10270.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_10270), &(BITSEL_u7_u1_10271));\
if (has_undefined_bit(&BITSEL_u7_u1_10271)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10271 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10271));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10271)){bit_vector_slice(&(X1), &(slice_10274), 4);\
bit_vector_concatenate( &(ZERO_4), &(slice_10274), &(CONCAT_u4_u64_10275));\
bit_vector_cast_to_bit_vector(0, &(MUX_10277), &(CONCAT_u4_u64_10275));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10277), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_10277));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10290_c_macro_ __declare_static_bit_vector(konst_10281,7);\
bit_vector_clear(&konst_10281);\
konst_10281.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u7_u1_10282,1);\
__declare_static_bit_vector(slice_10284,4);\
__declare_static_bit_vector(konst_10285,4);\
bit_vector_clear(&konst_10285);\
__declare_static_bit_vector(EQ_u4_u1_10286,1);\
__declare_static_bit_vector(NOT_u1_u1_10287,1);\
__declare_static_bit_vector(konst_10288,1);\
bit_vector_clear(&konst_10288);\
__declare_static_bit_vector(MUX_10289,1);\
bit_vector_clear(&konst_10281);\
konst_10281.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_10281), &(BITSEL_u7_u1_10282));\
if (has_undefined_bit(&BITSEL_u7_u1_10282)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10282 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10282));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10282)){bit_vector_slice(&(X1), &(slice_10284), 0);\
bit_vector_clear(&konst_10285);\
bit_vector_equal(0, &(slice_10284), &(konst_10285), &(EQ_u4_u1_10286));\
bit_vector_not( &(EQ_u4_u1_10286), &(NOT_u1_u1_10287));\
bit_vector_cast_to_bit_vector(0, &(MUX_10289), &(NOT_u1_u1_10287));\
}else {bit_vector_clear(&konst_10288);\
bit_vector_cast_to_bit_vector(0, &(MUX_10289), &(konst_10288));\
}bit_vector_cast_to_bit_vector(0, &(t2), &(MUX_10289));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10301_c_macro_ __declare_static_bit_vector(konst_10293,7);\
bit_vector_clear(&konst_10293);\
konst_10293.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u7_u1_10294,1);\
__declare_static_bit_vector(slice_10297,56);\
__declare_static_bit_vector(CONCAT_u8_u64_10298,64);\
__declare_static_bit_vector(MUX_10300,64);\
bit_vector_clear(&konst_10293);\
konst_10293.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_10293), &(BITSEL_u7_u1_10294));\
if (has_undefined_bit(&BITSEL_u7_u1_10294)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10294 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10294));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10294)){bit_vector_slice(&(X2), &(slice_10297), 8);\
bit_vector_concatenate( &(ZERO_8), &(slice_10297), &(CONCAT_u8_u64_10298));\
bit_vector_cast_to_bit_vector(0, &(MUX_10300), &(CONCAT_u8_u64_10298));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10300), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_10300));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10313_c_macro_ __declare_static_bit_vector(konst_10304,7);\
bit_vector_clear(&konst_10304);\
konst_10304.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u7_u1_10305,1);\
__declare_static_bit_vector(slice_10307,8);\
__declare_static_bit_vector(konst_10308,8);\
bit_vector_clear(&konst_10308);\
__declare_static_bit_vector(EQ_u8_u1_10309,1);\
__declare_static_bit_vector(NOT_u1_u1_10310,1);\
__declare_static_bit_vector(konst_10311,1);\
bit_vector_clear(&konst_10311);\
__declare_static_bit_vector(MUX_10312,1);\
bit_vector_clear(&konst_10304);\
konst_10304.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_10304), &(BITSEL_u7_u1_10305));\
if (has_undefined_bit(&BITSEL_u7_u1_10305)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10305 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10305));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10305)){bit_vector_slice(&(X2), &(slice_10307), 0);\
bit_vector_clear(&konst_10308);\
bit_vector_equal(0, &(slice_10307), &(konst_10308), &(EQ_u8_u1_10309));\
bit_vector_not( &(EQ_u8_u1_10309), &(NOT_u1_u1_10310));\
bit_vector_cast_to_bit_vector(0, &(MUX_10312), &(NOT_u1_u1_10310));\
}else {bit_vector_clear(&konst_10311);\
bit_vector_cast_to_bit_vector(0, &(MUX_10312), &(konst_10311));\
}bit_vector_cast_to_bit_vector(0, &(t3), &(MUX_10312));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10324_c_macro_ __declare_static_bit_vector(konst_10316,7);\
bit_vector_clear(&konst_10316);\
konst_10316.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u7_u1_10317,1);\
__declare_static_bit_vector(slice_10320,48);\
__declare_static_bit_vector(CONCAT_u16_u64_10321,64);\
__declare_static_bit_vector(MUX_10323,64);\
bit_vector_clear(&konst_10316);\
konst_10316.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_10316), &(BITSEL_u7_u1_10317));\
if (has_undefined_bit(&BITSEL_u7_u1_10317)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10317 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10317));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10317)){bit_vector_slice(&(X3), &(slice_10320), 16);\
bit_vector_concatenate( &(ZERO_16), &(slice_10320), &(CONCAT_u16_u64_10321));\
bit_vector_cast_to_bit_vector(0, &(MUX_10323), &(CONCAT_u16_u64_10321));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10323), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_10323));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10336_c_macro_ __declare_static_bit_vector(konst_10327,7);\
bit_vector_clear(&konst_10327);\
konst_10327.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u7_u1_10328,1);\
__declare_static_bit_vector(slice_10330,16);\
__declare_static_bit_vector(konst_10331,16);\
bit_vector_clear(&konst_10331);\
__declare_static_bit_vector(EQ_u16_u1_10332,1);\
__declare_static_bit_vector(NOT_u1_u1_10333,1);\
__declare_static_bit_vector(konst_10334,1);\
bit_vector_clear(&konst_10334);\
__declare_static_bit_vector(MUX_10335,1);\
bit_vector_clear(&konst_10327);\
konst_10327.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_10327), &(BITSEL_u7_u1_10328));\
if (has_undefined_bit(&BITSEL_u7_u1_10328)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10328 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10328));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10328)){bit_vector_slice(&(X3), &(slice_10330), 0);\
bit_vector_clear(&konst_10331);\
bit_vector_equal(0, &(slice_10330), &(konst_10331), &(EQ_u16_u1_10332));\
bit_vector_not( &(EQ_u16_u1_10332), &(NOT_u1_u1_10333));\
bit_vector_cast_to_bit_vector(0, &(MUX_10335), &(NOT_u1_u1_10333));\
}else {bit_vector_clear(&konst_10334);\
bit_vector_cast_to_bit_vector(0, &(MUX_10335), &(konst_10334));\
}bit_vector_cast_to_bit_vector(0, &(t4), &(MUX_10335));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10347_c_macro_ __declare_static_bit_vector(konst_10339,7);\
bit_vector_clear(&konst_10339);\
konst_10339.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u7_u1_10340,1);\
__declare_static_bit_vector(slice_10343,32);\
__declare_static_bit_vector(CONCAT_u32_u64_10344,64);\
__declare_static_bit_vector(MUX_10346,64);\
bit_vector_clear(&konst_10339);\
konst_10339.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_10339), &(BITSEL_u7_u1_10340));\
if (has_undefined_bit(&BITSEL_u7_u1_10340)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10340 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10340));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10340)){bit_vector_slice(&(X4), &(slice_10343), 32);\
bit_vector_concatenate( &(ZERO_32), &(slice_10343), &(CONCAT_u32_u64_10344));\
bit_vector_cast_to_bit_vector(0, &(MUX_10346), &(CONCAT_u32_u64_10344));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10346), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(X5), &(MUX_10346));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10359_c_macro_ __declare_static_bit_vector(konst_10350,7);\
bit_vector_clear(&konst_10350);\
konst_10350.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u7_u1_10351,1);\
__declare_static_bit_vector(slice_10353,32);\
__declare_static_bit_vector(konst_10354,32);\
bit_vector_clear(&konst_10354);\
__declare_static_bit_vector(EQ_u32_u1_10355,1);\
__declare_static_bit_vector(NOT_u1_u1_10356,1);\
__declare_static_bit_vector(konst_10357,1);\
bit_vector_clear(&konst_10357);\
__declare_static_bit_vector(MUX_10358,1);\
bit_vector_clear(&konst_10350);\
konst_10350.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_10350), &(BITSEL_u7_u1_10351));\
if (has_undefined_bit(&BITSEL_u7_u1_10351)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10351 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10351));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10351)){bit_vector_slice(&(X4), &(slice_10353), 0);\
bit_vector_clear(&konst_10354);\
bit_vector_equal(0, &(slice_10353), &(konst_10354), &(EQ_u32_u1_10355));\
bit_vector_not( &(EQ_u32_u1_10355), &(NOT_u1_u1_10356));\
bit_vector_cast_to_bit_vector(0, &(MUX_10358), &(NOT_u1_u1_10356));\
}else {bit_vector_clear(&konst_10357);\
bit_vector_cast_to_bit_vector(0, &(MUX_10358), &(konst_10357));\
}bit_vector_cast_to_bit_vector(0, &(t5), &(MUX_10358));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10367_c_macro_ __declare_static_bit_vector(konst_10362,7);\
bit_vector_clear(&konst_10362);\
konst_10362.val.byte_array[0] = 6;\
__declare_static_bit_vector(BITSEL_u7_u1_10363,1);\
__declare_static_bit_vector(konst_10364,64);\
bit_vector_clear(&konst_10364);\
__declare_static_bit_vector(MUX_10366,64);\
bit_vector_clear(&konst_10362);\
konst_10362.val.byte_array[0] = 6;\
bit_vector_bitsel( &(S), &(konst_10362), &(BITSEL_u7_u1_10363));\
if (has_undefined_bit(&BITSEL_u7_u1_10363)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_10363 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_10363));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_10363)){bit_vector_clear(&konst_10364);\
bit_vector_cast_to_bit_vector(0, &(MUX_10366), &(konst_10364));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_10366), &(X5));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_10366));\
;

#define fpunit_exec_exec__u64_sr_special_assign_stmt_10380_c_macro_ __declare_static_bit_vector(OR_u1_u1_10371,1);\
__declare_static_bit_vector(OR_u1_u1_10373,1);\
__declare_static_bit_vector(OR_u1_u1_10376,1);\
__declare_static_bit_vector(OR_u1_u1_10378,1);\
__declare_static_bit_vector(OR_u1_u1_10379,1);\
bit_vector_or(&(t0), &(t1), &(OR_u1_u1_10371));\
bit_vector_or(&(OR_u1_u1_10371), &(t2), &(OR_u1_u1_10373));\
bit_vector_or(&(t3), &(t4), &(OR_u1_u1_10376));\
bit_vector_or(&(OR_u1_u1_10376), &(t5), &(OR_u1_u1_10378));\
bit_vector_or(&(OR_u1_u1_10373), &(OR_u1_u1_10378), &(OR_u1_u1_10379));\
bit_vector_cast_to_bit_vector(0, &(sticky), &(OR_u1_u1_10379));\
;

#define fpunit_exec_exec__u64_sr_special_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
bit_vector_cast_to_bit_vector(0, &((*__psticky)), &(sticky));\
;

#define fpunit_exec_exec__u64_srl_inner_inarg_prep_macro__ __declare_static_bit_vector(X,64);\
bit_vector_cast_to_bit_vector(0, &(X), &((*__pX)));\
__declare_static_bit_vector(S,7);\
bit_vector_cast_to_bit_vector(0, &(S), &((*__pS)));\
__declare_static_bit_vector(Y,64);\
__declare_static_bit_vector(X0,64);\
__declare_static_bit_vector(X1,64);\
__declare_static_bit_vector(X2,64);\
__declare_static_bit_vector(X3,64);\
__declare_static_bit_vector(X4,64);\
__declare_static_bit_vector(X5,64);\

#define fpunit_exec_exec__u64_srl_assign_stmt_20940_c_macro_ __declare_static_bit_vector(konst_20932,7);\
bit_vector_clear(&konst_20932);\
__declare_static_bit_vector(BITSEL_u7_u1_20933,1);\
__declare_static_bit_vector(slice_20936,63);\
__declare_static_bit_vector(CONCAT_u1_u64_20937,64);\
__declare_static_bit_vector(MUX_20939,64);\
bit_vector_clear(&konst_20932);\
bit_vector_bitsel( &(S), &(konst_20932), &(BITSEL_u7_u1_20933));\
if (has_undefined_bit(&BITSEL_u7_u1_20933)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20933 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20933));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20933)){bit_vector_slice(&(X), &(slice_20936), 1);\
bit_vector_concatenate( &(ZERO_1), &(slice_20936), &(CONCAT_u1_u64_20937));\
bit_vector_cast_to_bit_vector(0, &(MUX_20939), &(CONCAT_u1_u64_20937));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20939), &(X));\
}bit_vector_cast_to_bit_vector(0, &(X0), &(MUX_20939));\
;

#define fpunit_exec_exec__u64_srl_assign_stmt_20951_c_macro_ __declare_static_bit_vector(konst_20943,7);\
bit_vector_clear(&konst_20943);\
konst_20943.val.byte_array[0] = 1;\
__declare_static_bit_vector(BITSEL_u7_u1_20944,1);\
__declare_static_bit_vector(slice_20947,62);\
__declare_static_bit_vector(CONCAT_u2_u64_20948,64);\
__declare_static_bit_vector(MUX_20950,64);\
bit_vector_clear(&konst_20943);\
konst_20943.val.byte_array[0] = 1;\
bit_vector_bitsel( &(S), &(konst_20943), &(BITSEL_u7_u1_20944));\
if (has_undefined_bit(&BITSEL_u7_u1_20944)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20944 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20944));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20944)){bit_vector_slice(&(X0), &(slice_20947), 2);\
bit_vector_concatenate( &(ZERO_2), &(slice_20947), &(CONCAT_u2_u64_20948));\
bit_vector_cast_to_bit_vector(0, &(MUX_20950), &(CONCAT_u2_u64_20948));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20950), &(X0));\
}bit_vector_cast_to_bit_vector(0, &(X1), &(MUX_20950));\
;

#define fpunit_exec_exec__u64_srl_assign_stmt_20962_c_macro_ __declare_static_bit_vector(konst_20954,7);\
bit_vector_clear(&konst_20954);\
konst_20954.val.byte_array[0] = 2;\
__declare_static_bit_vector(BITSEL_u7_u1_20955,1);\
__declare_static_bit_vector(slice_20958,60);\
__declare_static_bit_vector(CONCAT_u4_u64_20959,64);\
__declare_static_bit_vector(MUX_20961,64);\
bit_vector_clear(&konst_20954);\
konst_20954.val.byte_array[0] = 2;\
bit_vector_bitsel( &(S), &(konst_20954), &(BITSEL_u7_u1_20955));\
if (has_undefined_bit(&BITSEL_u7_u1_20955)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20955 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20955));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20955)){bit_vector_slice(&(X1), &(slice_20958), 4);\
bit_vector_concatenate( &(ZERO_4), &(slice_20958), &(CONCAT_u4_u64_20959));\
bit_vector_cast_to_bit_vector(0, &(MUX_20961), &(CONCAT_u4_u64_20959));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20961), &(X1));\
}bit_vector_cast_to_bit_vector(0, &(X2), &(MUX_20961));\
;

#define fpunit_exec_exec__u64_srl_assign_stmt_20973_c_macro_ __declare_static_bit_vector(konst_20965,7);\
bit_vector_clear(&konst_20965);\
konst_20965.val.byte_array[0] = 3;\
__declare_static_bit_vector(BITSEL_u7_u1_20966,1);\
__declare_static_bit_vector(slice_20969,56);\
__declare_static_bit_vector(CONCAT_u8_u64_20970,64);\
__declare_static_bit_vector(MUX_20972,64);\
bit_vector_clear(&konst_20965);\
konst_20965.val.byte_array[0] = 3;\
bit_vector_bitsel( &(S), &(konst_20965), &(BITSEL_u7_u1_20966));\
if (has_undefined_bit(&BITSEL_u7_u1_20966)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20966 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20966));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20966)){bit_vector_slice(&(X2), &(slice_20969), 8);\
bit_vector_concatenate( &(ZERO_8), &(slice_20969), &(CONCAT_u8_u64_20970));\
bit_vector_cast_to_bit_vector(0, &(MUX_20972), &(CONCAT_u8_u64_20970));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20972), &(X2));\
}bit_vector_cast_to_bit_vector(0, &(X3), &(MUX_20972));\
;

#define fpunit_exec_exec__u64_srl_assign_stmt_20984_c_macro_ __declare_static_bit_vector(konst_20976,7);\
bit_vector_clear(&konst_20976);\
konst_20976.val.byte_array[0] = 4;\
__declare_static_bit_vector(BITSEL_u7_u1_20977,1);\
__declare_static_bit_vector(slice_20980,48);\
__declare_static_bit_vector(CONCAT_u16_u64_20981,64);\
__declare_static_bit_vector(MUX_20983,64);\
bit_vector_clear(&konst_20976);\
konst_20976.val.byte_array[0] = 4;\
bit_vector_bitsel( &(S), &(konst_20976), &(BITSEL_u7_u1_20977));\
if (has_undefined_bit(&BITSEL_u7_u1_20977)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20977 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20977));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20977)){bit_vector_slice(&(X3), &(slice_20980), 16);\
bit_vector_concatenate( &(ZERO_16), &(slice_20980), &(CONCAT_u16_u64_20981));\
bit_vector_cast_to_bit_vector(0, &(MUX_20983), &(CONCAT_u16_u64_20981));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20983), &(X3));\
}bit_vector_cast_to_bit_vector(0, &(X4), &(MUX_20983));\
;

#define fpunit_exec_exec__u64_srl_assign_stmt_20995_c_macro_ __declare_static_bit_vector(konst_20987,7);\
bit_vector_clear(&konst_20987);\
konst_20987.val.byte_array[0] = 5;\
__declare_static_bit_vector(BITSEL_u7_u1_20988,1);\
__declare_static_bit_vector(slice_20991,32);\
__declare_static_bit_vector(CONCAT_u32_u64_20992,64);\
__declare_static_bit_vector(MUX_20994,64);\
bit_vector_clear(&konst_20987);\
konst_20987.val.byte_array[0] = 5;\
bit_vector_bitsel( &(S), &(konst_20987), &(BITSEL_u7_u1_20988));\
if (has_undefined_bit(&BITSEL_u7_u1_20988)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20988 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20988));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20988)){bit_vector_slice(&(X4), &(slice_20991), 32);\
bit_vector_concatenate( &(ZERO_32), &(slice_20991), &(CONCAT_u32_u64_20992));\
bit_vector_cast_to_bit_vector(0, &(MUX_20994), &(CONCAT_u32_u64_20992));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_20994), &(X4));\
}bit_vector_cast_to_bit_vector(0, &(X5), &(MUX_20994));\
;

#define fpunit_exec_exec__u64_srl_assign_stmt_21003_c_macro_ __declare_static_bit_vector(konst_20998,7);\
bit_vector_clear(&konst_20998);\
konst_20998.val.byte_array[0] = 6;\
__declare_static_bit_vector(BITSEL_u7_u1_20999,1);\
__declare_static_bit_vector(konst_21000,64);\
bit_vector_clear(&konst_21000);\
__declare_static_bit_vector(MUX_21002,64);\
bit_vector_clear(&konst_20998);\
konst_20998.val.byte_array[0] = 6;\
bit_vector_bitsel( &(S), &(konst_20998), &(BITSEL_u7_u1_20999));\
if (has_undefined_bit(&BITSEL_u7_u1_20999)) {fprintf(stderr, "Error: variable BITSEL_u7_u1_20999 has undefined value (%s) at test point.\n", to_string(&BITSEL_u7_u1_20999));assert(0);} \
if(bit_vector_to_uint64(0, &BITSEL_u7_u1_20999)){bit_vector_clear(&konst_21000);\
bit_vector_cast_to_bit_vector(0, &(MUX_21002), &(konst_21000));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21002), &(X5));\
}bit_vector_cast_to_bit_vector(0, &(Y), &(MUX_21002));\
;

#define fpunit_exec_exec__u64_srl_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pY)), &(Y));\
;

#define fpunit_exec_exec__u64_true_divide_inner_inarg_prep_macro__ __declare_static_bit_vector(udividend,64);\
bit_vector_cast_to_bit_vector(0, &(udividend), &((*__pudividend)));\
__declare_static_bit_vector(udivisor,64);\
bit_vector_cast_to_bit_vector(0, &(udivisor), &((*__pudivisor)));\
__declare_static_bit_vector(quotient,64);\

#define fpunit_exec_exec__u64_true_divide_branch_block_stmt_21059_c_export_decl_macro_ __declare_static_bit_vector(q__QUOTIENT,64);\
__declare_static_bit_vector(QUOTIENT,64);\
__declare_static_bit_vector(DIVIDEND,64);\
__declare_static_bit_vector(SD,64);\
__declare_static_bit_vector(CQ,64);\
__declare_static_bit_vector(QUOTIENT_21091_delayed_2_0,64);\
__declare_static_bit_vector(NQUOTIENT,64);\
__declare_static_bit_vector(DIVIDEND_21096_delayed_2_0,64);\
__declare_static_bit_vector(NDIVIDEND,64);\


#define fpunit_exec_exec__u64_true_divide_merge_stmt_21061_c_preamble_macro_ uint8_t merge_stmt_21061_entry_flag;\
merge_stmt_21061_entry_flag = do_while_entry_flag;\
goto merge_stmt_21061_run;\
merge_stmt_21061_run: ;\

#define fpunit_exec_exec__u64_true_divide_phi_stmt_21062_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(QUOTIENT), &(NQUOTIENT));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(QUOTIENT), &(ZERO_64));\
}\
;

#define fpunit_exec_exec__u64_true_divide_phi_stmt_21066_c_macro_ if(do_while_loopback_flag) {\
bit_vector_cast_to_bit_vector(0, &(DIVIDEND), &(NDIVIDEND));\
}\
else {\
bit_vector_cast_to_bit_vector(0, &(DIVIDEND), &(udividend));\
}\
;
;

#define fpunit_exec_exec__u64_true_divide_merge_stmt_21061_c_postamble_macro_ merge_stmt_21061_entry_flag = 0;

#define fpunit_exec_exec__u64_true_divide_stmt_21073_c_macro_ uint32_t fpunit_exec_exec__u64_true_divide_stmt_21073_c_macro___print_counter= get_file_print_lock(fpunit_exec_exec___report_log_file__);if(fpunit_exec_exec___report_log_file__ != NULL) fprintf(fpunit_exec_exec___report_log_file__,"[%u]iunit_exec>\t%s\n",fpunit_exec_exec__u64_true_divide_stmt_21073_c_macro___print_counter,"true_divide");if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]iunit_exec>\t\t%s\t\t",fpunit_exec_exec__u64_true_divide_stmt_21073_c_macro___print_counter,"DIVIDEND");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(DIVIDEND)));fflush (fpunit_exec_exec___report_log_file__);}if(fpunit_exec_exec___report_log_file__ != NULL) {fprintf(fpunit_exec_exec___report_log_file__,"[%u]iunit_exec>\t\t%s\t\t",fpunit_exec_exec__u64_true_divide_stmt_21073_c_macro___print_counter,"QUOTIENT");fprintf(fpunit_exec_exec___report_log_file__, ":= 0x%s\n",to_hex_string(&(QUOTIENT)));fflush (fpunit_exec_exec___report_log_file__);}release_file_print_lock(fpunit_exec_exec___report_log_file__);;

#define fpunit_exec_exec__u64_true_divide_call_stmt_21078_c_macro_ _fpunit_exec_exec_alignDivisorToDividend_( &(DIVIDEND),  &(udivisor), &(SD), &(CQ));\
;

#define fpunit_exec_exec__u64_true_divide_assign_stmt_21081_c_macro_ bit_vector_cast_to_bit_vector(0, &(QUOTIENT_21091_delayed_2_0), &(QUOTIENT));\
;

#define fpunit_exec_exec__u64_true_divide_assign_stmt_21086_c_macro_ __declare_static_bit_vector(ADD_u64_u64_21085,64);\
bit_vector_plus( &(QUOTIENT_21091_delayed_2_0), &(CQ), &(ADD_u64_u64_21085));\
bit_vector_cast_to_bit_vector(0, &(NQUOTIENT), &(ADD_u64_u64_21085));\
;

#define fpunit_exec_exec__u64_true_divide_assign_stmt_21089_c_macro_ bit_vector_cast_to_bit_vector(0, &(DIVIDEND_21096_delayed_2_0), &(DIVIDEND));\
;

#define fpunit_exec_exec__u64_true_divide_assign_stmt_21094_c_macro_ __declare_static_bit_vector(SUB_u64_u64_21093,64);\
bit_vector_minus( &(DIVIDEND_21096_delayed_2_0), &(SD), &(SUB_u64_u64_21093));\
bit_vector_cast_to_bit_vector(0, &(NDIVIDEND), &(SUB_u64_u64_21093));\
;
;

#define fpunit_exec_exec__u64_true_divide_branch_block_stmt_21059_c_export_apply_macro_ bit_vector_cast_to_bit_vector(0, &(q__QUOTIENT), &(QUOTIENT));\
;

#define fpunit_exec_exec__u64_true_divide_assign_stmt_21102_c_macro_ bit_vector_cast_to_bit_vector(0, &(quotient), &(q__QUOTIENT));\
;

#define fpunit_exec_exec__u64_true_divide_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pquotient)), &(quotient));\
;

#define fpunit_exec_exec__u64_true_divide_outer_arg_decl_macro__ __declare_static_bit_vector(__udividend, 64);\
bit_vector_assign_uint64(0, &__udividend, udividend);\
__declare_static_bit_vector(__udivisor, 64);\
bit_vector_assign_uint64(0, &__udivisor, udivisor);\
__declare_static_bit_vector(__quotient, 64);\
;

#define fpunit_exec_exec__u64_true_divide_outer_op_xfer_macro__  *quotient =  bit_vector_to_uint64(0, &__quotient);\
;

#define fpunit_exec_exec__u_cmp_32_inner_inarg_prep_macro__ __declare_static_bit_vector(a,32);\
bit_vector_cast_to_bit_vector(0, &(a), &((*__pa)));\
__declare_static_bit_vector(b,32);\
bit_vector_cast_to_bit_vector(0, &(b), &((*__pb)));\
__declare_static_bit_vector(l,1);\
__declare_static_bit_vector(g,1);\
__declare_static_bit_vector(e,1);\
__declare_static_bit_vector(al,16);\
__declare_static_bit_vector(ah,16);\
__declare_static_bit_vector(bl,16);\
__declare_static_bit_vector(bh,16);\
__declare_static_bit_vector(ll,1);\
__declare_static_bit_vector(gl,1);\
__declare_static_bit_vector(el,1);\
__declare_static_bit_vector(lh,1);\
__declare_static_bit_vector(gh,1);\
__declare_static_bit_vector(eh,1);\

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3209_c_macro_ __declare_static_bit_vector(slice_3208,16);\
bit_vector_slice(&(a), &(slice_3208), 0);\
bit_vector_cast_to_bit_vector(0, &(al), &(slice_3208));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3213_c_macro_ __declare_static_bit_vector(slice_3212,16);\
bit_vector_slice(&(a), &(slice_3212), 16);\
bit_vector_cast_to_bit_vector(0, &(ah), &(slice_3212));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3217_c_macro_ __declare_static_bit_vector(slice_3216,16);\
bit_vector_slice(&(b), &(slice_3216), 0);\
bit_vector_cast_to_bit_vector(0, &(bl), &(slice_3216));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3221_c_macro_ __declare_static_bit_vector(slice_3220,16);\
bit_vector_slice(&(b), &(slice_3220), 16);\
bit_vector_cast_to_bit_vector(0, &(bh), &(slice_3220));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3226_c_macro_ __declare_static_bit_vector(ULT_u16_u1_3225,1);\
bit_vector_less(0, &(al), &(bl), &(ULT_u16_u1_3225));\
bit_vector_cast_to_bit_vector(0, &(ll), &(ULT_u16_u1_3225));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3231_c_macro_ __declare_static_bit_vector(UGT_u16_u1_3230,1);\
bit_vector_greater(0, &(al), &(bl), &(UGT_u16_u1_3230));\
bit_vector_cast_to_bit_vector(0, &(gl), &(UGT_u16_u1_3230));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3236_c_macro_ __declare_static_bit_vector(EQ_u16_u1_3235,1);\
bit_vector_equal(0, &(al), &(bl), &(EQ_u16_u1_3235));\
bit_vector_cast_to_bit_vector(0, &(el), &(EQ_u16_u1_3235));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3241_c_macro_ __declare_static_bit_vector(ULT_u16_u1_3240,1);\
bit_vector_less(0, &(ah), &(bh), &(ULT_u16_u1_3240));\
bit_vector_cast_to_bit_vector(0, &(lh), &(ULT_u16_u1_3240));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3246_c_macro_ __declare_static_bit_vector(UGT_u16_u1_3245,1);\
bit_vector_greater(0, &(ah), &(bh), &(UGT_u16_u1_3245));\
bit_vector_cast_to_bit_vector(0, &(gh), &(UGT_u16_u1_3245));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3251_c_macro_ __declare_static_bit_vector(EQ_u16_u1_3250,1);\
bit_vector_equal(0, &(ah), &(bh), &(EQ_u16_u1_3250));\
bit_vector_cast_to_bit_vector(0, &(eh), &(EQ_u16_u1_3250));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3258_c_macro_ __declare_static_bit_vector(AND_u1_u1_3256,1);\
__declare_static_bit_vector(OR_u1_u1_3257,1);\
bit_vector_and(&(eh), &(ll), &(AND_u1_u1_3256));\
bit_vector_or(&(lh), &(AND_u1_u1_3256), &(OR_u1_u1_3257));\
bit_vector_cast_to_bit_vector(0, &(l), &(OR_u1_u1_3257));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3263_c_macro_ __declare_static_bit_vector(AND_u1_u1_3262,1);\
bit_vector_and(&(eh), &(el), &(AND_u1_u1_3262));\
bit_vector_cast_to_bit_vector(0, &(e), &(AND_u1_u1_3262));\
;

#define fpunit_exec_exec__u_cmp_32_assign_stmt_3270_c_macro_ __declare_static_bit_vector(AND_u1_u1_3268,1);\
__declare_static_bit_vector(OR_u1_u1_3269,1);\
bit_vector_and(&(eh), &(gl), &(AND_u1_u1_3268));\
bit_vector_or(&(gh), &(AND_u1_u1_3268), &(OR_u1_u1_3269));\
bit_vector_cast_to_bit_vector(0, &(g), &(OR_u1_u1_3269));\
;

#define fpunit_exec_exec__u_cmp_32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pl)), &(l));\
bit_vector_cast_to_bit_vector(0, &((*__pg)), &(g));\
bit_vector_cast_to_bit_vector(0, &((*__pe)), &(e));\
;

#define fpunit_exec_exec__u_cmp_34_inner_inarg_prep_macro__ __declare_static_bit_vector(a,34);\
bit_vector_cast_to_bit_vector(0, &(a), &((*__pa)));\
__declare_static_bit_vector(b,34);\
bit_vector_cast_to_bit_vector(0, &(b), &((*__pb)));\
__declare_static_bit_vector(l,1);\
__declare_static_bit_vector(g,1);\
__declare_static_bit_vector(e,1);\
__declare_static_bit_vector(al,32);\
__declare_static_bit_vector(ah,2);\
__declare_static_bit_vector(bl,32);\
__declare_static_bit_vector(bh,2);\
__declare_static_bit_vector(ll,1);\
__declare_static_bit_vector(gl,1);\
__declare_static_bit_vector(el,1);\
__declare_static_bit_vector(lh,1);\
__declare_static_bit_vector(gh,1);\
__declare_static_bit_vector(eh,1);\

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21113_c_macro_ __declare_static_bit_vector(slice_21112,32);\
bit_vector_slice(&(a), &(slice_21112), 0);\
bit_vector_cast_to_bit_vector(0, &(al), &(slice_21112));\
;

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21117_c_macro_ __declare_static_bit_vector(slice_21116,2);\
bit_vector_slice(&(a), &(slice_21116), 32);\
bit_vector_cast_to_bit_vector(0, &(ah), &(slice_21116));\
;

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21121_c_macro_ __declare_static_bit_vector(slice_21120,32);\
bit_vector_slice(&(b), &(slice_21120), 0);\
bit_vector_cast_to_bit_vector(0, &(bl), &(slice_21120));\
;

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21125_c_macro_ __declare_static_bit_vector(slice_21124,2);\
bit_vector_slice(&(b), &(slice_21124), 32);\
bit_vector_cast_to_bit_vector(0, &(bh), &(slice_21124));\
;

#define fpunit_exec_exec__u_cmp_34_call_stmt_21131_c_macro_ _fpunit_exec_exec_u_cmp_32_( &(al),  &(bl), &(ll), &(gl), &(el));\
;

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21136_c_macro_ __declare_static_bit_vector(ULT_u2_u1_21135,1);\
bit_vector_less(0, &(ah), &(bh), &(ULT_u2_u1_21135));\
bit_vector_cast_to_bit_vector(0, &(lh), &(ULT_u2_u1_21135));\
;

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21141_c_macro_ __declare_static_bit_vector(UGT_u2_u1_21140,1);\
bit_vector_greater(0, &(ah), &(bh), &(UGT_u2_u1_21140));\
bit_vector_cast_to_bit_vector(0, &(gh), &(UGT_u2_u1_21140));\
;

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21146_c_macro_ __declare_static_bit_vector(EQ_u2_u1_21145,1);\
bit_vector_equal(0, &(ah), &(bh), &(EQ_u2_u1_21145));\
bit_vector_cast_to_bit_vector(0, &(eh), &(EQ_u2_u1_21145));\
;

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21153_c_macro_ __declare_static_bit_vector(AND_u1_u1_21151,1);\
__declare_static_bit_vector(OR_u1_u1_21152,1);\
bit_vector_and(&(eh), &(ll), &(AND_u1_u1_21151));\
bit_vector_or(&(lh), &(AND_u1_u1_21151), &(OR_u1_u1_21152));\
bit_vector_cast_to_bit_vector(0, &(l), &(OR_u1_u1_21152));\
;

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21158_c_macro_ __declare_static_bit_vector(AND_u1_u1_21157,1);\
bit_vector_and(&(eh), &(el), &(AND_u1_u1_21157));\
bit_vector_cast_to_bit_vector(0, &(e), &(AND_u1_u1_21157));\
;

#define fpunit_exec_exec__u_cmp_34_assign_stmt_21165_c_macro_ __declare_static_bit_vector(AND_u1_u1_21163,1);\
__declare_static_bit_vector(OR_u1_u1_21164,1);\
bit_vector_and(&(eh), &(gl), &(AND_u1_u1_21163));\
bit_vector_or(&(gh), &(AND_u1_u1_21163), &(OR_u1_u1_21164));\
bit_vector_cast_to_bit_vector(0, &(g), &(OR_u1_u1_21164));\
;

#define fpunit_exec_exec__u_cmp_34_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pl)), &(l));\
bit_vector_cast_to_bit_vector(0, &((*__pg)), &(g));\
bit_vector_cast_to_bit_vector(0, &((*__pe)), &(e));\
;

#define fpunit_exec_exec__u_cmp_64_inner_inarg_prep_macro__ __declare_static_bit_vector(a,64);\
bit_vector_cast_to_bit_vector(0, &(a), &((*__pa)));\
__declare_static_bit_vector(b,64);\
bit_vector_cast_to_bit_vector(0, &(b), &((*__pb)));\
__declare_static_bit_vector(l,1);\
__declare_static_bit_vector(g,1);\
__declare_static_bit_vector(e,1);\
__declare_static_bit_vector(al,32);\
__declare_static_bit_vector(ah,32);\
__declare_static_bit_vector(bl,32);\
__declare_static_bit_vector(bh,32);\
__declare_static_bit_vector(ll,1);\
__declare_static_bit_vector(gl,1);\
__declare_static_bit_vector(el,1);\
__declare_static_bit_vector(lh,1);\
__declare_static_bit_vector(gh,1);\
__declare_static_bit_vector(eh,1);\

#define fpunit_exec_exec__u_cmp_64_assign_stmt_3281_c_macro_ __declare_static_bit_vector(slice_3280,32);\
bit_vector_slice(&(a), &(slice_3280), 0);\
bit_vector_cast_to_bit_vector(0, &(al), &(slice_3280));\
;

#define fpunit_exec_exec__u_cmp_64_assign_stmt_3285_c_macro_ __declare_static_bit_vector(slice_3284,32);\
bit_vector_slice(&(a), &(slice_3284), 32);\
bit_vector_cast_to_bit_vector(0, &(ah), &(slice_3284));\
;

#define fpunit_exec_exec__u_cmp_64_assign_stmt_3289_c_macro_ __declare_static_bit_vector(slice_3288,32);\
bit_vector_slice(&(b), &(slice_3288), 0);\
bit_vector_cast_to_bit_vector(0, &(bl), &(slice_3288));\
;

#define fpunit_exec_exec__u_cmp_64_assign_stmt_3293_c_macro_ __declare_static_bit_vector(slice_3292,32);\
bit_vector_slice(&(b), &(slice_3292), 32);\
bit_vector_cast_to_bit_vector(0, &(bh), &(slice_3292));\
;

#define fpunit_exec_exec__u_cmp_64_call_stmt_3299_c_macro_ _fpunit_exec_exec_u_cmp_32_( &(al),  &(bl), &(ll), &(gl), &(el));\
;

#define fpunit_exec_exec__u_cmp_64_call_stmt_3305_c_macro_ _fpunit_exec_exec_u_cmp_32_( &(ah),  &(bh), &(lh), &(gh), &(eh));\
;

#define fpunit_exec_exec__u_cmp_64_assign_stmt_3312_c_macro_ __declare_static_bit_vector(AND_u1_u1_3310,1);\
__declare_static_bit_vector(OR_u1_u1_3311,1);\
bit_vector_and(&(eh), &(ll), &(AND_u1_u1_3310));\
bit_vector_or(&(lh), &(AND_u1_u1_3310), &(OR_u1_u1_3311));\
bit_vector_cast_to_bit_vector(0, &(l), &(OR_u1_u1_3311));\
;

#define fpunit_exec_exec__u_cmp_64_assign_stmt_3317_c_macro_ __declare_static_bit_vector(AND_u1_u1_3316,1);\
bit_vector_and(&(eh), &(el), &(AND_u1_u1_3316));\
bit_vector_cast_to_bit_vector(0, &(e), &(AND_u1_u1_3316));\
;

#define fpunit_exec_exec__u_cmp_64_assign_stmt_3324_c_macro_ __declare_static_bit_vector(AND_u1_u1_3322,1);\
__declare_static_bit_vector(OR_u1_u1_3323,1);\
bit_vector_and(&(eh), &(gl), &(AND_u1_u1_3322));\
bit_vector_or(&(gh), &(AND_u1_u1_3322), &(OR_u1_u1_3323));\
bit_vector_cast_to_bit_vector(0, &(g), &(OR_u1_u1_3323));\
;

#define fpunit_exec_exec__u_cmp_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pl)), &(l));\
bit_vector_cast_to_bit_vector(0, &((*__pg)), &(g));\
bit_vector_cast_to_bit_vector(0, &((*__pe)), &(e));\
;

#define fpunit_exec_exec__u_set_index_64_inner_inarg_prep_macro__ __declare_static_bit_vector(idx,6);\
bit_vector_cast_to_bit_vector(0, &(idx), &((*__pidx)));\
__declare_static_bit_vector(x,64);\
__declare_static_bit_vector(idx_16,16);\
__declare_static_bit_vector(x00,16);\
__declare_static_bit_vector(x01,16);\
__declare_static_bit_vector(x10,16);\
__declare_static_bit_vector(x11,16);\

#define fpunit_exec_exec__u_set_index_64_assign_stmt_3332_c_macro_ __declare_static_bit_vector(type_cast_3331,16);\
bit_vector_bitcast_to_bit_vector( &(type_cast_3331), &(idx));\
bit_vector_cast_to_bit_vector(0, &(idx_16), &(type_cast_3331));\
;

#define fpunit_exec_exec__u_set_index_64_assign_stmt_3338_c_macro_ __declare_static_bit_vector(konst_3334,16);\
bit_vector_clear(&konst_3334);\
konst_3334.val.byte_array[0] = 1;\
__declare_static_bit_vector(type_cast_3335,16);\
bit_vector_clear(&type_cast_3335);\
type_cast_3335.val.byte_array[0] = 1;\
__declare_static_bit_vector(SHL_u16_u16_3337,16);\
bit_vector_clear(&konst_3334);\
konst_3334.val.byte_array[0] = 1;\
bit_vector_bitcast_to_bit_vector( &(type_cast_3335), &(konst_3334));\
bit_vector_shift_left(&(type_cast_3335), &(idx_16), &(SHL_u16_u16_3337));\
bit_vector_cast_to_bit_vector(0, &(x00), &(SHL_u16_u16_3337));\
;

#define fpunit_exec_exec__u_set_index_64_assign_stmt_3351_c_macro_ __declare_static_bit_vector(konst_3341,16);\
bit_vector_clear(&konst_3341);\
konst_3341.val.byte_array[0] = 16;\
__declare_static_bit_vector(UGE_u16_u1_3342,1);\
__declare_static_bit_vector(konst_3343,16);\
bit_vector_clear(&konst_3343);\
konst_3343.val.byte_array[0] = 1;\
__declare_static_bit_vector(type_cast_3344,16);\
bit_vector_clear(&type_cast_3344);\
type_cast_3344.val.byte_array[0] = 1;\
__declare_static_bit_vector(konst_3346,16);\
bit_vector_clear(&konst_3346);\
konst_3346.val.byte_array[0] = 16;\
__declare_static_bit_vector(SUB_u16_u16_3347,16);\
__declare_static_bit_vector(SHL_u16_u16_3348,16);\
__declare_static_bit_vector(MUX_3350,16);\
bit_vector_clear(&konst_3341);\
konst_3341.val.byte_array[0] = 16;\
bit_vector_greater_equal(0, &(idx_16), &(konst_3341), &(UGE_u16_u1_3342));\
if (has_undefined_bit(&UGE_u16_u1_3342)) {fprintf(stderr, "Error: variable UGE_u16_u1_3342 has undefined value (%s) at test point.\n", to_string(&UGE_u16_u1_3342));assert(0);} \
if(bit_vector_to_uint64(0, &UGE_u16_u1_3342)){bit_vector_clear(&konst_3343);\
konst_3343.val.byte_array[0] = 1;\
bit_vector_bitcast_to_bit_vector( &(type_cast_3344), &(konst_3343));\
bit_vector_clear(&konst_3346);\
konst_3346.val.byte_array[0] = 16;\
bit_vector_minus( &(idx_16), &(konst_3346), &(SUB_u16_u16_3347));\
bit_vector_shift_left(&(type_cast_3344), &(SUB_u16_u16_3347), &(SHL_u16_u16_3348));\
bit_vector_cast_to_bit_vector(0, &(MUX_3350), &(SHL_u16_u16_3348));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3350), &(ZERO_16));\
}bit_vector_cast_to_bit_vector(0, &(x01), &(MUX_3350));\
;

#define fpunit_exec_exec__u_set_index_64_assign_stmt_3364_c_macro_ __declare_static_bit_vector(konst_3354,16);\
bit_vector_clear(&konst_3354);\
konst_3354.val.byte_array[0] = 32;\
__declare_static_bit_vector(UGE_u16_u1_3355,1);\
__declare_static_bit_vector(konst_3356,16);\
bit_vector_clear(&konst_3356);\
konst_3356.val.byte_array[0] = 1;\
__declare_static_bit_vector(type_cast_3357,16);\
bit_vector_clear(&type_cast_3357);\
type_cast_3357.val.byte_array[0] = 1;\
__declare_static_bit_vector(konst_3359,16);\
bit_vector_clear(&konst_3359);\
konst_3359.val.byte_array[0] = 32;\
__declare_static_bit_vector(SUB_u16_u16_3360,16);\
__declare_static_bit_vector(SHL_u16_u16_3361,16);\
__declare_static_bit_vector(MUX_3363,16);\
bit_vector_clear(&konst_3354);\
konst_3354.val.byte_array[0] = 32;\
bit_vector_greater_equal(0, &(idx_16), &(konst_3354), &(UGE_u16_u1_3355));\
if (has_undefined_bit(&UGE_u16_u1_3355)) {fprintf(stderr, "Error: variable UGE_u16_u1_3355 has undefined value (%s) at test point.\n", to_string(&UGE_u16_u1_3355));assert(0);} \
if(bit_vector_to_uint64(0, &UGE_u16_u1_3355)){bit_vector_clear(&konst_3356);\
konst_3356.val.byte_array[0] = 1;\
bit_vector_bitcast_to_bit_vector( &(type_cast_3357), &(konst_3356));\
bit_vector_clear(&konst_3359);\
konst_3359.val.byte_array[0] = 32;\
bit_vector_minus( &(idx_16), &(konst_3359), &(SUB_u16_u16_3360));\
bit_vector_shift_left(&(type_cast_3357), &(SUB_u16_u16_3360), &(SHL_u16_u16_3361));\
bit_vector_cast_to_bit_vector(0, &(MUX_3363), &(SHL_u16_u16_3361));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3363), &(ZERO_16));\
}bit_vector_cast_to_bit_vector(0, &(x10), &(MUX_3363));\
;

#define fpunit_exec_exec__u_set_index_64_assign_stmt_3377_c_macro_ __declare_static_bit_vector(konst_3367,16);\
bit_vector_clear(&konst_3367);\
konst_3367.val.byte_array[0] = 48;\
__declare_static_bit_vector(UGE_u16_u1_3368,1);\
__declare_static_bit_vector(konst_3369,16);\
bit_vector_clear(&konst_3369);\
konst_3369.val.byte_array[0] = 1;\
__declare_static_bit_vector(type_cast_3370,16);\
bit_vector_clear(&type_cast_3370);\
type_cast_3370.val.byte_array[0] = 1;\
__declare_static_bit_vector(konst_3372,16);\
bit_vector_clear(&konst_3372);\
konst_3372.val.byte_array[0] = 48;\
__declare_static_bit_vector(SUB_u16_u16_3373,16);\
__declare_static_bit_vector(SHL_u16_u16_3374,16);\
__declare_static_bit_vector(MUX_3376,16);\
bit_vector_clear(&konst_3367);\
konst_3367.val.byte_array[0] = 48;\
bit_vector_greater_equal(0, &(idx_16), &(konst_3367), &(UGE_u16_u1_3368));\
if (has_undefined_bit(&UGE_u16_u1_3368)) {fprintf(stderr, "Error: variable UGE_u16_u1_3368 has undefined value (%s) at test point.\n", to_string(&UGE_u16_u1_3368));assert(0);} \
if(bit_vector_to_uint64(0, &UGE_u16_u1_3368)){bit_vector_clear(&konst_3369);\
konst_3369.val.byte_array[0] = 1;\
bit_vector_bitcast_to_bit_vector( &(type_cast_3370), &(konst_3369));\
bit_vector_clear(&konst_3372);\
konst_3372.val.byte_array[0] = 48;\
bit_vector_minus( &(idx_16), &(konst_3372), &(SUB_u16_u16_3373));\
bit_vector_shift_left(&(type_cast_3370), &(SUB_u16_u16_3373), &(SHL_u16_u16_3374));\
bit_vector_cast_to_bit_vector(0, &(MUX_3376), &(SHL_u16_u16_3374));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_3376), &(ZERO_16));\
}bit_vector_cast_to_bit_vector(0, &(x11), &(MUX_3376));\
;

#define fpunit_exec_exec__u_set_index_64_assign_stmt_3386_c_macro_ __declare_static_bit_vector(CONCAT_u16_u32_3381,32);\
__declare_static_bit_vector(CONCAT_u16_u32_3384,32);\
__declare_static_bit_vector(CONCAT_u32_u64_3385,64);\
bit_vector_concatenate( &(x11), &(x10), &(CONCAT_u16_u32_3381));\
bit_vector_concatenate( &(x01), &(x00), &(CONCAT_u16_u32_3384));\
bit_vector_concatenate( &(CONCAT_u16_u32_3381), &(CONCAT_u16_u32_3384), &(CONCAT_u32_u64_3385));\
bit_vector_cast_to_bit_vector(0, &(x), &(CONCAT_u32_u64_3385));\
;

#define fpunit_exec_exec__u_set_index_64_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__px)), &(x));\
;

#define fpunit_exec_exec__uaddsub32_inner_inarg_prep_macro__ __declare_static_bit_vector(L,32);\
bit_vector_cast_to_bit_vector(0, &(L), &((*__pL)));\
__declare_static_bit_vector(R,32);\
bit_vector_cast_to_bit_vector(0, &(R), &((*__pR)));\
__declare_static_bit_vector(carry_in,1);\
bit_vector_cast_to_bit_vector(0, &(carry_in), &((*__pcarry_in)));\
__declare_static_bit_vector(subtract_flag,1);\
bit_vector_cast_to_bit_vector(0, &(subtract_flag), &((*__psubtract_flag)));\
__declare_static_bit_vector(ret_val_x_x,32);\
__declare_static_bit_vector(carry_out,1);\
__declare_static_bit_vector(r33,33);\

#define fpunit_exec_exec__uaddsub32_assign_stmt_21193_c_macro_ __declare_static_bit_vector(type_cast_21177,33);\
__declare_static_bit_vector(type_cast_21179,33);\
__declare_static_bit_vector(SUB_u33_u33_21180,33);\
__declare_static_bit_vector(type_cast_21182,33);\
__declare_static_bit_vector(SUB_u33_u33_21183,33);\
__declare_static_bit_vector(type_cast_21185,33);\
__declare_static_bit_vector(type_cast_21187,33);\
__declare_static_bit_vector(ADD_u33_u33_21188,33);\
__declare_static_bit_vector(type_cast_21190,33);\
__declare_static_bit_vector(ADD_u33_u33_21191,33);\
__declare_static_bit_vector(MUX_21192,33);\
if (has_undefined_bit(&subtract_flag)) {fprintf(stderr, "Error: variable subtract_flag has undefined value (%s) at test point.\n", to_string(&subtract_flag));assert(0);} \
if(bit_vector_to_uint64(0, &subtract_flag)){bit_vector_bitcast_to_bit_vector( &(type_cast_21177), &(L));\
bit_vector_bitcast_to_bit_vector( &(type_cast_21179), &(R));\
bit_vector_minus( &(type_cast_21177), &(type_cast_21179), &(SUB_u33_u33_21180));\
bit_vector_bitcast_to_bit_vector( &(type_cast_21182), &(carry_in));\
bit_vector_minus( &(SUB_u33_u33_21180), &(type_cast_21182), &(SUB_u33_u33_21183));\
bit_vector_cast_to_bit_vector(0, &(MUX_21192), &(SUB_u33_u33_21183));\
}else {bit_vector_bitcast_to_bit_vector( &(type_cast_21185), &(L));\
bit_vector_bitcast_to_bit_vector( &(type_cast_21187), &(R));\
bit_vector_plus( &(type_cast_21185), &(type_cast_21187), &(ADD_u33_u33_21188));\
bit_vector_bitcast_to_bit_vector( &(type_cast_21190), &(carry_in));\
bit_vector_plus( &(ADD_u33_u33_21188), &(type_cast_21190), &(ADD_u33_u33_21191));\
bit_vector_cast_to_bit_vector(0, &(MUX_21192), &(ADD_u33_u33_21191));\
}bit_vector_cast_to_bit_vector(0, &(r33), &(MUX_21192));\
;

#define fpunit_exec_exec__uaddsub32_assign_stmt_21197_c_macro_ __declare_static_bit_vector(slice_21196,32);\
bit_vector_slice(&(r33), &(slice_21196), 0);\
bit_vector_cast_to_bit_vector(0, &(ret_val_x_x), &(slice_21196));\
;

#define fpunit_exec_exec__uaddsub32_assign_stmt_21202_c_macro_ __declare_static_bit_vector(konst_21200,33);\
bit_vector_clear(&konst_21200);\
konst_21200.val.byte_array[0] = 32;\
__declare_static_bit_vector(BITSEL_u33_u1_21201,1);\
bit_vector_clear(&konst_21200);\
konst_21200.val.byte_array[0] = 32;\
bit_vector_bitsel( &(r33), &(konst_21200), &(BITSEL_u33_u1_21201));\
bit_vector_cast_to_bit_vector(0, &(carry_out), &(BITSEL_u33_u1_21201));\
;

#define fpunit_exec_exec__uaddsub32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pret_val_x_x)), &(ret_val_x_x));\
bit_vector_cast_to_bit_vector(0, &((*__pcarry_out)), &(carry_out));\
;

#define fpunit_exec_exec__umul32_inner_inarg_prep_macro__ __declare_static_bit_vector(L,32);\
bit_vector_cast_to_bit_vector(0, &(L), &((*__pL)));\
__declare_static_bit_vector(R,32);\
bit_vector_cast_to_bit_vector(0, &(R), &((*__pR)));\
__declare_static_bit_vector(ret_val_x_x,64);\

#define fpunit_exec_exec__umul32_assign_stmt_21214_c_macro_ __declare_static_bit_vector(type_cast_21210,64);\
__declare_static_bit_vector(type_cast_21212,64);\
__declare_static_bit_vector(MUL_u64_u64_21213,64);\
bit_vector_bitcast_to_bit_vector( &(type_cast_21210), &(L));\
bit_vector_bitcast_to_bit_vector( &(type_cast_21212), &(R));\
bit_vector_mul( &(type_cast_21210), &(type_cast_21212), &(MUL_u64_u64_21213));\
bit_vector_cast_to_bit_vector(0, &(ret_val_x_x), &(MUL_u64_u64_21213));\
;

#define fpunit_exec_exec__umul32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pret_val_x_x)), &(ret_val_x_x));\
;

#define fpunit_exec_exec__umul32_outer_arg_decl_macro__ __declare_static_bit_vector(__L, 32);\
bit_vector_assign_uint64(0, &__L, L);\
__declare_static_bit_vector(__R, 32);\
bit_vector_assign_uint64(0, &__R, R);\
__declare_static_bit_vector(__ret_val_x_x, 64);\
;

#define fpunit_exec_exec__umul32_outer_op_xfer_macro__  *ret_val_x_x =  bit_vector_to_uint64(0, &__ret_val_x_x);\
;

#define fpunit_exec_exec__ushift32_inner_inarg_prep_macro__ __declare_static_bit_vector(L,32);\
bit_vector_cast_to_bit_vector(0, &(L), &((*__pL)));\
__declare_static_bit_vector(R,32);\
bit_vector_cast_to_bit_vector(0, &(R), &((*__pR)));\
__declare_static_bit_vector(shift_right_flag,1);\
bit_vector_cast_to_bit_vector(0, &(shift_right_flag), &((*__pshift_right_flag)));\
__declare_static_bit_vector(signed_flag,1);\
bit_vector_cast_to_bit_vector(0, &(signed_flag), &((*__psigned_flag)));\
__declare_static_bit_vector(ret_val_x_x,32);\

#define fpunit_exec_exec__ushift32_assign_stmt_21241_c_macro_ __declare_static_bit_vector(AND_u1_u1_21225,1);\
__declare_static_bit_vector(type_cast_21227,32);\
__declare_static_bit_vector(type_cast_21229,32);\
__declare_static_bit_vector(ASHR_i32_i32_21230,32);\
__declare_static_bit_vector(type_cast_21231,32);\
__declare_static_bit_vector(LSHR_u32_u32_21235,32);\
__declare_static_bit_vector(SHL_u32_u32_21238,32);\
__declare_static_bit_vector(MUX_21239,32);\
__declare_static_bit_vector(MUX_21240,32);\
bit_vector_and(&(shift_right_flag), &(signed_flag), &(AND_u1_u1_21225));\
if (has_undefined_bit(&AND_u1_u1_21225)) {fprintf(stderr, "Error: variable AND_u1_u1_21225 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_21225));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_21225)){bit_vector_bitcast_to_bit_vector( &(type_cast_21227), &(L));\
bit_vector_bitcast_to_bit_vector( &(type_cast_21229), &(R));\
bit_vector_shift_right(1, &(type_cast_21227), &(type_cast_21229), &(ASHR_i32_i32_21230));\
bit_vector_bitcast_to_bit_vector( &(type_cast_21231), &(ASHR_i32_i32_21230));\
bit_vector_cast_to_bit_vector(0, &(MUX_21240), &(type_cast_21231));\
}else {if (has_undefined_bit(&shift_right_flag)) {fprintf(stderr, "Error: variable shift_right_flag has undefined value (%s) at test point.\n", to_string(&shift_right_flag));assert(0);} \
if(bit_vector_to_uint64(0, &shift_right_flag)){bit_vector_shift_right(0, &(L), &(R), &(LSHR_u32_u32_21235));\
bit_vector_cast_to_bit_vector(0, &(MUX_21239), &(LSHR_u32_u32_21235));\
}else {bit_vector_shift_left(&(L), &(R), &(SHL_u32_u32_21238));\
bit_vector_cast_to_bit_vector(0, &(MUX_21239), &(SHL_u32_u32_21238));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21240), &(MUX_21239));\
}bit_vector_cast_to_bit_vector(0, &(ret_val_x_x), &(MUX_21240));\
;

#define fpunit_exec_exec__ushift32_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pret_val_x_x)), &(ret_val_x_x));\
;

#define fpunit_exec_exec__vfadd16_wrap_inner_inarg_prep_macro__ __declare_static_bit_vector(u,64);\
bit_vector_cast_to_bit_vector(0, &(u), &((*__pu)));\
__declare_static_bit_vector(v,64);\
bit_vector_cast_to_bit_vector(0, &(v), &((*__pv)));\
__declare_static_bit_vector(result,64);\

#define fpunit_exec_exec__vfadd16_wrap_call_stmt_21254_c_macro_ _fpunit_exec_exec_exec_fp_simd_16_op_( &(ONE_1),  &(ZERO_1),  &(ZERO_1),  &(ZERO_1),  &(u),  &(v), &(result));\
;

#define fpunit_exec_exec__vfadd16_wrap_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__vfadd16_wrap_outer_arg_decl_macro__ __declare_static_bit_vector(__u, 64);\
bit_vector_assign_uint64(0, &__u, u);\
__declare_static_bit_vector(__v, 64);\
bit_vector_assign_uint64(0, &__v, v);\
__declare_static_bit_vector(__result, 64);\
;

#define fpunit_exec_exec__vfadd16_wrap_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__vfaddreduce16_wrap_inner_inarg_prep_macro__ __declare_static_bit_vector(u,64);\
bit_vector_cast_to_bit_vector(0, &(u), &((*__pu)));\
__declare_static_bit_vector(v,64);\
bit_vector_cast_to_bit_vector(0, &(v), &((*__pv)));\
__declare_static_bit_vector(result,32);\
__declare_static_bit_vector(r64,64);\

#define fpunit_exec_exec__vfaddreduce16_wrap_call_stmt_21267_c_macro_ _fpunit_exec_exec_exec_fp_simd_16_op_( &(ZERO_1),  &(ZERO_1),  &(ZERO_1),  &(ONE_1),  &(u),  &(v), &(r64));\
;

#define fpunit_exec_exec__vfaddreduce16_wrap_assign_stmt_21271_c_macro_ __declare_static_bit_vector(slice_21270,32);\
bit_vector_slice(&(r64), &(slice_21270), 0);\
bit_vector_cast_to_bit_vector(0, &(result), &(slice_21270));\
;

#define fpunit_exec_exec__vfaddreduce16_wrap_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__vfaddreduce16_wrap_outer_arg_decl_macro__ __declare_static_bit_vector(__u, 64);\
bit_vector_assign_uint64(0, &__u, u);\
__declare_static_bit_vector(__v, 64);\
bit_vector_assign_uint64(0, &__v, v);\
__declare_static_bit_vector(__result, 32);\
;

#define fpunit_exec_exec__vfaddreduce16_wrap_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__vfmul16_wrap_inner_inarg_prep_macro__ __declare_static_bit_vector(u,64);\
bit_vector_cast_to_bit_vector(0, &(u), &((*__pu)));\
__declare_static_bit_vector(v,64);\
bit_vector_cast_to_bit_vector(0, &(v), &((*__pv)));\
__declare_static_bit_vector(result,64);\

#define fpunit_exec_exec__vfmul16_wrap_call_stmt_21284_c_macro_ _fpunit_exec_exec_exec_fp_simd_16_op_( &(ZERO_1),  &(ZERO_1),  &(ONE_1),  &(ZERO_1),  &(u),  &(v), &(result));\
;

#define fpunit_exec_exec__vfmul16_wrap_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__vfmul16_wrap_outer_arg_decl_macro__ __declare_static_bit_vector(__u, 64);\
bit_vector_assign_uint64(0, &__u, u);\
__declare_static_bit_vector(__v, 64);\
bit_vector_assign_uint64(0, &__v, v);\
__declare_static_bit_vector(__result, 64);\
;

#define fpunit_exec_exec__vfmul16_wrap_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__vfsub16_wrap_inner_inarg_prep_macro__ __declare_static_bit_vector(u,64);\
bit_vector_cast_to_bit_vector(0, &(u), &((*__pu)));\
__declare_static_bit_vector(v,64);\
bit_vector_cast_to_bit_vector(0, &(v), &((*__pv)));\
__declare_static_bit_vector(result,64);\

#define fpunit_exec_exec__vfsub16_wrap_call_stmt_21297_c_macro_ _fpunit_exec_exec_exec_fp_simd_16_op_( &(ZERO_1),  &(ONE_1),  &(ZERO_1),  &(ZERO_1),  &(u),  &(v), &(result));\
;

#define fpunit_exec_exec__vfsub16_wrap_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__presult)), &(result));\
;

#define fpunit_exec_exec__vfsub16_wrap_outer_arg_decl_macro__ __declare_static_bit_vector(__u, 64);\
bit_vector_assign_uint64(0, &__u, u);\
__declare_static_bit_vector(__v, 64);\
bit_vector_assign_uint64(0, &__v, v);\
__declare_static_bit_vector(__result, 64);\
;

#define fpunit_exec_exec__vfsub16_wrap_outer_op_xfer_macro__  *result =  bit_vector_to_uint64(0, &__result);\
;

#define fpunit_exec_exec__writeback_fsm_inner_inarg_prep_macro__ __declare_static_bit_vector(wb_state,2);\
bit_vector_cast_to_bit_vector(0, &(wb_state), &((*__pwb_state)));\
__declare_static_bit_vector(valid_bit,1);\
bit_vector_cast_to_bit_vector(0, &(valid_bit), &((*__pvalid_bit)));\
__declare_static_bit_vector(thread_head,1);\
bit_vector_cast_to_bit_vector(0, &(thread_head), &((*__pthread_head)));\
__declare_static_bit_vector(stream_head,1);\
bit_vector_cast_to_bit_vector(0, &(stream_head), &((*__pstream_head)));\
__declare_static_bit_vector(break_thread,1);\
bit_vector_cast_to_bit_vector(0, &(break_thread), &((*__pbreak_thread)));\
__declare_static_bit_vector(terminate_thread,1);\
bit_vector_cast_to_bit_vector(0, &(terminate_thread), &((*__pterminate_thread)));\
__declare_static_bit_vector(kill_thread_now,1);\
bit_vector_cast_to_bit_vector(0, &(kill_thread_now), &((*__pkill_thread_now)));\
__declare_static_bit_vector(break_stream,1);\
bit_vector_cast_to_bit_vector(0, &(break_stream), &((*__pbreak_stream)));\
__declare_static_bit_vector(next_wb_state,2);\
__declare_static_bit_vector(instr_can_execute,1);\

#define fpunit_exec_exec__writeback_fsm_assign_stmt_21392_c_macro_ __declare_static_bit_vector(EQ_u2_u1_21313,1);\
__declare_static_bit_vector(NOT_u1_u1_21315,1);\
__declare_static_bit_vector(MUX_21322,2);\
__declare_static_bit_vector(MUX_21323,2);\
__declare_static_bit_vector(MUX_21324,2);\
__declare_static_bit_vector(konst_21325,2);\
bit_vector_clear(&konst_21325);\
__declare_static_bit_vector(MUX_21326,2);\
__declare_static_bit_vector(EQ_u2_u1_21329,1);\
__declare_static_bit_vector(NOT_u1_u1_21331,1);\
__declare_static_bit_vector(MUX_21338,2);\
__declare_static_bit_vector(MUX_21339,2);\
__declare_static_bit_vector(MUX_21340,2);\
__declare_static_bit_vector(konst_21341,2);\
bit_vector_clear(&konst_21341);\
__declare_static_bit_vector(MUX_21342,2);\
__declare_static_bit_vector(OR_u2_u2_21343,2);\
__declare_static_bit_vector(EQ_u2_u1_21346,1);\
__declare_static_bit_vector(NOT_u1_u1_21348,1);\
__declare_static_bit_vector(AND_u1_u1_21352,1);\
__declare_static_bit_vector(AND_u1_u1_21356,1);\
__declare_static_bit_vector(MUX_21361,2);\
__declare_static_bit_vector(MUX_21362,2);\
__declare_static_bit_vector(MUX_21363,2);\
__declare_static_bit_vector(MUX_21364,2);\
__declare_static_bit_vector(konst_21365,2);\
bit_vector_clear(&konst_21365);\
__declare_static_bit_vector(MUX_21366,2);\
__declare_static_bit_vector(EQ_u2_u1_21369,1);\
__declare_static_bit_vector(NOT_u1_u1_21371,1);\
__declare_static_bit_vector(AND_u1_u1_21375,1);\
__declare_static_bit_vector(AND_u1_u1_21379,1);\
__declare_static_bit_vector(MUX_21384,2);\
__declare_static_bit_vector(MUX_21385,2);\
__declare_static_bit_vector(MUX_21386,2);\
__declare_static_bit_vector(MUX_21387,2);\
__declare_static_bit_vector(konst_21388,2);\
bit_vector_clear(&konst_21388);\
__declare_static_bit_vector(MUX_21389,2);\
__declare_static_bit_vector(OR_u2_u2_21390,2);\
__declare_static_bit_vector(OR_u2_u2_21391,2);\
bit_vector_equal(0, &(wb_state), &(WB_RESET), &(EQ_u2_u1_21313));\
if (has_undefined_bit(&EQ_u2_u1_21313)) {fprintf(stderr, "Error: variable EQ_u2_u1_21313 has undefined value (%s) at test point.\n", to_string(&EQ_u2_u1_21313));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u2_u1_21313)){bit_vector_not( &(valid_bit), &(NOT_u1_u1_21315));\
if (has_undefined_bit(&NOT_u1_u1_21315)) {fprintf(stderr, "Error: variable NOT_u1_u1_21315 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_21315));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_21315)){bit_vector_cast_to_bit_vector(0, &(MUX_21324), &(WB_RESET));\
}else {if (has_undefined_bit(&break_thread)) {fprintf(stderr, "Error: variable break_thread has undefined value (%s) at test point.\n", to_string(&break_thread));assert(0);} \
if(bit_vector_to_uint64(0, &break_thread)){bit_vector_cast_to_bit_vector(0, &(MUX_21323), &(WB_TRAPPED));\
}else {if (has_undefined_bit(&break_stream)) {fprintf(stderr, "Error: variable break_stream has undefined value (%s) at test point.\n", to_string(&break_stream));assert(0);} \
if(bit_vector_to_uint64(0, &break_stream)){bit_vector_cast_to_bit_vector(0, &(MUX_21322), &(WB_MISPREDICTED_STREAM));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21322), &(WB_NORMAL));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21323), &(MUX_21322));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21324), &(MUX_21323));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21326), &(MUX_21324));\
}else {bit_vector_clear(&konst_21325);\
bit_vector_cast_to_bit_vector(0, &(MUX_21326), &(konst_21325));\
}bit_vector_equal(0, &(wb_state), &(WB_NORMAL), &(EQ_u2_u1_21329));\
if (has_undefined_bit(&EQ_u2_u1_21329)) {fprintf(stderr, "Error: variable EQ_u2_u1_21329 has undefined value (%s) at test point.\n", to_string(&EQ_u2_u1_21329));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u2_u1_21329)){bit_vector_not( &(valid_bit), &(NOT_u1_u1_21331));\
if (has_undefined_bit(&NOT_u1_u1_21331)) {fprintf(stderr, "Error: variable NOT_u1_u1_21331 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_21331));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_21331)){bit_vector_cast_to_bit_vector(0, &(MUX_21340), &(WB_NORMAL));\
}else {if (has_undefined_bit(&break_thread)) {fprintf(stderr, "Error: variable break_thread has undefined value (%s) at test point.\n", to_string(&break_thread));assert(0);} \
if(bit_vector_to_uint64(0, &break_thread)){bit_vector_cast_to_bit_vector(0, &(MUX_21339), &(WB_TRAPPED));\
}else {if (has_undefined_bit(&break_stream)) {fprintf(stderr, "Error: variable break_stream has undefined value (%s) at test point.\n", to_string(&break_stream));assert(0);} \
if(bit_vector_to_uint64(0, &break_stream)){bit_vector_cast_to_bit_vector(0, &(MUX_21338), &(WB_MISPREDICTED_STREAM));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21338), &(WB_NORMAL));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21339), &(MUX_21338));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21340), &(MUX_21339));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21342), &(MUX_21340));\
}else {bit_vector_clear(&konst_21341);\
bit_vector_cast_to_bit_vector(0, &(MUX_21342), &(konst_21341));\
}bit_vector_or(&(MUX_21326), &(MUX_21342), &(OR_u2_u2_21343));\
bit_vector_equal(0, &(wb_state), &(WB_MISPREDICTED_STREAM), &(EQ_u2_u1_21346));\
if (has_undefined_bit(&EQ_u2_u1_21346)) {fprintf(stderr, "Error: variable EQ_u2_u1_21346 has undefined value (%s) at test point.\n", to_string(&EQ_u2_u1_21346));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u2_u1_21346)){bit_vector_not( &(valid_bit), &(NOT_u1_u1_21348));\
if (has_undefined_bit(&NOT_u1_u1_21348)) {fprintf(stderr, "Error: variable NOT_u1_u1_21348 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_21348));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_21348)){bit_vector_cast_to_bit_vector(0, &(MUX_21364), &(WB_MISPREDICTED_STREAM));\
}else {bit_vector_and(&(stream_head), &(break_thread), &(AND_u1_u1_21352));\
if (has_undefined_bit(&AND_u1_u1_21352)) {fprintf(stderr, "Error: variable AND_u1_u1_21352 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_21352));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_21352)){bit_vector_cast_to_bit_vector(0, &(MUX_21363), &(WB_TRAPPED));\
}else {bit_vector_and(&(stream_head), &(break_stream), &(AND_u1_u1_21356));\
if (has_undefined_bit(&AND_u1_u1_21356)) {fprintf(stderr, "Error: variable AND_u1_u1_21356 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_21356));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_21356)){bit_vector_cast_to_bit_vector(0, &(MUX_21362), &(WB_MISPREDICTED_STREAM));\
}else {if (has_undefined_bit(&stream_head)) {fprintf(stderr, "Error: variable stream_head has undefined value (%s) at test point.\n", to_string(&stream_head));assert(0);} \
if(bit_vector_to_uint64(0, &stream_head)){bit_vector_cast_to_bit_vector(0, &(MUX_21361), &(WB_NORMAL));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21361), &(WB_MISPREDICTED_STREAM));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21362), &(MUX_21361));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21363), &(MUX_21362));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21364), &(MUX_21363));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21366), &(MUX_21364));\
}else {bit_vector_clear(&konst_21365);\
bit_vector_cast_to_bit_vector(0, &(MUX_21366), &(konst_21365));\
}bit_vector_equal(0, &(wb_state), &(WB_TRAPPED), &(EQ_u2_u1_21369));\
if (has_undefined_bit(&EQ_u2_u1_21369)) {fprintf(stderr, "Error: variable EQ_u2_u1_21369 has undefined value (%s) at test point.\n", to_string(&EQ_u2_u1_21369));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u2_u1_21369)){bit_vector_not( &(valid_bit), &(NOT_u1_u1_21371));\
if (has_undefined_bit(&NOT_u1_u1_21371)) {fprintf(stderr, "Error: variable NOT_u1_u1_21371 has undefined value (%s) at test point.\n", to_string(&NOT_u1_u1_21371));assert(0);} \
if(bit_vector_to_uint64(0, &NOT_u1_u1_21371)){bit_vector_cast_to_bit_vector(0, &(MUX_21387), &(WB_TRAPPED));\
}else {bit_vector_and(&(thread_head), &(break_thread), &(AND_u1_u1_21375));\
if (has_undefined_bit(&AND_u1_u1_21375)) {fprintf(stderr, "Error: variable AND_u1_u1_21375 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_21375));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_21375)){bit_vector_cast_to_bit_vector(0, &(MUX_21386), &(WB_TRAPPED));\
}else {bit_vector_and(&(thread_head), &(break_stream), &(AND_u1_u1_21379));\
if (has_undefined_bit(&AND_u1_u1_21379)) {fprintf(stderr, "Error: variable AND_u1_u1_21379 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_21379));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_21379)){bit_vector_cast_to_bit_vector(0, &(MUX_21385), &(WB_MISPREDICTED_STREAM));\
}else {if (has_undefined_bit(&thread_head)) {fprintf(stderr, "Error: variable thread_head has undefined value (%s) at test point.\n", to_string(&thread_head));assert(0);} \
if(bit_vector_to_uint64(0, &thread_head)){bit_vector_cast_to_bit_vector(0, &(MUX_21384), &(WB_NORMAL));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21384), &(WB_TRAPPED));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21385), &(MUX_21384));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21386), &(MUX_21385));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21387), &(MUX_21386));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21389), &(MUX_21387));\
}else {bit_vector_clear(&konst_21388);\
bit_vector_cast_to_bit_vector(0, &(MUX_21389), &(konst_21388));\
}bit_vector_or(&(MUX_21366), &(MUX_21389), &(OR_u2_u2_21390));\
bit_vector_or(&(OR_u2_u2_21343), &(OR_u2_u2_21390), &(OR_u2_u2_21391));\
bit_vector_cast_to_bit_vector(0, &(next_wb_state), &(OR_u2_u2_21391));\
;

#define fpunit_exec_exec__writeback_fsm_assign_stmt_21445_c_macro_ __declare_static_bit_vector(EQ_u2_u1_21397,1);\
__declare_static_bit_vector(MUX_21401,1);\
__declare_static_bit_vector(konst_21402,1);\
bit_vector_clear(&konst_21402);\
__declare_static_bit_vector(MUX_21403,1);\
__declare_static_bit_vector(EQ_u2_u1_21406,1);\
__declare_static_bit_vector(MUX_21410,1);\
__declare_static_bit_vector(konst_21411,1);\
bit_vector_clear(&konst_21411);\
__declare_static_bit_vector(MUX_21412,1);\
__declare_static_bit_vector(OR_u1_u1_21413,1);\
__declare_static_bit_vector(EQ_u2_u1_21416,1);\
__declare_static_bit_vector(AND_u1_u1_21419,1);\
__declare_static_bit_vector(MUX_21424,1);\
__declare_static_bit_vector(MUX_21425,1);\
__declare_static_bit_vector(konst_21426,1);\
bit_vector_clear(&konst_21426);\
__declare_static_bit_vector(MUX_21427,1);\
__declare_static_bit_vector(EQ_u2_u1_21430,1);\
__declare_static_bit_vector(AND_u1_u1_21433,1);\
__declare_static_bit_vector(MUX_21438,1);\
__declare_static_bit_vector(MUX_21439,1);\
__declare_static_bit_vector(konst_21440,1);\
bit_vector_clear(&konst_21440);\
__declare_static_bit_vector(MUX_21441,1);\
__declare_static_bit_vector(OR_u1_u1_21442,1);\
__declare_static_bit_vector(OR_u1_u1_21443,1);\
__declare_static_bit_vector(AND_u1_u1_21444,1);\
bit_vector_equal(0, &(wb_state), &(WB_RESET), &(EQ_u2_u1_21397));\
if (has_undefined_bit(&EQ_u2_u1_21397)) {fprintf(stderr, "Error: variable EQ_u2_u1_21397 has undefined value (%s) at test point.\n", to_string(&EQ_u2_u1_21397));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u2_u1_21397)){if (has_undefined_bit(&kill_thread_now)) {fprintf(stderr, "Error: variable kill_thread_now has undefined value (%s) at test point.\n", to_string(&kill_thread_now));assert(0);} \
if(bit_vector_to_uint64(0, &kill_thread_now)){bit_vector_cast_to_bit_vector(0, &(MUX_21401), &(ZERO_1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21401), &(ONE_1));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21403), &(MUX_21401));\
}else {bit_vector_clear(&konst_21402);\
bit_vector_cast_to_bit_vector(0, &(MUX_21403), &(konst_21402));\
}bit_vector_equal(0, &(wb_state), &(WB_NORMAL), &(EQ_u2_u1_21406));\
if (has_undefined_bit(&EQ_u2_u1_21406)) {fprintf(stderr, "Error: variable EQ_u2_u1_21406 has undefined value (%s) at test point.\n", to_string(&EQ_u2_u1_21406));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u2_u1_21406)){if (has_undefined_bit(&kill_thread_now)) {fprintf(stderr, "Error: variable kill_thread_now has undefined value (%s) at test point.\n", to_string(&kill_thread_now));assert(0);} \
if(bit_vector_to_uint64(0, &kill_thread_now)){bit_vector_cast_to_bit_vector(0, &(MUX_21410), &(ZERO_1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21410), &(ONE_1));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21412), &(MUX_21410));\
}else {bit_vector_clear(&konst_21411);\
bit_vector_cast_to_bit_vector(0, &(MUX_21412), &(konst_21411));\
}bit_vector_or(&(MUX_21403), &(MUX_21412), &(OR_u1_u1_21413));\
bit_vector_equal(0, &(wb_state), &(WB_MISPREDICTED_STREAM), &(EQ_u2_u1_21416));\
if (has_undefined_bit(&EQ_u2_u1_21416)) {fprintf(stderr, "Error: variable EQ_u2_u1_21416 has undefined value (%s) at test point.\n", to_string(&EQ_u2_u1_21416));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u2_u1_21416)){bit_vector_and(&(stream_head), &(kill_thread_now), &(AND_u1_u1_21419));\
if (has_undefined_bit(&AND_u1_u1_21419)) {fprintf(stderr, "Error: variable AND_u1_u1_21419 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_21419));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_21419)){bit_vector_cast_to_bit_vector(0, &(MUX_21425), &(ZERO_1));\
}else {if (has_undefined_bit(&stream_head)) {fprintf(stderr, "Error: variable stream_head has undefined value (%s) at test point.\n", to_string(&stream_head));assert(0);} \
if(bit_vector_to_uint64(0, &stream_head)){bit_vector_cast_to_bit_vector(0, &(MUX_21424), &(ONE_1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21424), &(ZERO_1));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21425), &(MUX_21424));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21427), &(MUX_21425));\
}else {bit_vector_clear(&konst_21426);\
bit_vector_cast_to_bit_vector(0, &(MUX_21427), &(konst_21426));\
}bit_vector_equal(0, &(wb_state), &(WB_TRAPPED), &(EQ_u2_u1_21430));\
if (has_undefined_bit(&EQ_u2_u1_21430)) {fprintf(stderr, "Error: variable EQ_u2_u1_21430 has undefined value (%s) at test point.\n", to_string(&EQ_u2_u1_21430));assert(0);} \
if(bit_vector_to_uint64(0, &EQ_u2_u1_21430)){bit_vector_and(&(thread_head), &(kill_thread_now), &(AND_u1_u1_21433));\
if (has_undefined_bit(&AND_u1_u1_21433)) {fprintf(stderr, "Error: variable AND_u1_u1_21433 has undefined value (%s) at test point.\n", to_string(&AND_u1_u1_21433));assert(0);} \
if(bit_vector_to_uint64(0, &AND_u1_u1_21433)){bit_vector_cast_to_bit_vector(0, &(MUX_21439), &(ZERO_1));\
}else {if (has_undefined_bit(&thread_head)) {fprintf(stderr, "Error: variable thread_head has undefined value (%s) at test point.\n", to_string(&thread_head));assert(0);} \
if(bit_vector_to_uint64(0, &thread_head)){bit_vector_cast_to_bit_vector(0, &(MUX_21438), &(ONE_1));\
}else {bit_vector_cast_to_bit_vector(0, &(MUX_21438), &(ZERO_1));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21439), &(MUX_21438));\
}bit_vector_cast_to_bit_vector(0, &(MUX_21441), &(MUX_21439));\
}else {bit_vector_clear(&konst_21440);\
bit_vector_cast_to_bit_vector(0, &(MUX_21441), &(konst_21440));\
}bit_vector_or(&(MUX_21427), &(MUX_21441), &(OR_u1_u1_21442));\
bit_vector_or(&(OR_u1_u1_21413), &(OR_u1_u1_21442), &(OR_u1_u1_21443));\
bit_vector_and(&(valid_bit), &(OR_u1_u1_21443), &(AND_u1_u1_21444));\
bit_vector_cast_to_bit_vector(0, &(instr_can_execute), &(AND_u1_u1_21444));\
;

#define fpunit_exec_exec__writeback_fsm_inner_outarg_prep_macro__ bit_vector_cast_to_bit_vector(0, &((*__pnext_wb_state)), &(next_wb_state));\
bit_vector_cast_to_bit_vector(0, &((*__pinstr_can_execute)), &(instr_can_execute));\
;
