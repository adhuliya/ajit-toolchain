"Opcode","Format type","Format Value","Other field, if any","Value","Operation","Sparc V8 Manual main description page","Sparc V8 Manual main description Chapter reference","Insn Category","Insn Category Index","Format Index","Processing Status","Privilege
(0 – no, 1 – yes, 2 – if ref’d ASR is privileged)","Notes","ASM Rator Syntax","ASM Arguments list"
"LDSB","op3",001001,"i",000000,"Load Signed Byte",90,"B1","Load/Store",1,"op34","raw",0,,"ldsb","rs1","rs2","rd"
"LDSH","op3",001010,"i",000000,"Load Signed Halfword",90,"B1","Load/Store",1,"op34","raw",0,,"ldsh","rs1","rs2","rd"
"LDUB","op3",000001,"i",000000,"Load Unsigned Byte",90,"B1","Load/Store",1,"op34","raw",0,,"ldub","rs1","rs2","rd"
"LDUH","op3",000010,"i",000000,"Load Unsigned Halfword",90,"B1","Load/Store",1,"op34","raw",0,,"lduh","rs1","rs2","rd"
"LD","op3",000000,"i",000000,"Load Word",90,"B1","Load/Store",1,"op34","raw",0,,"ld","rs1","rs2","rd"
"LDD","op3",000011,"i",000000,"Load Doubleword",90,"B1","Load/Store",1,"op34","raw",0,,"ldd","rs1","rs2","rd"
"LDSBA","op3",011001,"i",000000,"Load Signed Byte from Alternate space",90,"B1","Load/Store",1,"op34","raw",1,"asi","ldsba","rs1","sign_ext (simm13)","rd"
"LDSHA","op3",011010,"i",000000,"Load Signed Halfword from Alternate space",90,"B1","Load/Store",1,"op34","raw",1,"asi","ldsha","rs1","sign_ext (simm13)","rd"
"LDUBA","op3",010001,"i",000000,"Load Unsigned Byte from Alternate space",90,"B1","Load/Store",1,"op34","raw",1,"asi","lduba","rs1","sign_ext (simm13)","rd"
"LDUHA","op3",010010,"i",000000,"Load Unsigned Halfword from Alternate space",90,"B1","Load/Store",1,"op34","raw",1,"asi","lduha","rs1","sign_ext (simm13)","rd"
"LDA","op3",010000,"i",000000,"Load Word from Alternate space",90,"B1","Load/Store",1,"op34","raw",1,"asi","lda","rs1","sign_ext (simm13)","rd"
"LDDA","op3",010011,"i",000000,"Load Doubleword from Alternate space",90,"B1","Load/Store",1,"op34","raw",1,"asi","ldda","rs1","sign_ext (simm13)","rd"
"LDF","op3",100000,"i",000000,"Load Floating-point Register",92,"B2","Load/Store",1,"op40","raw",0,,"ld","rs1","rs2","fprd"
"LDDF","op3",100011,"i",000000,"Load Double Floating-point Register",92,"B2","Load/Store",1,"op40","raw",0,,"ldd","rs1","rs2","fprd"
"LDFSR","op3",100001,"i",000000,"Load Floating-point State Register",92,"B2","Load/Store",1,"op40","raw",0,,"ld","rs1","rs2","%fsr"
"LDC","op3",110000,"i",000000,"Load Coprocessor Register",94,"B3","Load/Store",1,"op40","raw",0,,"ld","rs1","rs2","cprd"
"LDDC","op3",110011,"i",000000,"Load Double Coprocessor Register",94,"B3","Load/Store",1,"op40","raw",0,,"ldd","rs1","rs2","cprd"
"LDCSR ","op3",110001,"i",000000,"Load Coprocessor State Register",94,"B3","Load/Store",1,"op40","raw",0,,"ld","rs1","rs2","%csr"
"STB","op3",000101,"i",000000,"Store Byte",95,"B4","Load/Store",1,"op34","raw",0,,"stb","rd","rs1","rs2"
"STH","op3",000110,"i",000000,"Store Halfword",95,"B4","Load/Store",1,"op34","raw",0,,"sth","rd","rs1","rs2"
"ST","op3",000100,"i",000000,"Store Word",95,"B4","Load/Store",1,"op34","raw",0,,"st","rd","rs1","rs2"
"STD","op3",000111,"i",000000,"Store Doubleword",95,"B4","Load/Store",1,"op34","raw",0,,"std","rd","rs1","rs2"
"STBA","op3",010101,"i",000001,"Store Byte into Alternate space",95,"B4","Load/Store",1,"op34","raw",1,,"stba","rd","rs1","sign_ext (simm13)"
"STHA","op3",010110,"i",000001,"Store Halfword into Alternate space",95,"B4","Load/Store",1,"op34","raw",1,,"stha","rd","rs1","sign_ext (simm13)"
"STA","op3",010100,"i",000001,"Store Word into Alternate space",95,"B4","Load/Store",1,"op34","raw",1,,"sta","rd","rs1","sign_ext (simm13)"
"STDA ","op3",010111,"i",000001,"Store Doubleword into Alternate space",95,"B4","Load/Store",1,"op34","raw",1,,"stda ","rd","rs1","sign_ext (simm13)"
"STF","op3",100100,"i",000000,"Store Floating-point",97,"B5","Load/Store",1,"op40","raw",0,,"stf","fprd","rs1","rs2"
"STDF","op3",100111,"i",000000,"Store Double Floating-point",97,"B5","Load/Store",1,"op40","raw",0,,"stdf","fprd","rs1","rs2"
"STFSR","op3",100101,"i",000000,"Store Floating-point State Register",97,"B5","Load/Store",1,"op40","raw",0,,"stfsr","%fsr","rs1","rs2"
"STDFQ ","op3",100110,"i",000000,"Store Double Floating-point deferred-trap Queue",97,"B5","Load/Store",1,"op40","raw",1,,"stdfq ","%fq","rs1","rs2"
"STC","op3",110100,"i",000000,"Store Coprocessor",99,"B6","Load/Store",1,"op40","raw",0,,"stc","cprd","rs1","rs2"
"STDC","op3",110111,"i",000000,"Store Double Coprocessor",99,"B6","Load/Store",1,"op40","raw",0,,"stdc","cprd","rs1","rs2"
"STCSR","op3",110101,"i",000000,"Store Coprocessor State Register",99,"B6","Load/Store",1,"op40","raw",0,,"stcsr","%csr","rs1","rs2"
"STDCQ","op3",110110,"i",000000,"Store Double Coprocessor Queue",99,"B6","Load/Store",1,"op40","raw",1,,"stdcq","%cq","rs1","rs2"
"LDSTUB","op3",001101,"i",000000,"Atomic Load-Store Unsigned Byte",101,"B7","Load/Store",1,"op34","raw",0,,"ldstub","rs1","rs2","rd"
"SWAP","op3",001111,"i",000000,"SWAP register with memory",102,"B8","Load/Store",1,"op34","raw",1,,"swap","rs1","rs2","rd"
"SETHI","op2",100,,,"Set High-Order 22 bits",104,"B9","Integer Arith",2,"op22","raw",0,,"sethi","const22, %hi (value)","rd"
"NOP","op2",100,,,"No Operation",105,"B10","Integer Arith",2,"op23","raw",1,"special case of SETHI with rd = 0 and imm22=0","nop"
"AND","op3",000001,"i",000000,"And",106,"B11","Integer Arith",2,"op40","raw",0,,"and","rs1","rs2","rd"
"ANDcc","op3",010001,"i",000000,"And and modify icc",106,"B11","Integer Arith",2,"op40","raw",0,,"andcc","rs1","rs2","rd"
"ANDN","op3",000101,"i",000000,"And Not",106,"B11","Integer Arith",2,"op40","raw",0,,"andn","rs1","rs2","rd"
"ANDNcc","op3",010101,"i",000000,"And Not and modify icc",106,"B11","Integer Arith",2,"op40","raw",0,,"andncc","rs1","rs2","rd"
"OR","op3",000010,"i",000000,"Inclusive Or",106,"B11","Integer Arith",2,"op40","raw",0,,"or","rs1","rs2","rd"
"ORcc","op3",010010,"i",000000,"Inclusive Or and modify icc",106,"B11","Integer Arith",2,"op40","raw",0,,"orcc","rs1","rs2","rd"
"ORN","op3",000110,"i",000000,"Inclusive Or Not",106,"B11","Integer Arith",2,"op40","raw",0,,"orn","rs1","rs2","rd"
"ORNcc","op3",010110,"i",000000,"Inclusive Or Not and modify icc",106,"B11","Integer Arith",2,"op40","raw",0,,"orncc","rs1","rs2","rd"
"XOR","op3",000011,"i",000000,"Exclusive Or",106,"B11","Integer Arith",2,"op40","raw",0,,"xor","rs1","rs2","rd"
"XORcc","op3",010011,"i",000000,"Exclusive Or and modify icc",106,"B11","Integer Arith",2,"op40","raw",0,,"xorcc","rs1","rs2","rd"
"XNOR","op3",000111,"i",000000,"Exclusive Nor",106,"B11","Integer Arith",2,"op40","raw",0,,"xnor","rs1","rs2","rd"
"XNORcc","op3",010111,"i",000000,"Exclusive Nor and modify icc",106,"B11","Integer Arith",2,"op40","raw",0,,"xnorcc","rs1","rs2","rd"
"SLL","op3",100101,"i",000000,"Shift Left Logical",107,"B12","Integer Arith",2,"op40","raw",0,,"sll","rs1","rs2","rd"
"SRL","op3",100110,"i",000000,"Shift Right Logical",107,"B12","Integer Arith",2,"op40","raw",0,,"srl","rs1","rs2","rd"
"SRA","op3",100111,"i",000000,"Shift Right Arithmetic",107,"B12","Integer Arith",2,"op40","raw",0,,"sra","rs1","rs2","rd"
"ADD","op3",000000,"i",000000,"Add",108,"B13","Integer Arith",2,"op40","raw",0,,"add","rs1","rs2","rd"
"ADDcc","op3",010000,"i",000000,"Add and modify icc",108,"B13","Integer Arith",2,"op40","raw",0,,"addcc","rs1","rs2","rd"
"ADDX","op3",001000,"i",000000,"Add with Carry",108,"B13","Integer Arith",2,"op40","raw",0,,"addx","rs1","rs2","rd"
"ADDXcc","op3",011000,"i",000000,"Add with Carry and modify icc",108,"B13","Integer Arith",2,"op40","raw",0,,"addxcc","rs1","rs2","rd"
"TADDcc","op3",100000,"i",000000,"Tagged Add and modify icc",109,"B14","Integer Arith",2,"op40","raw",0,,"taddcc","rs1","rs2","rd"
"TADDccTV","op3",100010,"i",000000,"Tagged Add, modify icc and Trap on Overflow",109,"B14","Integer Arith",2,"op40","raw",0,,"taddcctv","rs1","rs2","rd"
"SUB","op3",000100,"i",000000,"Subtract",110,"B15","Integer Arith",2,"op40","raw",0,,"sub","rs1","rs2","rd"
"SUBcc","op3",010100,"i",000000,"Subtract and modify icc",110,"B15","Integer Arith",2,"op40","raw",0,,"subcc","rs1","rs2","rd"
"SUBX","op3",001100,"i",000000,"Subtract with Carry",110,"B15","Integer Arith",2,"op40","raw",0,,"subx","rs1","rs2","rd"
"SUBXcc","op3",011100,"i",000000,"Subtract with Carry and modify icc",110,"B15","Integer Arith",2,"op40","raw",0,,"subxcc","rs1","rs2","rd"
"TSUBcc","op3",100001,"i",000000,"Tagged Subtract and modify icc",111,"B16","Integer Arith",2,"op40","raw",0,,"tsubcc","rs1","rs2","rd"
"TSUBccTV","op3",100011,"i",000000,"Tagged Subtract, modify icc and Trap on Overflow",111,"B16","Integer Arith",2,"op40","raw",0,,"tsubcctv","rs1","rs2","rd"
"MULScc","op3",100100,"i",000000,"Multiply Step and modify icc",112,"B17","Integer Arith",2,"op40","raw",0,,"mulscc","rs1","rs2","rd"
"UMUL","op3",001010,"i",000000,"Unsigned Integer Multiply",113,"B18","Integer Arith",2,"op40","raw",0,,"umul","rs1","rs2","rd"
"SMUL","op3",001011,"i",000000,"Signed Integer Multiply",113,"B18","Integer Arith",2,"op40","raw",0,,"smul","rs1","rs2","rd"
"UMULcc","op3",011010,"i",000000,"Unsigned Integer Multiply and modify icc",113,"B18","Integer Arith",2,"op40","raw",0,,"umulcc","rs1","rs2","rd"
"SMULcc","op3",011011,"i",000000,"Signed Integer Multiply and modify icc",113,"B18","Integer Arith",2,"op40","raw",0,,"smulcc","rs1","rs2","rd"
"UDIV","op3",001110,"i",000000,"Unsigned Integer Divide",115,"B19","Integer Arith",2,"op40","raw",0,,"udiv","rs1","rs2","rd"
"SDIV","op3",001111,"i",000000,"Signed Integer Divide",115,"B19","Integer Arith",2,"op40","raw",0,,"sdiv","rs1","rs2","rd"
"UDIVcc","op3",011110,"i",000000,"Unsigned Integer Divide and modify icc",115,"B19","Integer Arith",2,"op40","raw",0,,"udivcc","rs1","rs2","rd"
"SDIVcc","op3",011111,"i",000000,"Signed Integer Divide and modify icc",115,"B19","Integer Arith",2,"op40","raw",0,,"sdivcc","rs1","rs2","rd"
"SAVE","op3",111100,"i",000000,"Save caller’s window",117,"B20","Integer Arith",2,"op40","raw",0,,"save","rs1","rs2","rd"
"RESTORE","op3",111101,"i",000000,"Restore caller’s window",117,"B20","Integer Arith",2,"op40","raw",0,,"restore","rs1","rs2","rd"
"BA","op2",1000,"a",0000,"Branch Always",119,"B21","Control Transfer",3,"op21","raw",0,,"ba","label"
"BN","op2",0000,"a",0000,"Branch Never",119,"B21","Control Transfer",3,"op21","raw",0,,"bn","label"
"BNE","op2",1001,"a",0000,"Branch on Not Equal",119,"B21","Control Transfer",3,"op21","raw",0,,"bne","label"
"BE","op2",0001,"a",0000,"Branch on Equal",119,"B21","Control Transfer",3,"op21","raw",0,,"be","label"
"BG","op2",1010,"a",0000,"Branch on Greater",119,"B21","Control Transfer",3,"op21","raw",0,,"bg","label"
"BLE","op2",0010,"a",0000,"Branch on Less or Equal",119,"B21","Control Transfer",3,"op21","raw",0,,"ble","label"
"BGE","op2",1011,"a",0000,"Branch on Greater or Equal",119,"B21","Control Transfer",3,"op21","raw",0,,"bge","label"
"BL","op2",0011,"a",0000,"Branch on Less",119,"B21","Control Transfer",3,"op21","raw",0,,"bl","label"
"BGU","op2",1100,"a",0000,"Branch on Greater Unsigned",119,"B21","Control Transfer",3,"op21","raw",0,,"bgu","label"
"BLEU","op2",0100,"a",0000,"Branch on Less or Equal Unsigned",119,"B21","Control Transfer",3,"op21","raw",0,,"bleu","label"
"BCC","op2",1101,"a",0000,"Branch on Carry Clear (Greater than or Equal, Unsigned)",119,"B21","Control Transfer",3,"op21","raw",0,,"bcc","label"
"BCS","op2",0101,"a",0000,"Branch on Carry Set (Less than, Unsigned)",119,"B21","Control Transfer",3,"op21","raw",0,,"bcs","label"
"BPOS","op2",1110,"a",0000,"Branch on Positive",119,"B21","Control Transfer",3,"op21","raw",0,,"bpos","label"
"BNEG","op2",0110,"a",0000,"Branch on Negative",119,"B21","Control Transfer",3,"op21","raw",0,,"bneg","label"
"BVC","op2",1111,"a",0000,"Branch on Overflow Clear",119,"B21","Control Transfer",3,"op21","raw",0,,"bvc","label"
"BVS","op2",0111,"a",0000,"Branch on Overflow Set",119,"B21","Control Transfer",3,"op21","raw",0,,"bvs","label"
"FBA","op2",1000,"a",0000,"FCC Branch Always",121,"B22","Control Transfer",3,"op21","raw",0,,"fba","label"
"FBN","op2",0000,"a",0000,"FCC Branch Never",121,"B22","Control Transfer",3,"op21","raw",0,,"fbn","label"
"FBU","op2",0111,"a",0000,"FCC Branch on Unordered",121,"B22","Control Transfer",3,"op21","raw",0,,"fbu","label"
"FBG","op2",0110,"a",0000,"FCC Branch on Greater",121,"B22","Control Transfer",3,"op21","raw",0,,"fbg","label"
"FBUG","op2",0101,"a",0000,"FCC Branch on Unordered or Greater",121,"B22","Control Transfer",3,"op21","raw",0,,"fbug","label"
"FBL","op2",0100,"a",0000,"FCC Branch on Less",121,"B22","Control Transfer",3,"op21","raw",0,,"fbl","label"
"FBUL","op2",0011,"a",0000,"FCC Branch on Unordered or Less",121,"B22","Control Transfer",3,"op21","raw",0,,"fbul","label"
"FBLG","op2",0010,"a",0000,"FCC Branch on Less or Greater",121,"B22","Control Transfer",3,"op21","raw",0,,"fblg","label"
"FBNE","op2",0001,"a",0000,"FCC Branch on Not Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbne","label"
"FBE","op2",1001,"a",0000,"FCC Branch on Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbe","label"
"FBUE","op2",1010,"a",0000,"FCC Branch on Unordered or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbue","label"
"FBGE","op2",1011,"a",0000,"FCC Branch on Greater or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbge","label"
"FBUGE","op2",1100,"a",0000,"FCC Branch on Unordered or Greater or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbuge","label"
"FBLE","op2",1101,"a",0000,"FCC Branch on Less or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fble","label"
"FBULE","op2",1110,"a",0000,"FCC Branch on Unordered or Less or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbule","label"
"FBO","op2",1111,"a",0000,"FCC Branch on Ordered",121,"B22","Control Transfer",3,"op21","raw",0,,"fbo","label"
"CBA","op2",1000,"a",0000,"CCC Branch Always",123,"B23","Control Transfer",3,"op21","raw",0,,"cba","label"
"CBN","op2",0000,"a",0000,"CCC Branch Never",123,"B23","Control Transfer",3,"op21","raw",0,,"cbn","label"
"CB3","op2",0111,"a",0000,"CCC Branch on Unordered",123,"B23","Control Transfer",3,"op21","raw",0,,"cb3","label"
"CB2","op2",0110,"a",0000,"CCC Branch on Greater",123,"B23","Control Transfer",3,"op21","raw",0,,"cb2","label"
"CB23","op2",0101,"a",0000,"CCC Branch on Unordered or Greater",123,"B23","Control Transfer",3,"op21","raw",0,,"cb23","label"
"CB1","op2",0100,"a",0000,"CCC Branch on Less",123,"B23","Control Transfer",3,"op21","raw",0,,"cb1","label"
"CB13","op2",0011,"a",0000,"CCC Branch on Unordered or Less",123,"B23","Control Transfer",3,"op21","raw",0,,"cb13","label"
"CB12","op2",0010,"a",0000,"CCC Branch on Less or Greater",123,"B23","Control Transfer",3,"op21","raw",0,,"cb12","label"
"CB123","op2",0001,"a",0000,"CCC Branch on Not Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb123","label"
"CB0","op2",1001,"a",0000,"CCC Branch on Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb0","label"
"CB03","op2",1010,"a",0000,"CCC Branch on Unordered or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb03","label"
"CB02","op2",1011,"a",0000,"CCC Branch on Greater or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb02","label"
"CB023","op2",1100,"a",0000,"CCC Branch on Unordered or Greater or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb023","label"
"CB01","op2",1101,"a",0000,"CCC Branch on Less or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb01","label"
"CB013","op2",1110,"a",0000,"CCC Branch on Unordered or Less or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb013","label"
"CB012","op2",1111,"a",0000,"CCC Branch on Ordered",123,"B23","Control Transfer",3,"op21","raw",0,,"cb012","label"
"CALL","op",01,,,"Call and Link",125,"B24","Control Transfer",3,"op1","raw",0,,"call","label"
"JMPL","op3",111000,"i",000000,"Jump and Link",126,"B25","Control Transfer",3,"op40","raw",0,,"jmpl","rs1","rs2","rd"
"RETT","op3",111001,"i",000000,"Return from Trap",127,"B26","Control Transfer",3,"op43","raw",0,,"rett","rs1","rs2"
"TA","op3",111010,"i",000000,"Trap Always",129,"B27","Control Transfer",3,"op37","raw",0,,"ta","rs1","rs2","#software-trap"
"TN","op3",111010,"i",000000,"Trap Never",129,"B27","Control Transfer",3,"op37","raw",1,,"tn","rs1","rs2","#software-trap"
"TNE","op3",111010,"i",000000,"Trap on Not Equal",129,"B27","Control Transfer",3,"op37","raw",0,,"tne","rs1","rs2","#software-trap"
"TE","op3",111010,"i",000000,"Trap on Equal",129,"B27","Control Transfer",3,"op37","raw",0,,"te","rs1","rs2","#software-trap"
"TG","op3",111010,"i",000000,"Trap on Greater",129,"B27","Control Transfer",3,"op37","raw",0,,"tg","rs1","rs2","#software-trap"
"TLE","op3",111010,"i",000000,"Trap on Less or Equal",129,"B27","Control Transfer",3,"op37","raw",0,,"tle","rs1","rs2","#software-trap"
"TGE","op3",111010,"i",000000,"Trap on Greater or Equal",129,"B27","Control Transfer",3,"op37","raw",0,,"tge","rs1","rs2","#software-trap"
"TL","op3",111010,"i",000000,"Trap on Less",129,"B27","Control Transfer",3,"op37","raw",0,,"tl","rs1","rs2","#software-trap"
"TGU","op3",111010,"i",000000,"Trap on Greater Unsigned",129,"B27","Control Transfer",3,"op37","raw",0,,"tgu","rs1","rs2","#software-trap"
"TLEU","op3",111010,"i",000000,"Trap on Less or Equal Unsigned",129,"B27","Control Transfer",3,"op37","raw",0,,"tleu","rs1","rs2","#software-trap"
"TCC","op3",111010,"i",000000,"Trap on Carry Clear (Greater than or Equal, Unsigned)",129,"B27","Control Transfer",3,"op37","raw",0,,"tcc","rs1","rs2","#software-trap"
"TCS","op3",111010,"i",000000,"Trap on Carry Set (Less Than, Unsigned)",129,"B27","Control Transfer",3,"op37","raw",0,,"tcs","rs1","rs2","#software-trap"
"TPOS","op3",111010,"i",000000,"Trap on Positive",129,"B27","Control Transfer",3,"op37","raw",0,,"tpos","rs1","rs2","#software-trap"
"TNEG","op3",111010,"i",000000,"Trap on Negative",129,"B27","Control Transfer",3,"op37","raw",0,,"tneg","rs1","rs2","#software-trap"
"TVC","op3",111010,"i",000000,"Trap on Overflow Clear",129,"B27","Control Transfer",3,"op37","raw",0,,"tvc","rs1","rs2","#software-trap"
"TVS","op3",111010,"i",000000,"Trap on Overflow Set",129,"B27","Control Transfer",3,"op37","raw",0,,"tvs","rs1","rs2","#software-trap"
"RDY","op3",101000,,,"Read Y Register",131,"B28","State Register",4,"op41","raw",0,"rs1=0","rd","%y","rd"
"RDASR‡","op3",101000,,,"Read Ancillary State Register (reserved)",131,"B28","State Register",4,"op41","raw",0,"Rs = 1 … 15, causes undefined results","rd","rs1","rd"
"RDASR‡","op3",101000,,,"(implementation-dependent)",131,"B28","State Register",4,"op41","raw",0,"Stbar = rdasr with rd=0 and rs1=15","rd","rs1","rd"
"RDPSR","op3",101001,,,"Read Processor State Register",131,"B28","State Register",4,"op41","raw",2,,"rd","%psr","rd"
"RDWIM","op3",101010,,,"Read Window Invalid Mask Register",131,"B28","State Register",4,"op41","raw",2,,"rd","%wim","rd"
"RDTBR","op3",101011,,,"Read Trap Base Register",131,"B28","State Register",4,"op41","raw",1,,"rd","%tbr","rd"
"WRY","op3",110000,,,"Write Y Register",133,"B29","State Register",4,"op41","raw",1,"rd=0","wry","rs1","rs2","%y"
"WRASR‡","op3",110000,,,"Write Ancillary State Register (reserved)",133,"B29","State Register",4,"op41","raw",1,"Rs = 1 … 15, causes undefined results","wrasr‡","rs1","rs2","rd"
"WRASR‡","op3",110000,,,"(implementation-dependent)",133,"B29","State Register",4,"op41","raw",0,,"wrasr‡","rs1","rs2","rd"
"WRPSR","op3",110001,,,"Write Processor State Register",133,"B29","State Register",4,"op41","raw",2,,"wrpsr","rs1","rs2","%psr"
"WRWIM","op3",110010,,,"Write Window Invalid Mask Register",133,"B29","State Register",4,"op41","raw",2,,"wrwim","rs1","rs2","%wim"
"WRTBR","op3",110011,,,"Write Trap Base Register",133,"B29","State Register",4,"op41","raw",1,,"wrtbr","rs1","rs2","%tbr"
"STBAR","op3",101000,,,"Store Barrier",136,"B30","Load/Store",1,"op42","raw",1,,"stbar"
"UNIMP","op2",0,,,"Unimplemented",137,"B31",,,"op25","raw",1,,"unimp","const22"
"FLUSH","op3",111011,"i",000000,"Flush Instruction Memory",138,"B32","Load/Store",1,"op43","raw",0,,"flush","rs1","rs2"
"FiTOs","op3",110100,"opf",11000100,"Convert Integer to Single",140,"B33","Floating Point",5,"op33","raw",0,,"fitos","fprs2","fprd"
"FiTOd","op3",110100,"opf",11001000,"Convert Integer to Double",140,"B33","Floating Point",5,"op33","raw",0,,"fitod","fprs2","fprd"
"FiTOq","op3",110100,"opf",11001100,"Convert Integer to Quad",140,"B33","Floating Point",5,"op33","raw",0,,"fitoq","fprs2","fprd"
"FsTOi","op3",110100,"opf",11010001,"Convert Single to Integer",140,"B33","Floating Point",5,"op33","raw",0,,"fstoi","fprs2","fprd"
"FdTOi","op3",110100,"opf",11010010,"Convert Double to Integer",140,"B33","Floating Point",5,"op33","raw",0,,"fdtoi","fprs2","fprd"
"FqTOi","op3",110100,"opf",11010011,"Convert Quad to Integer",140,"B33","Floating Point",5,"op33","raw",0,,"fqtoi","fprs2","fprd"
"FsTOd","op3",110100,"opf",11001001,"Convert Single to Double",140,"B33","Floating Point",5,"op33","raw",0,,"fstod","fprs2","fprd"
"FsTOq","op3",110100,"opf",11001101,"Convert Single to Quad",140,"B33","Floating Point",5,"op33","raw",0,,"fstoq","fprs2","fprd"
"FdTOs","op3",110100,"opf",11000110,"Convert Double to Single",140,"B33","Floating Point",5,"op33","raw",0,,"fdtos","fprs2","fprd"
"FdTOq","op3",110100,"opf",11001110,"Convert Double to Quad",140,"B33","Floating Point",5,"op33","raw",0,,"fdtoq","fprs2","fprd"
"FqTOs","op3",110100,"opf",11000111,"Convert Quad to Single",140,"B33","Floating Point",5,"op33","raw",0,,"fqtos","fprs2","fprd"
"FqTOd","op3",110100,"opf",11001011,"Convert Quad to Double",140,"B33","Floating Point",5,"op33","raw",0,,"fqtod","fprs2","fprd"
"FMOVs","op3",110100,"opf",1,"Move",140,"B33","Floating Point",5,"op33","raw",0,,"fmovs","fprs2","fprd"
"FNEGs","op3",110100,"opf",101,"Negate",140,"B33","Floating Point",5,"op33","raw",0,,"fnegs","fprs2","fprd"
"FABSs","op3",110100,"opf",1001,"Absolute Value",140,"B33","Floating Point",5,"op33","raw",0,,"fabss","fprs2","fprd"
"FSQRTs","op3",110100,"opf",101001,"Square Root Single",140,"B33","Floating Point",5,"op33","raw",0,,"fsqrts","fprs2","fprd"
"FSQRTd","op3",110100,"opf",101010,"Square Root Double",140,"B33","Floating Point",5,"op33","raw",0,,"fsqrtd","fprs2","fprd"
"FSQRTq","op3",110100,"opf",101011,"Square Root Quad",140,"B33","Floating Point",5,"op33","raw",0,,"fsqrtq","fprs2","fprd"
"FADDs","op3",110100,"opf",1000001,"Add Single",140,"B33","Floating Point",5,"op33","raw",0,,"fadds","fprs1","fprs2","fprd"
"FADDd","op3",110100,"opf",1000010,"Add Double",140,"B33","Floating Point",5,"op33","raw",0,,"faddd","fprs1","fprs2","fprd"
"FADDq","op3",110100,"opf",1000011,"Add Quad",140,"B33","Floating Point",5,"op33","raw",0,,"faddq","fprs1","fprs2","fprd"
"FSUBs","op3",110100,"opf",1000101,"Subtract Single",140,"B33","Floating Point",5,"op33","raw",0,,"fsubs","fprs1","fprs2","fprd"
"FSUBd","op3",110100,"opf",1000110,"Subtract Double",140,"B33","Floating Point",5,"op33","raw",0,,"fsubd","fprs1","fprs2","fprd"
"FSUBq","op3",110100,"opf",1000111,"Subtract Quad",140,"B33","Floating Point",5,"op33","raw",0,,"fsubq","fprs1","fprs2","fprd"
"FMULs","op3",110100,"opf",1001001,"Multiply Single",140,"B33","Floating Point",5,"op33","raw",0,,"fmuls","fprs1","fprs2","fprd"
"FMULd","op3",110100,"opf",1001010,"Multiply Double",140,"B33","Floating Point",5,"op33","raw",0,,"fmuld","fprs1","fprs2","fprd"
"FMULq","op3",110100,"opf",1001011,"Multiply Quad",140,"B33","Floating Point",5,"op33","raw",0,,"fmulq","fprs1","fprs2","fprd"
"FsMULd","op3",110100,"opf",1101001,"Multiply Single to Double",140,"B33","Floating Point",5,"op33","raw",0,,"fsmuld","fprs1","fprs2","fprd"
"FdMULq","op3",110100,"opf",1101110,"Multiply Double to Quad",140,"B33","Floating Point",5,"op33","raw",0,,"fdmulq","fprs1","fprs2","fprd"
"FDIVs","op3",110100,"opf",1001101,"Divide Single",140,"B33","Floating Point",5,"op33","raw",0,,"fdivs","fprs1","fprs2","fprd"
"FDIVd","op3",110100,"opf",1001110,"Divide Double",140,"B33","Floating Point",5,"op33","raw",0,,"fdivd","fprs1","fprs2","fprd"
"FDIVq","op3",110100,"opf",1001111,"Divide Quad",140,"B33","Floating Point",5,"op33","raw",0,,"fdivq","fprs1","fprs2","fprd"
"FCMPs","op3",110101,"opf",1010001,"Compare Single",140,"B33","Floating Point",5,"op33","raw",0,,"fcmps","fprs1","fprs2"
"FCMPd","op3",110101,"opf",1010010,"Compare Double",140,"B33","Floating Point",5,"op33","raw",0,,"fcmpd","fprs1","fprs2"
"FCMPq","op3",110101,"opf",1010011,"Compare Quad",140,"B33","Floating Point",5,"op33","raw",0,,"fcmpq","fprs1","fprs2"
"FCMPEs","op3",110101,"opf",1010101,"Compare Single and Exception if Unordered",140,"B33","Floating Point",5,"op33","raw",0,,"fcmpes","fprs1","fprs2"
"FCMPEd","op3",110101,"opf",1010110,"Compare Double and Exception if Unordered",140,"B33","Floating Point",5,"op33","raw",0,,"fcmped","fprs1","fprs2"
"FCMPEq","op3",110101,"opf",1010111,"Compare Quad and Exception if Unordered",140,"B33","Floating Point",5,"op33","raw",0,,"fcmpeq","fprs1","fprs2"
"CPop1","op3",110110,"opc",,"Coprocessor Operate",149,"B34","Coprocessor",6,"op39","raw",0,"Opc: coproc specific","cpop1","opc","cprs1","cprs2","cprd"
"CPop2","op3",110111,"opc",,"Coprocessor Operate",149,"B34","Coprocessor",6,"op30","raw",0,"Opc: coproc specific","cpop2","opc","cprs1","cprs2","cprd"
"LDSB","op3",001001,"i",000001,"Load Signed Byte",90,"B1","Load/Store",1,"op35","raw",0,,"ldsb","rs1","sign_ext (simm13)","rd"
"LDSH","op3",001010,"i",000001,"Load Signed Halfword",90,"B1","Load/Store",1,"op35","raw",0,,"ldsh","rs1","sign_ext (simm13)","rd"
"LDUB","op3",000001,"i",000001,"Load Unsigned Byte",90,"B1","Load/Store",1,"op35","raw",0,,"ldub","rs1","sign_ext (simm13)","rd"
"LDUH","op3",000010,"i",000001,"Load Unsigned Halfword",90,"B1","Load/Store",1,"op35","raw",0,,"lduh","rs1","sign_ext (simm13)","rd"
"LD","op3",000000,"i",000001,"Load Word",90,"B1","Load/Store",1,"op35","raw",0,,"ld","rs1","sign_ext (simm13)","rd"
"LDD","op3",000011,"i",000001,"Load Doubleword",90,"B1","Load/Store",1,"op35","raw",0,,"ldd","rs1","sign_ext (simm13)","rd"
"LDF","op3",100000,"i",000001,"Load Floating-point Register",92,"B2","Load/Store",1,"op35","raw",0,,"ld","rs1","sign_ext (simm13)","fprd"
"LDDF","op3",100011,"i",000001,"Load Double Floating-point Register",92,"B2","Load/Store",1,"op35","raw",0,,"ldd","rs1","sign_ext (simm13)","fprd"
"LDFSR","op3",100001,"i",000001,"Load Floating-point State Register",92,"B2","Load/Store",1,"op35","raw",0,,"ld","rs1","sign_ext (simm13)","%fsr"
"LDC","op3",110000,"i",000001,"Load Coprocessor Register",94,"B3","Load/Store",1,"op35","raw",0,,"ld","rs1","sign_ext (simm13)","cprd"
"LDDC","op3",110011,"i",000001,"Load Double Coprocessor Register",94,"B3","Load/Store",1,"op35","raw",0,,"ldd","rs1","sign_ext (simm13)","cprd"
"LDCSR ","op3",110001,"i",000001,"Load Coprocessor State Register",94,"B3","Load/Store",1,"op35","raw",0,,"ld","rs1","sign_ext (simm13)","%csr"
"STB","op3",000101,"i",000001,"Store Byte",95,"B4","Load/Store",1,"op35","raw",0,,"stb","rd","rs1","sign_ext (simm13)"
"STH","op3",000110,"i",000001,"Store Halfword",95,"B4","Load/Store",1,"op35","raw",0,,"sth","rd","rs1","sign_ext (simm13)"
"ST","op3",000100,"i",000001,"Store Word",95,"B4","Load/Store",1,"op35","raw",0,,"st","rd","rs1","sign_ext (simm13)"
"STD","op3",000111,"i",000001,"Store Doubleword",95,"B4","Load/Store",1,"op35","raw",0,,"std","rd","rs1","sign_ext (simm13)"
"STF","op3",100100,"i",000001,"Store Floating-point",97,"B5","Load/Store",1,"op35","raw",0,,"stf","fprd","rs1","sign_ext (simm13)"
"STDF","op3",100111,"i",000001,"Store Double Floating-point",97,"B5","Load/Store",1,"op35","raw",0,,"stdf","fprd","rs1","sign_ext (simm13)"
"STFSR","op3",100101,"i",000001,"Store Floating-point State Register",97,"B5","Load/Store",1,"op35","raw",0,,"stfsr","%fsr","rs1","sign_ext (simm13)"
"STDFQ ","op3",100110,"i",000001,"Store Double Floating-point deferred-trap Queue",97,"B5","Load/Store",1,"op35","raw",0,,"stdfq ","%fq","rs1","sign_ext (simm13)"
"STC","op3",110100,"i",000001,"Store Coprocessor",99,"B6","Load/Store",1,"op35","raw",0,,"stc","cprd","rs1","sign_ext (simm13)"
"STDC","op3",110111,"i",000001,"Store Double Coprocessor",99,"B6","Load/Store",1,"op35","raw",0,,"stdc","cprd","rs1","sign_ext (simm13)"
"STCSR","op3",110101,"i",000001,"Store Coprocessor State Register",99,"B6","Load/Store",1,"op35","raw",0,,"stcsr","%csr","rs1","sign_ext (simm13)"
"STDCQ","op3",110110,"i",000001,"Store Double Coprocessor Queue",99,"B6","Load/Store",1,"op35","raw",0,,"stdcq","%cq","rs1","sign_ext (simm13)"
"LDSTUBA ","op3",011101,"i",000001,"Atomic Load-Store Unsigned Byte into Alternate space",101,"B7","Load/Store",1,"op35","raw",0,,"ldstuba ","rs1","sign_ext (simm13)","rd"
"SWAPA ","op3",011111,"i",000001,"SWAP register with Alternate space memory",102,"B8","Load/Store",1,"op35","raw",0,,"swapa ","rs1","sign_ext (simm13)","rd"
"AND","op3",000001,"i",000001,"And",106,"B11","Integer Arith",2,"op32","raw",0,,"and","rs1","sign_ext (simm13)","rd"
"ANDcc","op3",010001,"i",000001,"And and modify icc",106,"B11","Integer Arith",2,"op32","raw",0,,"andcc","rs1","sign_ext (simm13)","rd"
"ANDN","op3",000101,"i",000001,"And Not",106,"B11","Integer Arith",2,"op32","raw",0,,"andn","rs1","sign_ext (simm13)","rd"
"ANDNcc","op3",010101,"i",000001,"And Not and modify icc",106,"B11","Integer Arith",2,"op32","raw",0,,"andncc","rs1","sign_ext (simm13)","rd"
"OR","op3",000010,"i",000001,"Inclusive Or",106,"B11","Integer Arith",2,"op32","raw",0,,"or","rs1","sign_ext (simm13)","rd"
"ORcc","op3",010010,"i",000001,"Inclusive Or and modify icc",106,"B11","Integer Arith",2,"op32","raw",0,,"orcc","rs1","sign_ext (simm13)","rd"
"ORN","op3",000110,"i",000001,"Inclusive Or Not",106,"B11","Integer Arith",2,"op32","raw",0,,"orn","rs1","sign_ext (simm13)","rd"
"ORNcc","op3",010110,"i",000001,"Inclusive Or Not and modify icc",106,"B11","Integer Arith",2,"op32","raw",0,,"orncc","rs1","sign_ext (simm13)","rd"
"XOR","op3",000011,"i",000001,"Exclusive Or",106,"B11","Integer Arith",2,"op32","raw",0,,"xor","rs1","sign_ext (simm13)","rd"
"XORcc","op3",010011,"i",000001,"Exclusive Or and modify icc",106,"B11","Integer Arith",2,"op32","raw",0,,"xorcc","rs1","sign_ext (simm13)","rd"
"XNOR","op3",000111,"i",000001,"Exclusive Nor",106,"B11","Integer Arith",2,"op32","raw",0,,"xnor","rs1","sign_ext (simm13)","rd"
"XNORcc","op3",010111,"i",000001,"Exclusive Nor and modify icc",106,"B11","Integer Arith",2,"op32","raw",0,,"xnorcc","rs1","sign_ext (simm13)","rd"
"SLL","op3",100101,"i",000001,"Shift Left Logical",107,"B12","Integer Arith",2,"op32","raw",0,,"sll","rs1","sign_ext (simm13)","rd"
"SRL","op3",100110,"i",000001,"Shift Right Logical",107,"B12","Integer Arith",2,"op32","raw",0,,"srl","rs1","sign_ext (simm13)","rd"
"SRA","op3",100111,"i",000001,"Shift Right Arithmetic",107,"B12","Integer Arith",2,"op32","raw",0,,"sra","rs1","sign_ext (simm13)","rd"
"ADD","op3",000000,"i",000001,"Add",108,"B13","Integer Arith",2,"op32","raw",0,,"add","rs1","sign_ext (simm13)","rd"
"ADDcc","op3",010000,"i",000001,"Add and modify icc",108,"B13","Integer Arith",2,"op32","raw",0,,"addcc","rs1","sign_ext (simm13)","rd"
"ADDX","op3",001000,"i",000001,"Add with Carry",108,"B13","Integer Arith",2,"op32","raw",0,,"addx","rs1","sign_ext (simm13)","rd"
"ADDXcc","op3",011000,"i",000001,"Add with Carry and modify icc",108,"B13","Integer Arith",2,"op32","raw",0,,"addxcc","rs1","sign_ext (simm13)","rd"
"TADDcc","op3",100000,"i",000001,"Tagged Add and modify icc",109,"B14","Integer Arith",2,"op32","raw",0,,"taddcc","rs1","sign_ext (simm13)","rd"
"TADDccTV","op3",100010,"i",000001,"Tagged Add, modify icc and Trap on Overflow",109,"B14","Integer Arith",2,"op32","raw",0,,"taddcctv","rs1","sign_ext (simm13)","rd"
"SUB","op3",000100,"i",000001,"Subtract",110,"B15","Integer Arith",2,"op32","raw",0,,"sub","rs1","sign_ext (simm13)","rd"
"SUBcc","op3",010100,"i",000001,"Subtract and modify icc",110,"B15","Integer Arith",2,"op32","raw",0,,"subcc","rs1","sign_ext (simm13)","rd"
"SUBX","op3",001100,"i",000001,"Subtract with Carry",110,"B15","Integer Arith",2,"op32","raw",0,,"subx","rs1","sign_ext (simm13)","rd"
"SUBXcc","op3",011100,"i",000001,"Subtract with Carry and modify icc",110,"B15","Integer Arith",2,"op32","raw",0,,"subxcc","rs1","sign_ext (simm13)","rd"
"TSUBcc","op3",100001,"i",000001,"Tagged Subtract and modify icc",111,"B16","Integer Arith",2,"op32","raw",0,,"tsubcc","rs1","sign_ext (simm13)","rd"
"TSUBccTV","op3",100011,"i",000001,"Tagged Subtract, modify icc and Trap on Overflow",111,"B16","Integer Arith",2,"op32","raw",0,,"tsubcctv","rs1","sign_ext (simm13)","rd"
"MULScc","op3",100100,"i",000001,"Multiply Step and modify icc",112,"B17","Integer Arith",2,"op32","raw",0,,"mulscc","rs1","sign_ext (simm13)","rd"
"UMUL","op3",001010,"i",000001,"Unsigned Integer Multiply",113,"B18","Integer Arith",2,"op32","raw",0,,"umul","rs1","sign_ext (simm13)","rd"
"SMUL","op3",001011,"i",000001,"Signed Integer Multiply",113,"B18","Integer Arith",2,"op32","raw",0,,"smul","rs1","sign_ext (simm13)","rd"
"UMULcc","op3",011010,"i",000001,"Unsigned Integer Multiply and modify icc",113,"B18","Integer Arith",2,"op32","raw",0,,"umulcc","rs1","sign_ext (simm13)","rd"
"SMULcc","op3",011011,"i",000001,"Signed Integer Multiply and modify icc",113,"B18","Integer Arith",2,"op32","raw",0,,"smulcc","rs1","sign_ext (simm13)","rd"
"UDIV","op3",001110,"i",000001,"Unsigned Integer Divide",115,"B19","Integer Arith",2,"op32","raw",0,,"udiv","rs1","sign_ext (simm13)","rd"
"SDIV","op3",001111,"i",000001,"Signed Integer Divide",115,"B19","Integer Arith",2,"op32","raw",0,,"sdiv","rs1","sign_ext (simm13)","rd"
"UDIVcc","op3",011110,"i",000001,"Unsigned Integer Divide and modify icc",115,"B19","Integer Arith",2,"op32","raw",0,,"udivcc","rs1","sign_ext (simm13)","rd"
"SDIVcc","op3",011111,"i",000001,"Signed Integer Divide and modify icc",115,"B19","Integer Arith",2,"op32","raw",0,,"sdivcc","rs1","sign_ext (simm13)","rd"
"SAVE","op3",111100,"i",000001,"Save caller’s window",117,"B20","Integer Arith",2,"op32","raw",0,,"save","rs1","sign_ext (simm13)","rd"
"RESTORE","op3",111101,"i",000001,"Restore caller’s window",117,"B20","Integer Arith",2,"op32","raw",0,,"restore","rs1","sign_ext (simm13)","rd"
"BA","op2",1000,"a",0001,"Branch Always",119,"B21","Control Transfer",3,"op21","raw",0,,"ba,a","label"
"BN","op2",0000,"a",0001,"Branch Never",119,"B21","Control Transfer",3,"op21","raw",0,,"bn,a","label"
"BNE","op2",1001,"a",0001,"Branch on Not Equal",119,"B21","Control Transfer",3,"op21","raw",0,,"bne,a","label"
"BE","op2",0001,"a",0001,"Branch on Equal",119,"B21","Control Transfer",3,"op21","raw",0,,"be,a","label"
"BG","op2",1010,"a",0001,"Branch on Greater",119,"B21","Control Transfer",3,"op21","raw",0,,"bg,a","label"
"BLE","op2",0010,"a",0001,"Branch on Less or Equal",119,"B21","Control Transfer",3,"op21","raw",0,,"ble,a","label"
"BGE","op2",1011,"a",0001,"Branch on Greater or Equal",119,"B21","Control Transfer",3,"op21","raw",0,,"bge,a","label"
"BL","op2",0011,"a",0001,"Branch on Less",119,"B21","Control Transfer",3,"op21","raw",0,,"bl,a","label"
"BGU","op2",1100,"a",0001,"Branch on Greater Unsigned",119,"B21","Control Transfer",3,"op21","raw",0,,"bgu,a","label"
"BLEU","op2",0100,"a",0001,"Branch on Less or Equal Unsigned",119,"B21","Control Transfer",3,"op21","raw",0,,"bleu,a","label"
"BCC","op2",1101,"a",0001,"Branch on Carry Clear (Greater than or Equal, Unsigned)",119,"B21","Control Transfer",3,"op21","raw",0,,"bcc,a","label"
"BCS","op2",0101,"a",0001,"Branch on Carry Set (Less than, Unsigned)",119,"B21","Control Transfer",3,"op21","raw",0,,"bcs,a","label"
"BPOS","op2",1110,"a",0001,"Branch on Positive",119,"B21","Control Transfer",3,"op21","raw",0,,"bpos,a","label"
"BNEG","op2",0110,"a",0001,"Branch on Negative",119,"B21","Control Transfer",3,"op21","raw",0,,"bneg,a","label"
"BVC","op2",1111,"a",0001,"Branch on Overflow Clear",119,"B21","Control Transfer",3,"op21","raw",0,,"bvc,a","label"
"BVS","op2",0111,"a",0001,"Branch on Overflow Set",119,"B21","Control Transfer",3,"op21","raw",0,,"bvs,a","label"
"FBA","op2",1000,"a",0001,"FCC Branch Always",121,"B22","Control Transfer",3,"op21","raw",0,,"fba,a","label"
"FBN","op2",0000,"a",0001,"FCC Branch Never",121,"B22","Control Transfer",3,"op21","raw",0,,"fbn,a","label"
"FBU","op2",0111,"a",0001,"FCC Branch on Unordered",121,"B22","Control Transfer",3,"op21","raw",0,,"fbu,a","label"
"FBG","op2",0110,"a",0001,"FCC Branch on Greater",121,"B22","Control Transfer",3,"op21","raw",0,,"fbg,a","label"
"FBUG","op2",0101,"a",0001,"FCC Branch on Unordered or Greater",121,"B22","Control Transfer",3,"op21","raw",0,,"fbug,a","label"
"FBL","op2",0100,"a",0001,"FCC Branch on Less",121,"B22","Control Transfer",3,"op21","raw",0,,"fbl,a","label"
"FBUL","op2",0011,"a",0001,"FCC Branch on Unordered or Less",121,"B22","Control Transfer",3,"op21","raw",0,,"fbul,a","label"
"FBLG","op2",0010,"a",0001,"FCC Branch on Less or Greater",121,"B22","Control Transfer",3,"op21","raw",0,,"fblg,a","label"
"FBNE","op2",0001,"a",0001,"FCC Branch on Not Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbne,a","label"
"FBE","op2",1001,"a",0001,"FCC Branch on Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbe,a","label"
"FBUE","op2",1010,"a",0001,"FCC Branch on Unordered or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbue,a","label"
"FBGE","op2",1011,"a",0001,"FCC Branch on Greater or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbge,a","label"
"FBUGE","op2",1100,"a",0001,"FCC Branch on Unordered or Greater or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbuge,a","label"
"FBLE","op2",1101,"a",0001,"FCC Branch on Less or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fble,a","label"
"FBULE","op2",1110,"a",0001,"FCC Branch on Unordered or Less or Equal",121,"B22","Control Transfer",3,"op21","raw",0,,"fbule,a","label"
"FBO","op2",1111,"a",0001,"FCC Branch on Ordered",121,"B22","Control Transfer",3,"op21","raw",0,,"fbo,a","label"
"CBA","op2",1000,"a",0001,"CCC Branch Always",123,"B23","Control Transfer",3,"op21","raw",0,,"cba,a","label"
"CBN","op2",0000,"a",0001,"CCC Branch Never",123,"B23","Control Transfer",3,"op21","raw",0,,"cbn,a","label"
"CB3","op2",0111,"a",0001,"CCC Branch on Unordered",123,"B23","Control Transfer",3,"op21","raw",0,,"cb3,a","label"
"CB2","op2",0110,"a",0001,"CCC Branch on Greater",123,"B23","Control Transfer",3,"op21","raw",0,,"cb2,a","label"
"CB23","op2",0101,"a",0001,"CCC Branch on Unordered or Greater",123,"B23","Control Transfer",3,"op21","raw",0,,"cb23,a","label"
"CB1","op2",0100,"a",0001,"CCC Branch on Less",123,"B23","Control Transfer",3,"op21","raw",0,,"cb1,a","label"
"CB13","op2",0011,"a",0001,"CCC Branch on Unordered or Less",123,"B23","Control Transfer",3,"op21","raw",0,,"cb13,a","label"
"CB12","op2",0010,"a",0001,"CCC Branch on Less or Greater",123,"B23","Control Transfer",3,"op21","raw",0,,"cb12,a","label"
"CB123","op2",0001,"a",0001,"CCC Branch on Not Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb123,a","label"
"CB0","op2",1001,"a",0001,"CCC Branch on Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb0,a","label"
"CB03","op2",1010,"a",0001,"CCC Branch on Unordered or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb03,a","label"
"CB02","op2",1011,"a",0001,"CCC Branch on Greater or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb02,a","label"
"CB023","op2",1100,"a",0001,"CCC Branch on Unordered or Greater or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb023,a","label"
"CB01","op2",1101,"a",0001,"CCC Branch on Less or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb01,a","label"
"CB013","op2",1110,"a",0001,"CCC Branch on Unordered or Less or Equal",123,"B23","Control Transfer",3,"op21","raw",0,,"cb013,a","label"
"CB012","op2",1111,"a",0001,"CCC Branch on Ordered",123,"B23","Control Transfer",3,"op21","raw",0,,"cb012,a","label"
"JMPL","op3",111000,"i",000001,"Jump and Link",126,"B25","Control Transfer",3,"op32","raw",0,,"jmpl","rs1","sign_ext (simm13)","rd"
"RETT","op3",111001,"i",000001,"Return from Trap",127,"B26","Control Transfer",3,"op44","raw",0,,"rett","rs1","sign_ext (simm13)"
"TA","op3",111010,"i",000001,"Trap Always",129,"B27","Control Transfer",3,"op38","raw",0,,"ta","rs1","sign_ext (simm13)","#software-trap"
"TN","op3",111010,"i",000001,"Trap Never",129,"B27","Control Transfer",3,"op38","raw",0,,"tn","rs1","sign_ext (simm13)","#software-trap"
"TNE","op3",111010,"i",000001,"Trap on Not Equal",129,"B27","Control Transfer",3,"op38","raw",0,,"tne","rs1","sign_ext (simm13)","#software-trap"
"TE","op3",111010,"i",000001,"Trap on Equal",129,"B27","Control Transfer",3,"op38","raw",0,,"te","rs1","sign_ext (simm13)","#software-trap"
"TG","op3",111010,"i",000001,"Trap on Greater",129,"B27","Control Transfer",3,"op38","raw",0,,"tg","rs1","sign_ext (simm13)","#software-trap"
"TLE","op3",111010,"i",000001,"Trap on Less or Equal",129,"B27","Control Transfer",3,"op38","raw",0,,"tle","rs1","sign_ext (simm13)","#software-trap"
"TGE","op3",111010,"i",000001,"Trap on Greater or Equal",129,"B27","Control Transfer",3,"op38","raw",0,,"tge","rs1","sign_ext (simm13)","#software-trap"
"TL","op3",111010,"i",000001,"Trap on Less",129,"B27","Control Transfer",3,"op38","raw",0,,"tl","rs1","sign_ext (simm13)","#software-trap"
"TGU","op3",111010,"i",000001,"Trap on Greater Unsigned",129,"B27","Control Transfer",3,"op38","raw",0,,"tgu","rs1","sign_ext (simm13)","#software-trap"
"TLEU","op3",111010,"i",000001,"Trap on Less or Equal Unsigned",129,"B27","Control Transfer",3,"op38","raw",0,,"tleu","rs1","sign_ext (simm13)","#software-trap"
"TCC","op3",111010,"i",000001,"Trap on Carry Clear (Greater than or Equal, Unsigned)",129,"B27","Control Transfer",3,"op38","raw",0,,"tcc","rs1","sign_ext (simm13)","#software-trap"
"TCS","op3",111010,"i",000001,"Trap on Carry Set (Less Than, Unsigned)",129,"B27","Control Transfer",3,"op38","raw",0,,"tcs","rs1","sign_ext (simm13)","#software-trap"
"TPOS","op3",111010,"i",000001,"Trap on Positive",129,"B27","Control Transfer",3,"op38","raw",0,,"tpos","rs1","sign_ext (simm13)","#software-trap"
"TNEG","op3",111010,"i",000001,"Trap on Negative",129,"B27","Control Transfer",3,"op38","raw",0,,"tneg","rs1","sign_ext (simm13)","#software-trap"
"TVC","op3",111010,"i",000001,"Trap on Overflow Clear",129,"B27","Control Transfer",3,"op38","raw",0,,"tvc","rs1","sign_ext (simm13)","#software-trap"
"TVS","op3",111010,"i",000001,"Trap on Overflow Set",129,"B27","Control Transfer",3,"op38","raw",0,,"tvs","rs1","sign_ext (simm13)","#software-trap"
"FLUSH","op3",111011,"i",000001,"Flush Instruction Memory",138,"B32","Load/Store",1,"op44","raw",0,,"flush","rs1","sign_ext (simm13)"
